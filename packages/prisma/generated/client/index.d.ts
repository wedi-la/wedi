
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Organization
 * 
 */
export type Organization = $Result.DefaultSelection<Prisma.$OrganizationPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Customer
 * 
 */
export type Customer = $Result.DefaultSelection<Prisma.$CustomerPayload>
/**
 * Model CustomerPaymentMethod
 * 
 */
export type CustomerPaymentMethod = $Result.DefaultSelection<Prisma.$CustomerPaymentMethodPayload>
/**
 * Model Subscription
 * 
 */
export type Subscription = $Result.DefaultSelection<Prisma.$SubscriptionPayload>
/**
 * Model SubscriptionItem
 * 
 */
export type SubscriptionItem = $Result.DefaultSelection<Prisma.$SubscriptionItemPayload>
/**
 * Model Wallet
 * 
 */
export type Wallet = $Result.DefaultSelection<Prisma.$WalletPayload>
/**
 * Model BlockchainTransaction
 * 
 */
export type BlockchainTransaction = $Result.DefaultSelection<Prisma.$BlockchainTransactionPayload>
/**
 * Model GasSponsorship
 * 
 */
export type GasSponsorship = $Result.DefaultSelection<Prisma.$GasSponsorshipPayload>
/**
 * Model Product
 * 
 */
export type Product = $Result.DefaultSelection<Prisma.$ProductPayload>
/**
 * Model Price
 * 
 */
export type Price = $Result.DefaultSelection<Prisma.$PricePayload>
/**
 * Model PaymentLink
 * 
 */
export type PaymentLink = $Result.DefaultSelection<Prisma.$PaymentLinkPayload>
/**
 * Model PaymentOrder
 * 
 */
export type PaymentOrder = $Result.DefaultSelection<Prisma.$PaymentOrderPayload>
/**
 * Model Provider
 * 
 */
export type Provider = $Result.DefaultSelection<Prisma.$ProviderPayload>
/**
 * Model ProviderConfig
 * 
 */
export type ProviderConfig = $Result.DefaultSelection<Prisma.$ProviderConfigPayload>
/**
 * Model ProviderRoute
 * 
 */
export type ProviderRoute = $Result.DefaultSelection<Prisma.$ProviderRoutePayload>
/**
 * Model ProviderTransaction
 * 
 */
export type ProviderTransaction = $Result.DefaultSelection<Prisma.$ProviderTransactionPayload>
/**
 * Model Agent
 * 
 */
export type Agent = $Result.DefaultSelection<Prisma.$AgentPayload>
/**
 * Model AgentDecision
 * 
 */
export type AgentDecision = $Result.DefaultSelection<Prisma.$AgentDecisionPayload>
/**
 * Model AgentCheckpoint
 * 
 */
export type AgentCheckpoint = $Result.DefaultSelection<Prisma.$AgentCheckpointPayload>
/**
 * Model AgentInteraction
 * 
 */
export type AgentInteraction = $Result.DefaultSelection<Prisma.$AgentInteractionPayload>
/**
 * Model Webhook
 * 
 */
export type Webhook = $Result.DefaultSelection<Prisma.$WebhookPayload>
/**
 * Model WebhookDelivery
 * 
 */
export type WebhookDelivery = $Result.DefaultSelection<Prisma.$WebhookDeliveryPayload>
/**
 * Model ManualProcessStep
 * 
 */
export type ManualProcessStep = $Result.DefaultSelection<Prisma.$ManualProcessStepPayload>
/**
 * Model PaymentEvent
 * 
 */
export type PaymentEvent = $Result.DefaultSelection<Prisma.$PaymentEventPayload>
/**
 * Model AuditLog
 * 
 */
export type AuditLog = $Result.DefaultSelection<Prisma.$AuditLogPayload>
/**
 * Model ApiKey
 * 
 */
export type ApiKey = $Result.DefaultSelection<Prisma.$ApiKeyPayload>
/**
 * Model OrganizationUser
 * 
 */
export type OrganizationUser = $Result.DefaultSelection<Prisma.$OrganizationUserPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const ComplianceStatus: {
  PENDING: 'PENDING',
  IN_REVIEW: 'IN_REVIEW',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  SUSPENDED: 'SUSPENDED'
};

export type ComplianceStatus = (typeof ComplianceStatus)[keyof typeof ComplianceStatus]


export const AuthProvider: {
  EMAIL: 'EMAIL',
  GOOGLE: 'GOOGLE',
  THIRDWEB: 'THIRDWEB',
  WALLET_CONNECT: 'WALLET_CONNECT'
};

export type AuthProvider = (typeof AuthProvider)[keyof typeof AuthProvider]


export const PaymentMethodType: {
  CARD: 'CARD',
  BANK_ACCOUNT: 'BANK_ACCOUNT',
  WALLET: 'WALLET',
  CASH: 'CASH'
};

export type PaymentMethodType = (typeof PaymentMethodType)[keyof typeof PaymentMethodType]


export const SubscriptionStatus: {
  ACTIVE: 'ACTIVE',
  PAST_DUE: 'PAST_DUE',
  CANCELED: 'CANCELED',
  UNPAID: 'UNPAID',
  TRIALING: 'TRIALING'
};

export type SubscriptionStatus = (typeof SubscriptionStatus)[keyof typeof SubscriptionStatus]


export const WalletType: {
  EOA: 'EOA',
  SMART_WALLET: 'SMART_WALLET',
  MULTI_SIG: 'MULTI_SIG'
};

export type WalletType = (typeof WalletType)[keyof typeof WalletType]


export const BlockchainTxStatus: {
  PENDING: 'PENDING',
  MINED: 'MINED',
  CONFIRMED: 'CONFIRMED',
  FAILED: 'FAILED',
  DROPPED: 'DROPPED'
};

export type BlockchainTxStatus = (typeof BlockchainTxStatus)[keyof typeof BlockchainTxStatus]


export const ProductType: {
  SERVICE: 'SERVICE',
  GOOD: 'GOOD',
  SUBSCRIPTION: 'SUBSCRIPTION'
};

export type ProductType = (typeof ProductType)[keyof typeof ProductType]


export const PriceType: {
  ONE_TIME: 'ONE_TIME',
  RECURRING: 'RECURRING'
};

export type PriceType = (typeof PriceType)[keyof typeof PriceType]


export const BillingInterval: {
  DAY: 'DAY',
  WEEK: 'WEEK',
  MONTH: 'MONTH',
  YEAR: 'YEAR'
};

export type BillingInterval = (typeof BillingInterval)[keyof typeof BillingInterval]


export const PaymentLinkStatus: {
  DRAFT: 'DRAFT',
  ACTIVE: 'ACTIVE',
  PAUSED: 'PAUSED',
  EXPIRED: 'EXPIRED',
  ARCHIVED: 'ARCHIVED',
  COMPLETED: 'COMPLETED'
};

export type PaymentLinkStatus = (typeof PaymentLinkStatus)[keyof typeof PaymentLinkStatus]


export const PaymentOrderStatus: {
  CREATED: 'CREATED',
  AWAITING_PAYMENT: 'AWAITING_PAYMENT',
  PROCESSING: 'PROCESSING',
  REQUIRES_ACTION: 'REQUIRES_ACTION',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  REFUNDED: 'REFUNDED',
  CANCELLED: 'CANCELLED'
};

export type PaymentOrderStatus = (typeof PaymentOrderStatus)[keyof typeof PaymentOrderStatus]


export const KycStatus: {
  NOT_REQUIRED: 'NOT_REQUIRED',
  PENDING: 'PENDING',
  IN_REVIEW: 'IN_REVIEW',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED'
};

export type KycStatus = (typeof KycStatus)[keyof typeof KycStatus]


export const ProviderType: {
  BANKING_RAILS: 'BANKING_RAILS',
  CARD_PROCESSOR: 'CARD_PROCESSOR',
  CRYPTO_ONRAMP: 'CRYPTO_ONRAMP',
  CRYPTO_OFFRAMP: 'CRYPTO_OFFRAMP',
  OPEN_BANKING: 'OPEN_BANKING',
  WALLET: 'WALLET'
};

export type ProviderType = (typeof ProviderType)[keyof typeof ProviderType]


export const ProviderHealth: {
  HEALTHY: 'HEALTHY',
  DEGRADED: 'DEGRADED',
  DOWN: 'DOWN',
  MAINTENANCE: 'MAINTENANCE'
};

export type ProviderHealth = (typeof ProviderHealth)[keyof typeof ProviderHealth]


export const Environment: {
  PRODUCTION: 'PRODUCTION',
  SANDBOX: 'SANDBOX',
  TEST: 'TEST'
};

export type Environment = (typeof Environment)[keyof typeof Environment]


export const ProviderTxType: {
  PAYMENT_INITIATION: 'PAYMENT_INITIATION',
  STATUS_CHECK: 'STATUS_CHECK',
  REFUND: 'REFUND',
  WEBHOOK_CALLBACK: 'WEBHOOK_CALLBACK',
  BALANCE_CHECK: 'BALANCE_CHECK',
  EXCHANGE_RATE: 'EXCHANGE_RATE'
};

export type ProviderTxType = (typeof ProviderTxType)[keyof typeof ProviderTxType]


export const AgentType: {
  PAYMENT_ORCHESTRATOR: 'PAYMENT_ORCHESTRATOR',
  RISK_ANALYZER: 'RISK_ANALYZER',
  ROUTE_OPTIMIZER: 'ROUTE_OPTIMIZER',
  FRAUD_DETECTOR: 'FRAUD_DETECTOR',
  CUSTOMER_SUPPORT: 'CUSTOMER_SUPPORT',
  RECONCILIATION: 'RECONCILIATION'
};

export type AgentType = (typeof AgentType)[keyof typeof AgentType]


export const InteractionType: {
  APPROVAL_REQUEST: 'APPROVAL_REQUEST',
  INFORMATION_REQUEST: 'INFORMATION_REQUEST',
  OVERRIDE: 'OVERRIDE',
  FEEDBACK: 'FEEDBACK'
};

export type InteractionType = (typeof InteractionType)[keyof typeof InteractionType]


export const ManualStepType: {
  KYC_REVIEW: 'KYC_REVIEW',
  FRAUD_REVIEW: 'FRAUD_REVIEW',
  EXCEPTION_HANDLING: 'EXCEPTION_HANDLING',
  RECONCILIATION: 'RECONCILIATION',
  CUSTOMER_SUPPORT: 'CUSTOMER_SUPPORT'
};

export type ManualStepType = (typeof ManualStepType)[keyof typeof ManualStepType]


export const Priority: {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  URGENT: 'URGENT'
};

export type Priority = (typeof Priority)[keyof typeof Priority]


export const ManualStepStatus: {
  PENDING: 'PENDING',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED'
};

export type ManualStepStatus = (typeof ManualStepStatus)[keyof typeof ManualStepStatus]


export const UserRole: {
  OWNER: 'OWNER',
  ADMIN: 'ADMIN',
  DEVELOPER: 'DEVELOPER',
  FINANCE: 'FINANCE',
  SUPPORT: 'SUPPORT',
  VIEWER: 'VIEWER'
};

export type UserRole = (typeof UserRole)[keyof typeof UserRole]

}

export type ComplianceStatus = $Enums.ComplianceStatus

export const ComplianceStatus: typeof $Enums.ComplianceStatus

export type AuthProvider = $Enums.AuthProvider

export const AuthProvider: typeof $Enums.AuthProvider

export type PaymentMethodType = $Enums.PaymentMethodType

export const PaymentMethodType: typeof $Enums.PaymentMethodType

export type SubscriptionStatus = $Enums.SubscriptionStatus

export const SubscriptionStatus: typeof $Enums.SubscriptionStatus

export type WalletType = $Enums.WalletType

export const WalletType: typeof $Enums.WalletType

export type BlockchainTxStatus = $Enums.BlockchainTxStatus

export const BlockchainTxStatus: typeof $Enums.BlockchainTxStatus

export type ProductType = $Enums.ProductType

export const ProductType: typeof $Enums.ProductType

export type PriceType = $Enums.PriceType

export const PriceType: typeof $Enums.PriceType

export type BillingInterval = $Enums.BillingInterval

export const BillingInterval: typeof $Enums.BillingInterval

export type PaymentLinkStatus = $Enums.PaymentLinkStatus

export const PaymentLinkStatus: typeof $Enums.PaymentLinkStatus

export type PaymentOrderStatus = $Enums.PaymentOrderStatus

export const PaymentOrderStatus: typeof $Enums.PaymentOrderStatus

export type KycStatus = $Enums.KycStatus

export const KycStatus: typeof $Enums.KycStatus

export type ProviderType = $Enums.ProviderType

export const ProviderType: typeof $Enums.ProviderType

export type ProviderHealth = $Enums.ProviderHealth

export const ProviderHealth: typeof $Enums.ProviderHealth

export type Environment = $Enums.Environment

export const Environment: typeof $Enums.Environment

export type ProviderTxType = $Enums.ProviderTxType

export const ProviderTxType: typeof $Enums.ProviderTxType

export type AgentType = $Enums.AgentType

export const AgentType: typeof $Enums.AgentType

export type InteractionType = $Enums.InteractionType

export const InteractionType: typeof $Enums.InteractionType

export type ManualStepType = $Enums.ManualStepType

export const ManualStepType: typeof $Enums.ManualStepType

export type Priority = $Enums.Priority

export const Priority: typeof $Enums.Priority

export type ManualStepStatus = $Enums.ManualStepStatus

export const ManualStepStatus: typeof $Enums.ManualStepStatus

export type UserRole = $Enums.UserRole

export const UserRole: typeof $Enums.UserRole

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Organizations
 * const organizations = await prisma.organization.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Organizations
   * const organizations = await prisma.organization.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.organization`: Exposes CRUD operations for the **Organization** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Organizations
    * const organizations = await prisma.organization.findMany()
    * ```
    */
  get organization(): Prisma.OrganizationDelegate<ExtArgs>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs>;

  /**
   * `prisma.customer`: Exposes CRUD operations for the **Customer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Customers
    * const customers = await prisma.customer.findMany()
    * ```
    */
  get customer(): Prisma.CustomerDelegate<ExtArgs>;

  /**
   * `prisma.customerPaymentMethod`: Exposes CRUD operations for the **CustomerPaymentMethod** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CustomerPaymentMethods
    * const customerPaymentMethods = await prisma.customerPaymentMethod.findMany()
    * ```
    */
  get customerPaymentMethod(): Prisma.CustomerPaymentMethodDelegate<ExtArgs>;

  /**
   * `prisma.subscription`: Exposes CRUD operations for the **Subscription** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Subscriptions
    * const subscriptions = await prisma.subscription.findMany()
    * ```
    */
  get subscription(): Prisma.SubscriptionDelegate<ExtArgs>;

  /**
   * `prisma.subscriptionItem`: Exposes CRUD operations for the **SubscriptionItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SubscriptionItems
    * const subscriptionItems = await prisma.subscriptionItem.findMany()
    * ```
    */
  get subscriptionItem(): Prisma.SubscriptionItemDelegate<ExtArgs>;

  /**
   * `prisma.wallet`: Exposes CRUD operations for the **Wallet** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wallets
    * const wallets = await prisma.wallet.findMany()
    * ```
    */
  get wallet(): Prisma.WalletDelegate<ExtArgs>;

  /**
   * `prisma.blockchainTransaction`: Exposes CRUD operations for the **BlockchainTransaction** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BlockchainTransactions
    * const blockchainTransactions = await prisma.blockchainTransaction.findMany()
    * ```
    */
  get blockchainTransaction(): Prisma.BlockchainTransactionDelegate<ExtArgs>;

  /**
   * `prisma.gasSponsorship`: Exposes CRUD operations for the **GasSponsorship** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more GasSponsorships
    * const gasSponsorships = await prisma.gasSponsorship.findMany()
    * ```
    */
  get gasSponsorship(): Prisma.GasSponsorshipDelegate<ExtArgs>;

  /**
   * `prisma.product`: Exposes CRUD operations for the **Product** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Products
    * const products = await prisma.product.findMany()
    * ```
    */
  get product(): Prisma.ProductDelegate<ExtArgs>;

  /**
   * `prisma.price`: Exposes CRUD operations for the **Price** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Prices
    * const prices = await prisma.price.findMany()
    * ```
    */
  get price(): Prisma.PriceDelegate<ExtArgs>;

  /**
   * `prisma.paymentLink`: Exposes CRUD operations for the **PaymentLink** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PaymentLinks
    * const paymentLinks = await prisma.paymentLink.findMany()
    * ```
    */
  get paymentLink(): Prisma.PaymentLinkDelegate<ExtArgs>;

  /**
   * `prisma.paymentOrder`: Exposes CRUD operations for the **PaymentOrder** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PaymentOrders
    * const paymentOrders = await prisma.paymentOrder.findMany()
    * ```
    */
  get paymentOrder(): Prisma.PaymentOrderDelegate<ExtArgs>;

  /**
   * `prisma.provider`: Exposes CRUD operations for the **Provider** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Providers
    * const providers = await prisma.provider.findMany()
    * ```
    */
  get provider(): Prisma.ProviderDelegate<ExtArgs>;

  /**
   * `prisma.providerConfig`: Exposes CRUD operations for the **ProviderConfig** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProviderConfigs
    * const providerConfigs = await prisma.providerConfig.findMany()
    * ```
    */
  get providerConfig(): Prisma.ProviderConfigDelegate<ExtArgs>;

  /**
   * `prisma.providerRoute`: Exposes CRUD operations for the **ProviderRoute** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProviderRoutes
    * const providerRoutes = await prisma.providerRoute.findMany()
    * ```
    */
  get providerRoute(): Prisma.ProviderRouteDelegate<ExtArgs>;

  /**
   * `prisma.providerTransaction`: Exposes CRUD operations for the **ProviderTransaction** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProviderTransactions
    * const providerTransactions = await prisma.providerTransaction.findMany()
    * ```
    */
  get providerTransaction(): Prisma.ProviderTransactionDelegate<ExtArgs>;

  /**
   * `prisma.agent`: Exposes CRUD operations for the **Agent** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Agents
    * const agents = await prisma.agent.findMany()
    * ```
    */
  get agent(): Prisma.AgentDelegate<ExtArgs>;

  /**
   * `prisma.agentDecision`: Exposes CRUD operations for the **AgentDecision** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AgentDecisions
    * const agentDecisions = await prisma.agentDecision.findMany()
    * ```
    */
  get agentDecision(): Prisma.AgentDecisionDelegate<ExtArgs>;

  /**
   * `prisma.agentCheckpoint`: Exposes CRUD operations for the **AgentCheckpoint** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AgentCheckpoints
    * const agentCheckpoints = await prisma.agentCheckpoint.findMany()
    * ```
    */
  get agentCheckpoint(): Prisma.AgentCheckpointDelegate<ExtArgs>;

  /**
   * `prisma.agentInteraction`: Exposes CRUD operations for the **AgentInteraction** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AgentInteractions
    * const agentInteractions = await prisma.agentInteraction.findMany()
    * ```
    */
  get agentInteraction(): Prisma.AgentInteractionDelegate<ExtArgs>;

  /**
   * `prisma.webhook`: Exposes CRUD operations for the **Webhook** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Webhooks
    * const webhooks = await prisma.webhook.findMany()
    * ```
    */
  get webhook(): Prisma.WebhookDelegate<ExtArgs>;

  /**
   * `prisma.webhookDelivery`: Exposes CRUD operations for the **WebhookDelivery** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WebhookDeliveries
    * const webhookDeliveries = await prisma.webhookDelivery.findMany()
    * ```
    */
  get webhookDelivery(): Prisma.WebhookDeliveryDelegate<ExtArgs>;

  /**
   * `prisma.manualProcessStep`: Exposes CRUD operations for the **ManualProcessStep** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ManualProcessSteps
    * const manualProcessSteps = await prisma.manualProcessStep.findMany()
    * ```
    */
  get manualProcessStep(): Prisma.ManualProcessStepDelegate<ExtArgs>;

  /**
   * `prisma.paymentEvent`: Exposes CRUD operations for the **PaymentEvent** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PaymentEvents
    * const paymentEvents = await prisma.paymentEvent.findMany()
    * ```
    */
  get paymentEvent(): Prisma.PaymentEventDelegate<ExtArgs>;

  /**
   * `prisma.auditLog`: Exposes CRUD operations for the **AuditLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AuditLogs
    * const auditLogs = await prisma.auditLog.findMany()
    * ```
    */
  get auditLog(): Prisma.AuditLogDelegate<ExtArgs>;

  /**
   * `prisma.apiKey`: Exposes CRUD operations for the **ApiKey** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ApiKeys
    * const apiKeys = await prisma.apiKey.findMany()
    * ```
    */
  get apiKey(): Prisma.ApiKeyDelegate<ExtArgs>;

  /**
   * `prisma.organizationUser`: Exposes CRUD operations for the **OrganizationUser** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrganizationUsers
    * const organizationUsers = await prisma.organizationUser.findMany()
    * ```
    */
  get organizationUser(): Prisma.OrganizationUserDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 393aa359c9ad4a4bb28630fb5613f9c281cde053
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Organization: 'Organization',
    User: 'User',
    Customer: 'Customer',
    CustomerPaymentMethod: 'CustomerPaymentMethod',
    Subscription: 'Subscription',
    SubscriptionItem: 'SubscriptionItem',
    Wallet: 'Wallet',
    BlockchainTransaction: 'BlockchainTransaction',
    GasSponsorship: 'GasSponsorship',
    Product: 'Product',
    Price: 'Price',
    PaymentLink: 'PaymentLink',
    PaymentOrder: 'PaymentOrder',
    Provider: 'Provider',
    ProviderConfig: 'ProviderConfig',
    ProviderRoute: 'ProviderRoute',
    ProviderTransaction: 'ProviderTransaction',
    Agent: 'Agent',
    AgentDecision: 'AgentDecision',
    AgentCheckpoint: 'AgentCheckpoint',
    AgentInteraction: 'AgentInteraction',
    Webhook: 'Webhook',
    WebhookDelivery: 'WebhookDelivery',
    ManualProcessStep: 'ManualProcessStep',
    PaymentEvent: 'PaymentEvent',
    AuditLog: 'AuditLog',
    ApiKey: 'ApiKey',
    OrganizationUser: 'OrganizationUser'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "organization" | "user" | "customer" | "customerPaymentMethod" | "subscription" | "subscriptionItem" | "wallet" | "blockchainTransaction" | "gasSponsorship" | "product" | "price" | "paymentLink" | "paymentOrder" | "provider" | "providerConfig" | "providerRoute" | "providerTransaction" | "agent" | "agentDecision" | "agentCheckpoint" | "agentInteraction" | "webhook" | "webhookDelivery" | "manualProcessStep" | "paymentEvent" | "auditLog" | "apiKey" | "organizationUser"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Organization: {
        payload: Prisma.$OrganizationPayload<ExtArgs>
        fields: Prisma.OrganizationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrganizationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrganizationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>
          }
          findFirst: {
            args: Prisma.OrganizationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrganizationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>
          }
          findMany: {
            args: Prisma.OrganizationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>[]
          }
          create: {
            args: Prisma.OrganizationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>
          }
          createMany: {
            args: Prisma.OrganizationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrganizationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>[]
          }
          delete: {
            args: Prisma.OrganizationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>
          }
          update: {
            args: Prisma.OrganizationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>
          }
          deleteMany: {
            args: Prisma.OrganizationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrganizationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.OrganizationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>
          }
          aggregate: {
            args: Prisma.OrganizationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrganization>
          }
          groupBy: {
            args: Prisma.OrganizationGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrganizationGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrganizationCountArgs<ExtArgs>
            result: $Utils.Optional<OrganizationCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Customer: {
        payload: Prisma.$CustomerPayload<ExtArgs>
        fields: Prisma.CustomerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CustomerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CustomerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          findFirst: {
            args: Prisma.CustomerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CustomerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          findMany: {
            args: Prisma.CustomerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>[]
          }
          create: {
            args: Prisma.CustomerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          createMany: {
            args: Prisma.CustomerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CustomerCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>[]
          }
          delete: {
            args: Prisma.CustomerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          update: {
            args: Prisma.CustomerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          deleteMany: {
            args: Prisma.CustomerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CustomerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CustomerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          aggregate: {
            args: Prisma.CustomerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCustomer>
          }
          groupBy: {
            args: Prisma.CustomerGroupByArgs<ExtArgs>
            result: $Utils.Optional<CustomerGroupByOutputType>[]
          }
          count: {
            args: Prisma.CustomerCountArgs<ExtArgs>
            result: $Utils.Optional<CustomerCountAggregateOutputType> | number
          }
        }
      }
      CustomerPaymentMethod: {
        payload: Prisma.$CustomerPaymentMethodPayload<ExtArgs>
        fields: Prisma.CustomerPaymentMethodFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CustomerPaymentMethodFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPaymentMethodPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CustomerPaymentMethodFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPaymentMethodPayload>
          }
          findFirst: {
            args: Prisma.CustomerPaymentMethodFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPaymentMethodPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CustomerPaymentMethodFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPaymentMethodPayload>
          }
          findMany: {
            args: Prisma.CustomerPaymentMethodFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPaymentMethodPayload>[]
          }
          create: {
            args: Prisma.CustomerPaymentMethodCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPaymentMethodPayload>
          }
          createMany: {
            args: Prisma.CustomerPaymentMethodCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CustomerPaymentMethodCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPaymentMethodPayload>[]
          }
          delete: {
            args: Prisma.CustomerPaymentMethodDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPaymentMethodPayload>
          }
          update: {
            args: Prisma.CustomerPaymentMethodUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPaymentMethodPayload>
          }
          deleteMany: {
            args: Prisma.CustomerPaymentMethodDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CustomerPaymentMethodUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CustomerPaymentMethodUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPaymentMethodPayload>
          }
          aggregate: {
            args: Prisma.CustomerPaymentMethodAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCustomerPaymentMethod>
          }
          groupBy: {
            args: Prisma.CustomerPaymentMethodGroupByArgs<ExtArgs>
            result: $Utils.Optional<CustomerPaymentMethodGroupByOutputType>[]
          }
          count: {
            args: Prisma.CustomerPaymentMethodCountArgs<ExtArgs>
            result: $Utils.Optional<CustomerPaymentMethodCountAggregateOutputType> | number
          }
        }
      }
      Subscription: {
        payload: Prisma.$SubscriptionPayload<ExtArgs>
        fields: Prisma.SubscriptionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SubscriptionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SubscriptionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>
          }
          findFirst: {
            args: Prisma.SubscriptionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SubscriptionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>
          }
          findMany: {
            args: Prisma.SubscriptionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>[]
          }
          create: {
            args: Prisma.SubscriptionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>
          }
          createMany: {
            args: Prisma.SubscriptionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SubscriptionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>[]
          }
          delete: {
            args: Prisma.SubscriptionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>
          }
          update: {
            args: Prisma.SubscriptionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>
          }
          deleteMany: {
            args: Prisma.SubscriptionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SubscriptionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SubscriptionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>
          }
          aggregate: {
            args: Prisma.SubscriptionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSubscription>
          }
          groupBy: {
            args: Prisma.SubscriptionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SubscriptionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SubscriptionCountArgs<ExtArgs>
            result: $Utils.Optional<SubscriptionCountAggregateOutputType> | number
          }
        }
      }
      SubscriptionItem: {
        payload: Prisma.$SubscriptionItemPayload<ExtArgs>
        fields: Prisma.SubscriptionItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SubscriptionItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SubscriptionItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionItemPayload>
          }
          findFirst: {
            args: Prisma.SubscriptionItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SubscriptionItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionItemPayload>
          }
          findMany: {
            args: Prisma.SubscriptionItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionItemPayload>[]
          }
          create: {
            args: Prisma.SubscriptionItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionItemPayload>
          }
          createMany: {
            args: Prisma.SubscriptionItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SubscriptionItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionItemPayload>[]
          }
          delete: {
            args: Prisma.SubscriptionItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionItemPayload>
          }
          update: {
            args: Prisma.SubscriptionItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionItemPayload>
          }
          deleteMany: {
            args: Prisma.SubscriptionItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SubscriptionItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SubscriptionItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionItemPayload>
          }
          aggregate: {
            args: Prisma.SubscriptionItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSubscriptionItem>
          }
          groupBy: {
            args: Prisma.SubscriptionItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<SubscriptionItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.SubscriptionItemCountArgs<ExtArgs>
            result: $Utils.Optional<SubscriptionItemCountAggregateOutputType> | number
          }
        }
      }
      Wallet: {
        payload: Prisma.$WalletPayload<ExtArgs>
        fields: Prisma.WalletFieldRefs
        operations: {
          findUnique: {
            args: Prisma.WalletFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WalletPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.WalletFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WalletPayload>
          }
          findFirst: {
            args: Prisma.WalletFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WalletPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.WalletFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WalletPayload>
          }
          findMany: {
            args: Prisma.WalletFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WalletPayload>[]
          }
          create: {
            args: Prisma.WalletCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WalletPayload>
          }
          createMany: {
            args: Prisma.WalletCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.WalletCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WalletPayload>[]
          }
          delete: {
            args: Prisma.WalletDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WalletPayload>
          }
          update: {
            args: Prisma.WalletUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WalletPayload>
          }
          deleteMany: {
            args: Prisma.WalletDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.WalletUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.WalletUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WalletPayload>
          }
          aggregate: {
            args: Prisma.WalletAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWallet>
          }
          groupBy: {
            args: Prisma.WalletGroupByArgs<ExtArgs>
            result: $Utils.Optional<WalletGroupByOutputType>[]
          }
          count: {
            args: Prisma.WalletCountArgs<ExtArgs>
            result: $Utils.Optional<WalletCountAggregateOutputType> | number
          }
        }
      }
      BlockchainTransaction: {
        payload: Prisma.$BlockchainTransactionPayload<ExtArgs>
        fields: Prisma.BlockchainTransactionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BlockchainTransactionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockchainTransactionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BlockchainTransactionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockchainTransactionPayload>
          }
          findFirst: {
            args: Prisma.BlockchainTransactionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockchainTransactionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BlockchainTransactionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockchainTransactionPayload>
          }
          findMany: {
            args: Prisma.BlockchainTransactionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockchainTransactionPayload>[]
          }
          create: {
            args: Prisma.BlockchainTransactionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockchainTransactionPayload>
          }
          createMany: {
            args: Prisma.BlockchainTransactionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BlockchainTransactionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockchainTransactionPayload>[]
          }
          delete: {
            args: Prisma.BlockchainTransactionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockchainTransactionPayload>
          }
          update: {
            args: Prisma.BlockchainTransactionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockchainTransactionPayload>
          }
          deleteMany: {
            args: Prisma.BlockchainTransactionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BlockchainTransactionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.BlockchainTransactionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlockchainTransactionPayload>
          }
          aggregate: {
            args: Prisma.BlockchainTransactionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBlockchainTransaction>
          }
          groupBy: {
            args: Prisma.BlockchainTransactionGroupByArgs<ExtArgs>
            result: $Utils.Optional<BlockchainTransactionGroupByOutputType>[]
          }
          count: {
            args: Prisma.BlockchainTransactionCountArgs<ExtArgs>
            result: $Utils.Optional<BlockchainTransactionCountAggregateOutputType> | number
          }
        }
      }
      GasSponsorship: {
        payload: Prisma.$GasSponsorshipPayload<ExtArgs>
        fields: Prisma.GasSponsorshipFieldRefs
        operations: {
          findUnique: {
            args: Prisma.GasSponsorshipFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GasSponsorshipPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.GasSponsorshipFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GasSponsorshipPayload>
          }
          findFirst: {
            args: Prisma.GasSponsorshipFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GasSponsorshipPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.GasSponsorshipFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GasSponsorshipPayload>
          }
          findMany: {
            args: Prisma.GasSponsorshipFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GasSponsorshipPayload>[]
          }
          create: {
            args: Prisma.GasSponsorshipCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GasSponsorshipPayload>
          }
          createMany: {
            args: Prisma.GasSponsorshipCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.GasSponsorshipCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GasSponsorshipPayload>[]
          }
          delete: {
            args: Prisma.GasSponsorshipDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GasSponsorshipPayload>
          }
          update: {
            args: Prisma.GasSponsorshipUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GasSponsorshipPayload>
          }
          deleteMany: {
            args: Prisma.GasSponsorshipDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.GasSponsorshipUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.GasSponsorshipUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GasSponsorshipPayload>
          }
          aggregate: {
            args: Prisma.GasSponsorshipAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGasSponsorship>
          }
          groupBy: {
            args: Prisma.GasSponsorshipGroupByArgs<ExtArgs>
            result: $Utils.Optional<GasSponsorshipGroupByOutputType>[]
          }
          count: {
            args: Prisma.GasSponsorshipCountArgs<ExtArgs>
            result: $Utils.Optional<GasSponsorshipCountAggregateOutputType> | number
          }
        }
      }
      Product: {
        payload: Prisma.$ProductPayload<ExtArgs>
        fields: Prisma.ProductFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findFirst: {
            args: Prisma.ProductFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findMany: {
            args: Prisma.ProductFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          create: {
            args: Prisma.ProductCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          createMany: {
            args: Prisma.ProductCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          delete: {
            args: Prisma.ProductDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          update: {
            args: Prisma.ProductUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          deleteMany: {
            args: Prisma.ProductDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProductUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          aggregate: {
            args: Prisma.ProductAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduct>
          }
          groupBy: {
            args: Prisma.ProductGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductCountArgs<ExtArgs>
            result: $Utils.Optional<ProductCountAggregateOutputType> | number
          }
        }
      }
      Price: {
        payload: Prisma.$PricePayload<ExtArgs>
        fields: Prisma.PriceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PriceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PriceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload>
          }
          findFirst: {
            args: Prisma.PriceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PriceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload>
          }
          findMany: {
            args: Prisma.PriceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload>[]
          }
          create: {
            args: Prisma.PriceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload>
          }
          createMany: {
            args: Prisma.PriceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PriceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload>[]
          }
          delete: {
            args: Prisma.PriceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload>
          }
          update: {
            args: Prisma.PriceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload>
          }
          deleteMany: {
            args: Prisma.PriceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PriceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PriceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload>
          }
          aggregate: {
            args: Prisma.PriceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePrice>
          }
          groupBy: {
            args: Prisma.PriceGroupByArgs<ExtArgs>
            result: $Utils.Optional<PriceGroupByOutputType>[]
          }
          count: {
            args: Prisma.PriceCountArgs<ExtArgs>
            result: $Utils.Optional<PriceCountAggregateOutputType> | number
          }
        }
      }
      PaymentLink: {
        payload: Prisma.$PaymentLinkPayload<ExtArgs>
        fields: Prisma.PaymentLinkFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentLinkFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentLinkPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentLinkFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentLinkPayload>
          }
          findFirst: {
            args: Prisma.PaymentLinkFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentLinkPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentLinkFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentLinkPayload>
          }
          findMany: {
            args: Prisma.PaymentLinkFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentLinkPayload>[]
          }
          create: {
            args: Prisma.PaymentLinkCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentLinkPayload>
          }
          createMany: {
            args: Prisma.PaymentLinkCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentLinkCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentLinkPayload>[]
          }
          delete: {
            args: Prisma.PaymentLinkDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentLinkPayload>
          }
          update: {
            args: Prisma.PaymentLinkUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentLinkPayload>
          }
          deleteMany: {
            args: Prisma.PaymentLinkDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentLinkUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PaymentLinkUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentLinkPayload>
          }
          aggregate: {
            args: Prisma.PaymentLinkAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePaymentLink>
          }
          groupBy: {
            args: Prisma.PaymentLinkGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentLinkGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentLinkCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentLinkCountAggregateOutputType> | number
          }
        }
      }
      PaymentOrder: {
        payload: Prisma.$PaymentOrderPayload<ExtArgs>
        fields: Prisma.PaymentOrderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentOrderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentOrderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentOrderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentOrderPayload>
          }
          findFirst: {
            args: Prisma.PaymentOrderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentOrderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentOrderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentOrderPayload>
          }
          findMany: {
            args: Prisma.PaymentOrderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentOrderPayload>[]
          }
          create: {
            args: Prisma.PaymentOrderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentOrderPayload>
          }
          createMany: {
            args: Prisma.PaymentOrderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentOrderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentOrderPayload>[]
          }
          delete: {
            args: Prisma.PaymentOrderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentOrderPayload>
          }
          update: {
            args: Prisma.PaymentOrderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentOrderPayload>
          }
          deleteMany: {
            args: Prisma.PaymentOrderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentOrderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PaymentOrderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentOrderPayload>
          }
          aggregate: {
            args: Prisma.PaymentOrderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePaymentOrder>
          }
          groupBy: {
            args: Prisma.PaymentOrderGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentOrderGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentOrderCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentOrderCountAggregateOutputType> | number
          }
        }
      }
      Provider: {
        payload: Prisma.$ProviderPayload<ExtArgs>
        fields: Prisma.ProviderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProviderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProviderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderPayload>
          }
          findFirst: {
            args: Prisma.ProviderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProviderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderPayload>
          }
          findMany: {
            args: Prisma.ProviderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderPayload>[]
          }
          create: {
            args: Prisma.ProviderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderPayload>
          }
          createMany: {
            args: Prisma.ProviderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProviderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderPayload>[]
          }
          delete: {
            args: Prisma.ProviderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderPayload>
          }
          update: {
            args: Prisma.ProviderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderPayload>
          }
          deleteMany: {
            args: Prisma.ProviderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProviderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProviderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderPayload>
          }
          aggregate: {
            args: Prisma.ProviderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProvider>
          }
          groupBy: {
            args: Prisma.ProviderGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProviderGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProviderCountArgs<ExtArgs>
            result: $Utils.Optional<ProviderCountAggregateOutputType> | number
          }
        }
      }
      ProviderConfig: {
        payload: Prisma.$ProviderConfigPayload<ExtArgs>
        fields: Prisma.ProviderConfigFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProviderConfigFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderConfigPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProviderConfigFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderConfigPayload>
          }
          findFirst: {
            args: Prisma.ProviderConfigFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderConfigPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProviderConfigFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderConfigPayload>
          }
          findMany: {
            args: Prisma.ProviderConfigFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderConfigPayload>[]
          }
          create: {
            args: Prisma.ProviderConfigCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderConfigPayload>
          }
          createMany: {
            args: Prisma.ProviderConfigCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProviderConfigCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderConfigPayload>[]
          }
          delete: {
            args: Prisma.ProviderConfigDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderConfigPayload>
          }
          update: {
            args: Prisma.ProviderConfigUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderConfigPayload>
          }
          deleteMany: {
            args: Prisma.ProviderConfigDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProviderConfigUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProviderConfigUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderConfigPayload>
          }
          aggregate: {
            args: Prisma.ProviderConfigAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProviderConfig>
          }
          groupBy: {
            args: Prisma.ProviderConfigGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProviderConfigGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProviderConfigCountArgs<ExtArgs>
            result: $Utils.Optional<ProviderConfigCountAggregateOutputType> | number
          }
        }
      }
      ProviderRoute: {
        payload: Prisma.$ProviderRoutePayload<ExtArgs>
        fields: Prisma.ProviderRouteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProviderRouteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderRoutePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProviderRouteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderRoutePayload>
          }
          findFirst: {
            args: Prisma.ProviderRouteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderRoutePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProviderRouteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderRoutePayload>
          }
          findMany: {
            args: Prisma.ProviderRouteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderRoutePayload>[]
          }
          create: {
            args: Prisma.ProviderRouteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderRoutePayload>
          }
          createMany: {
            args: Prisma.ProviderRouteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProviderRouteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderRoutePayload>[]
          }
          delete: {
            args: Prisma.ProviderRouteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderRoutePayload>
          }
          update: {
            args: Prisma.ProviderRouteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderRoutePayload>
          }
          deleteMany: {
            args: Prisma.ProviderRouteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProviderRouteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProviderRouteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderRoutePayload>
          }
          aggregate: {
            args: Prisma.ProviderRouteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProviderRoute>
          }
          groupBy: {
            args: Prisma.ProviderRouteGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProviderRouteGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProviderRouteCountArgs<ExtArgs>
            result: $Utils.Optional<ProviderRouteCountAggregateOutputType> | number
          }
        }
      }
      ProviderTransaction: {
        payload: Prisma.$ProviderTransactionPayload<ExtArgs>
        fields: Prisma.ProviderTransactionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProviderTransactionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderTransactionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProviderTransactionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderTransactionPayload>
          }
          findFirst: {
            args: Prisma.ProviderTransactionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderTransactionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProviderTransactionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderTransactionPayload>
          }
          findMany: {
            args: Prisma.ProviderTransactionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderTransactionPayload>[]
          }
          create: {
            args: Prisma.ProviderTransactionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderTransactionPayload>
          }
          createMany: {
            args: Prisma.ProviderTransactionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProviderTransactionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderTransactionPayload>[]
          }
          delete: {
            args: Prisma.ProviderTransactionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderTransactionPayload>
          }
          update: {
            args: Prisma.ProviderTransactionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderTransactionPayload>
          }
          deleteMany: {
            args: Prisma.ProviderTransactionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProviderTransactionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProviderTransactionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderTransactionPayload>
          }
          aggregate: {
            args: Prisma.ProviderTransactionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProviderTransaction>
          }
          groupBy: {
            args: Prisma.ProviderTransactionGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProviderTransactionGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProviderTransactionCountArgs<ExtArgs>
            result: $Utils.Optional<ProviderTransactionCountAggregateOutputType> | number
          }
        }
      }
      Agent: {
        payload: Prisma.$AgentPayload<ExtArgs>
        fields: Prisma.AgentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AgentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AgentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentPayload>
          }
          findFirst: {
            args: Prisma.AgentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AgentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentPayload>
          }
          findMany: {
            args: Prisma.AgentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentPayload>[]
          }
          create: {
            args: Prisma.AgentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentPayload>
          }
          createMany: {
            args: Prisma.AgentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AgentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentPayload>[]
          }
          delete: {
            args: Prisma.AgentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentPayload>
          }
          update: {
            args: Prisma.AgentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentPayload>
          }
          deleteMany: {
            args: Prisma.AgentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AgentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AgentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentPayload>
          }
          aggregate: {
            args: Prisma.AgentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAgent>
          }
          groupBy: {
            args: Prisma.AgentGroupByArgs<ExtArgs>
            result: $Utils.Optional<AgentGroupByOutputType>[]
          }
          count: {
            args: Prisma.AgentCountArgs<ExtArgs>
            result: $Utils.Optional<AgentCountAggregateOutputType> | number
          }
        }
      }
      AgentDecision: {
        payload: Prisma.$AgentDecisionPayload<ExtArgs>
        fields: Prisma.AgentDecisionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AgentDecisionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentDecisionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AgentDecisionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentDecisionPayload>
          }
          findFirst: {
            args: Prisma.AgentDecisionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentDecisionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AgentDecisionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentDecisionPayload>
          }
          findMany: {
            args: Prisma.AgentDecisionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentDecisionPayload>[]
          }
          create: {
            args: Prisma.AgentDecisionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentDecisionPayload>
          }
          createMany: {
            args: Prisma.AgentDecisionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AgentDecisionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentDecisionPayload>[]
          }
          delete: {
            args: Prisma.AgentDecisionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentDecisionPayload>
          }
          update: {
            args: Prisma.AgentDecisionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentDecisionPayload>
          }
          deleteMany: {
            args: Prisma.AgentDecisionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AgentDecisionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AgentDecisionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentDecisionPayload>
          }
          aggregate: {
            args: Prisma.AgentDecisionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAgentDecision>
          }
          groupBy: {
            args: Prisma.AgentDecisionGroupByArgs<ExtArgs>
            result: $Utils.Optional<AgentDecisionGroupByOutputType>[]
          }
          count: {
            args: Prisma.AgentDecisionCountArgs<ExtArgs>
            result: $Utils.Optional<AgentDecisionCountAggregateOutputType> | number
          }
        }
      }
      AgentCheckpoint: {
        payload: Prisma.$AgentCheckpointPayload<ExtArgs>
        fields: Prisma.AgentCheckpointFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AgentCheckpointFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentCheckpointPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AgentCheckpointFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentCheckpointPayload>
          }
          findFirst: {
            args: Prisma.AgentCheckpointFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentCheckpointPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AgentCheckpointFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentCheckpointPayload>
          }
          findMany: {
            args: Prisma.AgentCheckpointFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentCheckpointPayload>[]
          }
          create: {
            args: Prisma.AgentCheckpointCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentCheckpointPayload>
          }
          createMany: {
            args: Prisma.AgentCheckpointCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AgentCheckpointCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentCheckpointPayload>[]
          }
          delete: {
            args: Prisma.AgentCheckpointDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentCheckpointPayload>
          }
          update: {
            args: Prisma.AgentCheckpointUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentCheckpointPayload>
          }
          deleteMany: {
            args: Prisma.AgentCheckpointDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AgentCheckpointUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AgentCheckpointUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentCheckpointPayload>
          }
          aggregate: {
            args: Prisma.AgentCheckpointAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAgentCheckpoint>
          }
          groupBy: {
            args: Prisma.AgentCheckpointGroupByArgs<ExtArgs>
            result: $Utils.Optional<AgentCheckpointGroupByOutputType>[]
          }
          count: {
            args: Prisma.AgentCheckpointCountArgs<ExtArgs>
            result: $Utils.Optional<AgentCheckpointCountAggregateOutputType> | number
          }
        }
      }
      AgentInteraction: {
        payload: Prisma.$AgentInteractionPayload<ExtArgs>
        fields: Prisma.AgentInteractionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AgentInteractionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentInteractionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AgentInteractionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentInteractionPayload>
          }
          findFirst: {
            args: Prisma.AgentInteractionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentInteractionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AgentInteractionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentInteractionPayload>
          }
          findMany: {
            args: Prisma.AgentInteractionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentInteractionPayload>[]
          }
          create: {
            args: Prisma.AgentInteractionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentInteractionPayload>
          }
          createMany: {
            args: Prisma.AgentInteractionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AgentInteractionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentInteractionPayload>[]
          }
          delete: {
            args: Prisma.AgentInteractionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentInteractionPayload>
          }
          update: {
            args: Prisma.AgentInteractionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentInteractionPayload>
          }
          deleteMany: {
            args: Prisma.AgentInteractionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AgentInteractionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AgentInteractionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentInteractionPayload>
          }
          aggregate: {
            args: Prisma.AgentInteractionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAgentInteraction>
          }
          groupBy: {
            args: Prisma.AgentInteractionGroupByArgs<ExtArgs>
            result: $Utils.Optional<AgentInteractionGroupByOutputType>[]
          }
          count: {
            args: Prisma.AgentInteractionCountArgs<ExtArgs>
            result: $Utils.Optional<AgentInteractionCountAggregateOutputType> | number
          }
        }
      }
      Webhook: {
        payload: Prisma.$WebhookPayload<ExtArgs>
        fields: Prisma.WebhookFieldRefs
        operations: {
          findUnique: {
            args: Prisma.WebhookFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WebhookPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.WebhookFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WebhookPayload>
          }
          findFirst: {
            args: Prisma.WebhookFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WebhookPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.WebhookFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WebhookPayload>
          }
          findMany: {
            args: Prisma.WebhookFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WebhookPayload>[]
          }
          create: {
            args: Prisma.WebhookCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WebhookPayload>
          }
          createMany: {
            args: Prisma.WebhookCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.WebhookCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WebhookPayload>[]
          }
          delete: {
            args: Prisma.WebhookDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WebhookPayload>
          }
          update: {
            args: Prisma.WebhookUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WebhookPayload>
          }
          deleteMany: {
            args: Prisma.WebhookDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.WebhookUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.WebhookUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WebhookPayload>
          }
          aggregate: {
            args: Prisma.WebhookAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWebhook>
          }
          groupBy: {
            args: Prisma.WebhookGroupByArgs<ExtArgs>
            result: $Utils.Optional<WebhookGroupByOutputType>[]
          }
          count: {
            args: Prisma.WebhookCountArgs<ExtArgs>
            result: $Utils.Optional<WebhookCountAggregateOutputType> | number
          }
        }
      }
      WebhookDelivery: {
        payload: Prisma.$WebhookDeliveryPayload<ExtArgs>
        fields: Prisma.WebhookDeliveryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.WebhookDeliveryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WebhookDeliveryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.WebhookDeliveryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WebhookDeliveryPayload>
          }
          findFirst: {
            args: Prisma.WebhookDeliveryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WebhookDeliveryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.WebhookDeliveryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WebhookDeliveryPayload>
          }
          findMany: {
            args: Prisma.WebhookDeliveryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WebhookDeliveryPayload>[]
          }
          create: {
            args: Prisma.WebhookDeliveryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WebhookDeliveryPayload>
          }
          createMany: {
            args: Prisma.WebhookDeliveryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.WebhookDeliveryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WebhookDeliveryPayload>[]
          }
          delete: {
            args: Prisma.WebhookDeliveryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WebhookDeliveryPayload>
          }
          update: {
            args: Prisma.WebhookDeliveryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WebhookDeliveryPayload>
          }
          deleteMany: {
            args: Prisma.WebhookDeliveryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.WebhookDeliveryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.WebhookDeliveryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WebhookDeliveryPayload>
          }
          aggregate: {
            args: Prisma.WebhookDeliveryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWebhookDelivery>
          }
          groupBy: {
            args: Prisma.WebhookDeliveryGroupByArgs<ExtArgs>
            result: $Utils.Optional<WebhookDeliveryGroupByOutputType>[]
          }
          count: {
            args: Prisma.WebhookDeliveryCountArgs<ExtArgs>
            result: $Utils.Optional<WebhookDeliveryCountAggregateOutputType> | number
          }
        }
      }
      ManualProcessStep: {
        payload: Prisma.$ManualProcessStepPayload<ExtArgs>
        fields: Prisma.ManualProcessStepFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ManualProcessStepFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManualProcessStepPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ManualProcessStepFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManualProcessStepPayload>
          }
          findFirst: {
            args: Prisma.ManualProcessStepFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManualProcessStepPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ManualProcessStepFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManualProcessStepPayload>
          }
          findMany: {
            args: Prisma.ManualProcessStepFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManualProcessStepPayload>[]
          }
          create: {
            args: Prisma.ManualProcessStepCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManualProcessStepPayload>
          }
          createMany: {
            args: Prisma.ManualProcessStepCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ManualProcessStepCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManualProcessStepPayload>[]
          }
          delete: {
            args: Prisma.ManualProcessStepDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManualProcessStepPayload>
          }
          update: {
            args: Prisma.ManualProcessStepUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManualProcessStepPayload>
          }
          deleteMany: {
            args: Prisma.ManualProcessStepDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ManualProcessStepUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ManualProcessStepUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManualProcessStepPayload>
          }
          aggregate: {
            args: Prisma.ManualProcessStepAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateManualProcessStep>
          }
          groupBy: {
            args: Prisma.ManualProcessStepGroupByArgs<ExtArgs>
            result: $Utils.Optional<ManualProcessStepGroupByOutputType>[]
          }
          count: {
            args: Prisma.ManualProcessStepCountArgs<ExtArgs>
            result: $Utils.Optional<ManualProcessStepCountAggregateOutputType> | number
          }
        }
      }
      PaymentEvent: {
        payload: Prisma.$PaymentEventPayload<ExtArgs>
        fields: Prisma.PaymentEventFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentEventFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentEventFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload>
          }
          findFirst: {
            args: Prisma.PaymentEventFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentEventFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload>
          }
          findMany: {
            args: Prisma.PaymentEventFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload>[]
          }
          create: {
            args: Prisma.PaymentEventCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload>
          }
          createMany: {
            args: Prisma.PaymentEventCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentEventCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload>[]
          }
          delete: {
            args: Prisma.PaymentEventDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload>
          }
          update: {
            args: Prisma.PaymentEventUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload>
          }
          deleteMany: {
            args: Prisma.PaymentEventDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentEventUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PaymentEventUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload>
          }
          aggregate: {
            args: Prisma.PaymentEventAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePaymentEvent>
          }
          groupBy: {
            args: Prisma.PaymentEventGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentEventGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentEventCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentEventCountAggregateOutputType> | number
          }
        }
      }
      AuditLog: {
        payload: Prisma.$AuditLogPayload<ExtArgs>
        fields: Prisma.AuditLogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AuditLogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AuditLogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          findFirst: {
            args: Prisma.AuditLogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AuditLogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          findMany: {
            args: Prisma.AuditLogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>[]
          }
          create: {
            args: Prisma.AuditLogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          createMany: {
            args: Prisma.AuditLogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AuditLogCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>[]
          }
          delete: {
            args: Prisma.AuditLogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          update: {
            args: Prisma.AuditLogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          deleteMany: {
            args: Prisma.AuditLogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AuditLogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AuditLogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          aggregate: {
            args: Prisma.AuditLogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAuditLog>
          }
          groupBy: {
            args: Prisma.AuditLogGroupByArgs<ExtArgs>
            result: $Utils.Optional<AuditLogGroupByOutputType>[]
          }
          count: {
            args: Prisma.AuditLogCountArgs<ExtArgs>
            result: $Utils.Optional<AuditLogCountAggregateOutputType> | number
          }
        }
      }
      ApiKey: {
        payload: Prisma.$ApiKeyPayload<ExtArgs>
        fields: Prisma.ApiKeyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ApiKeyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiKeyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ApiKeyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiKeyPayload>
          }
          findFirst: {
            args: Prisma.ApiKeyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiKeyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ApiKeyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiKeyPayload>
          }
          findMany: {
            args: Prisma.ApiKeyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiKeyPayload>[]
          }
          create: {
            args: Prisma.ApiKeyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiKeyPayload>
          }
          createMany: {
            args: Prisma.ApiKeyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ApiKeyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiKeyPayload>[]
          }
          delete: {
            args: Prisma.ApiKeyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiKeyPayload>
          }
          update: {
            args: Prisma.ApiKeyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiKeyPayload>
          }
          deleteMany: {
            args: Prisma.ApiKeyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ApiKeyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ApiKeyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiKeyPayload>
          }
          aggregate: {
            args: Prisma.ApiKeyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateApiKey>
          }
          groupBy: {
            args: Prisma.ApiKeyGroupByArgs<ExtArgs>
            result: $Utils.Optional<ApiKeyGroupByOutputType>[]
          }
          count: {
            args: Prisma.ApiKeyCountArgs<ExtArgs>
            result: $Utils.Optional<ApiKeyCountAggregateOutputType> | number
          }
        }
      }
      OrganizationUser: {
        payload: Prisma.$OrganizationUserPayload<ExtArgs>
        fields: Prisma.OrganizationUserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrganizationUserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationUserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrganizationUserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationUserPayload>
          }
          findFirst: {
            args: Prisma.OrganizationUserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationUserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrganizationUserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationUserPayload>
          }
          findMany: {
            args: Prisma.OrganizationUserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationUserPayload>[]
          }
          create: {
            args: Prisma.OrganizationUserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationUserPayload>
          }
          createMany: {
            args: Prisma.OrganizationUserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrganizationUserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationUserPayload>[]
          }
          delete: {
            args: Prisma.OrganizationUserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationUserPayload>
          }
          update: {
            args: Prisma.OrganizationUserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationUserPayload>
          }
          deleteMany: {
            args: Prisma.OrganizationUserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrganizationUserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.OrganizationUserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationUserPayload>
          }
          aggregate: {
            args: Prisma.OrganizationUserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrganizationUser>
          }
          groupBy: {
            args: Prisma.OrganizationUserGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrganizationUserGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrganizationUserCountArgs<ExtArgs>
            result: $Utils.Optional<OrganizationUserCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type OrganizationCountOutputType
   */

  export type OrganizationCountOutputType = {
    users: number
    customers: number
    products: number
    wallets: number
    paymentLinks: number
    paymentOrders: number
    providers: number
    apiKeys: number
    webhooks: number
    auditLogs: number
    agents: number
  }

  export type OrganizationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | OrganizationCountOutputTypeCountUsersArgs
    customers?: boolean | OrganizationCountOutputTypeCountCustomersArgs
    products?: boolean | OrganizationCountOutputTypeCountProductsArgs
    wallets?: boolean | OrganizationCountOutputTypeCountWalletsArgs
    paymentLinks?: boolean | OrganizationCountOutputTypeCountPaymentLinksArgs
    paymentOrders?: boolean | OrganizationCountOutputTypeCountPaymentOrdersArgs
    providers?: boolean | OrganizationCountOutputTypeCountProvidersArgs
    apiKeys?: boolean | OrganizationCountOutputTypeCountApiKeysArgs
    webhooks?: boolean | OrganizationCountOutputTypeCountWebhooksArgs
    auditLogs?: boolean | OrganizationCountOutputTypeCountAuditLogsArgs
    agents?: boolean | OrganizationCountOutputTypeCountAgentsArgs
  }

  // Custom InputTypes
  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationCountOutputType
     */
    select?: OrganizationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrganizationUserWhereInput
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountCustomersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomerWhereInput
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountWalletsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WalletWhereInput
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountPaymentLinksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentLinkWhereInput
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountPaymentOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentOrderWhereInput
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountProvidersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProviderConfigWhereInput
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountApiKeysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApiKeyWhereInput
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountWebhooksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WebhookWhereInput
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountAuditLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuditLogWhereInput
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountAgentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgentWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    organizations: number
    ownedWallets: number
    paymentLinks: number
    auditLogs: number
    agentInteractions: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organizations?: boolean | UserCountOutputTypeCountOrganizationsArgs
    ownedWallets?: boolean | UserCountOutputTypeCountOwnedWalletsArgs
    paymentLinks?: boolean | UserCountOutputTypeCountPaymentLinksArgs
    auditLogs?: boolean | UserCountOutputTypeCountAuditLogsArgs
    agentInteractions?: boolean | UserCountOutputTypeCountAgentInteractionsArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOrganizationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrganizationUserWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOwnedWalletsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WalletWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPaymentLinksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentLinkWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAuditLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuditLogWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAgentInteractionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgentInteractionWhereInput
  }


  /**
   * Count Type CustomerCountOutputType
   */

  export type CustomerCountOutputType = {
    paymentOrders: number
    paymentMethods: number
    subscriptions: number
  }

  export type CustomerCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    paymentOrders?: boolean | CustomerCountOutputTypeCountPaymentOrdersArgs
    paymentMethods?: boolean | CustomerCountOutputTypeCountPaymentMethodsArgs
    subscriptions?: boolean | CustomerCountOutputTypeCountSubscriptionsArgs
  }

  // Custom InputTypes
  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerCountOutputType
     */
    select?: CustomerCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeCountPaymentOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentOrderWhereInput
  }

  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeCountPaymentMethodsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomerPaymentMethodWhereInput
  }

  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeCountSubscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubscriptionWhereInput
  }


  /**
   * Count Type SubscriptionCountOutputType
   */

  export type SubscriptionCountOutputType = {
    items: number
  }

  export type SubscriptionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | SubscriptionCountOutputTypeCountItemsArgs
  }

  // Custom InputTypes
  /**
   * SubscriptionCountOutputType without action
   */
  export type SubscriptionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionCountOutputType
     */
    select?: SubscriptionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SubscriptionCountOutputType without action
   */
  export type SubscriptionCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubscriptionItemWhereInput
  }


  /**
   * Count Type WalletCountOutputType
   */

  export type WalletCountOutputType = {
    primaryForUsers: number
    transactions: number
    gasSponsorship: number
  }

  export type WalletCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    primaryForUsers?: boolean | WalletCountOutputTypeCountPrimaryForUsersArgs
    transactions?: boolean | WalletCountOutputTypeCountTransactionsArgs
    gasSponsorship?: boolean | WalletCountOutputTypeCountGasSponsorshipArgs
  }

  // Custom InputTypes
  /**
   * WalletCountOutputType without action
   */
  export type WalletCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WalletCountOutputType
     */
    select?: WalletCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * WalletCountOutputType without action
   */
  export type WalletCountOutputTypeCountPrimaryForUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * WalletCountOutputType without action
   */
  export type WalletCountOutputTypeCountTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BlockchainTransactionWhereInput
  }

  /**
   * WalletCountOutputType without action
   */
  export type WalletCountOutputTypeCountGasSponsorshipArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GasSponsorshipWhereInput
  }


  /**
   * Count Type GasSponsorshipCountOutputType
   */

  export type GasSponsorshipCountOutputType = {
    transactions: number
  }

  export type GasSponsorshipCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transactions?: boolean | GasSponsorshipCountOutputTypeCountTransactionsArgs
  }

  // Custom InputTypes
  /**
   * GasSponsorshipCountOutputType without action
   */
  export type GasSponsorshipCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GasSponsorshipCountOutputType
     */
    select?: GasSponsorshipCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * GasSponsorshipCountOutputType without action
   */
  export type GasSponsorshipCountOutputTypeCountTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BlockchainTransactionWhereInput
  }


  /**
   * Count Type ProductCountOutputType
   */

  export type ProductCountOutputType = {
    prices: number
  }

  export type ProductCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    prices?: boolean | ProductCountOutputTypeCountPricesArgs
  }

  // Custom InputTypes
  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCountOutputType
     */
    select?: ProductCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountPricesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PriceWhereInput
  }


  /**
   * Count Type PriceCountOutputType
   */

  export type PriceCountOutputType = {
    subscriptionItems: number
    paymentLinks: number
  }

  export type PriceCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    subscriptionItems?: boolean | PriceCountOutputTypeCountSubscriptionItemsArgs
    paymentLinks?: boolean | PriceCountOutputTypeCountPaymentLinksArgs
  }

  // Custom InputTypes
  /**
   * PriceCountOutputType without action
   */
  export type PriceCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceCountOutputType
     */
    select?: PriceCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PriceCountOutputType without action
   */
  export type PriceCountOutputTypeCountSubscriptionItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubscriptionItemWhereInput
  }

  /**
   * PriceCountOutputType without action
   */
  export type PriceCountOutputTypeCountPaymentLinksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentLinkWhereInput
  }


  /**
   * Count Type PaymentLinkCountOutputType
   */

  export type PaymentLinkCountOutputType = {
    paymentOrders: number
  }

  export type PaymentLinkCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    paymentOrders?: boolean | PaymentLinkCountOutputTypeCountPaymentOrdersArgs
  }

  // Custom InputTypes
  /**
   * PaymentLinkCountOutputType without action
   */
  export type PaymentLinkCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLinkCountOutputType
     */
    select?: PaymentLinkCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PaymentLinkCountOutputType without action
   */
  export type PaymentLinkCountOutputTypeCountPaymentOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentOrderWhereInput
  }


  /**
   * Count Type PaymentOrderCountOutputType
   */

  export type PaymentOrderCountOutputType = {
    providerTransactions: number
    blockchainTxs: number
    events: number
    agentDecisions: number
    manualSteps: number
  }

  export type PaymentOrderCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    providerTransactions?: boolean | PaymentOrderCountOutputTypeCountProviderTransactionsArgs
    blockchainTxs?: boolean | PaymentOrderCountOutputTypeCountBlockchainTxsArgs
    events?: boolean | PaymentOrderCountOutputTypeCountEventsArgs
    agentDecisions?: boolean | PaymentOrderCountOutputTypeCountAgentDecisionsArgs
    manualSteps?: boolean | PaymentOrderCountOutputTypeCountManualStepsArgs
  }

  // Custom InputTypes
  /**
   * PaymentOrderCountOutputType without action
   */
  export type PaymentOrderCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentOrderCountOutputType
     */
    select?: PaymentOrderCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PaymentOrderCountOutputType without action
   */
  export type PaymentOrderCountOutputTypeCountProviderTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProviderTransactionWhereInput
  }

  /**
   * PaymentOrderCountOutputType without action
   */
  export type PaymentOrderCountOutputTypeCountBlockchainTxsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BlockchainTransactionWhereInput
  }

  /**
   * PaymentOrderCountOutputType without action
   */
  export type PaymentOrderCountOutputTypeCountEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentEventWhereInput
  }

  /**
   * PaymentOrderCountOutputType without action
   */
  export type PaymentOrderCountOutputTypeCountAgentDecisionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgentDecisionWhereInput
  }

  /**
   * PaymentOrderCountOutputType without action
   */
  export type PaymentOrderCountOutputTypeCountManualStepsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ManualProcessStepWhereInput
  }


  /**
   * Count Type ProviderCountOutputType
   */

  export type ProviderCountOutputType = {
    configs: number
    routes: number
    transactions: number
  }

  export type ProviderCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configs?: boolean | ProviderCountOutputTypeCountConfigsArgs
    routes?: boolean | ProviderCountOutputTypeCountRoutesArgs
    transactions?: boolean | ProviderCountOutputTypeCountTransactionsArgs
  }

  // Custom InputTypes
  /**
   * ProviderCountOutputType without action
   */
  export type ProviderCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderCountOutputType
     */
    select?: ProviderCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProviderCountOutputType without action
   */
  export type ProviderCountOutputTypeCountConfigsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProviderConfigWhereInput
  }

  /**
   * ProviderCountOutputType without action
   */
  export type ProviderCountOutputTypeCountRoutesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProviderRouteWhereInput
  }

  /**
   * ProviderCountOutputType without action
   */
  export type ProviderCountOutputTypeCountTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProviderTransactionWhereInput
  }


  /**
   * Count Type AgentCountOutputType
   */

  export type AgentCountOutputType = {
    paymentLinks: number
    decisions: number
    checkpoints: number
  }

  export type AgentCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    paymentLinks?: boolean | AgentCountOutputTypeCountPaymentLinksArgs
    decisions?: boolean | AgentCountOutputTypeCountDecisionsArgs
    checkpoints?: boolean | AgentCountOutputTypeCountCheckpointsArgs
  }

  // Custom InputTypes
  /**
   * AgentCountOutputType without action
   */
  export type AgentCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentCountOutputType
     */
    select?: AgentCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AgentCountOutputType without action
   */
  export type AgentCountOutputTypeCountPaymentLinksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentLinkWhereInput
  }

  /**
   * AgentCountOutputType without action
   */
  export type AgentCountOutputTypeCountDecisionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgentDecisionWhereInput
  }

  /**
   * AgentCountOutputType without action
   */
  export type AgentCountOutputTypeCountCheckpointsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgentCheckpointWhereInput
  }


  /**
   * Count Type AgentDecisionCountOutputType
   */

  export type AgentDecisionCountOutputType = {
    interactions: number
  }

  export type AgentDecisionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    interactions?: boolean | AgentDecisionCountOutputTypeCountInteractionsArgs
  }

  // Custom InputTypes
  /**
   * AgentDecisionCountOutputType without action
   */
  export type AgentDecisionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentDecisionCountOutputType
     */
    select?: AgentDecisionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AgentDecisionCountOutputType without action
   */
  export type AgentDecisionCountOutputTypeCountInteractionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgentInteractionWhereInput
  }


  /**
   * Count Type WebhookCountOutputType
   */

  export type WebhookCountOutputType = {
    deliveries: number
  }

  export type WebhookCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    deliveries?: boolean | WebhookCountOutputTypeCountDeliveriesArgs
  }

  // Custom InputTypes
  /**
   * WebhookCountOutputType without action
   */
  export type WebhookCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WebhookCountOutputType
     */
    select?: WebhookCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * WebhookCountOutputType without action
   */
  export type WebhookCountOutputTypeCountDeliveriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WebhookDeliveryWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Organization
   */

  export type AggregateOrganization = {
    _count: OrganizationCountAggregateOutputType | null
    _min: OrganizationMinAggregateOutputType | null
    _max: OrganizationMaxAggregateOutputType | null
  }

  export type OrganizationMinAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    description: string | null
    billingEmail: string | null
    taxId: string | null
    country: string | null
    complianceStatus: $Enums.ComplianceStatus | null
    kycVerifiedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    ownerId: string | null
  }

  export type OrganizationMaxAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    description: string | null
    billingEmail: string | null
    taxId: string | null
    country: string | null
    complianceStatus: $Enums.ComplianceStatus | null
    kycVerifiedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    ownerId: string | null
  }

  export type OrganizationCountAggregateOutputType = {
    id: number
    name: number
    slug: number
    description: number
    billingEmail: number
    taxId: number
    country: number
    complianceStatus: number
    kycVerifiedAt: number
    settings: number
    features: number
    createdAt: number
    updatedAt: number
    ownerId: number
    _all: number
  }


  export type OrganizationMinAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    description?: true
    billingEmail?: true
    taxId?: true
    country?: true
    complianceStatus?: true
    kycVerifiedAt?: true
    createdAt?: true
    updatedAt?: true
    ownerId?: true
  }

  export type OrganizationMaxAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    description?: true
    billingEmail?: true
    taxId?: true
    country?: true
    complianceStatus?: true
    kycVerifiedAt?: true
    createdAt?: true
    updatedAt?: true
    ownerId?: true
  }

  export type OrganizationCountAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    description?: true
    billingEmail?: true
    taxId?: true
    country?: true
    complianceStatus?: true
    kycVerifiedAt?: true
    settings?: true
    features?: true
    createdAt?: true
    updatedAt?: true
    ownerId?: true
    _all?: true
  }

  export type OrganizationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Organization to aggregate.
     */
    where?: OrganizationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Organizations to fetch.
     */
    orderBy?: OrganizationOrderByWithRelationInput | OrganizationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrganizationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Organizations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Organizations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Organizations
    **/
    _count?: true | OrganizationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrganizationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrganizationMaxAggregateInputType
  }

  export type GetOrganizationAggregateType<T extends OrganizationAggregateArgs> = {
        [P in keyof T & keyof AggregateOrganization]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrganization[P]>
      : GetScalarType<T[P], AggregateOrganization[P]>
  }




  export type OrganizationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrganizationWhereInput
    orderBy?: OrganizationOrderByWithAggregationInput | OrganizationOrderByWithAggregationInput[]
    by: OrganizationScalarFieldEnum[] | OrganizationScalarFieldEnum
    having?: OrganizationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrganizationCountAggregateInputType | true
    _min?: OrganizationMinAggregateInputType
    _max?: OrganizationMaxAggregateInputType
  }

  export type OrganizationGroupByOutputType = {
    id: string
    name: string
    slug: string
    description: string | null
    billingEmail: string
    taxId: string | null
    country: string
    complianceStatus: $Enums.ComplianceStatus
    kycVerifiedAt: Date | null
    settings: JsonValue
    features: JsonValue
    createdAt: Date
    updatedAt: Date
    ownerId: string
    _count: OrganizationCountAggregateOutputType | null
    _min: OrganizationMinAggregateOutputType | null
    _max: OrganizationMaxAggregateOutputType | null
  }

  type GetOrganizationGroupByPayload<T extends OrganizationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrganizationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrganizationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrganizationGroupByOutputType[P]>
            : GetScalarType<T[P], OrganizationGroupByOutputType[P]>
        }
      >
    >


  export type OrganizationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    billingEmail?: boolean
    taxId?: boolean
    country?: boolean
    complianceStatus?: boolean
    kycVerifiedAt?: boolean
    settings?: boolean
    features?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    ownerId?: boolean
    users?: boolean | Organization$usersArgs<ExtArgs>
    customers?: boolean | Organization$customersArgs<ExtArgs>
    products?: boolean | Organization$productsArgs<ExtArgs>
    wallets?: boolean | Organization$walletsArgs<ExtArgs>
    paymentLinks?: boolean | Organization$paymentLinksArgs<ExtArgs>
    paymentOrders?: boolean | Organization$paymentOrdersArgs<ExtArgs>
    providers?: boolean | Organization$providersArgs<ExtArgs>
    apiKeys?: boolean | Organization$apiKeysArgs<ExtArgs>
    webhooks?: boolean | Organization$webhooksArgs<ExtArgs>
    auditLogs?: boolean | Organization$auditLogsArgs<ExtArgs>
    agents?: boolean | Organization$agentsArgs<ExtArgs>
    _count?: boolean | OrganizationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["organization"]>

  export type OrganizationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    billingEmail?: boolean
    taxId?: boolean
    country?: boolean
    complianceStatus?: boolean
    kycVerifiedAt?: boolean
    settings?: boolean
    features?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    ownerId?: boolean
  }, ExtArgs["result"]["organization"]>

  export type OrganizationSelectScalar = {
    id?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    billingEmail?: boolean
    taxId?: boolean
    country?: boolean
    complianceStatus?: boolean
    kycVerifiedAt?: boolean
    settings?: boolean
    features?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    ownerId?: boolean
  }

  export type OrganizationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | Organization$usersArgs<ExtArgs>
    customers?: boolean | Organization$customersArgs<ExtArgs>
    products?: boolean | Organization$productsArgs<ExtArgs>
    wallets?: boolean | Organization$walletsArgs<ExtArgs>
    paymentLinks?: boolean | Organization$paymentLinksArgs<ExtArgs>
    paymentOrders?: boolean | Organization$paymentOrdersArgs<ExtArgs>
    providers?: boolean | Organization$providersArgs<ExtArgs>
    apiKeys?: boolean | Organization$apiKeysArgs<ExtArgs>
    webhooks?: boolean | Organization$webhooksArgs<ExtArgs>
    auditLogs?: boolean | Organization$auditLogsArgs<ExtArgs>
    agents?: boolean | Organization$agentsArgs<ExtArgs>
    _count?: boolean | OrganizationCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OrganizationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $OrganizationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Organization"
    objects: {
      users: Prisma.$OrganizationUserPayload<ExtArgs>[]
      customers: Prisma.$CustomerPayload<ExtArgs>[]
      products: Prisma.$ProductPayload<ExtArgs>[]
      wallets: Prisma.$WalletPayload<ExtArgs>[]
      paymentLinks: Prisma.$PaymentLinkPayload<ExtArgs>[]
      paymentOrders: Prisma.$PaymentOrderPayload<ExtArgs>[]
      providers: Prisma.$ProviderConfigPayload<ExtArgs>[]
      apiKeys: Prisma.$ApiKeyPayload<ExtArgs>[]
      webhooks: Prisma.$WebhookPayload<ExtArgs>[]
      auditLogs: Prisma.$AuditLogPayload<ExtArgs>[]
      agents: Prisma.$AgentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      slug: string
      description: string | null
      billingEmail: string
      taxId: string | null
      country: string
      complianceStatus: $Enums.ComplianceStatus
      kycVerifiedAt: Date | null
      settings: Prisma.JsonValue
      features: Prisma.JsonValue
      createdAt: Date
      updatedAt: Date
      ownerId: string
    }, ExtArgs["result"]["organization"]>
    composites: {}
  }

  type OrganizationGetPayload<S extends boolean | null | undefined | OrganizationDefaultArgs> = $Result.GetResult<Prisma.$OrganizationPayload, S>

  type OrganizationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<OrganizationFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: OrganizationCountAggregateInputType | true
    }

  export interface OrganizationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Organization'], meta: { name: 'Organization' } }
    /**
     * Find zero or one Organization that matches the filter.
     * @param {OrganizationFindUniqueArgs} args - Arguments to find a Organization
     * @example
     * // Get one Organization
     * const organization = await prisma.organization.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrganizationFindUniqueArgs>(args: SelectSubset<T, OrganizationFindUniqueArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Organization that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {OrganizationFindUniqueOrThrowArgs} args - Arguments to find a Organization
     * @example
     * // Get one Organization
     * const organization = await prisma.organization.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrganizationFindUniqueOrThrowArgs>(args: SelectSubset<T, OrganizationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Organization that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationFindFirstArgs} args - Arguments to find a Organization
     * @example
     * // Get one Organization
     * const organization = await prisma.organization.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrganizationFindFirstArgs>(args?: SelectSubset<T, OrganizationFindFirstArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Organization that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationFindFirstOrThrowArgs} args - Arguments to find a Organization
     * @example
     * // Get one Organization
     * const organization = await prisma.organization.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrganizationFindFirstOrThrowArgs>(args?: SelectSubset<T, OrganizationFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Organizations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Organizations
     * const organizations = await prisma.organization.findMany()
     * 
     * // Get first 10 Organizations
     * const organizations = await prisma.organization.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const organizationWithIdOnly = await prisma.organization.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrganizationFindManyArgs>(args?: SelectSubset<T, OrganizationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Organization.
     * @param {OrganizationCreateArgs} args - Arguments to create a Organization.
     * @example
     * // Create one Organization
     * const Organization = await prisma.organization.create({
     *   data: {
     *     // ... data to create a Organization
     *   }
     * })
     * 
     */
    create<T extends OrganizationCreateArgs>(args: SelectSubset<T, OrganizationCreateArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Organizations.
     * @param {OrganizationCreateManyArgs} args - Arguments to create many Organizations.
     * @example
     * // Create many Organizations
     * const organization = await prisma.organization.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrganizationCreateManyArgs>(args?: SelectSubset<T, OrganizationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Organizations and returns the data saved in the database.
     * @param {OrganizationCreateManyAndReturnArgs} args - Arguments to create many Organizations.
     * @example
     * // Create many Organizations
     * const organization = await prisma.organization.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Organizations and only return the `id`
     * const organizationWithIdOnly = await prisma.organization.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrganizationCreateManyAndReturnArgs>(args?: SelectSubset<T, OrganizationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Organization.
     * @param {OrganizationDeleteArgs} args - Arguments to delete one Organization.
     * @example
     * // Delete one Organization
     * const Organization = await prisma.organization.delete({
     *   where: {
     *     // ... filter to delete one Organization
     *   }
     * })
     * 
     */
    delete<T extends OrganizationDeleteArgs>(args: SelectSubset<T, OrganizationDeleteArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Organization.
     * @param {OrganizationUpdateArgs} args - Arguments to update one Organization.
     * @example
     * // Update one Organization
     * const organization = await prisma.organization.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrganizationUpdateArgs>(args: SelectSubset<T, OrganizationUpdateArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Organizations.
     * @param {OrganizationDeleteManyArgs} args - Arguments to filter Organizations to delete.
     * @example
     * // Delete a few Organizations
     * const { count } = await prisma.organization.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrganizationDeleteManyArgs>(args?: SelectSubset<T, OrganizationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Organizations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Organizations
     * const organization = await prisma.organization.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrganizationUpdateManyArgs>(args: SelectSubset<T, OrganizationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Organization.
     * @param {OrganizationUpsertArgs} args - Arguments to update or create a Organization.
     * @example
     * // Update or create a Organization
     * const organization = await prisma.organization.upsert({
     *   create: {
     *     // ... data to create a Organization
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Organization we want to update
     *   }
     * })
     */
    upsert<T extends OrganizationUpsertArgs>(args: SelectSubset<T, OrganizationUpsertArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Organizations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationCountArgs} args - Arguments to filter Organizations to count.
     * @example
     * // Count the number of Organizations
     * const count = await prisma.organization.count({
     *   where: {
     *     // ... the filter for the Organizations we want to count
     *   }
     * })
    **/
    count<T extends OrganizationCountArgs>(
      args?: Subset<T, OrganizationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrganizationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Organization.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrganizationAggregateArgs>(args: Subset<T, OrganizationAggregateArgs>): Prisma.PrismaPromise<GetOrganizationAggregateType<T>>

    /**
     * Group by Organization.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrganizationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrganizationGroupByArgs['orderBy'] }
        : { orderBy?: OrganizationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrganizationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrganizationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Organization model
   */
  readonly fields: OrganizationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Organization.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrganizationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends Organization$usersArgs<ExtArgs> = {}>(args?: Subset<T, Organization$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganizationUserPayload<ExtArgs>, T, "findMany"> | Null>
    customers<T extends Organization$customersArgs<ExtArgs> = {}>(args?: Subset<T, Organization$customersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findMany"> | Null>
    products<T extends Organization$productsArgs<ExtArgs> = {}>(args?: Subset<T, Organization$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany"> | Null>
    wallets<T extends Organization$walletsArgs<ExtArgs> = {}>(args?: Subset<T, Organization$walletsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "findMany"> | Null>
    paymentLinks<T extends Organization$paymentLinksArgs<ExtArgs> = {}>(args?: Subset<T, Organization$paymentLinksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentLinkPayload<ExtArgs>, T, "findMany"> | Null>
    paymentOrders<T extends Organization$paymentOrdersArgs<ExtArgs> = {}>(args?: Subset<T, Organization$paymentOrdersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentOrderPayload<ExtArgs>, T, "findMany"> | Null>
    providers<T extends Organization$providersArgs<ExtArgs> = {}>(args?: Subset<T, Organization$providersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderConfigPayload<ExtArgs>, T, "findMany"> | Null>
    apiKeys<T extends Organization$apiKeysArgs<ExtArgs> = {}>(args?: Subset<T, Organization$apiKeysArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "findMany"> | Null>
    webhooks<T extends Organization$webhooksArgs<ExtArgs> = {}>(args?: Subset<T, Organization$webhooksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WebhookPayload<ExtArgs>, T, "findMany"> | Null>
    auditLogs<T extends Organization$auditLogsArgs<ExtArgs> = {}>(args?: Subset<T, Organization$auditLogsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findMany"> | Null>
    agents<T extends Organization$agentsArgs<ExtArgs> = {}>(args?: Subset<T, Organization$agentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgentPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Organization model
   */ 
  interface OrganizationFieldRefs {
    readonly id: FieldRef<"Organization", 'String'>
    readonly name: FieldRef<"Organization", 'String'>
    readonly slug: FieldRef<"Organization", 'String'>
    readonly description: FieldRef<"Organization", 'String'>
    readonly billingEmail: FieldRef<"Organization", 'String'>
    readonly taxId: FieldRef<"Organization", 'String'>
    readonly country: FieldRef<"Organization", 'String'>
    readonly complianceStatus: FieldRef<"Organization", 'ComplianceStatus'>
    readonly kycVerifiedAt: FieldRef<"Organization", 'DateTime'>
    readonly settings: FieldRef<"Organization", 'Json'>
    readonly features: FieldRef<"Organization", 'Json'>
    readonly createdAt: FieldRef<"Organization", 'DateTime'>
    readonly updatedAt: FieldRef<"Organization", 'DateTime'>
    readonly ownerId: FieldRef<"Organization", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Organization findUnique
   */
  export type OrganizationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * Filter, which Organization to fetch.
     */
    where: OrganizationWhereUniqueInput
  }

  /**
   * Organization findUniqueOrThrow
   */
  export type OrganizationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * Filter, which Organization to fetch.
     */
    where: OrganizationWhereUniqueInput
  }

  /**
   * Organization findFirst
   */
  export type OrganizationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * Filter, which Organization to fetch.
     */
    where?: OrganizationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Organizations to fetch.
     */
    orderBy?: OrganizationOrderByWithRelationInput | OrganizationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Organizations.
     */
    cursor?: OrganizationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Organizations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Organizations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Organizations.
     */
    distinct?: OrganizationScalarFieldEnum | OrganizationScalarFieldEnum[]
  }

  /**
   * Organization findFirstOrThrow
   */
  export type OrganizationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * Filter, which Organization to fetch.
     */
    where?: OrganizationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Organizations to fetch.
     */
    orderBy?: OrganizationOrderByWithRelationInput | OrganizationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Organizations.
     */
    cursor?: OrganizationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Organizations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Organizations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Organizations.
     */
    distinct?: OrganizationScalarFieldEnum | OrganizationScalarFieldEnum[]
  }

  /**
   * Organization findMany
   */
  export type OrganizationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * Filter, which Organizations to fetch.
     */
    where?: OrganizationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Organizations to fetch.
     */
    orderBy?: OrganizationOrderByWithRelationInput | OrganizationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Organizations.
     */
    cursor?: OrganizationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Organizations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Organizations.
     */
    skip?: number
    distinct?: OrganizationScalarFieldEnum | OrganizationScalarFieldEnum[]
  }

  /**
   * Organization create
   */
  export type OrganizationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * The data needed to create a Organization.
     */
    data: XOR<OrganizationCreateInput, OrganizationUncheckedCreateInput>
  }

  /**
   * Organization createMany
   */
  export type OrganizationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Organizations.
     */
    data: OrganizationCreateManyInput | OrganizationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Organization createManyAndReturn
   */
  export type OrganizationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Organizations.
     */
    data: OrganizationCreateManyInput | OrganizationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Organization update
   */
  export type OrganizationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * The data needed to update a Organization.
     */
    data: XOR<OrganizationUpdateInput, OrganizationUncheckedUpdateInput>
    /**
     * Choose, which Organization to update.
     */
    where: OrganizationWhereUniqueInput
  }

  /**
   * Organization updateMany
   */
  export type OrganizationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Organizations.
     */
    data: XOR<OrganizationUpdateManyMutationInput, OrganizationUncheckedUpdateManyInput>
    /**
     * Filter which Organizations to update
     */
    where?: OrganizationWhereInput
  }

  /**
   * Organization upsert
   */
  export type OrganizationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * The filter to search for the Organization to update in case it exists.
     */
    where: OrganizationWhereUniqueInput
    /**
     * In case the Organization found by the `where` argument doesn't exist, create a new Organization with this data.
     */
    create: XOR<OrganizationCreateInput, OrganizationUncheckedCreateInput>
    /**
     * In case the Organization was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrganizationUpdateInput, OrganizationUncheckedUpdateInput>
  }

  /**
   * Organization delete
   */
  export type OrganizationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * Filter which Organization to delete.
     */
    where: OrganizationWhereUniqueInput
  }

  /**
   * Organization deleteMany
   */
  export type OrganizationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Organizations to delete
     */
    where?: OrganizationWhereInput
  }

  /**
   * Organization.users
   */
  export type Organization$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationUser
     */
    select?: OrganizationUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationUserInclude<ExtArgs> | null
    where?: OrganizationUserWhereInput
    orderBy?: OrganizationUserOrderByWithRelationInput | OrganizationUserOrderByWithRelationInput[]
    cursor?: OrganizationUserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrganizationUserScalarFieldEnum | OrganizationUserScalarFieldEnum[]
  }

  /**
   * Organization.customers
   */
  export type Organization$customersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    where?: CustomerWhereInput
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    cursor?: CustomerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CustomerScalarFieldEnum | CustomerScalarFieldEnum[]
  }

  /**
   * Organization.products
   */
  export type Organization$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Organization.wallets
   */
  export type Organization$walletsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletInclude<ExtArgs> | null
    where?: WalletWhereInput
    orderBy?: WalletOrderByWithRelationInput | WalletOrderByWithRelationInput[]
    cursor?: WalletWhereUniqueInput
    take?: number
    skip?: number
    distinct?: WalletScalarFieldEnum | WalletScalarFieldEnum[]
  }

  /**
   * Organization.paymentLinks
   */
  export type Organization$paymentLinksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLink
     */
    select?: PaymentLinkSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentLinkInclude<ExtArgs> | null
    where?: PaymentLinkWhereInput
    orderBy?: PaymentLinkOrderByWithRelationInput | PaymentLinkOrderByWithRelationInput[]
    cursor?: PaymentLinkWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentLinkScalarFieldEnum | PaymentLinkScalarFieldEnum[]
  }

  /**
   * Organization.paymentOrders
   */
  export type Organization$paymentOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentOrder
     */
    select?: PaymentOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentOrderInclude<ExtArgs> | null
    where?: PaymentOrderWhereInput
    orderBy?: PaymentOrderOrderByWithRelationInput | PaymentOrderOrderByWithRelationInput[]
    cursor?: PaymentOrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentOrderScalarFieldEnum | PaymentOrderScalarFieldEnum[]
  }

  /**
   * Organization.providers
   */
  export type Organization$providersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderConfig
     */
    select?: ProviderConfigSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderConfigInclude<ExtArgs> | null
    where?: ProviderConfigWhereInput
    orderBy?: ProviderConfigOrderByWithRelationInput | ProviderConfigOrderByWithRelationInput[]
    cursor?: ProviderConfigWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProviderConfigScalarFieldEnum | ProviderConfigScalarFieldEnum[]
  }

  /**
   * Organization.apiKeys
   */
  export type Organization$apiKeysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKey
     */
    select?: ApiKeySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiKeyInclude<ExtArgs> | null
    where?: ApiKeyWhereInput
    orderBy?: ApiKeyOrderByWithRelationInput | ApiKeyOrderByWithRelationInput[]
    cursor?: ApiKeyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApiKeyScalarFieldEnum | ApiKeyScalarFieldEnum[]
  }

  /**
   * Organization.webhooks
   */
  export type Organization$webhooksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Webhook
     */
    select?: WebhookSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WebhookInclude<ExtArgs> | null
    where?: WebhookWhereInput
    orderBy?: WebhookOrderByWithRelationInput | WebhookOrderByWithRelationInput[]
    cursor?: WebhookWhereUniqueInput
    take?: number
    skip?: number
    distinct?: WebhookScalarFieldEnum | WebhookScalarFieldEnum[]
  }

  /**
   * Organization.auditLogs
   */
  export type Organization$auditLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    where?: AuditLogWhereInput
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    cursor?: AuditLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AuditLogScalarFieldEnum | AuditLogScalarFieldEnum[]
  }

  /**
   * Organization.agents
   */
  export type Organization$agentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agent
     */
    select?: AgentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentInclude<ExtArgs> | null
    where?: AgentWhereInput
    orderBy?: AgentOrderByWithRelationInput | AgentOrderByWithRelationInput[]
    cursor?: AgentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AgentScalarFieldEnum | AgentScalarFieldEnum[]
  }

  /**
   * Organization without action
   */
  export type OrganizationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    email: string | null
    name: string | null
    avatarUrl: string | null
    authProvider: $Enums.AuthProvider | null
    authProviderId: string | null
    emailVerified: boolean | null
    primaryWalletId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    lastLoginAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    name: string | null
    avatarUrl: string | null
    authProvider: $Enums.AuthProvider | null
    authProviderId: string | null
    emailVerified: boolean | null
    primaryWalletId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    lastLoginAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    name: number
    avatarUrl: number
    authProvider: number
    authProviderId: number
    emailVerified: number
    primaryWalletId: number
    createdAt: number
    updatedAt: number
    lastLoginAt: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    name?: true
    avatarUrl?: true
    authProvider?: true
    authProviderId?: true
    emailVerified?: true
    primaryWalletId?: true
    createdAt?: true
    updatedAt?: true
    lastLoginAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    name?: true
    avatarUrl?: true
    authProvider?: true
    authProviderId?: true
    emailVerified?: true
    primaryWalletId?: true
    createdAt?: true
    updatedAt?: true
    lastLoginAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    name?: true
    avatarUrl?: true
    authProvider?: true
    authProviderId?: true
    emailVerified?: true
    primaryWalletId?: true
    createdAt?: true
    updatedAt?: true
    lastLoginAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    email: string
    name: string | null
    avatarUrl: string | null
    authProvider: $Enums.AuthProvider
    authProviderId: string | null
    emailVerified: boolean
    primaryWalletId: string | null
    createdAt: Date
    updatedAt: Date
    lastLoginAt: Date | null
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    name?: boolean
    avatarUrl?: boolean
    authProvider?: boolean
    authProviderId?: boolean
    emailVerified?: boolean
    primaryWalletId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lastLoginAt?: boolean
    primaryWallet?: boolean | User$primaryWalletArgs<ExtArgs>
    organizations?: boolean | User$organizationsArgs<ExtArgs>
    ownedWallets?: boolean | User$ownedWalletsArgs<ExtArgs>
    paymentLinks?: boolean | User$paymentLinksArgs<ExtArgs>
    auditLogs?: boolean | User$auditLogsArgs<ExtArgs>
    agentInteractions?: boolean | User$agentInteractionsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    name?: boolean
    avatarUrl?: boolean
    authProvider?: boolean
    authProviderId?: boolean
    emailVerified?: boolean
    primaryWalletId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lastLoginAt?: boolean
    primaryWallet?: boolean | User$primaryWalletArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    name?: boolean
    avatarUrl?: boolean
    authProvider?: boolean
    authProviderId?: boolean
    emailVerified?: boolean
    primaryWalletId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lastLoginAt?: boolean
  }

  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    primaryWallet?: boolean | User$primaryWalletArgs<ExtArgs>
    organizations?: boolean | User$organizationsArgs<ExtArgs>
    ownedWallets?: boolean | User$ownedWalletsArgs<ExtArgs>
    paymentLinks?: boolean | User$paymentLinksArgs<ExtArgs>
    auditLogs?: boolean | User$auditLogsArgs<ExtArgs>
    agentInteractions?: boolean | User$agentInteractionsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    primaryWallet?: boolean | User$primaryWalletArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      primaryWallet: Prisma.$WalletPayload<ExtArgs> | null
      organizations: Prisma.$OrganizationUserPayload<ExtArgs>[]
      ownedWallets: Prisma.$WalletPayload<ExtArgs>[]
      paymentLinks: Prisma.$PaymentLinkPayload<ExtArgs>[]
      auditLogs: Prisma.$AuditLogPayload<ExtArgs>[]
      agentInteractions: Prisma.$AgentInteractionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      name: string | null
      avatarUrl: string | null
      authProvider: $Enums.AuthProvider
      authProviderId: string | null
      emailVerified: boolean
      primaryWalletId: string | null
      createdAt: Date
      updatedAt: Date
      lastLoginAt: Date | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    primaryWallet<T extends User$primaryWalletArgs<ExtArgs> = {}>(args?: Subset<T, User$primaryWalletArgs<ExtArgs>>): Prisma__WalletClient<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    organizations<T extends User$organizationsArgs<ExtArgs> = {}>(args?: Subset<T, User$organizationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganizationUserPayload<ExtArgs>, T, "findMany"> | Null>
    ownedWallets<T extends User$ownedWalletsArgs<ExtArgs> = {}>(args?: Subset<T, User$ownedWalletsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "findMany"> | Null>
    paymentLinks<T extends User$paymentLinksArgs<ExtArgs> = {}>(args?: Subset<T, User$paymentLinksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentLinkPayload<ExtArgs>, T, "findMany"> | Null>
    auditLogs<T extends User$auditLogsArgs<ExtArgs> = {}>(args?: Subset<T, User$auditLogsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findMany"> | Null>
    agentInteractions<T extends User$agentInteractionsArgs<ExtArgs> = {}>(args?: Subset<T, User$agentInteractionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgentInteractionPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly name: FieldRef<"User", 'String'>
    readonly avatarUrl: FieldRef<"User", 'String'>
    readonly authProvider: FieldRef<"User", 'AuthProvider'>
    readonly authProviderId: FieldRef<"User", 'String'>
    readonly emailVerified: FieldRef<"User", 'Boolean'>
    readonly primaryWalletId: FieldRef<"User", 'String'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
    readonly lastLoginAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }

  /**
   * User.primaryWallet
   */
  export type User$primaryWalletArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletInclude<ExtArgs> | null
    where?: WalletWhereInput
  }

  /**
   * User.organizations
   */
  export type User$organizationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationUser
     */
    select?: OrganizationUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationUserInclude<ExtArgs> | null
    where?: OrganizationUserWhereInput
    orderBy?: OrganizationUserOrderByWithRelationInput | OrganizationUserOrderByWithRelationInput[]
    cursor?: OrganizationUserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrganizationUserScalarFieldEnum | OrganizationUserScalarFieldEnum[]
  }

  /**
   * User.ownedWallets
   */
  export type User$ownedWalletsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletInclude<ExtArgs> | null
    where?: WalletWhereInput
    orderBy?: WalletOrderByWithRelationInput | WalletOrderByWithRelationInput[]
    cursor?: WalletWhereUniqueInput
    take?: number
    skip?: number
    distinct?: WalletScalarFieldEnum | WalletScalarFieldEnum[]
  }

  /**
   * User.paymentLinks
   */
  export type User$paymentLinksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLink
     */
    select?: PaymentLinkSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentLinkInclude<ExtArgs> | null
    where?: PaymentLinkWhereInput
    orderBy?: PaymentLinkOrderByWithRelationInput | PaymentLinkOrderByWithRelationInput[]
    cursor?: PaymentLinkWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentLinkScalarFieldEnum | PaymentLinkScalarFieldEnum[]
  }

  /**
   * User.auditLogs
   */
  export type User$auditLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    where?: AuditLogWhereInput
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    cursor?: AuditLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AuditLogScalarFieldEnum | AuditLogScalarFieldEnum[]
  }

  /**
   * User.agentInteractions
   */
  export type User$agentInteractionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentInteraction
     */
    select?: AgentInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentInteractionInclude<ExtArgs> | null
    where?: AgentInteractionWhereInput
    orderBy?: AgentInteractionOrderByWithRelationInput | AgentInteractionOrderByWithRelationInput[]
    cursor?: AgentInteractionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AgentInteractionScalarFieldEnum | AgentInteractionScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Customer
   */

  export type AggregateCustomer = {
    _count: CustomerCountAggregateOutputType | null
    _avg: CustomerAvgAggregateOutputType | null
    _sum: CustomerSumAggregateOutputType | null
    _min: CustomerMinAggregateOutputType | null
    _max: CustomerMaxAggregateOutputType | null
  }

  export type CustomerAvgAggregateOutputType = {
    preferredChainId: number | null
  }

  export type CustomerSumAggregateOutputType = {
    preferredChainId: number | null
  }

  export type CustomerMinAggregateOutputType = {
    id: string | null
    organizationId: string | null
    email: string | null
    name: string | null
    phone: string | null
    walletAddress: string | null
    preferredChainId: number | null
    isActive: boolean | null
    emailVerified: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CustomerMaxAggregateOutputType = {
    id: string | null
    organizationId: string | null
    email: string | null
    name: string | null
    phone: string | null
    walletAddress: string | null
    preferredChainId: number | null
    isActive: boolean | null
    emailVerified: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CustomerCountAggregateOutputType = {
    id: number
    organizationId: number
    email: number
    name: number
    phone: number
    billingAddress: number
    shippingAddress: number
    walletAddress: number
    preferredChainId: number
    isActive: number
    emailVerified: number
    metadata: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CustomerAvgAggregateInputType = {
    preferredChainId?: true
  }

  export type CustomerSumAggregateInputType = {
    preferredChainId?: true
  }

  export type CustomerMinAggregateInputType = {
    id?: true
    organizationId?: true
    email?: true
    name?: true
    phone?: true
    walletAddress?: true
    preferredChainId?: true
    isActive?: true
    emailVerified?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CustomerMaxAggregateInputType = {
    id?: true
    organizationId?: true
    email?: true
    name?: true
    phone?: true
    walletAddress?: true
    preferredChainId?: true
    isActive?: true
    emailVerified?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CustomerCountAggregateInputType = {
    id?: true
    organizationId?: true
    email?: true
    name?: true
    phone?: true
    billingAddress?: true
    shippingAddress?: true
    walletAddress?: true
    preferredChainId?: true
    isActive?: true
    emailVerified?: true
    metadata?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CustomerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Customer to aggregate.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Customers
    **/
    _count?: true | CustomerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CustomerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CustomerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CustomerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CustomerMaxAggregateInputType
  }

  export type GetCustomerAggregateType<T extends CustomerAggregateArgs> = {
        [P in keyof T & keyof AggregateCustomer]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCustomer[P]>
      : GetScalarType<T[P], AggregateCustomer[P]>
  }




  export type CustomerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomerWhereInput
    orderBy?: CustomerOrderByWithAggregationInput | CustomerOrderByWithAggregationInput[]
    by: CustomerScalarFieldEnum[] | CustomerScalarFieldEnum
    having?: CustomerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CustomerCountAggregateInputType | true
    _avg?: CustomerAvgAggregateInputType
    _sum?: CustomerSumAggregateInputType
    _min?: CustomerMinAggregateInputType
    _max?: CustomerMaxAggregateInputType
  }

  export type CustomerGroupByOutputType = {
    id: string
    organizationId: string
    email: string
    name: string | null
    phone: string | null
    billingAddress: JsonValue | null
    shippingAddress: JsonValue | null
    walletAddress: string | null
    preferredChainId: number | null
    isActive: boolean
    emailVerified: boolean
    metadata: JsonValue | null
    createdAt: Date
    updatedAt: Date
    _count: CustomerCountAggregateOutputType | null
    _avg: CustomerAvgAggregateOutputType | null
    _sum: CustomerSumAggregateOutputType | null
    _min: CustomerMinAggregateOutputType | null
    _max: CustomerMaxAggregateOutputType | null
  }

  type GetCustomerGroupByPayload<T extends CustomerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CustomerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CustomerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CustomerGroupByOutputType[P]>
            : GetScalarType<T[P], CustomerGroupByOutputType[P]>
        }
      >
    >


  export type CustomerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    email?: boolean
    name?: boolean
    phone?: boolean
    billingAddress?: boolean
    shippingAddress?: boolean
    walletAddress?: boolean
    preferredChainId?: boolean
    isActive?: boolean
    emailVerified?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    paymentOrders?: boolean | Customer$paymentOrdersArgs<ExtArgs>
    paymentMethods?: boolean | Customer$paymentMethodsArgs<ExtArgs>
    subscriptions?: boolean | Customer$subscriptionsArgs<ExtArgs>
    _count?: boolean | CustomerCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customer"]>

  export type CustomerSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    email?: boolean
    name?: boolean
    phone?: boolean
    billingAddress?: boolean
    shippingAddress?: boolean
    walletAddress?: boolean
    preferredChainId?: boolean
    isActive?: boolean
    emailVerified?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customer"]>

  export type CustomerSelectScalar = {
    id?: boolean
    organizationId?: boolean
    email?: boolean
    name?: boolean
    phone?: boolean
    billingAddress?: boolean
    shippingAddress?: boolean
    walletAddress?: boolean
    preferredChainId?: boolean
    isActive?: boolean
    emailVerified?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CustomerInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    paymentOrders?: boolean | Customer$paymentOrdersArgs<ExtArgs>
    paymentMethods?: boolean | Customer$paymentMethodsArgs<ExtArgs>
    subscriptions?: boolean | Customer$subscriptionsArgs<ExtArgs>
    _count?: boolean | CustomerCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CustomerIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }

  export type $CustomerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Customer"
    objects: {
      organization: Prisma.$OrganizationPayload<ExtArgs>
      paymentOrders: Prisma.$PaymentOrderPayload<ExtArgs>[]
      paymentMethods: Prisma.$CustomerPaymentMethodPayload<ExtArgs>[]
      subscriptions: Prisma.$SubscriptionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      organizationId: string
      email: string
      name: string | null
      phone: string | null
      billingAddress: Prisma.JsonValue | null
      shippingAddress: Prisma.JsonValue | null
      walletAddress: string | null
      preferredChainId: number | null
      isActive: boolean
      emailVerified: boolean
      metadata: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["customer"]>
    composites: {}
  }

  type CustomerGetPayload<S extends boolean | null | undefined | CustomerDefaultArgs> = $Result.GetResult<Prisma.$CustomerPayload, S>

  type CustomerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CustomerFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CustomerCountAggregateInputType | true
    }

  export interface CustomerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Customer'], meta: { name: 'Customer' } }
    /**
     * Find zero or one Customer that matches the filter.
     * @param {CustomerFindUniqueArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CustomerFindUniqueArgs>(args: SelectSubset<T, CustomerFindUniqueArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Customer that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CustomerFindUniqueOrThrowArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CustomerFindUniqueOrThrowArgs>(args: SelectSubset<T, CustomerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Customer that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerFindFirstArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CustomerFindFirstArgs>(args?: SelectSubset<T, CustomerFindFirstArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Customer that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerFindFirstOrThrowArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CustomerFindFirstOrThrowArgs>(args?: SelectSubset<T, CustomerFindFirstOrThrowArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Customers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Customers
     * const customers = await prisma.customer.findMany()
     * 
     * // Get first 10 Customers
     * const customers = await prisma.customer.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const customerWithIdOnly = await prisma.customer.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CustomerFindManyArgs>(args?: SelectSubset<T, CustomerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Customer.
     * @param {CustomerCreateArgs} args - Arguments to create a Customer.
     * @example
     * // Create one Customer
     * const Customer = await prisma.customer.create({
     *   data: {
     *     // ... data to create a Customer
     *   }
     * })
     * 
     */
    create<T extends CustomerCreateArgs>(args: SelectSubset<T, CustomerCreateArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Customers.
     * @param {CustomerCreateManyArgs} args - Arguments to create many Customers.
     * @example
     * // Create many Customers
     * const customer = await prisma.customer.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CustomerCreateManyArgs>(args?: SelectSubset<T, CustomerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Customers and returns the data saved in the database.
     * @param {CustomerCreateManyAndReturnArgs} args - Arguments to create many Customers.
     * @example
     * // Create many Customers
     * const customer = await prisma.customer.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Customers and only return the `id`
     * const customerWithIdOnly = await prisma.customer.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CustomerCreateManyAndReturnArgs>(args?: SelectSubset<T, CustomerCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Customer.
     * @param {CustomerDeleteArgs} args - Arguments to delete one Customer.
     * @example
     * // Delete one Customer
     * const Customer = await prisma.customer.delete({
     *   where: {
     *     // ... filter to delete one Customer
     *   }
     * })
     * 
     */
    delete<T extends CustomerDeleteArgs>(args: SelectSubset<T, CustomerDeleteArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Customer.
     * @param {CustomerUpdateArgs} args - Arguments to update one Customer.
     * @example
     * // Update one Customer
     * const customer = await prisma.customer.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CustomerUpdateArgs>(args: SelectSubset<T, CustomerUpdateArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Customers.
     * @param {CustomerDeleteManyArgs} args - Arguments to filter Customers to delete.
     * @example
     * // Delete a few Customers
     * const { count } = await prisma.customer.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CustomerDeleteManyArgs>(args?: SelectSubset<T, CustomerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Customers
     * const customer = await prisma.customer.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CustomerUpdateManyArgs>(args: SelectSubset<T, CustomerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Customer.
     * @param {CustomerUpsertArgs} args - Arguments to update or create a Customer.
     * @example
     * // Update or create a Customer
     * const customer = await prisma.customer.upsert({
     *   create: {
     *     // ... data to create a Customer
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Customer we want to update
     *   }
     * })
     */
    upsert<T extends CustomerUpsertArgs>(args: SelectSubset<T, CustomerUpsertArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerCountArgs} args - Arguments to filter Customers to count.
     * @example
     * // Count the number of Customers
     * const count = await prisma.customer.count({
     *   where: {
     *     // ... the filter for the Customers we want to count
     *   }
     * })
    **/
    count<T extends CustomerCountArgs>(
      args?: Subset<T, CustomerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CustomerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Customer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CustomerAggregateArgs>(args: Subset<T, CustomerAggregateArgs>): Prisma.PrismaPromise<GetCustomerAggregateType<T>>

    /**
     * Group by Customer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CustomerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CustomerGroupByArgs['orderBy'] }
        : { orderBy?: CustomerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CustomerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCustomerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Customer model
   */
  readonly fields: CustomerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Customer.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CustomerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organization<T extends OrganizationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationDefaultArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    paymentOrders<T extends Customer$paymentOrdersArgs<ExtArgs> = {}>(args?: Subset<T, Customer$paymentOrdersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentOrderPayload<ExtArgs>, T, "findMany"> | Null>
    paymentMethods<T extends Customer$paymentMethodsArgs<ExtArgs> = {}>(args?: Subset<T, Customer$paymentMethodsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerPaymentMethodPayload<ExtArgs>, T, "findMany"> | Null>
    subscriptions<T extends Customer$subscriptionsArgs<ExtArgs> = {}>(args?: Subset<T, Customer$subscriptionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Customer model
   */ 
  interface CustomerFieldRefs {
    readonly id: FieldRef<"Customer", 'String'>
    readonly organizationId: FieldRef<"Customer", 'String'>
    readonly email: FieldRef<"Customer", 'String'>
    readonly name: FieldRef<"Customer", 'String'>
    readonly phone: FieldRef<"Customer", 'String'>
    readonly billingAddress: FieldRef<"Customer", 'Json'>
    readonly shippingAddress: FieldRef<"Customer", 'Json'>
    readonly walletAddress: FieldRef<"Customer", 'String'>
    readonly preferredChainId: FieldRef<"Customer", 'Int'>
    readonly isActive: FieldRef<"Customer", 'Boolean'>
    readonly emailVerified: FieldRef<"Customer", 'Boolean'>
    readonly metadata: FieldRef<"Customer", 'Json'>
    readonly createdAt: FieldRef<"Customer", 'DateTime'>
    readonly updatedAt: FieldRef<"Customer", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Customer findUnique
   */
  export type CustomerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer findUniqueOrThrow
   */
  export type CustomerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer findFirst
   */
  export type CustomerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Customers.
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Customers.
     */
    distinct?: CustomerScalarFieldEnum | CustomerScalarFieldEnum[]
  }

  /**
   * Customer findFirstOrThrow
   */
  export type CustomerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Customers.
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Customers.
     */
    distinct?: CustomerScalarFieldEnum | CustomerScalarFieldEnum[]
  }

  /**
   * Customer findMany
   */
  export type CustomerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customers to fetch.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Customers.
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    distinct?: CustomerScalarFieldEnum | CustomerScalarFieldEnum[]
  }

  /**
   * Customer create
   */
  export type CustomerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * The data needed to create a Customer.
     */
    data: XOR<CustomerCreateInput, CustomerUncheckedCreateInput>
  }

  /**
   * Customer createMany
   */
  export type CustomerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Customers.
     */
    data: CustomerCreateManyInput | CustomerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Customer createManyAndReturn
   */
  export type CustomerCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Customers.
     */
    data: CustomerCreateManyInput | CustomerCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Customer update
   */
  export type CustomerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * The data needed to update a Customer.
     */
    data: XOR<CustomerUpdateInput, CustomerUncheckedUpdateInput>
    /**
     * Choose, which Customer to update.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer updateMany
   */
  export type CustomerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Customers.
     */
    data: XOR<CustomerUpdateManyMutationInput, CustomerUncheckedUpdateManyInput>
    /**
     * Filter which Customers to update
     */
    where?: CustomerWhereInput
  }

  /**
   * Customer upsert
   */
  export type CustomerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * The filter to search for the Customer to update in case it exists.
     */
    where: CustomerWhereUniqueInput
    /**
     * In case the Customer found by the `where` argument doesn't exist, create a new Customer with this data.
     */
    create: XOR<CustomerCreateInput, CustomerUncheckedCreateInput>
    /**
     * In case the Customer was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CustomerUpdateInput, CustomerUncheckedUpdateInput>
  }

  /**
   * Customer delete
   */
  export type CustomerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter which Customer to delete.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer deleteMany
   */
  export type CustomerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Customers to delete
     */
    where?: CustomerWhereInput
  }

  /**
   * Customer.paymentOrders
   */
  export type Customer$paymentOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentOrder
     */
    select?: PaymentOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentOrderInclude<ExtArgs> | null
    where?: PaymentOrderWhereInput
    orderBy?: PaymentOrderOrderByWithRelationInput | PaymentOrderOrderByWithRelationInput[]
    cursor?: PaymentOrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentOrderScalarFieldEnum | PaymentOrderScalarFieldEnum[]
  }

  /**
   * Customer.paymentMethods
   */
  export type Customer$paymentMethodsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerPaymentMethod
     */
    select?: CustomerPaymentMethodSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerPaymentMethodInclude<ExtArgs> | null
    where?: CustomerPaymentMethodWhereInput
    orderBy?: CustomerPaymentMethodOrderByWithRelationInput | CustomerPaymentMethodOrderByWithRelationInput[]
    cursor?: CustomerPaymentMethodWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CustomerPaymentMethodScalarFieldEnum | CustomerPaymentMethodScalarFieldEnum[]
  }

  /**
   * Customer.subscriptions
   */
  export type Customer$subscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    where?: SubscriptionWhereInput
    orderBy?: SubscriptionOrderByWithRelationInput | SubscriptionOrderByWithRelationInput[]
    cursor?: SubscriptionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubscriptionScalarFieldEnum | SubscriptionScalarFieldEnum[]
  }

  /**
   * Customer without action
   */
  export type CustomerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
  }


  /**
   * Model CustomerPaymentMethod
   */

  export type AggregateCustomerPaymentMethod = {
    _count: CustomerPaymentMethodCountAggregateOutputType | null
    _avg: CustomerPaymentMethodAvgAggregateOutputType | null
    _sum: CustomerPaymentMethodSumAggregateOutputType | null
    _min: CustomerPaymentMethodMinAggregateOutputType | null
    _max: CustomerPaymentMethodMaxAggregateOutputType | null
  }

  export type CustomerPaymentMethodAvgAggregateOutputType = {
    expiryMonth: number | null
    expiryYear: number | null
    chainId: number | null
  }

  export type CustomerPaymentMethodSumAggregateOutputType = {
    expiryMonth: number | null
    expiryYear: number | null
    chainId: number | null
  }

  export type CustomerPaymentMethodMinAggregateOutputType = {
    id: string | null
    customerId: string | null
    type: $Enums.PaymentMethodType | null
    provider: string | null
    externalId: string | null
    last4: string | null
    brand: string | null
    expiryMonth: number | null
    expiryYear: number | null
    bankName: string | null
    accountLast4: string | null
    walletAddress: string | null
    chainId: number | null
    isDefault: boolean | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CustomerPaymentMethodMaxAggregateOutputType = {
    id: string | null
    customerId: string | null
    type: $Enums.PaymentMethodType | null
    provider: string | null
    externalId: string | null
    last4: string | null
    brand: string | null
    expiryMonth: number | null
    expiryYear: number | null
    bankName: string | null
    accountLast4: string | null
    walletAddress: string | null
    chainId: number | null
    isDefault: boolean | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CustomerPaymentMethodCountAggregateOutputType = {
    id: number
    customerId: number
    type: number
    provider: number
    externalId: number
    last4: number
    brand: number
    expiryMonth: number
    expiryYear: number
    bankName: number
    accountLast4: number
    walletAddress: number
    chainId: number
    isDefault: number
    isActive: number
    metadata: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CustomerPaymentMethodAvgAggregateInputType = {
    expiryMonth?: true
    expiryYear?: true
    chainId?: true
  }

  export type CustomerPaymentMethodSumAggregateInputType = {
    expiryMonth?: true
    expiryYear?: true
    chainId?: true
  }

  export type CustomerPaymentMethodMinAggregateInputType = {
    id?: true
    customerId?: true
    type?: true
    provider?: true
    externalId?: true
    last4?: true
    brand?: true
    expiryMonth?: true
    expiryYear?: true
    bankName?: true
    accountLast4?: true
    walletAddress?: true
    chainId?: true
    isDefault?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CustomerPaymentMethodMaxAggregateInputType = {
    id?: true
    customerId?: true
    type?: true
    provider?: true
    externalId?: true
    last4?: true
    brand?: true
    expiryMonth?: true
    expiryYear?: true
    bankName?: true
    accountLast4?: true
    walletAddress?: true
    chainId?: true
    isDefault?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CustomerPaymentMethodCountAggregateInputType = {
    id?: true
    customerId?: true
    type?: true
    provider?: true
    externalId?: true
    last4?: true
    brand?: true
    expiryMonth?: true
    expiryYear?: true
    bankName?: true
    accountLast4?: true
    walletAddress?: true
    chainId?: true
    isDefault?: true
    isActive?: true
    metadata?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CustomerPaymentMethodAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CustomerPaymentMethod to aggregate.
     */
    where?: CustomerPaymentMethodWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomerPaymentMethods to fetch.
     */
    orderBy?: CustomerPaymentMethodOrderByWithRelationInput | CustomerPaymentMethodOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CustomerPaymentMethodWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomerPaymentMethods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomerPaymentMethods.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CustomerPaymentMethods
    **/
    _count?: true | CustomerPaymentMethodCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CustomerPaymentMethodAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CustomerPaymentMethodSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CustomerPaymentMethodMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CustomerPaymentMethodMaxAggregateInputType
  }

  export type GetCustomerPaymentMethodAggregateType<T extends CustomerPaymentMethodAggregateArgs> = {
        [P in keyof T & keyof AggregateCustomerPaymentMethod]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCustomerPaymentMethod[P]>
      : GetScalarType<T[P], AggregateCustomerPaymentMethod[P]>
  }




  export type CustomerPaymentMethodGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomerPaymentMethodWhereInput
    orderBy?: CustomerPaymentMethodOrderByWithAggregationInput | CustomerPaymentMethodOrderByWithAggregationInput[]
    by: CustomerPaymentMethodScalarFieldEnum[] | CustomerPaymentMethodScalarFieldEnum
    having?: CustomerPaymentMethodScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CustomerPaymentMethodCountAggregateInputType | true
    _avg?: CustomerPaymentMethodAvgAggregateInputType
    _sum?: CustomerPaymentMethodSumAggregateInputType
    _min?: CustomerPaymentMethodMinAggregateInputType
    _max?: CustomerPaymentMethodMaxAggregateInputType
  }

  export type CustomerPaymentMethodGroupByOutputType = {
    id: string
    customerId: string
    type: $Enums.PaymentMethodType
    provider: string
    externalId: string | null
    last4: string | null
    brand: string | null
    expiryMonth: number | null
    expiryYear: number | null
    bankName: string | null
    accountLast4: string | null
    walletAddress: string | null
    chainId: number | null
    isDefault: boolean
    isActive: boolean
    metadata: JsonValue | null
    createdAt: Date
    updatedAt: Date
    _count: CustomerPaymentMethodCountAggregateOutputType | null
    _avg: CustomerPaymentMethodAvgAggregateOutputType | null
    _sum: CustomerPaymentMethodSumAggregateOutputType | null
    _min: CustomerPaymentMethodMinAggregateOutputType | null
    _max: CustomerPaymentMethodMaxAggregateOutputType | null
  }

  type GetCustomerPaymentMethodGroupByPayload<T extends CustomerPaymentMethodGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CustomerPaymentMethodGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CustomerPaymentMethodGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CustomerPaymentMethodGroupByOutputType[P]>
            : GetScalarType<T[P], CustomerPaymentMethodGroupByOutputType[P]>
        }
      >
    >


  export type CustomerPaymentMethodSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    type?: boolean
    provider?: boolean
    externalId?: boolean
    last4?: boolean
    brand?: boolean
    expiryMonth?: boolean
    expiryYear?: boolean
    bankName?: boolean
    accountLast4?: boolean
    walletAddress?: boolean
    chainId?: boolean
    isDefault?: boolean
    isActive?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customerPaymentMethod"]>

  export type CustomerPaymentMethodSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    type?: boolean
    provider?: boolean
    externalId?: boolean
    last4?: boolean
    brand?: boolean
    expiryMonth?: boolean
    expiryYear?: boolean
    bankName?: boolean
    accountLast4?: boolean
    walletAddress?: boolean
    chainId?: boolean
    isDefault?: boolean
    isActive?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customerPaymentMethod"]>

  export type CustomerPaymentMethodSelectScalar = {
    id?: boolean
    customerId?: boolean
    type?: boolean
    provider?: boolean
    externalId?: boolean
    last4?: boolean
    brand?: boolean
    expiryMonth?: boolean
    expiryYear?: boolean
    bankName?: boolean
    accountLast4?: boolean
    walletAddress?: boolean
    chainId?: boolean
    isDefault?: boolean
    isActive?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CustomerPaymentMethodInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
  }
  export type CustomerPaymentMethodIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
  }

  export type $CustomerPaymentMethodPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CustomerPaymentMethod"
    objects: {
      customer: Prisma.$CustomerPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      customerId: string
      type: $Enums.PaymentMethodType
      provider: string
      externalId: string | null
      last4: string | null
      brand: string | null
      expiryMonth: number | null
      expiryYear: number | null
      bankName: string | null
      accountLast4: string | null
      walletAddress: string | null
      chainId: number | null
      isDefault: boolean
      isActive: boolean
      metadata: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["customerPaymentMethod"]>
    composites: {}
  }

  type CustomerPaymentMethodGetPayload<S extends boolean | null | undefined | CustomerPaymentMethodDefaultArgs> = $Result.GetResult<Prisma.$CustomerPaymentMethodPayload, S>

  type CustomerPaymentMethodCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CustomerPaymentMethodFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CustomerPaymentMethodCountAggregateInputType | true
    }

  export interface CustomerPaymentMethodDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CustomerPaymentMethod'], meta: { name: 'CustomerPaymentMethod' } }
    /**
     * Find zero or one CustomerPaymentMethod that matches the filter.
     * @param {CustomerPaymentMethodFindUniqueArgs} args - Arguments to find a CustomerPaymentMethod
     * @example
     * // Get one CustomerPaymentMethod
     * const customerPaymentMethod = await prisma.customerPaymentMethod.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CustomerPaymentMethodFindUniqueArgs>(args: SelectSubset<T, CustomerPaymentMethodFindUniqueArgs<ExtArgs>>): Prisma__CustomerPaymentMethodClient<$Result.GetResult<Prisma.$CustomerPaymentMethodPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one CustomerPaymentMethod that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CustomerPaymentMethodFindUniqueOrThrowArgs} args - Arguments to find a CustomerPaymentMethod
     * @example
     * // Get one CustomerPaymentMethod
     * const customerPaymentMethod = await prisma.customerPaymentMethod.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CustomerPaymentMethodFindUniqueOrThrowArgs>(args: SelectSubset<T, CustomerPaymentMethodFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CustomerPaymentMethodClient<$Result.GetResult<Prisma.$CustomerPaymentMethodPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first CustomerPaymentMethod that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerPaymentMethodFindFirstArgs} args - Arguments to find a CustomerPaymentMethod
     * @example
     * // Get one CustomerPaymentMethod
     * const customerPaymentMethod = await prisma.customerPaymentMethod.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CustomerPaymentMethodFindFirstArgs>(args?: SelectSubset<T, CustomerPaymentMethodFindFirstArgs<ExtArgs>>): Prisma__CustomerPaymentMethodClient<$Result.GetResult<Prisma.$CustomerPaymentMethodPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first CustomerPaymentMethod that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerPaymentMethodFindFirstOrThrowArgs} args - Arguments to find a CustomerPaymentMethod
     * @example
     * // Get one CustomerPaymentMethod
     * const customerPaymentMethod = await prisma.customerPaymentMethod.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CustomerPaymentMethodFindFirstOrThrowArgs>(args?: SelectSubset<T, CustomerPaymentMethodFindFirstOrThrowArgs<ExtArgs>>): Prisma__CustomerPaymentMethodClient<$Result.GetResult<Prisma.$CustomerPaymentMethodPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more CustomerPaymentMethods that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerPaymentMethodFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CustomerPaymentMethods
     * const customerPaymentMethods = await prisma.customerPaymentMethod.findMany()
     * 
     * // Get first 10 CustomerPaymentMethods
     * const customerPaymentMethods = await prisma.customerPaymentMethod.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const customerPaymentMethodWithIdOnly = await prisma.customerPaymentMethod.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CustomerPaymentMethodFindManyArgs>(args?: SelectSubset<T, CustomerPaymentMethodFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerPaymentMethodPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a CustomerPaymentMethod.
     * @param {CustomerPaymentMethodCreateArgs} args - Arguments to create a CustomerPaymentMethod.
     * @example
     * // Create one CustomerPaymentMethod
     * const CustomerPaymentMethod = await prisma.customerPaymentMethod.create({
     *   data: {
     *     // ... data to create a CustomerPaymentMethod
     *   }
     * })
     * 
     */
    create<T extends CustomerPaymentMethodCreateArgs>(args: SelectSubset<T, CustomerPaymentMethodCreateArgs<ExtArgs>>): Prisma__CustomerPaymentMethodClient<$Result.GetResult<Prisma.$CustomerPaymentMethodPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many CustomerPaymentMethods.
     * @param {CustomerPaymentMethodCreateManyArgs} args - Arguments to create many CustomerPaymentMethods.
     * @example
     * // Create many CustomerPaymentMethods
     * const customerPaymentMethod = await prisma.customerPaymentMethod.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CustomerPaymentMethodCreateManyArgs>(args?: SelectSubset<T, CustomerPaymentMethodCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CustomerPaymentMethods and returns the data saved in the database.
     * @param {CustomerPaymentMethodCreateManyAndReturnArgs} args - Arguments to create many CustomerPaymentMethods.
     * @example
     * // Create many CustomerPaymentMethods
     * const customerPaymentMethod = await prisma.customerPaymentMethod.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CustomerPaymentMethods and only return the `id`
     * const customerPaymentMethodWithIdOnly = await prisma.customerPaymentMethod.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CustomerPaymentMethodCreateManyAndReturnArgs>(args?: SelectSubset<T, CustomerPaymentMethodCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerPaymentMethodPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a CustomerPaymentMethod.
     * @param {CustomerPaymentMethodDeleteArgs} args - Arguments to delete one CustomerPaymentMethod.
     * @example
     * // Delete one CustomerPaymentMethod
     * const CustomerPaymentMethod = await prisma.customerPaymentMethod.delete({
     *   where: {
     *     // ... filter to delete one CustomerPaymentMethod
     *   }
     * })
     * 
     */
    delete<T extends CustomerPaymentMethodDeleteArgs>(args: SelectSubset<T, CustomerPaymentMethodDeleteArgs<ExtArgs>>): Prisma__CustomerPaymentMethodClient<$Result.GetResult<Prisma.$CustomerPaymentMethodPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one CustomerPaymentMethod.
     * @param {CustomerPaymentMethodUpdateArgs} args - Arguments to update one CustomerPaymentMethod.
     * @example
     * // Update one CustomerPaymentMethod
     * const customerPaymentMethod = await prisma.customerPaymentMethod.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CustomerPaymentMethodUpdateArgs>(args: SelectSubset<T, CustomerPaymentMethodUpdateArgs<ExtArgs>>): Prisma__CustomerPaymentMethodClient<$Result.GetResult<Prisma.$CustomerPaymentMethodPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more CustomerPaymentMethods.
     * @param {CustomerPaymentMethodDeleteManyArgs} args - Arguments to filter CustomerPaymentMethods to delete.
     * @example
     * // Delete a few CustomerPaymentMethods
     * const { count } = await prisma.customerPaymentMethod.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CustomerPaymentMethodDeleteManyArgs>(args?: SelectSubset<T, CustomerPaymentMethodDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CustomerPaymentMethods.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerPaymentMethodUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CustomerPaymentMethods
     * const customerPaymentMethod = await prisma.customerPaymentMethod.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CustomerPaymentMethodUpdateManyArgs>(args: SelectSubset<T, CustomerPaymentMethodUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CustomerPaymentMethod.
     * @param {CustomerPaymentMethodUpsertArgs} args - Arguments to update or create a CustomerPaymentMethod.
     * @example
     * // Update or create a CustomerPaymentMethod
     * const customerPaymentMethod = await prisma.customerPaymentMethod.upsert({
     *   create: {
     *     // ... data to create a CustomerPaymentMethod
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CustomerPaymentMethod we want to update
     *   }
     * })
     */
    upsert<T extends CustomerPaymentMethodUpsertArgs>(args: SelectSubset<T, CustomerPaymentMethodUpsertArgs<ExtArgs>>): Prisma__CustomerPaymentMethodClient<$Result.GetResult<Prisma.$CustomerPaymentMethodPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of CustomerPaymentMethods.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerPaymentMethodCountArgs} args - Arguments to filter CustomerPaymentMethods to count.
     * @example
     * // Count the number of CustomerPaymentMethods
     * const count = await prisma.customerPaymentMethod.count({
     *   where: {
     *     // ... the filter for the CustomerPaymentMethods we want to count
     *   }
     * })
    **/
    count<T extends CustomerPaymentMethodCountArgs>(
      args?: Subset<T, CustomerPaymentMethodCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CustomerPaymentMethodCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CustomerPaymentMethod.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerPaymentMethodAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CustomerPaymentMethodAggregateArgs>(args: Subset<T, CustomerPaymentMethodAggregateArgs>): Prisma.PrismaPromise<GetCustomerPaymentMethodAggregateType<T>>

    /**
     * Group by CustomerPaymentMethod.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerPaymentMethodGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CustomerPaymentMethodGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CustomerPaymentMethodGroupByArgs['orderBy'] }
        : { orderBy?: CustomerPaymentMethodGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CustomerPaymentMethodGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCustomerPaymentMethodGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CustomerPaymentMethod model
   */
  readonly fields: CustomerPaymentMethodFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CustomerPaymentMethod.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CustomerPaymentMethodClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    customer<T extends CustomerDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CustomerDefaultArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CustomerPaymentMethod model
   */ 
  interface CustomerPaymentMethodFieldRefs {
    readonly id: FieldRef<"CustomerPaymentMethod", 'String'>
    readonly customerId: FieldRef<"CustomerPaymentMethod", 'String'>
    readonly type: FieldRef<"CustomerPaymentMethod", 'PaymentMethodType'>
    readonly provider: FieldRef<"CustomerPaymentMethod", 'String'>
    readonly externalId: FieldRef<"CustomerPaymentMethod", 'String'>
    readonly last4: FieldRef<"CustomerPaymentMethod", 'String'>
    readonly brand: FieldRef<"CustomerPaymentMethod", 'String'>
    readonly expiryMonth: FieldRef<"CustomerPaymentMethod", 'Int'>
    readonly expiryYear: FieldRef<"CustomerPaymentMethod", 'Int'>
    readonly bankName: FieldRef<"CustomerPaymentMethod", 'String'>
    readonly accountLast4: FieldRef<"CustomerPaymentMethod", 'String'>
    readonly walletAddress: FieldRef<"CustomerPaymentMethod", 'String'>
    readonly chainId: FieldRef<"CustomerPaymentMethod", 'Int'>
    readonly isDefault: FieldRef<"CustomerPaymentMethod", 'Boolean'>
    readonly isActive: FieldRef<"CustomerPaymentMethod", 'Boolean'>
    readonly metadata: FieldRef<"CustomerPaymentMethod", 'Json'>
    readonly createdAt: FieldRef<"CustomerPaymentMethod", 'DateTime'>
    readonly updatedAt: FieldRef<"CustomerPaymentMethod", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CustomerPaymentMethod findUnique
   */
  export type CustomerPaymentMethodFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerPaymentMethod
     */
    select?: CustomerPaymentMethodSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerPaymentMethodInclude<ExtArgs> | null
    /**
     * Filter, which CustomerPaymentMethod to fetch.
     */
    where: CustomerPaymentMethodWhereUniqueInput
  }

  /**
   * CustomerPaymentMethod findUniqueOrThrow
   */
  export type CustomerPaymentMethodFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerPaymentMethod
     */
    select?: CustomerPaymentMethodSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerPaymentMethodInclude<ExtArgs> | null
    /**
     * Filter, which CustomerPaymentMethod to fetch.
     */
    where: CustomerPaymentMethodWhereUniqueInput
  }

  /**
   * CustomerPaymentMethod findFirst
   */
  export type CustomerPaymentMethodFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerPaymentMethod
     */
    select?: CustomerPaymentMethodSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerPaymentMethodInclude<ExtArgs> | null
    /**
     * Filter, which CustomerPaymentMethod to fetch.
     */
    where?: CustomerPaymentMethodWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomerPaymentMethods to fetch.
     */
    orderBy?: CustomerPaymentMethodOrderByWithRelationInput | CustomerPaymentMethodOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CustomerPaymentMethods.
     */
    cursor?: CustomerPaymentMethodWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomerPaymentMethods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomerPaymentMethods.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CustomerPaymentMethods.
     */
    distinct?: CustomerPaymentMethodScalarFieldEnum | CustomerPaymentMethodScalarFieldEnum[]
  }

  /**
   * CustomerPaymentMethod findFirstOrThrow
   */
  export type CustomerPaymentMethodFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerPaymentMethod
     */
    select?: CustomerPaymentMethodSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerPaymentMethodInclude<ExtArgs> | null
    /**
     * Filter, which CustomerPaymentMethod to fetch.
     */
    where?: CustomerPaymentMethodWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomerPaymentMethods to fetch.
     */
    orderBy?: CustomerPaymentMethodOrderByWithRelationInput | CustomerPaymentMethodOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CustomerPaymentMethods.
     */
    cursor?: CustomerPaymentMethodWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomerPaymentMethods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomerPaymentMethods.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CustomerPaymentMethods.
     */
    distinct?: CustomerPaymentMethodScalarFieldEnum | CustomerPaymentMethodScalarFieldEnum[]
  }

  /**
   * CustomerPaymentMethod findMany
   */
  export type CustomerPaymentMethodFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerPaymentMethod
     */
    select?: CustomerPaymentMethodSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerPaymentMethodInclude<ExtArgs> | null
    /**
     * Filter, which CustomerPaymentMethods to fetch.
     */
    where?: CustomerPaymentMethodWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomerPaymentMethods to fetch.
     */
    orderBy?: CustomerPaymentMethodOrderByWithRelationInput | CustomerPaymentMethodOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CustomerPaymentMethods.
     */
    cursor?: CustomerPaymentMethodWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomerPaymentMethods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomerPaymentMethods.
     */
    skip?: number
    distinct?: CustomerPaymentMethodScalarFieldEnum | CustomerPaymentMethodScalarFieldEnum[]
  }

  /**
   * CustomerPaymentMethod create
   */
  export type CustomerPaymentMethodCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerPaymentMethod
     */
    select?: CustomerPaymentMethodSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerPaymentMethodInclude<ExtArgs> | null
    /**
     * The data needed to create a CustomerPaymentMethod.
     */
    data: XOR<CustomerPaymentMethodCreateInput, CustomerPaymentMethodUncheckedCreateInput>
  }

  /**
   * CustomerPaymentMethod createMany
   */
  export type CustomerPaymentMethodCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CustomerPaymentMethods.
     */
    data: CustomerPaymentMethodCreateManyInput | CustomerPaymentMethodCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CustomerPaymentMethod createManyAndReturn
   */
  export type CustomerPaymentMethodCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerPaymentMethod
     */
    select?: CustomerPaymentMethodSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many CustomerPaymentMethods.
     */
    data: CustomerPaymentMethodCreateManyInput | CustomerPaymentMethodCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerPaymentMethodIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CustomerPaymentMethod update
   */
  export type CustomerPaymentMethodUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerPaymentMethod
     */
    select?: CustomerPaymentMethodSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerPaymentMethodInclude<ExtArgs> | null
    /**
     * The data needed to update a CustomerPaymentMethod.
     */
    data: XOR<CustomerPaymentMethodUpdateInput, CustomerPaymentMethodUncheckedUpdateInput>
    /**
     * Choose, which CustomerPaymentMethod to update.
     */
    where: CustomerPaymentMethodWhereUniqueInput
  }

  /**
   * CustomerPaymentMethod updateMany
   */
  export type CustomerPaymentMethodUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CustomerPaymentMethods.
     */
    data: XOR<CustomerPaymentMethodUpdateManyMutationInput, CustomerPaymentMethodUncheckedUpdateManyInput>
    /**
     * Filter which CustomerPaymentMethods to update
     */
    where?: CustomerPaymentMethodWhereInput
  }

  /**
   * CustomerPaymentMethod upsert
   */
  export type CustomerPaymentMethodUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerPaymentMethod
     */
    select?: CustomerPaymentMethodSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerPaymentMethodInclude<ExtArgs> | null
    /**
     * The filter to search for the CustomerPaymentMethod to update in case it exists.
     */
    where: CustomerPaymentMethodWhereUniqueInput
    /**
     * In case the CustomerPaymentMethod found by the `where` argument doesn't exist, create a new CustomerPaymentMethod with this data.
     */
    create: XOR<CustomerPaymentMethodCreateInput, CustomerPaymentMethodUncheckedCreateInput>
    /**
     * In case the CustomerPaymentMethod was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CustomerPaymentMethodUpdateInput, CustomerPaymentMethodUncheckedUpdateInput>
  }

  /**
   * CustomerPaymentMethod delete
   */
  export type CustomerPaymentMethodDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerPaymentMethod
     */
    select?: CustomerPaymentMethodSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerPaymentMethodInclude<ExtArgs> | null
    /**
     * Filter which CustomerPaymentMethod to delete.
     */
    where: CustomerPaymentMethodWhereUniqueInput
  }

  /**
   * CustomerPaymentMethod deleteMany
   */
  export type CustomerPaymentMethodDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CustomerPaymentMethods to delete
     */
    where?: CustomerPaymentMethodWhereInput
  }

  /**
   * CustomerPaymentMethod without action
   */
  export type CustomerPaymentMethodDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerPaymentMethod
     */
    select?: CustomerPaymentMethodSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerPaymentMethodInclude<ExtArgs> | null
  }


  /**
   * Model Subscription
   */

  export type AggregateSubscription = {
    _count: SubscriptionCountAggregateOutputType | null
    _min: SubscriptionMinAggregateOutputType | null
    _max: SubscriptionMaxAggregateOutputType | null
  }

  export type SubscriptionMinAggregateOutputType = {
    id: string | null
    customerId: string | null
    organizationId: string | null
    status: $Enums.SubscriptionStatus | null
    currentPeriodStart: Date | null
    currentPeriodEnd: Date | null
    cancelAt: Date | null
    canceledAt: Date | null
    endedAt: Date | null
    trialStart: Date | null
    trialEnd: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SubscriptionMaxAggregateOutputType = {
    id: string | null
    customerId: string | null
    organizationId: string | null
    status: $Enums.SubscriptionStatus | null
    currentPeriodStart: Date | null
    currentPeriodEnd: Date | null
    cancelAt: Date | null
    canceledAt: Date | null
    endedAt: Date | null
    trialStart: Date | null
    trialEnd: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SubscriptionCountAggregateOutputType = {
    id: number
    customerId: number
    organizationId: number
    status: number
    currentPeriodStart: number
    currentPeriodEnd: number
    cancelAt: number
    canceledAt: number
    endedAt: number
    trialStart: number
    trialEnd: number
    metadata: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SubscriptionMinAggregateInputType = {
    id?: true
    customerId?: true
    organizationId?: true
    status?: true
    currentPeriodStart?: true
    currentPeriodEnd?: true
    cancelAt?: true
    canceledAt?: true
    endedAt?: true
    trialStart?: true
    trialEnd?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SubscriptionMaxAggregateInputType = {
    id?: true
    customerId?: true
    organizationId?: true
    status?: true
    currentPeriodStart?: true
    currentPeriodEnd?: true
    cancelAt?: true
    canceledAt?: true
    endedAt?: true
    trialStart?: true
    trialEnd?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SubscriptionCountAggregateInputType = {
    id?: true
    customerId?: true
    organizationId?: true
    status?: true
    currentPeriodStart?: true
    currentPeriodEnd?: true
    cancelAt?: true
    canceledAt?: true
    endedAt?: true
    trialStart?: true
    trialEnd?: true
    metadata?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SubscriptionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Subscription to aggregate.
     */
    where?: SubscriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subscriptions to fetch.
     */
    orderBy?: SubscriptionOrderByWithRelationInput | SubscriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SubscriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Subscriptions
    **/
    _count?: true | SubscriptionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SubscriptionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SubscriptionMaxAggregateInputType
  }

  export type GetSubscriptionAggregateType<T extends SubscriptionAggregateArgs> = {
        [P in keyof T & keyof AggregateSubscription]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubscription[P]>
      : GetScalarType<T[P], AggregateSubscription[P]>
  }




  export type SubscriptionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubscriptionWhereInput
    orderBy?: SubscriptionOrderByWithAggregationInput | SubscriptionOrderByWithAggregationInput[]
    by: SubscriptionScalarFieldEnum[] | SubscriptionScalarFieldEnum
    having?: SubscriptionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SubscriptionCountAggregateInputType | true
    _min?: SubscriptionMinAggregateInputType
    _max?: SubscriptionMaxAggregateInputType
  }

  export type SubscriptionGroupByOutputType = {
    id: string
    customerId: string
    organizationId: string
    status: $Enums.SubscriptionStatus
    currentPeriodStart: Date
    currentPeriodEnd: Date
    cancelAt: Date | null
    canceledAt: Date | null
    endedAt: Date | null
    trialStart: Date | null
    trialEnd: Date | null
    metadata: JsonValue | null
    createdAt: Date
    updatedAt: Date
    _count: SubscriptionCountAggregateOutputType | null
    _min: SubscriptionMinAggregateOutputType | null
    _max: SubscriptionMaxAggregateOutputType | null
  }

  type GetSubscriptionGroupByPayload<T extends SubscriptionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SubscriptionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SubscriptionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SubscriptionGroupByOutputType[P]>
            : GetScalarType<T[P], SubscriptionGroupByOutputType[P]>
        }
      >
    >


  export type SubscriptionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    organizationId?: boolean
    status?: boolean
    currentPeriodStart?: boolean
    currentPeriodEnd?: boolean
    cancelAt?: boolean
    canceledAt?: boolean
    endedAt?: boolean
    trialStart?: boolean
    trialEnd?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
    items?: boolean | Subscription$itemsArgs<ExtArgs>
    _count?: boolean | SubscriptionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscription"]>

  export type SubscriptionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    organizationId?: boolean
    status?: boolean
    currentPeriodStart?: boolean
    currentPeriodEnd?: boolean
    cancelAt?: boolean
    canceledAt?: boolean
    endedAt?: boolean
    trialStart?: boolean
    trialEnd?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscription"]>

  export type SubscriptionSelectScalar = {
    id?: boolean
    customerId?: boolean
    organizationId?: boolean
    status?: boolean
    currentPeriodStart?: boolean
    currentPeriodEnd?: boolean
    cancelAt?: boolean
    canceledAt?: boolean
    endedAt?: boolean
    trialStart?: boolean
    trialEnd?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SubscriptionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
    items?: boolean | Subscription$itemsArgs<ExtArgs>
    _count?: boolean | SubscriptionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SubscriptionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
  }

  export type $SubscriptionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Subscription"
    objects: {
      customer: Prisma.$CustomerPayload<ExtArgs>
      items: Prisma.$SubscriptionItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      customerId: string
      organizationId: string
      status: $Enums.SubscriptionStatus
      currentPeriodStart: Date
      currentPeriodEnd: Date
      cancelAt: Date | null
      canceledAt: Date | null
      endedAt: Date | null
      trialStart: Date | null
      trialEnd: Date | null
      metadata: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["subscription"]>
    composites: {}
  }

  type SubscriptionGetPayload<S extends boolean | null | undefined | SubscriptionDefaultArgs> = $Result.GetResult<Prisma.$SubscriptionPayload, S>

  type SubscriptionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SubscriptionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SubscriptionCountAggregateInputType | true
    }

  export interface SubscriptionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Subscription'], meta: { name: 'Subscription' } }
    /**
     * Find zero or one Subscription that matches the filter.
     * @param {SubscriptionFindUniqueArgs} args - Arguments to find a Subscription
     * @example
     * // Get one Subscription
     * const subscription = await prisma.subscription.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SubscriptionFindUniqueArgs>(args: SelectSubset<T, SubscriptionFindUniqueArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Subscription that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SubscriptionFindUniqueOrThrowArgs} args - Arguments to find a Subscription
     * @example
     * // Get one Subscription
     * const subscription = await prisma.subscription.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SubscriptionFindUniqueOrThrowArgs>(args: SelectSubset<T, SubscriptionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Subscription that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionFindFirstArgs} args - Arguments to find a Subscription
     * @example
     * // Get one Subscription
     * const subscription = await prisma.subscription.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SubscriptionFindFirstArgs>(args?: SelectSubset<T, SubscriptionFindFirstArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Subscription that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionFindFirstOrThrowArgs} args - Arguments to find a Subscription
     * @example
     * // Get one Subscription
     * const subscription = await prisma.subscription.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SubscriptionFindFirstOrThrowArgs>(args?: SelectSubset<T, SubscriptionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Subscriptions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Subscriptions
     * const subscriptions = await prisma.subscription.findMany()
     * 
     * // Get first 10 Subscriptions
     * const subscriptions = await prisma.subscription.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const subscriptionWithIdOnly = await prisma.subscription.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SubscriptionFindManyArgs>(args?: SelectSubset<T, SubscriptionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Subscription.
     * @param {SubscriptionCreateArgs} args - Arguments to create a Subscription.
     * @example
     * // Create one Subscription
     * const Subscription = await prisma.subscription.create({
     *   data: {
     *     // ... data to create a Subscription
     *   }
     * })
     * 
     */
    create<T extends SubscriptionCreateArgs>(args: SelectSubset<T, SubscriptionCreateArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Subscriptions.
     * @param {SubscriptionCreateManyArgs} args - Arguments to create many Subscriptions.
     * @example
     * // Create many Subscriptions
     * const subscription = await prisma.subscription.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SubscriptionCreateManyArgs>(args?: SelectSubset<T, SubscriptionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Subscriptions and returns the data saved in the database.
     * @param {SubscriptionCreateManyAndReturnArgs} args - Arguments to create many Subscriptions.
     * @example
     * // Create many Subscriptions
     * const subscription = await prisma.subscription.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Subscriptions and only return the `id`
     * const subscriptionWithIdOnly = await prisma.subscription.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SubscriptionCreateManyAndReturnArgs>(args?: SelectSubset<T, SubscriptionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Subscription.
     * @param {SubscriptionDeleteArgs} args - Arguments to delete one Subscription.
     * @example
     * // Delete one Subscription
     * const Subscription = await prisma.subscription.delete({
     *   where: {
     *     // ... filter to delete one Subscription
     *   }
     * })
     * 
     */
    delete<T extends SubscriptionDeleteArgs>(args: SelectSubset<T, SubscriptionDeleteArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Subscription.
     * @param {SubscriptionUpdateArgs} args - Arguments to update one Subscription.
     * @example
     * // Update one Subscription
     * const subscription = await prisma.subscription.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SubscriptionUpdateArgs>(args: SelectSubset<T, SubscriptionUpdateArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Subscriptions.
     * @param {SubscriptionDeleteManyArgs} args - Arguments to filter Subscriptions to delete.
     * @example
     * // Delete a few Subscriptions
     * const { count } = await prisma.subscription.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SubscriptionDeleteManyArgs>(args?: SelectSubset<T, SubscriptionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Subscriptions
     * const subscription = await prisma.subscription.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SubscriptionUpdateManyArgs>(args: SelectSubset<T, SubscriptionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Subscription.
     * @param {SubscriptionUpsertArgs} args - Arguments to update or create a Subscription.
     * @example
     * // Update or create a Subscription
     * const subscription = await prisma.subscription.upsert({
     *   create: {
     *     // ... data to create a Subscription
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Subscription we want to update
     *   }
     * })
     */
    upsert<T extends SubscriptionUpsertArgs>(args: SelectSubset<T, SubscriptionUpsertArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionCountArgs} args - Arguments to filter Subscriptions to count.
     * @example
     * // Count the number of Subscriptions
     * const count = await prisma.subscription.count({
     *   where: {
     *     // ... the filter for the Subscriptions we want to count
     *   }
     * })
    **/
    count<T extends SubscriptionCountArgs>(
      args?: Subset<T, SubscriptionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SubscriptionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Subscription.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SubscriptionAggregateArgs>(args: Subset<T, SubscriptionAggregateArgs>): Prisma.PrismaPromise<GetSubscriptionAggregateType<T>>

    /**
     * Group by Subscription.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SubscriptionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SubscriptionGroupByArgs['orderBy'] }
        : { orderBy?: SubscriptionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SubscriptionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubscriptionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Subscription model
   */
  readonly fields: SubscriptionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Subscription.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SubscriptionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    customer<T extends CustomerDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CustomerDefaultArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    items<T extends Subscription$itemsArgs<ExtArgs> = {}>(args?: Subset<T, Subscription$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionItemPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Subscription model
   */ 
  interface SubscriptionFieldRefs {
    readonly id: FieldRef<"Subscription", 'String'>
    readonly customerId: FieldRef<"Subscription", 'String'>
    readonly organizationId: FieldRef<"Subscription", 'String'>
    readonly status: FieldRef<"Subscription", 'SubscriptionStatus'>
    readonly currentPeriodStart: FieldRef<"Subscription", 'DateTime'>
    readonly currentPeriodEnd: FieldRef<"Subscription", 'DateTime'>
    readonly cancelAt: FieldRef<"Subscription", 'DateTime'>
    readonly canceledAt: FieldRef<"Subscription", 'DateTime'>
    readonly endedAt: FieldRef<"Subscription", 'DateTime'>
    readonly trialStart: FieldRef<"Subscription", 'DateTime'>
    readonly trialEnd: FieldRef<"Subscription", 'DateTime'>
    readonly metadata: FieldRef<"Subscription", 'Json'>
    readonly createdAt: FieldRef<"Subscription", 'DateTime'>
    readonly updatedAt: FieldRef<"Subscription", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Subscription findUnique
   */
  export type SubscriptionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * Filter, which Subscription to fetch.
     */
    where: SubscriptionWhereUniqueInput
  }

  /**
   * Subscription findUniqueOrThrow
   */
  export type SubscriptionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * Filter, which Subscription to fetch.
     */
    where: SubscriptionWhereUniqueInput
  }

  /**
   * Subscription findFirst
   */
  export type SubscriptionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * Filter, which Subscription to fetch.
     */
    where?: SubscriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subscriptions to fetch.
     */
    orderBy?: SubscriptionOrderByWithRelationInput | SubscriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subscriptions.
     */
    cursor?: SubscriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subscriptions.
     */
    distinct?: SubscriptionScalarFieldEnum | SubscriptionScalarFieldEnum[]
  }

  /**
   * Subscription findFirstOrThrow
   */
  export type SubscriptionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * Filter, which Subscription to fetch.
     */
    where?: SubscriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subscriptions to fetch.
     */
    orderBy?: SubscriptionOrderByWithRelationInput | SubscriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subscriptions.
     */
    cursor?: SubscriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subscriptions.
     */
    distinct?: SubscriptionScalarFieldEnum | SubscriptionScalarFieldEnum[]
  }

  /**
   * Subscription findMany
   */
  export type SubscriptionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * Filter, which Subscriptions to fetch.
     */
    where?: SubscriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subscriptions to fetch.
     */
    orderBy?: SubscriptionOrderByWithRelationInput | SubscriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Subscriptions.
     */
    cursor?: SubscriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subscriptions.
     */
    skip?: number
    distinct?: SubscriptionScalarFieldEnum | SubscriptionScalarFieldEnum[]
  }

  /**
   * Subscription create
   */
  export type SubscriptionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * The data needed to create a Subscription.
     */
    data: XOR<SubscriptionCreateInput, SubscriptionUncheckedCreateInput>
  }

  /**
   * Subscription createMany
   */
  export type SubscriptionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Subscriptions.
     */
    data: SubscriptionCreateManyInput | SubscriptionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Subscription createManyAndReturn
   */
  export type SubscriptionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Subscriptions.
     */
    data: SubscriptionCreateManyInput | SubscriptionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Subscription update
   */
  export type SubscriptionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * The data needed to update a Subscription.
     */
    data: XOR<SubscriptionUpdateInput, SubscriptionUncheckedUpdateInput>
    /**
     * Choose, which Subscription to update.
     */
    where: SubscriptionWhereUniqueInput
  }

  /**
   * Subscription updateMany
   */
  export type SubscriptionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Subscriptions.
     */
    data: XOR<SubscriptionUpdateManyMutationInput, SubscriptionUncheckedUpdateManyInput>
    /**
     * Filter which Subscriptions to update
     */
    where?: SubscriptionWhereInput
  }

  /**
   * Subscription upsert
   */
  export type SubscriptionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * The filter to search for the Subscription to update in case it exists.
     */
    where: SubscriptionWhereUniqueInput
    /**
     * In case the Subscription found by the `where` argument doesn't exist, create a new Subscription with this data.
     */
    create: XOR<SubscriptionCreateInput, SubscriptionUncheckedCreateInput>
    /**
     * In case the Subscription was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SubscriptionUpdateInput, SubscriptionUncheckedUpdateInput>
  }

  /**
   * Subscription delete
   */
  export type SubscriptionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * Filter which Subscription to delete.
     */
    where: SubscriptionWhereUniqueInput
  }

  /**
   * Subscription deleteMany
   */
  export type SubscriptionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Subscriptions to delete
     */
    where?: SubscriptionWhereInput
  }

  /**
   * Subscription.items
   */
  export type Subscription$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionItem
     */
    select?: SubscriptionItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionItemInclude<ExtArgs> | null
    where?: SubscriptionItemWhereInput
    orderBy?: SubscriptionItemOrderByWithRelationInput | SubscriptionItemOrderByWithRelationInput[]
    cursor?: SubscriptionItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubscriptionItemScalarFieldEnum | SubscriptionItemScalarFieldEnum[]
  }

  /**
   * Subscription without action
   */
  export type SubscriptionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
  }


  /**
   * Model SubscriptionItem
   */

  export type AggregateSubscriptionItem = {
    _count: SubscriptionItemCountAggregateOutputType | null
    _avg: SubscriptionItemAvgAggregateOutputType | null
    _sum: SubscriptionItemSumAggregateOutputType | null
    _min: SubscriptionItemMinAggregateOutputType | null
    _max: SubscriptionItemMaxAggregateOutputType | null
  }

  export type SubscriptionItemAvgAggregateOutputType = {
    quantity: number | null
  }

  export type SubscriptionItemSumAggregateOutputType = {
    quantity: number | null
  }

  export type SubscriptionItemMinAggregateOutputType = {
    id: string | null
    subscriptionId: string | null
    priceId: string | null
    quantity: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SubscriptionItemMaxAggregateOutputType = {
    id: string | null
    subscriptionId: string | null
    priceId: string | null
    quantity: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SubscriptionItemCountAggregateOutputType = {
    id: number
    subscriptionId: number
    priceId: number
    quantity: number
    metadata: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SubscriptionItemAvgAggregateInputType = {
    quantity?: true
  }

  export type SubscriptionItemSumAggregateInputType = {
    quantity?: true
  }

  export type SubscriptionItemMinAggregateInputType = {
    id?: true
    subscriptionId?: true
    priceId?: true
    quantity?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SubscriptionItemMaxAggregateInputType = {
    id?: true
    subscriptionId?: true
    priceId?: true
    quantity?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SubscriptionItemCountAggregateInputType = {
    id?: true
    subscriptionId?: true
    priceId?: true
    quantity?: true
    metadata?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SubscriptionItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SubscriptionItem to aggregate.
     */
    where?: SubscriptionItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubscriptionItems to fetch.
     */
    orderBy?: SubscriptionItemOrderByWithRelationInput | SubscriptionItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SubscriptionItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubscriptionItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubscriptionItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SubscriptionItems
    **/
    _count?: true | SubscriptionItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SubscriptionItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SubscriptionItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SubscriptionItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SubscriptionItemMaxAggregateInputType
  }

  export type GetSubscriptionItemAggregateType<T extends SubscriptionItemAggregateArgs> = {
        [P in keyof T & keyof AggregateSubscriptionItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubscriptionItem[P]>
      : GetScalarType<T[P], AggregateSubscriptionItem[P]>
  }




  export type SubscriptionItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubscriptionItemWhereInput
    orderBy?: SubscriptionItemOrderByWithAggregationInput | SubscriptionItemOrderByWithAggregationInput[]
    by: SubscriptionItemScalarFieldEnum[] | SubscriptionItemScalarFieldEnum
    having?: SubscriptionItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SubscriptionItemCountAggregateInputType | true
    _avg?: SubscriptionItemAvgAggregateInputType
    _sum?: SubscriptionItemSumAggregateInputType
    _min?: SubscriptionItemMinAggregateInputType
    _max?: SubscriptionItemMaxAggregateInputType
  }

  export type SubscriptionItemGroupByOutputType = {
    id: string
    subscriptionId: string
    priceId: string
    quantity: number
    metadata: JsonValue | null
    createdAt: Date
    updatedAt: Date
    _count: SubscriptionItemCountAggregateOutputType | null
    _avg: SubscriptionItemAvgAggregateOutputType | null
    _sum: SubscriptionItemSumAggregateOutputType | null
    _min: SubscriptionItemMinAggregateOutputType | null
    _max: SubscriptionItemMaxAggregateOutputType | null
  }

  type GetSubscriptionItemGroupByPayload<T extends SubscriptionItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SubscriptionItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SubscriptionItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SubscriptionItemGroupByOutputType[P]>
            : GetScalarType<T[P], SubscriptionItemGroupByOutputType[P]>
        }
      >
    >


  export type SubscriptionItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    subscriptionId?: boolean
    priceId?: boolean
    quantity?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    subscription?: boolean | SubscriptionDefaultArgs<ExtArgs>
    price?: boolean | PriceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscriptionItem"]>

  export type SubscriptionItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    subscriptionId?: boolean
    priceId?: boolean
    quantity?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    subscription?: boolean | SubscriptionDefaultArgs<ExtArgs>
    price?: boolean | PriceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscriptionItem"]>

  export type SubscriptionItemSelectScalar = {
    id?: boolean
    subscriptionId?: boolean
    priceId?: boolean
    quantity?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SubscriptionItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    subscription?: boolean | SubscriptionDefaultArgs<ExtArgs>
    price?: boolean | PriceDefaultArgs<ExtArgs>
  }
  export type SubscriptionItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    subscription?: boolean | SubscriptionDefaultArgs<ExtArgs>
    price?: boolean | PriceDefaultArgs<ExtArgs>
  }

  export type $SubscriptionItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SubscriptionItem"
    objects: {
      subscription: Prisma.$SubscriptionPayload<ExtArgs>
      price: Prisma.$PricePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      subscriptionId: string
      priceId: string
      quantity: number
      metadata: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["subscriptionItem"]>
    composites: {}
  }

  type SubscriptionItemGetPayload<S extends boolean | null | undefined | SubscriptionItemDefaultArgs> = $Result.GetResult<Prisma.$SubscriptionItemPayload, S>

  type SubscriptionItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SubscriptionItemFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SubscriptionItemCountAggregateInputType | true
    }

  export interface SubscriptionItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SubscriptionItem'], meta: { name: 'SubscriptionItem' } }
    /**
     * Find zero or one SubscriptionItem that matches the filter.
     * @param {SubscriptionItemFindUniqueArgs} args - Arguments to find a SubscriptionItem
     * @example
     * // Get one SubscriptionItem
     * const subscriptionItem = await prisma.subscriptionItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SubscriptionItemFindUniqueArgs>(args: SelectSubset<T, SubscriptionItemFindUniqueArgs<ExtArgs>>): Prisma__SubscriptionItemClient<$Result.GetResult<Prisma.$SubscriptionItemPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one SubscriptionItem that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SubscriptionItemFindUniqueOrThrowArgs} args - Arguments to find a SubscriptionItem
     * @example
     * // Get one SubscriptionItem
     * const subscriptionItem = await prisma.subscriptionItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SubscriptionItemFindUniqueOrThrowArgs>(args: SelectSubset<T, SubscriptionItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SubscriptionItemClient<$Result.GetResult<Prisma.$SubscriptionItemPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first SubscriptionItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionItemFindFirstArgs} args - Arguments to find a SubscriptionItem
     * @example
     * // Get one SubscriptionItem
     * const subscriptionItem = await prisma.subscriptionItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SubscriptionItemFindFirstArgs>(args?: SelectSubset<T, SubscriptionItemFindFirstArgs<ExtArgs>>): Prisma__SubscriptionItemClient<$Result.GetResult<Prisma.$SubscriptionItemPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first SubscriptionItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionItemFindFirstOrThrowArgs} args - Arguments to find a SubscriptionItem
     * @example
     * // Get one SubscriptionItem
     * const subscriptionItem = await prisma.subscriptionItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SubscriptionItemFindFirstOrThrowArgs>(args?: SelectSubset<T, SubscriptionItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__SubscriptionItemClient<$Result.GetResult<Prisma.$SubscriptionItemPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more SubscriptionItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SubscriptionItems
     * const subscriptionItems = await prisma.subscriptionItem.findMany()
     * 
     * // Get first 10 SubscriptionItems
     * const subscriptionItems = await prisma.subscriptionItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const subscriptionItemWithIdOnly = await prisma.subscriptionItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SubscriptionItemFindManyArgs>(args?: SelectSubset<T, SubscriptionItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionItemPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a SubscriptionItem.
     * @param {SubscriptionItemCreateArgs} args - Arguments to create a SubscriptionItem.
     * @example
     * // Create one SubscriptionItem
     * const SubscriptionItem = await prisma.subscriptionItem.create({
     *   data: {
     *     // ... data to create a SubscriptionItem
     *   }
     * })
     * 
     */
    create<T extends SubscriptionItemCreateArgs>(args: SelectSubset<T, SubscriptionItemCreateArgs<ExtArgs>>): Prisma__SubscriptionItemClient<$Result.GetResult<Prisma.$SubscriptionItemPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many SubscriptionItems.
     * @param {SubscriptionItemCreateManyArgs} args - Arguments to create many SubscriptionItems.
     * @example
     * // Create many SubscriptionItems
     * const subscriptionItem = await prisma.subscriptionItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SubscriptionItemCreateManyArgs>(args?: SelectSubset<T, SubscriptionItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SubscriptionItems and returns the data saved in the database.
     * @param {SubscriptionItemCreateManyAndReturnArgs} args - Arguments to create many SubscriptionItems.
     * @example
     * // Create many SubscriptionItems
     * const subscriptionItem = await prisma.subscriptionItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SubscriptionItems and only return the `id`
     * const subscriptionItemWithIdOnly = await prisma.subscriptionItem.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SubscriptionItemCreateManyAndReturnArgs>(args?: SelectSubset<T, SubscriptionItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionItemPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a SubscriptionItem.
     * @param {SubscriptionItemDeleteArgs} args - Arguments to delete one SubscriptionItem.
     * @example
     * // Delete one SubscriptionItem
     * const SubscriptionItem = await prisma.subscriptionItem.delete({
     *   where: {
     *     // ... filter to delete one SubscriptionItem
     *   }
     * })
     * 
     */
    delete<T extends SubscriptionItemDeleteArgs>(args: SelectSubset<T, SubscriptionItemDeleteArgs<ExtArgs>>): Prisma__SubscriptionItemClient<$Result.GetResult<Prisma.$SubscriptionItemPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one SubscriptionItem.
     * @param {SubscriptionItemUpdateArgs} args - Arguments to update one SubscriptionItem.
     * @example
     * // Update one SubscriptionItem
     * const subscriptionItem = await prisma.subscriptionItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SubscriptionItemUpdateArgs>(args: SelectSubset<T, SubscriptionItemUpdateArgs<ExtArgs>>): Prisma__SubscriptionItemClient<$Result.GetResult<Prisma.$SubscriptionItemPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more SubscriptionItems.
     * @param {SubscriptionItemDeleteManyArgs} args - Arguments to filter SubscriptionItems to delete.
     * @example
     * // Delete a few SubscriptionItems
     * const { count } = await prisma.subscriptionItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SubscriptionItemDeleteManyArgs>(args?: SelectSubset<T, SubscriptionItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SubscriptionItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SubscriptionItems
     * const subscriptionItem = await prisma.subscriptionItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SubscriptionItemUpdateManyArgs>(args: SelectSubset<T, SubscriptionItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SubscriptionItem.
     * @param {SubscriptionItemUpsertArgs} args - Arguments to update or create a SubscriptionItem.
     * @example
     * // Update or create a SubscriptionItem
     * const subscriptionItem = await prisma.subscriptionItem.upsert({
     *   create: {
     *     // ... data to create a SubscriptionItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SubscriptionItem we want to update
     *   }
     * })
     */
    upsert<T extends SubscriptionItemUpsertArgs>(args: SelectSubset<T, SubscriptionItemUpsertArgs<ExtArgs>>): Prisma__SubscriptionItemClient<$Result.GetResult<Prisma.$SubscriptionItemPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of SubscriptionItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionItemCountArgs} args - Arguments to filter SubscriptionItems to count.
     * @example
     * // Count the number of SubscriptionItems
     * const count = await prisma.subscriptionItem.count({
     *   where: {
     *     // ... the filter for the SubscriptionItems we want to count
     *   }
     * })
    **/
    count<T extends SubscriptionItemCountArgs>(
      args?: Subset<T, SubscriptionItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SubscriptionItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SubscriptionItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SubscriptionItemAggregateArgs>(args: Subset<T, SubscriptionItemAggregateArgs>): Prisma.PrismaPromise<GetSubscriptionItemAggregateType<T>>

    /**
     * Group by SubscriptionItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SubscriptionItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SubscriptionItemGroupByArgs['orderBy'] }
        : { orderBy?: SubscriptionItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SubscriptionItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubscriptionItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SubscriptionItem model
   */
  readonly fields: SubscriptionItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SubscriptionItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SubscriptionItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    subscription<T extends SubscriptionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SubscriptionDefaultArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    price<T extends PriceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PriceDefaultArgs<ExtArgs>>): Prisma__PriceClient<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SubscriptionItem model
   */ 
  interface SubscriptionItemFieldRefs {
    readonly id: FieldRef<"SubscriptionItem", 'String'>
    readonly subscriptionId: FieldRef<"SubscriptionItem", 'String'>
    readonly priceId: FieldRef<"SubscriptionItem", 'String'>
    readonly quantity: FieldRef<"SubscriptionItem", 'Int'>
    readonly metadata: FieldRef<"SubscriptionItem", 'Json'>
    readonly createdAt: FieldRef<"SubscriptionItem", 'DateTime'>
    readonly updatedAt: FieldRef<"SubscriptionItem", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SubscriptionItem findUnique
   */
  export type SubscriptionItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionItem
     */
    select?: SubscriptionItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionItemInclude<ExtArgs> | null
    /**
     * Filter, which SubscriptionItem to fetch.
     */
    where: SubscriptionItemWhereUniqueInput
  }

  /**
   * SubscriptionItem findUniqueOrThrow
   */
  export type SubscriptionItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionItem
     */
    select?: SubscriptionItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionItemInclude<ExtArgs> | null
    /**
     * Filter, which SubscriptionItem to fetch.
     */
    where: SubscriptionItemWhereUniqueInput
  }

  /**
   * SubscriptionItem findFirst
   */
  export type SubscriptionItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionItem
     */
    select?: SubscriptionItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionItemInclude<ExtArgs> | null
    /**
     * Filter, which SubscriptionItem to fetch.
     */
    where?: SubscriptionItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubscriptionItems to fetch.
     */
    orderBy?: SubscriptionItemOrderByWithRelationInput | SubscriptionItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SubscriptionItems.
     */
    cursor?: SubscriptionItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubscriptionItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubscriptionItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SubscriptionItems.
     */
    distinct?: SubscriptionItemScalarFieldEnum | SubscriptionItemScalarFieldEnum[]
  }

  /**
   * SubscriptionItem findFirstOrThrow
   */
  export type SubscriptionItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionItem
     */
    select?: SubscriptionItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionItemInclude<ExtArgs> | null
    /**
     * Filter, which SubscriptionItem to fetch.
     */
    where?: SubscriptionItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubscriptionItems to fetch.
     */
    orderBy?: SubscriptionItemOrderByWithRelationInput | SubscriptionItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SubscriptionItems.
     */
    cursor?: SubscriptionItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubscriptionItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubscriptionItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SubscriptionItems.
     */
    distinct?: SubscriptionItemScalarFieldEnum | SubscriptionItemScalarFieldEnum[]
  }

  /**
   * SubscriptionItem findMany
   */
  export type SubscriptionItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionItem
     */
    select?: SubscriptionItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionItemInclude<ExtArgs> | null
    /**
     * Filter, which SubscriptionItems to fetch.
     */
    where?: SubscriptionItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubscriptionItems to fetch.
     */
    orderBy?: SubscriptionItemOrderByWithRelationInput | SubscriptionItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SubscriptionItems.
     */
    cursor?: SubscriptionItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubscriptionItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubscriptionItems.
     */
    skip?: number
    distinct?: SubscriptionItemScalarFieldEnum | SubscriptionItemScalarFieldEnum[]
  }

  /**
   * SubscriptionItem create
   */
  export type SubscriptionItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionItem
     */
    select?: SubscriptionItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionItemInclude<ExtArgs> | null
    /**
     * The data needed to create a SubscriptionItem.
     */
    data: XOR<SubscriptionItemCreateInput, SubscriptionItemUncheckedCreateInput>
  }

  /**
   * SubscriptionItem createMany
   */
  export type SubscriptionItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SubscriptionItems.
     */
    data: SubscriptionItemCreateManyInput | SubscriptionItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SubscriptionItem createManyAndReturn
   */
  export type SubscriptionItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionItem
     */
    select?: SubscriptionItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many SubscriptionItems.
     */
    data: SubscriptionItemCreateManyInput | SubscriptionItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SubscriptionItem update
   */
  export type SubscriptionItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionItem
     */
    select?: SubscriptionItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionItemInclude<ExtArgs> | null
    /**
     * The data needed to update a SubscriptionItem.
     */
    data: XOR<SubscriptionItemUpdateInput, SubscriptionItemUncheckedUpdateInput>
    /**
     * Choose, which SubscriptionItem to update.
     */
    where: SubscriptionItemWhereUniqueInput
  }

  /**
   * SubscriptionItem updateMany
   */
  export type SubscriptionItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SubscriptionItems.
     */
    data: XOR<SubscriptionItemUpdateManyMutationInput, SubscriptionItemUncheckedUpdateManyInput>
    /**
     * Filter which SubscriptionItems to update
     */
    where?: SubscriptionItemWhereInput
  }

  /**
   * SubscriptionItem upsert
   */
  export type SubscriptionItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionItem
     */
    select?: SubscriptionItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionItemInclude<ExtArgs> | null
    /**
     * The filter to search for the SubscriptionItem to update in case it exists.
     */
    where: SubscriptionItemWhereUniqueInput
    /**
     * In case the SubscriptionItem found by the `where` argument doesn't exist, create a new SubscriptionItem with this data.
     */
    create: XOR<SubscriptionItemCreateInput, SubscriptionItemUncheckedCreateInput>
    /**
     * In case the SubscriptionItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SubscriptionItemUpdateInput, SubscriptionItemUncheckedUpdateInput>
  }

  /**
   * SubscriptionItem delete
   */
  export type SubscriptionItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionItem
     */
    select?: SubscriptionItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionItemInclude<ExtArgs> | null
    /**
     * Filter which SubscriptionItem to delete.
     */
    where: SubscriptionItemWhereUniqueInput
  }

  /**
   * SubscriptionItem deleteMany
   */
  export type SubscriptionItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SubscriptionItems to delete
     */
    where?: SubscriptionItemWhereInput
  }

  /**
   * SubscriptionItem without action
   */
  export type SubscriptionItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionItem
     */
    select?: SubscriptionItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionItemInclude<ExtArgs> | null
  }


  /**
   * Model Wallet
   */

  export type AggregateWallet = {
    _count: WalletCountAggregateOutputType | null
    _avg: WalletAvgAggregateOutputType | null
    _sum: WalletSumAggregateOutputType | null
    _min: WalletMinAggregateOutputType | null
    _max: WalletMaxAggregateOutputType | null
  }

  export type WalletAvgAggregateOutputType = {
    chainId: number | null
  }

  export type WalletSumAggregateOutputType = {
    chainId: number | null
  }

  export type WalletMinAggregateOutputType = {
    id: string | null
    address: string | null
    chainId: number | null
    type: $Enums.WalletType | null
    userId: string | null
    organizationId: string | null
    smartWalletFactory: string | null
    isActive: boolean | null
    allowlist: boolean | null
    blocklist: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type WalletMaxAggregateOutputType = {
    id: string | null
    address: string | null
    chainId: number | null
    type: $Enums.WalletType | null
    userId: string | null
    organizationId: string | null
    smartWalletFactory: string | null
    isActive: boolean | null
    allowlist: boolean | null
    blocklist: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type WalletCountAggregateOutputType = {
    id: number
    address: number
    chainId: number
    type: number
    userId: number
    organizationId: number
    smartWalletFactory: number
    smartWalletConfig: number
    isActive: number
    allowlist: number
    blocklist: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type WalletAvgAggregateInputType = {
    chainId?: true
  }

  export type WalletSumAggregateInputType = {
    chainId?: true
  }

  export type WalletMinAggregateInputType = {
    id?: true
    address?: true
    chainId?: true
    type?: true
    userId?: true
    organizationId?: true
    smartWalletFactory?: true
    isActive?: true
    allowlist?: true
    blocklist?: true
    createdAt?: true
    updatedAt?: true
  }

  export type WalletMaxAggregateInputType = {
    id?: true
    address?: true
    chainId?: true
    type?: true
    userId?: true
    organizationId?: true
    smartWalletFactory?: true
    isActive?: true
    allowlist?: true
    blocklist?: true
    createdAt?: true
    updatedAt?: true
  }

  export type WalletCountAggregateInputType = {
    id?: true
    address?: true
    chainId?: true
    type?: true
    userId?: true
    organizationId?: true
    smartWalletFactory?: true
    smartWalletConfig?: true
    isActive?: true
    allowlist?: true
    blocklist?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type WalletAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Wallet to aggregate.
     */
    where?: WalletWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Wallets to fetch.
     */
    orderBy?: WalletOrderByWithRelationInput | WalletOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: WalletWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Wallets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Wallets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Wallets
    **/
    _count?: true | WalletCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WalletAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WalletSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WalletMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WalletMaxAggregateInputType
  }

  export type GetWalletAggregateType<T extends WalletAggregateArgs> = {
        [P in keyof T & keyof AggregateWallet]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWallet[P]>
      : GetScalarType<T[P], AggregateWallet[P]>
  }




  export type WalletGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WalletWhereInput
    orderBy?: WalletOrderByWithAggregationInput | WalletOrderByWithAggregationInput[]
    by: WalletScalarFieldEnum[] | WalletScalarFieldEnum
    having?: WalletScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WalletCountAggregateInputType | true
    _avg?: WalletAvgAggregateInputType
    _sum?: WalletSumAggregateInputType
    _min?: WalletMinAggregateInputType
    _max?: WalletMaxAggregateInputType
  }

  export type WalletGroupByOutputType = {
    id: string
    address: string
    chainId: number
    type: $Enums.WalletType
    userId: string | null
    organizationId: string | null
    smartWalletFactory: string | null
    smartWalletConfig: JsonValue | null
    isActive: boolean
    allowlist: boolean
    blocklist: boolean
    createdAt: Date
    updatedAt: Date
    _count: WalletCountAggregateOutputType | null
    _avg: WalletAvgAggregateOutputType | null
    _sum: WalletSumAggregateOutputType | null
    _min: WalletMinAggregateOutputType | null
    _max: WalletMaxAggregateOutputType | null
  }

  type GetWalletGroupByPayload<T extends WalletGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<WalletGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof WalletGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], WalletGroupByOutputType[P]>
            : GetScalarType<T[P], WalletGroupByOutputType[P]>
        }
      >
    >


  export type WalletSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    address?: boolean
    chainId?: boolean
    type?: boolean
    userId?: boolean
    organizationId?: boolean
    smartWalletFactory?: boolean
    smartWalletConfig?: boolean
    isActive?: boolean
    allowlist?: boolean
    blocklist?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | Wallet$userArgs<ExtArgs>
    organization?: boolean | Wallet$organizationArgs<ExtArgs>
    primaryForUsers?: boolean | Wallet$primaryForUsersArgs<ExtArgs>
    agent?: boolean | Wallet$agentArgs<ExtArgs>
    transactions?: boolean | Wallet$transactionsArgs<ExtArgs>
    gasSponsorship?: boolean | Wallet$gasSponsorshipArgs<ExtArgs>
    _count?: boolean | WalletCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["wallet"]>

  export type WalletSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    address?: boolean
    chainId?: boolean
    type?: boolean
    userId?: boolean
    organizationId?: boolean
    smartWalletFactory?: boolean
    smartWalletConfig?: boolean
    isActive?: boolean
    allowlist?: boolean
    blocklist?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | Wallet$userArgs<ExtArgs>
    organization?: boolean | Wallet$organizationArgs<ExtArgs>
  }, ExtArgs["result"]["wallet"]>

  export type WalletSelectScalar = {
    id?: boolean
    address?: boolean
    chainId?: boolean
    type?: boolean
    userId?: boolean
    organizationId?: boolean
    smartWalletFactory?: boolean
    smartWalletConfig?: boolean
    isActive?: boolean
    allowlist?: boolean
    blocklist?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type WalletInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | Wallet$userArgs<ExtArgs>
    organization?: boolean | Wallet$organizationArgs<ExtArgs>
    primaryForUsers?: boolean | Wallet$primaryForUsersArgs<ExtArgs>
    agent?: boolean | Wallet$agentArgs<ExtArgs>
    transactions?: boolean | Wallet$transactionsArgs<ExtArgs>
    gasSponsorship?: boolean | Wallet$gasSponsorshipArgs<ExtArgs>
    _count?: boolean | WalletCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type WalletIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | Wallet$userArgs<ExtArgs>
    organization?: boolean | Wallet$organizationArgs<ExtArgs>
  }

  export type $WalletPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Wallet"
    objects: {
      user: Prisma.$UserPayload<ExtArgs> | null
      organization: Prisma.$OrganizationPayload<ExtArgs> | null
      primaryForUsers: Prisma.$UserPayload<ExtArgs>[]
      agent: Prisma.$AgentPayload<ExtArgs> | null
      transactions: Prisma.$BlockchainTransactionPayload<ExtArgs>[]
      gasSponsorship: Prisma.$GasSponsorshipPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      address: string
      chainId: number
      type: $Enums.WalletType
      userId: string | null
      organizationId: string | null
      smartWalletFactory: string | null
      smartWalletConfig: Prisma.JsonValue | null
      isActive: boolean
      allowlist: boolean
      blocklist: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["wallet"]>
    composites: {}
  }

  type WalletGetPayload<S extends boolean | null | undefined | WalletDefaultArgs> = $Result.GetResult<Prisma.$WalletPayload, S>

  type WalletCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<WalletFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: WalletCountAggregateInputType | true
    }

  export interface WalletDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Wallet'], meta: { name: 'Wallet' } }
    /**
     * Find zero or one Wallet that matches the filter.
     * @param {WalletFindUniqueArgs} args - Arguments to find a Wallet
     * @example
     * // Get one Wallet
     * const wallet = await prisma.wallet.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends WalletFindUniqueArgs>(args: SelectSubset<T, WalletFindUniqueArgs<ExtArgs>>): Prisma__WalletClient<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Wallet that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {WalletFindUniqueOrThrowArgs} args - Arguments to find a Wallet
     * @example
     * // Get one Wallet
     * const wallet = await prisma.wallet.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends WalletFindUniqueOrThrowArgs>(args: SelectSubset<T, WalletFindUniqueOrThrowArgs<ExtArgs>>): Prisma__WalletClient<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Wallet that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WalletFindFirstArgs} args - Arguments to find a Wallet
     * @example
     * // Get one Wallet
     * const wallet = await prisma.wallet.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends WalletFindFirstArgs>(args?: SelectSubset<T, WalletFindFirstArgs<ExtArgs>>): Prisma__WalletClient<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Wallet that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WalletFindFirstOrThrowArgs} args - Arguments to find a Wallet
     * @example
     * // Get one Wallet
     * const wallet = await prisma.wallet.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends WalletFindFirstOrThrowArgs>(args?: SelectSubset<T, WalletFindFirstOrThrowArgs<ExtArgs>>): Prisma__WalletClient<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Wallets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WalletFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wallets
     * const wallets = await prisma.wallet.findMany()
     * 
     * // Get first 10 Wallets
     * const wallets = await prisma.wallet.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const walletWithIdOnly = await prisma.wallet.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends WalletFindManyArgs>(args?: SelectSubset<T, WalletFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Wallet.
     * @param {WalletCreateArgs} args - Arguments to create a Wallet.
     * @example
     * // Create one Wallet
     * const Wallet = await prisma.wallet.create({
     *   data: {
     *     // ... data to create a Wallet
     *   }
     * })
     * 
     */
    create<T extends WalletCreateArgs>(args: SelectSubset<T, WalletCreateArgs<ExtArgs>>): Prisma__WalletClient<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Wallets.
     * @param {WalletCreateManyArgs} args - Arguments to create many Wallets.
     * @example
     * // Create many Wallets
     * const wallet = await prisma.wallet.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends WalletCreateManyArgs>(args?: SelectSubset<T, WalletCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Wallets and returns the data saved in the database.
     * @param {WalletCreateManyAndReturnArgs} args - Arguments to create many Wallets.
     * @example
     * // Create many Wallets
     * const wallet = await prisma.wallet.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Wallets and only return the `id`
     * const walletWithIdOnly = await prisma.wallet.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends WalletCreateManyAndReturnArgs>(args?: SelectSubset<T, WalletCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Wallet.
     * @param {WalletDeleteArgs} args - Arguments to delete one Wallet.
     * @example
     * // Delete one Wallet
     * const Wallet = await prisma.wallet.delete({
     *   where: {
     *     // ... filter to delete one Wallet
     *   }
     * })
     * 
     */
    delete<T extends WalletDeleteArgs>(args: SelectSubset<T, WalletDeleteArgs<ExtArgs>>): Prisma__WalletClient<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Wallet.
     * @param {WalletUpdateArgs} args - Arguments to update one Wallet.
     * @example
     * // Update one Wallet
     * const wallet = await prisma.wallet.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends WalletUpdateArgs>(args: SelectSubset<T, WalletUpdateArgs<ExtArgs>>): Prisma__WalletClient<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Wallets.
     * @param {WalletDeleteManyArgs} args - Arguments to filter Wallets to delete.
     * @example
     * // Delete a few Wallets
     * const { count } = await prisma.wallet.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends WalletDeleteManyArgs>(args?: SelectSubset<T, WalletDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wallets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WalletUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wallets
     * const wallet = await prisma.wallet.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends WalletUpdateManyArgs>(args: SelectSubset<T, WalletUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wallet.
     * @param {WalletUpsertArgs} args - Arguments to update or create a Wallet.
     * @example
     * // Update or create a Wallet
     * const wallet = await prisma.wallet.upsert({
     *   create: {
     *     // ... data to create a Wallet
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wallet we want to update
     *   }
     * })
     */
    upsert<T extends WalletUpsertArgs>(args: SelectSubset<T, WalletUpsertArgs<ExtArgs>>): Prisma__WalletClient<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Wallets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WalletCountArgs} args - Arguments to filter Wallets to count.
     * @example
     * // Count the number of Wallets
     * const count = await prisma.wallet.count({
     *   where: {
     *     // ... the filter for the Wallets we want to count
     *   }
     * })
    **/
    count<T extends WalletCountArgs>(
      args?: Subset<T, WalletCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WalletCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wallet.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WalletAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WalletAggregateArgs>(args: Subset<T, WalletAggregateArgs>): Prisma.PrismaPromise<GetWalletAggregateType<T>>

    /**
     * Group by Wallet.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WalletGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WalletGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WalletGroupByArgs['orderBy'] }
        : { orderBy?: WalletGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WalletGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWalletGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Wallet model
   */
  readonly fields: WalletFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Wallet.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__WalletClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends Wallet$userArgs<ExtArgs> = {}>(args?: Subset<T, Wallet$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    organization<T extends Wallet$organizationArgs<ExtArgs> = {}>(args?: Subset<T, Wallet$organizationArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    primaryForUsers<T extends Wallet$primaryForUsersArgs<ExtArgs> = {}>(args?: Subset<T, Wallet$primaryForUsersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany"> | Null>
    agent<T extends Wallet$agentArgs<ExtArgs> = {}>(args?: Subset<T, Wallet$agentArgs<ExtArgs>>): Prisma__AgentClient<$Result.GetResult<Prisma.$AgentPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    transactions<T extends Wallet$transactionsArgs<ExtArgs> = {}>(args?: Subset<T, Wallet$transactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlockchainTransactionPayload<ExtArgs>, T, "findMany"> | Null>
    gasSponsorship<T extends Wallet$gasSponsorshipArgs<ExtArgs> = {}>(args?: Subset<T, Wallet$gasSponsorshipArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GasSponsorshipPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Wallet model
   */ 
  interface WalletFieldRefs {
    readonly id: FieldRef<"Wallet", 'String'>
    readonly address: FieldRef<"Wallet", 'String'>
    readonly chainId: FieldRef<"Wallet", 'Int'>
    readonly type: FieldRef<"Wallet", 'WalletType'>
    readonly userId: FieldRef<"Wallet", 'String'>
    readonly organizationId: FieldRef<"Wallet", 'String'>
    readonly smartWalletFactory: FieldRef<"Wallet", 'String'>
    readonly smartWalletConfig: FieldRef<"Wallet", 'Json'>
    readonly isActive: FieldRef<"Wallet", 'Boolean'>
    readonly allowlist: FieldRef<"Wallet", 'Boolean'>
    readonly blocklist: FieldRef<"Wallet", 'Boolean'>
    readonly createdAt: FieldRef<"Wallet", 'DateTime'>
    readonly updatedAt: FieldRef<"Wallet", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Wallet findUnique
   */
  export type WalletFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletInclude<ExtArgs> | null
    /**
     * Filter, which Wallet to fetch.
     */
    where: WalletWhereUniqueInput
  }

  /**
   * Wallet findUniqueOrThrow
   */
  export type WalletFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletInclude<ExtArgs> | null
    /**
     * Filter, which Wallet to fetch.
     */
    where: WalletWhereUniqueInput
  }

  /**
   * Wallet findFirst
   */
  export type WalletFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletInclude<ExtArgs> | null
    /**
     * Filter, which Wallet to fetch.
     */
    where?: WalletWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Wallets to fetch.
     */
    orderBy?: WalletOrderByWithRelationInput | WalletOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Wallets.
     */
    cursor?: WalletWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Wallets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Wallets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Wallets.
     */
    distinct?: WalletScalarFieldEnum | WalletScalarFieldEnum[]
  }

  /**
   * Wallet findFirstOrThrow
   */
  export type WalletFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletInclude<ExtArgs> | null
    /**
     * Filter, which Wallet to fetch.
     */
    where?: WalletWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Wallets to fetch.
     */
    orderBy?: WalletOrderByWithRelationInput | WalletOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Wallets.
     */
    cursor?: WalletWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Wallets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Wallets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Wallets.
     */
    distinct?: WalletScalarFieldEnum | WalletScalarFieldEnum[]
  }

  /**
   * Wallet findMany
   */
  export type WalletFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletInclude<ExtArgs> | null
    /**
     * Filter, which Wallets to fetch.
     */
    where?: WalletWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Wallets to fetch.
     */
    orderBy?: WalletOrderByWithRelationInput | WalletOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Wallets.
     */
    cursor?: WalletWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Wallets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Wallets.
     */
    skip?: number
    distinct?: WalletScalarFieldEnum | WalletScalarFieldEnum[]
  }

  /**
   * Wallet create
   */
  export type WalletCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletInclude<ExtArgs> | null
    /**
     * The data needed to create a Wallet.
     */
    data: XOR<WalletCreateInput, WalletUncheckedCreateInput>
  }

  /**
   * Wallet createMany
   */
  export type WalletCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Wallets.
     */
    data: WalletCreateManyInput | WalletCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Wallet createManyAndReturn
   */
  export type WalletCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Wallets.
     */
    data: WalletCreateManyInput | WalletCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Wallet update
   */
  export type WalletUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletInclude<ExtArgs> | null
    /**
     * The data needed to update a Wallet.
     */
    data: XOR<WalletUpdateInput, WalletUncheckedUpdateInput>
    /**
     * Choose, which Wallet to update.
     */
    where: WalletWhereUniqueInput
  }

  /**
   * Wallet updateMany
   */
  export type WalletUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Wallets.
     */
    data: XOR<WalletUpdateManyMutationInput, WalletUncheckedUpdateManyInput>
    /**
     * Filter which Wallets to update
     */
    where?: WalletWhereInput
  }

  /**
   * Wallet upsert
   */
  export type WalletUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletInclude<ExtArgs> | null
    /**
     * The filter to search for the Wallet to update in case it exists.
     */
    where: WalletWhereUniqueInput
    /**
     * In case the Wallet found by the `where` argument doesn't exist, create a new Wallet with this data.
     */
    create: XOR<WalletCreateInput, WalletUncheckedCreateInput>
    /**
     * In case the Wallet was found with the provided `where` argument, update it with this data.
     */
    update: XOR<WalletUpdateInput, WalletUncheckedUpdateInput>
  }

  /**
   * Wallet delete
   */
  export type WalletDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletInclude<ExtArgs> | null
    /**
     * Filter which Wallet to delete.
     */
    where: WalletWhereUniqueInput
  }

  /**
   * Wallet deleteMany
   */
  export type WalletDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Wallets to delete
     */
    where?: WalletWhereInput
  }

  /**
   * Wallet.user
   */
  export type Wallet$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Wallet.organization
   */
  export type Wallet$organizationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    where?: OrganizationWhereInput
  }

  /**
   * Wallet.primaryForUsers
   */
  export type Wallet$primaryForUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Wallet.agent
   */
  export type Wallet$agentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agent
     */
    select?: AgentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentInclude<ExtArgs> | null
    where?: AgentWhereInput
  }

  /**
   * Wallet.transactions
   */
  export type Wallet$transactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlockchainTransaction
     */
    select?: BlockchainTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockchainTransactionInclude<ExtArgs> | null
    where?: BlockchainTransactionWhereInput
    orderBy?: BlockchainTransactionOrderByWithRelationInput | BlockchainTransactionOrderByWithRelationInput[]
    cursor?: BlockchainTransactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BlockchainTransactionScalarFieldEnum | BlockchainTransactionScalarFieldEnum[]
  }

  /**
   * Wallet.gasSponsorship
   */
  export type Wallet$gasSponsorshipArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GasSponsorship
     */
    select?: GasSponsorshipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GasSponsorshipInclude<ExtArgs> | null
    where?: GasSponsorshipWhereInput
    orderBy?: GasSponsorshipOrderByWithRelationInput | GasSponsorshipOrderByWithRelationInput[]
    cursor?: GasSponsorshipWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GasSponsorshipScalarFieldEnum | GasSponsorshipScalarFieldEnum[]
  }

  /**
   * Wallet without action
   */
  export type WalletDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletInclude<ExtArgs> | null
  }


  /**
   * Model BlockchainTransaction
   */

  export type AggregateBlockchainTransaction = {
    _count: BlockchainTransactionCountAggregateOutputType | null
    _avg: BlockchainTransactionAvgAggregateOutputType | null
    _sum: BlockchainTransactionSumAggregateOutputType | null
    _min: BlockchainTransactionMinAggregateOutputType | null
    _max: BlockchainTransactionMaxAggregateOutputType | null
  }

  export type BlockchainTransactionAvgAggregateOutputType = {
    chainId: number | null
    nonce: number | null
    blockNumber: number | null
    confirmations: number | null
  }

  export type BlockchainTransactionSumAggregateOutputType = {
    chainId: number | null
    nonce: number | null
    blockNumber: number | null
    confirmations: number | null
  }

  export type BlockchainTransactionMinAggregateOutputType = {
    id: string | null
    hash: string | null
    chainId: number | null
    fromAddress: string | null
    toAddress: string | null
    value: string | null
    data: string | null
    gasLimit: string | null
    gasPrice: string | null
    nonce: number | null
    status: $Enums.BlockchainTxStatus | null
    blockNumber: number | null
    confirmations: number | null
    isSponsored: boolean | null
    sponsorshipId: string | null
    walletId: string | null
    paymentOrderId: string | null
    createdAt: Date | null
    minedAt: Date | null
  }

  export type BlockchainTransactionMaxAggregateOutputType = {
    id: string | null
    hash: string | null
    chainId: number | null
    fromAddress: string | null
    toAddress: string | null
    value: string | null
    data: string | null
    gasLimit: string | null
    gasPrice: string | null
    nonce: number | null
    status: $Enums.BlockchainTxStatus | null
    blockNumber: number | null
    confirmations: number | null
    isSponsored: boolean | null
    sponsorshipId: string | null
    walletId: string | null
    paymentOrderId: string | null
    createdAt: Date | null
    minedAt: Date | null
  }

  export type BlockchainTransactionCountAggregateOutputType = {
    id: number
    hash: number
    chainId: number
    fromAddress: number
    toAddress: number
    value: number
    data: number
    gasLimit: number
    gasPrice: number
    nonce: number
    status: number
    blockNumber: number
    confirmations: number
    isSponsored: number
    sponsorshipId: number
    walletId: number
    paymentOrderId: number
    createdAt: number
    minedAt: number
    _all: number
  }


  export type BlockchainTransactionAvgAggregateInputType = {
    chainId?: true
    nonce?: true
    blockNumber?: true
    confirmations?: true
  }

  export type BlockchainTransactionSumAggregateInputType = {
    chainId?: true
    nonce?: true
    blockNumber?: true
    confirmations?: true
  }

  export type BlockchainTransactionMinAggregateInputType = {
    id?: true
    hash?: true
    chainId?: true
    fromAddress?: true
    toAddress?: true
    value?: true
    data?: true
    gasLimit?: true
    gasPrice?: true
    nonce?: true
    status?: true
    blockNumber?: true
    confirmations?: true
    isSponsored?: true
    sponsorshipId?: true
    walletId?: true
    paymentOrderId?: true
    createdAt?: true
    minedAt?: true
  }

  export type BlockchainTransactionMaxAggregateInputType = {
    id?: true
    hash?: true
    chainId?: true
    fromAddress?: true
    toAddress?: true
    value?: true
    data?: true
    gasLimit?: true
    gasPrice?: true
    nonce?: true
    status?: true
    blockNumber?: true
    confirmations?: true
    isSponsored?: true
    sponsorshipId?: true
    walletId?: true
    paymentOrderId?: true
    createdAt?: true
    minedAt?: true
  }

  export type BlockchainTransactionCountAggregateInputType = {
    id?: true
    hash?: true
    chainId?: true
    fromAddress?: true
    toAddress?: true
    value?: true
    data?: true
    gasLimit?: true
    gasPrice?: true
    nonce?: true
    status?: true
    blockNumber?: true
    confirmations?: true
    isSponsored?: true
    sponsorshipId?: true
    walletId?: true
    paymentOrderId?: true
    createdAt?: true
    minedAt?: true
    _all?: true
  }

  export type BlockchainTransactionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BlockchainTransaction to aggregate.
     */
    where?: BlockchainTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BlockchainTransactions to fetch.
     */
    orderBy?: BlockchainTransactionOrderByWithRelationInput | BlockchainTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BlockchainTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BlockchainTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BlockchainTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BlockchainTransactions
    **/
    _count?: true | BlockchainTransactionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BlockchainTransactionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BlockchainTransactionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BlockchainTransactionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BlockchainTransactionMaxAggregateInputType
  }

  export type GetBlockchainTransactionAggregateType<T extends BlockchainTransactionAggregateArgs> = {
        [P in keyof T & keyof AggregateBlockchainTransaction]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBlockchainTransaction[P]>
      : GetScalarType<T[P], AggregateBlockchainTransaction[P]>
  }




  export type BlockchainTransactionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BlockchainTransactionWhereInput
    orderBy?: BlockchainTransactionOrderByWithAggregationInput | BlockchainTransactionOrderByWithAggregationInput[]
    by: BlockchainTransactionScalarFieldEnum[] | BlockchainTransactionScalarFieldEnum
    having?: BlockchainTransactionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BlockchainTransactionCountAggregateInputType | true
    _avg?: BlockchainTransactionAvgAggregateInputType
    _sum?: BlockchainTransactionSumAggregateInputType
    _min?: BlockchainTransactionMinAggregateInputType
    _max?: BlockchainTransactionMaxAggregateInputType
  }

  export type BlockchainTransactionGroupByOutputType = {
    id: string
    hash: string
    chainId: number
    fromAddress: string
    toAddress: string | null
    value: string
    data: string | null
    gasLimit: string | null
    gasPrice: string | null
    nonce: number | null
    status: $Enums.BlockchainTxStatus
    blockNumber: number | null
    confirmations: number
    isSponsored: boolean
    sponsorshipId: string | null
    walletId: string
    paymentOrderId: string | null
    createdAt: Date
    minedAt: Date | null
    _count: BlockchainTransactionCountAggregateOutputType | null
    _avg: BlockchainTransactionAvgAggregateOutputType | null
    _sum: BlockchainTransactionSumAggregateOutputType | null
    _min: BlockchainTransactionMinAggregateOutputType | null
    _max: BlockchainTransactionMaxAggregateOutputType | null
  }

  type GetBlockchainTransactionGroupByPayload<T extends BlockchainTransactionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BlockchainTransactionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BlockchainTransactionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BlockchainTransactionGroupByOutputType[P]>
            : GetScalarType<T[P], BlockchainTransactionGroupByOutputType[P]>
        }
      >
    >


  export type BlockchainTransactionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    hash?: boolean
    chainId?: boolean
    fromAddress?: boolean
    toAddress?: boolean
    value?: boolean
    data?: boolean
    gasLimit?: boolean
    gasPrice?: boolean
    nonce?: boolean
    status?: boolean
    blockNumber?: boolean
    confirmations?: boolean
    isSponsored?: boolean
    sponsorshipId?: boolean
    walletId?: boolean
    paymentOrderId?: boolean
    createdAt?: boolean
    minedAt?: boolean
    gasSponsorship?: boolean | BlockchainTransaction$gasSponsorshipArgs<ExtArgs>
    wallet?: boolean | WalletDefaultArgs<ExtArgs>
    paymentOrder?: boolean | BlockchainTransaction$paymentOrderArgs<ExtArgs>
  }, ExtArgs["result"]["blockchainTransaction"]>

  export type BlockchainTransactionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    hash?: boolean
    chainId?: boolean
    fromAddress?: boolean
    toAddress?: boolean
    value?: boolean
    data?: boolean
    gasLimit?: boolean
    gasPrice?: boolean
    nonce?: boolean
    status?: boolean
    blockNumber?: boolean
    confirmations?: boolean
    isSponsored?: boolean
    sponsorshipId?: boolean
    walletId?: boolean
    paymentOrderId?: boolean
    createdAt?: boolean
    minedAt?: boolean
    gasSponsorship?: boolean | BlockchainTransaction$gasSponsorshipArgs<ExtArgs>
    wallet?: boolean | WalletDefaultArgs<ExtArgs>
    paymentOrder?: boolean | BlockchainTransaction$paymentOrderArgs<ExtArgs>
  }, ExtArgs["result"]["blockchainTransaction"]>

  export type BlockchainTransactionSelectScalar = {
    id?: boolean
    hash?: boolean
    chainId?: boolean
    fromAddress?: boolean
    toAddress?: boolean
    value?: boolean
    data?: boolean
    gasLimit?: boolean
    gasPrice?: boolean
    nonce?: boolean
    status?: boolean
    blockNumber?: boolean
    confirmations?: boolean
    isSponsored?: boolean
    sponsorshipId?: boolean
    walletId?: boolean
    paymentOrderId?: boolean
    createdAt?: boolean
    minedAt?: boolean
  }

  export type BlockchainTransactionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    gasSponsorship?: boolean | BlockchainTransaction$gasSponsorshipArgs<ExtArgs>
    wallet?: boolean | WalletDefaultArgs<ExtArgs>
    paymentOrder?: boolean | BlockchainTransaction$paymentOrderArgs<ExtArgs>
  }
  export type BlockchainTransactionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    gasSponsorship?: boolean | BlockchainTransaction$gasSponsorshipArgs<ExtArgs>
    wallet?: boolean | WalletDefaultArgs<ExtArgs>
    paymentOrder?: boolean | BlockchainTransaction$paymentOrderArgs<ExtArgs>
  }

  export type $BlockchainTransactionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BlockchainTransaction"
    objects: {
      gasSponsorship: Prisma.$GasSponsorshipPayload<ExtArgs> | null
      wallet: Prisma.$WalletPayload<ExtArgs>
      paymentOrder: Prisma.$PaymentOrderPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      hash: string
      chainId: number
      fromAddress: string
      toAddress: string | null
      value: string
      data: string | null
      gasLimit: string | null
      gasPrice: string | null
      nonce: number | null
      status: $Enums.BlockchainTxStatus
      blockNumber: number | null
      confirmations: number
      isSponsored: boolean
      sponsorshipId: string | null
      walletId: string
      paymentOrderId: string | null
      createdAt: Date
      minedAt: Date | null
    }, ExtArgs["result"]["blockchainTransaction"]>
    composites: {}
  }

  type BlockchainTransactionGetPayload<S extends boolean | null | undefined | BlockchainTransactionDefaultArgs> = $Result.GetResult<Prisma.$BlockchainTransactionPayload, S>

  type BlockchainTransactionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<BlockchainTransactionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BlockchainTransactionCountAggregateInputType | true
    }

  export interface BlockchainTransactionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BlockchainTransaction'], meta: { name: 'BlockchainTransaction' } }
    /**
     * Find zero or one BlockchainTransaction that matches the filter.
     * @param {BlockchainTransactionFindUniqueArgs} args - Arguments to find a BlockchainTransaction
     * @example
     * // Get one BlockchainTransaction
     * const blockchainTransaction = await prisma.blockchainTransaction.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BlockchainTransactionFindUniqueArgs>(args: SelectSubset<T, BlockchainTransactionFindUniqueArgs<ExtArgs>>): Prisma__BlockchainTransactionClient<$Result.GetResult<Prisma.$BlockchainTransactionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one BlockchainTransaction that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {BlockchainTransactionFindUniqueOrThrowArgs} args - Arguments to find a BlockchainTransaction
     * @example
     * // Get one BlockchainTransaction
     * const blockchainTransaction = await prisma.blockchainTransaction.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BlockchainTransactionFindUniqueOrThrowArgs>(args: SelectSubset<T, BlockchainTransactionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BlockchainTransactionClient<$Result.GetResult<Prisma.$BlockchainTransactionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first BlockchainTransaction that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlockchainTransactionFindFirstArgs} args - Arguments to find a BlockchainTransaction
     * @example
     * // Get one BlockchainTransaction
     * const blockchainTransaction = await prisma.blockchainTransaction.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BlockchainTransactionFindFirstArgs>(args?: SelectSubset<T, BlockchainTransactionFindFirstArgs<ExtArgs>>): Prisma__BlockchainTransactionClient<$Result.GetResult<Prisma.$BlockchainTransactionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first BlockchainTransaction that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlockchainTransactionFindFirstOrThrowArgs} args - Arguments to find a BlockchainTransaction
     * @example
     * // Get one BlockchainTransaction
     * const blockchainTransaction = await prisma.blockchainTransaction.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BlockchainTransactionFindFirstOrThrowArgs>(args?: SelectSubset<T, BlockchainTransactionFindFirstOrThrowArgs<ExtArgs>>): Prisma__BlockchainTransactionClient<$Result.GetResult<Prisma.$BlockchainTransactionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more BlockchainTransactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlockchainTransactionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BlockchainTransactions
     * const blockchainTransactions = await prisma.blockchainTransaction.findMany()
     * 
     * // Get first 10 BlockchainTransactions
     * const blockchainTransactions = await prisma.blockchainTransaction.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const blockchainTransactionWithIdOnly = await prisma.blockchainTransaction.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BlockchainTransactionFindManyArgs>(args?: SelectSubset<T, BlockchainTransactionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlockchainTransactionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a BlockchainTransaction.
     * @param {BlockchainTransactionCreateArgs} args - Arguments to create a BlockchainTransaction.
     * @example
     * // Create one BlockchainTransaction
     * const BlockchainTransaction = await prisma.blockchainTransaction.create({
     *   data: {
     *     // ... data to create a BlockchainTransaction
     *   }
     * })
     * 
     */
    create<T extends BlockchainTransactionCreateArgs>(args: SelectSubset<T, BlockchainTransactionCreateArgs<ExtArgs>>): Prisma__BlockchainTransactionClient<$Result.GetResult<Prisma.$BlockchainTransactionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many BlockchainTransactions.
     * @param {BlockchainTransactionCreateManyArgs} args - Arguments to create many BlockchainTransactions.
     * @example
     * // Create many BlockchainTransactions
     * const blockchainTransaction = await prisma.blockchainTransaction.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BlockchainTransactionCreateManyArgs>(args?: SelectSubset<T, BlockchainTransactionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BlockchainTransactions and returns the data saved in the database.
     * @param {BlockchainTransactionCreateManyAndReturnArgs} args - Arguments to create many BlockchainTransactions.
     * @example
     * // Create many BlockchainTransactions
     * const blockchainTransaction = await prisma.blockchainTransaction.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BlockchainTransactions and only return the `id`
     * const blockchainTransactionWithIdOnly = await prisma.blockchainTransaction.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BlockchainTransactionCreateManyAndReturnArgs>(args?: SelectSubset<T, BlockchainTransactionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlockchainTransactionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a BlockchainTransaction.
     * @param {BlockchainTransactionDeleteArgs} args - Arguments to delete one BlockchainTransaction.
     * @example
     * // Delete one BlockchainTransaction
     * const BlockchainTransaction = await prisma.blockchainTransaction.delete({
     *   where: {
     *     // ... filter to delete one BlockchainTransaction
     *   }
     * })
     * 
     */
    delete<T extends BlockchainTransactionDeleteArgs>(args: SelectSubset<T, BlockchainTransactionDeleteArgs<ExtArgs>>): Prisma__BlockchainTransactionClient<$Result.GetResult<Prisma.$BlockchainTransactionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one BlockchainTransaction.
     * @param {BlockchainTransactionUpdateArgs} args - Arguments to update one BlockchainTransaction.
     * @example
     * // Update one BlockchainTransaction
     * const blockchainTransaction = await prisma.blockchainTransaction.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BlockchainTransactionUpdateArgs>(args: SelectSubset<T, BlockchainTransactionUpdateArgs<ExtArgs>>): Prisma__BlockchainTransactionClient<$Result.GetResult<Prisma.$BlockchainTransactionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more BlockchainTransactions.
     * @param {BlockchainTransactionDeleteManyArgs} args - Arguments to filter BlockchainTransactions to delete.
     * @example
     * // Delete a few BlockchainTransactions
     * const { count } = await prisma.blockchainTransaction.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BlockchainTransactionDeleteManyArgs>(args?: SelectSubset<T, BlockchainTransactionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BlockchainTransactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlockchainTransactionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BlockchainTransactions
     * const blockchainTransaction = await prisma.blockchainTransaction.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BlockchainTransactionUpdateManyArgs>(args: SelectSubset<T, BlockchainTransactionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one BlockchainTransaction.
     * @param {BlockchainTransactionUpsertArgs} args - Arguments to update or create a BlockchainTransaction.
     * @example
     * // Update or create a BlockchainTransaction
     * const blockchainTransaction = await prisma.blockchainTransaction.upsert({
     *   create: {
     *     // ... data to create a BlockchainTransaction
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BlockchainTransaction we want to update
     *   }
     * })
     */
    upsert<T extends BlockchainTransactionUpsertArgs>(args: SelectSubset<T, BlockchainTransactionUpsertArgs<ExtArgs>>): Prisma__BlockchainTransactionClient<$Result.GetResult<Prisma.$BlockchainTransactionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of BlockchainTransactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlockchainTransactionCountArgs} args - Arguments to filter BlockchainTransactions to count.
     * @example
     * // Count the number of BlockchainTransactions
     * const count = await prisma.blockchainTransaction.count({
     *   where: {
     *     // ... the filter for the BlockchainTransactions we want to count
     *   }
     * })
    **/
    count<T extends BlockchainTransactionCountArgs>(
      args?: Subset<T, BlockchainTransactionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BlockchainTransactionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BlockchainTransaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlockchainTransactionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BlockchainTransactionAggregateArgs>(args: Subset<T, BlockchainTransactionAggregateArgs>): Prisma.PrismaPromise<GetBlockchainTransactionAggregateType<T>>

    /**
     * Group by BlockchainTransaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlockchainTransactionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BlockchainTransactionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BlockchainTransactionGroupByArgs['orderBy'] }
        : { orderBy?: BlockchainTransactionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BlockchainTransactionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBlockchainTransactionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BlockchainTransaction model
   */
  readonly fields: BlockchainTransactionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BlockchainTransaction.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BlockchainTransactionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    gasSponsorship<T extends BlockchainTransaction$gasSponsorshipArgs<ExtArgs> = {}>(args?: Subset<T, BlockchainTransaction$gasSponsorshipArgs<ExtArgs>>): Prisma__GasSponsorshipClient<$Result.GetResult<Prisma.$GasSponsorshipPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    wallet<T extends WalletDefaultArgs<ExtArgs> = {}>(args?: Subset<T, WalletDefaultArgs<ExtArgs>>): Prisma__WalletClient<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    paymentOrder<T extends BlockchainTransaction$paymentOrderArgs<ExtArgs> = {}>(args?: Subset<T, BlockchainTransaction$paymentOrderArgs<ExtArgs>>): Prisma__PaymentOrderClient<$Result.GetResult<Prisma.$PaymentOrderPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BlockchainTransaction model
   */ 
  interface BlockchainTransactionFieldRefs {
    readonly id: FieldRef<"BlockchainTransaction", 'String'>
    readonly hash: FieldRef<"BlockchainTransaction", 'String'>
    readonly chainId: FieldRef<"BlockchainTransaction", 'Int'>
    readonly fromAddress: FieldRef<"BlockchainTransaction", 'String'>
    readonly toAddress: FieldRef<"BlockchainTransaction", 'String'>
    readonly value: FieldRef<"BlockchainTransaction", 'String'>
    readonly data: FieldRef<"BlockchainTransaction", 'String'>
    readonly gasLimit: FieldRef<"BlockchainTransaction", 'String'>
    readonly gasPrice: FieldRef<"BlockchainTransaction", 'String'>
    readonly nonce: FieldRef<"BlockchainTransaction", 'Int'>
    readonly status: FieldRef<"BlockchainTransaction", 'BlockchainTxStatus'>
    readonly blockNumber: FieldRef<"BlockchainTransaction", 'Int'>
    readonly confirmations: FieldRef<"BlockchainTransaction", 'Int'>
    readonly isSponsored: FieldRef<"BlockchainTransaction", 'Boolean'>
    readonly sponsorshipId: FieldRef<"BlockchainTransaction", 'String'>
    readonly walletId: FieldRef<"BlockchainTransaction", 'String'>
    readonly paymentOrderId: FieldRef<"BlockchainTransaction", 'String'>
    readonly createdAt: FieldRef<"BlockchainTransaction", 'DateTime'>
    readonly minedAt: FieldRef<"BlockchainTransaction", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BlockchainTransaction findUnique
   */
  export type BlockchainTransactionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlockchainTransaction
     */
    select?: BlockchainTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockchainTransactionInclude<ExtArgs> | null
    /**
     * Filter, which BlockchainTransaction to fetch.
     */
    where: BlockchainTransactionWhereUniqueInput
  }

  /**
   * BlockchainTransaction findUniqueOrThrow
   */
  export type BlockchainTransactionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlockchainTransaction
     */
    select?: BlockchainTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockchainTransactionInclude<ExtArgs> | null
    /**
     * Filter, which BlockchainTransaction to fetch.
     */
    where: BlockchainTransactionWhereUniqueInput
  }

  /**
   * BlockchainTransaction findFirst
   */
  export type BlockchainTransactionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlockchainTransaction
     */
    select?: BlockchainTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockchainTransactionInclude<ExtArgs> | null
    /**
     * Filter, which BlockchainTransaction to fetch.
     */
    where?: BlockchainTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BlockchainTransactions to fetch.
     */
    orderBy?: BlockchainTransactionOrderByWithRelationInput | BlockchainTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BlockchainTransactions.
     */
    cursor?: BlockchainTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BlockchainTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BlockchainTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BlockchainTransactions.
     */
    distinct?: BlockchainTransactionScalarFieldEnum | BlockchainTransactionScalarFieldEnum[]
  }

  /**
   * BlockchainTransaction findFirstOrThrow
   */
  export type BlockchainTransactionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlockchainTransaction
     */
    select?: BlockchainTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockchainTransactionInclude<ExtArgs> | null
    /**
     * Filter, which BlockchainTransaction to fetch.
     */
    where?: BlockchainTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BlockchainTransactions to fetch.
     */
    orderBy?: BlockchainTransactionOrderByWithRelationInput | BlockchainTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BlockchainTransactions.
     */
    cursor?: BlockchainTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BlockchainTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BlockchainTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BlockchainTransactions.
     */
    distinct?: BlockchainTransactionScalarFieldEnum | BlockchainTransactionScalarFieldEnum[]
  }

  /**
   * BlockchainTransaction findMany
   */
  export type BlockchainTransactionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlockchainTransaction
     */
    select?: BlockchainTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockchainTransactionInclude<ExtArgs> | null
    /**
     * Filter, which BlockchainTransactions to fetch.
     */
    where?: BlockchainTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BlockchainTransactions to fetch.
     */
    orderBy?: BlockchainTransactionOrderByWithRelationInput | BlockchainTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BlockchainTransactions.
     */
    cursor?: BlockchainTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BlockchainTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BlockchainTransactions.
     */
    skip?: number
    distinct?: BlockchainTransactionScalarFieldEnum | BlockchainTransactionScalarFieldEnum[]
  }

  /**
   * BlockchainTransaction create
   */
  export type BlockchainTransactionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlockchainTransaction
     */
    select?: BlockchainTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockchainTransactionInclude<ExtArgs> | null
    /**
     * The data needed to create a BlockchainTransaction.
     */
    data: XOR<BlockchainTransactionCreateInput, BlockchainTransactionUncheckedCreateInput>
  }

  /**
   * BlockchainTransaction createMany
   */
  export type BlockchainTransactionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BlockchainTransactions.
     */
    data: BlockchainTransactionCreateManyInput | BlockchainTransactionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BlockchainTransaction createManyAndReturn
   */
  export type BlockchainTransactionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlockchainTransaction
     */
    select?: BlockchainTransactionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many BlockchainTransactions.
     */
    data: BlockchainTransactionCreateManyInput | BlockchainTransactionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockchainTransactionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * BlockchainTransaction update
   */
  export type BlockchainTransactionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlockchainTransaction
     */
    select?: BlockchainTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockchainTransactionInclude<ExtArgs> | null
    /**
     * The data needed to update a BlockchainTransaction.
     */
    data: XOR<BlockchainTransactionUpdateInput, BlockchainTransactionUncheckedUpdateInput>
    /**
     * Choose, which BlockchainTransaction to update.
     */
    where: BlockchainTransactionWhereUniqueInput
  }

  /**
   * BlockchainTransaction updateMany
   */
  export type BlockchainTransactionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BlockchainTransactions.
     */
    data: XOR<BlockchainTransactionUpdateManyMutationInput, BlockchainTransactionUncheckedUpdateManyInput>
    /**
     * Filter which BlockchainTransactions to update
     */
    where?: BlockchainTransactionWhereInput
  }

  /**
   * BlockchainTransaction upsert
   */
  export type BlockchainTransactionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlockchainTransaction
     */
    select?: BlockchainTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockchainTransactionInclude<ExtArgs> | null
    /**
     * The filter to search for the BlockchainTransaction to update in case it exists.
     */
    where: BlockchainTransactionWhereUniqueInput
    /**
     * In case the BlockchainTransaction found by the `where` argument doesn't exist, create a new BlockchainTransaction with this data.
     */
    create: XOR<BlockchainTransactionCreateInput, BlockchainTransactionUncheckedCreateInput>
    /**
     * In case the BlockchainTransaction was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BlockchainTransactionUpdateInput, BlockchainTransactionUncheckedUpdateInput>
  }

  /**
   * BlockchainTransaction delete
   */
  export type BlockchainTransactionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlockchainTransaction
     */
    select?: BlockchainTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockchainTransactionInclude<ExtArgs> | null
    /**
     * Filter which BlockchainTransaction to delete.
     */
    where: BlockchainTransactionWhereUniqueInput
  }

  /**
   * BlockchainTransaction deleteMany
   */
  export type BlockchainTransactionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BlockchainTransactions to delete
     */
    where?: BlockchainTransactionWhereInput
  }

  /**
   * BlockchainTransaction.gasSponsorship
   */
  export type BlockchainTransaction$gasSponsorshipArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GasSponsorship
     */
    select?: GasSponsorshipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GasSponsorshipInclude<ExtArgs> | null
    where?: GasSponsorshipWhereInput
  }

  /**
   * BlockchainTransaction.paymentOrder
   */
  export type BlockchainTransaction$paymentOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentOrder
     */
    select?: PaymentOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentOrderInclude<ExtArgs> | null
    where?: PaymentOrderWhereInput
  }

  /**
   * BlockchainTransaction without action
   */
  export type BlockchainTransactionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlockchainTransaction
     */
    select?: BlockchainTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockchainTransactionInclude<ExtArgs> | null
  }


  /**
   * Model GasSponsorship
   */

  export type AggregateGasSponsorship = {
    _count: GasSponsorshipCountAggregateOutputType | null
    _avg: GasSponsorshipAvgAggregateOutputType | null
    _sum: GasSponsorshipSumAggregateOutputType | null
    _min: GasSponsorshipMinAggregateOutputType | null
    _max: GasSponsorshipMaxAggregateOutputType | null
  }

  export type GasSponsorshipAvgAggregateOutputType = {
    maxTransactions: number | null
    usedTransactions: number | null
  }

  export type GasSponsorshipSumAggregateOutputType = {
    maxTransactions: number | null
    usedTransactions: number | null
  }

  export type GasSponsorshipMinAggregateOutputType = {
    id: string | null
    sponsorWalletId: string | null
    maxGasAmount: string | null
    usedGasAmount: string | null
    maxTransactions: number | null
    usedTransactions: number | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type GasSponsorshipMaxAggregateOutputType = {
    id: string | null
    sponsorWalletId: string | null
    maxGasAmount: string | null
    usedGasAmount: string | null
    maxTransactions: number | null
    usedTransactions: number | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type GasSponsorshipCountAggregateOutputType = {
    id: number
    sponsorWalletId: number
    maxGasAmount: number
    usedGasAmount: number
    maxTransactions: number
    usedTransactions: number
    expiresAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type GasSponsorshipAvgAggregateInputType = {
    maxTransactions?: true
    usedTransactions?: true
  }

  export type GasSponsorshipSumAggregateInputType = {
    maxTransactions?: true
    usedTransactions?: true
  }

  export type GasSponsorshipMinAggregateInputType = {
    id?: true
    sponsorWalletId?: true
    maxGasAmount?: true
    usedGasAmount?: true
    maxTransactions?: true
    usedTransactions?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type GasSponsorshipMaxAggregateInputType = {
    id?: true
    sponsorWalletId?: true
    maxGasAmount?: true
    usedGasAmount?: true
    maxTransactions?: true
    usedTransactions?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type GasSponsorshipCountAggregateInputType = {
    id?: true
    sponsorWalletId?: true
    maxGasAmount?: true
    usedGasAmount?: true
    maxTransactions?: true
    usedTransactions?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type GasSponsorshipAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which GasSponsorship to aggregate.
     */
    where?: GasSponsorshipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GasSponsorships to fetch.
     */
    orderBy?: GasSponsorshipOrderByWithRelationInput | GasSponsorshipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: GasSponsorshipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GasSponsorships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GasSponsorships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned GasSponsorships
    **/
    _count?: true | GasSponsorshipCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: GasSponsorshipAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: GasSponsorshipSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GasSponsorshipMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GasSponsorshipMaxAggregateInputType
  }

  export type GetGasSponsorshipAggregateType<T extends GasSponsorshipAggregateArgs> = {
        [P in keyof T & keyof AggregateGasSponsorship]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGasSponsorship[P]>
      : GetScalarType<T[P], AggregateGasSponsorship[P]>
  }




  export type GasSponsorshipGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GasSponsorshipWhereInput
    orderBy?: GasSponsorshipOrderByWithAggregationInput | GasSponsorshipOrderByWithAggregationInput[]
    by: GasSponsorshipScalarFieldEnum[] | GasSponsorshipScalarFieldEnum
    having?: GasSponsorshipScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GasSponsorshipCountAggregateInputType | true
    _avg?: GasSponsorshipAvgAggregateInputType
    _sum?: GasSponsorshipSumAggregateInputType
    _min?: GasSponsorshipMinAggregateInputType
    _max?: GasSponsorshipMaxAggregateInputType
  }

  export type GasSponsorshipGroupByOutputType = {
    id: string
    sponsorWalletId: string
    maxGasAmount: string
    usedGasAmount: string
    maxTransactions: number | null
    usedTransactions: number
    expiresAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: GasSponsorshipCountAggregateOutputType | null
    _avg: GasSponsorshipAvgAggregateOutputType | null
    _sum: GasSponsorshipSumAggregateOutputType | null
    _min: GasSponsorshipMinAggregateOutputType | null
    _max: GasSponsorshipMaxAggregateOutputType | null
  }

  type GetGasSponsorshipGroupByPayload<T extends GasSponsorshipGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<GasSponsorshipGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GasSponsorshipGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GasSponsorshipGroupByOutputType[P]>
            : GetScalarType<T[P], GasSponsorshipGroupByOutputType[P]>
        }
      >
    >


  export type GasSponsorshipSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sponsorWalletId?: boolean
    maxGasAmount?: boolean
    usedGasAmount?: boolean
    maxTransactions?: boolean
    usedTransactions?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    sponsorWallet?: boolean | WalletDefaultArgs<ExtArgs>
    transactions?: boolean | GasSponsorship$transactionsArgs<ExtArgs>
    _count?: boolean | GasSponsorshipCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["gasSponsorship"]>

  export type GasSponsorshipSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sponsorWalletId?: boolean
    maxGasAmount?: boolean
    usedGasAmount?: boolean
    maxTransactions?: boolean
    usedTransactions?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    sponsorWallet?: boolean | WalletDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["gasSponsorship"]>

  export type GasSponsorshipSelectScalar = {
    id?: boolean
    sponsorWalletId?: boolean
    maxGasAmount?: boolean
    usedGasAmount?: boolean
    maxTransactions?: boolean
    usedTransactions?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type GasSponsorshipInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sponsorWallet?: boolean | WalletDefaultArgs<ExtArgs>
    transactions?: boolean | GasSponsorship$transactionsArgs<ExtArgs>
    _count?: boolean | GasSponsorshipCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type GasSponsorshipIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sponsorWallet?: boolean | WalletDefaultArgs<ExtArgs>
  }

  export type $GasSponsorshipPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "GasSponsorship"
    objects: {
      sponsorWallet: Prisma.$WalletPayload<ExtArgs>
      transactions: Prisma.$BlockchainTransactionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sponsorWalletId: string
      maxGasAmount: string
      usedGasAmount: string
      maxTransactions: number | null
      usedTransactions: number
      expiresAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["gasSponsorship"]>
    composites: {}
  }

  type GasSponsorshipGetPayload<S extends boolean | null | undefined | GasSponsorshipDefaultArgs> = $Result.GetResult<Prisma.$GasSponsorshipPayload, S>

  type GasSponsorshipCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<GasSponsorshipFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: GasSponsorshipCountAggregateInputType | true
    }

  export interface GasSponsorshipDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['GasSponsorship'], meta: { name: 'GasSponsorship' } }
    /**
     * Find zero or one GasSponsorship that matches the filter.
     * @param {GasSponsorshipFindUniqueArgs} args - Arguments to find a GasSponsorship
     * @example
     * // Get one GasSponsorship
     * const gasSponsorship = await prisma.gasSponsorship.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends GasSponsorshipFindUniqueArgs>(args: SelectSubset<T, GasSponsorshipFindUniqueArgs<ExtArgs>>): Prisma__GasSponsorshipClient<$Result.GetResult<Prisma.$GasSponsorshipPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one GasSponsorship that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {GasSponsorshipFindUniqueOrThrowArgs} args - Arguments to find a GasSponsorship
     * @example
     * // Get one GasSponsorship
     * const gasSponsorship = await prisma.gasSponsorship.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends GasSponsorshipFindUniqueOrThrowArgs>(args: SelectSubset<T, GasSponsorshipFindUniqueOrThrowArgs<ExtArgs>>): Prisma__GasSponsorshipClient<$Result.GetResult<Prisma.$GasSponsorshipPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first GasSponsorship that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GasSponsorshipFindFirstArgs} args - Arguments to find a GasSponsorship
     * @example
     * // Get one GasSponsorship
     * const gasSponsorship = await prisma.gasSponsorship.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends GasSponsorshipFindFirstArgs>(args?: SelectSubset<T, GasSponsorshipFindFirstArgs<ExtArgs>>): Prisma__GasSponsorshipClient<$Result.GetResult<Prisma.$GasSponsorshipPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first GasSponsorship that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GasSponsorshipFindFirstOrThrowArgs} args - Arguments to find a GasSponsorship
     * @example
     * // Get one GasSponsorship
     * const gasSponsorship = await prisma.gasSponsorship.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends GasSponsorshipFindFirstOrThrowArgs>(args?: SelectSubset<T, GasSponsorshipFindFirstOrThrowArgs<ExtArgs>>): Prisma__GasSponsorshipClient<$Result.GetResult<Prisma.$GasSponsorshipPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more GasSponsorships that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GasSponsorshipFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all GasSponsorships
     * const gasSponsorships = await prisma.gasSponsorship.findMany()
     * 
     * // Get first 10 GasSponsorships
     * const gasSponsorships = await prisma.gasSponsorship.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const gasSponsorshipWithIdOnly = await prisma.gasSponsorship.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends GasSponsorshipFindManyArgs>(args?: SelectSubset<T, GasSponsorshipFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GasSponsorshipPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a GasSponsorship.
     * @param {GasSponsorshipCreateArgs} args - Arguments to create a GasSponsorship.
     * @example
     * // Create one GasSponsorship
     * const GasSponsorship = await prisma.gasSponsorship.create({
     *   data: {
     *     // ... data to create a GasSponsorship
     *   }
     * })
     * 
     */
    create<T extends GasSponsorshipCreateArgs>(args: SelectSubset<T, GasSponsorshipCreateArgs<ExtArgs>>): Prisma__GasSponsorshipClient<$Result.GetResult<Prisma.$GasSponsorshipPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many GasSponsorships.
     * @param {GasSponsorshipCreateManyArgs} args - Arguments to create many GasSponsorships.
     * @example
     * // Create many GasSponsorships
     * const gasSponsorship = await prisma.gasSponsorship.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends GasSponsorshipCreateManyArgs>(args?: SelectSubset<T, GasSponsorshipCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many GasSponsorships and returns the data saved in the database.
     * @param {GasSponsorshipCreateManyAndReturnArgs} args - Arguments to create many GasSponsorships.
     * @example
     * // Create many GasSponsorships
     * const gasSponsorship = await prisma.gasSponsorship.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many GasSponsorships and only return the `id`
     * const gasSponsorshipWithIdOnly = await prisma.gasSponsorship.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends GasSponsorshipCreateManyAndReturnArgs>(args?: SelectSubset<T, GasSponsorshipCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GasSponsorshipPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a GasSponsorship.
     * @param {GasSponsorshipDeleteArgs} args - Arguments to delete one GasSponsorship.
     * @example
     * // Delete one GasSponsorship
     * const GasSponsorship = await prisma.gasSponsorship.delete({
     *   where: {
     *     // ... filter to delete one GasSponsorship
     *   }
     * })
     * 
     */
    delete<T extends GasSponsorshipDeleteArgs>(args: SelectSubset<T, GasSponsorshipDeleteArgs<ExtArgs>>): Prisma__GasSponsorshipClient<$Result.GetResult<Prisma.$GasSponsorshipPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one GasSponsorship.
     * @param {GasSponsorshipUpdateArgs} args - Arguments to update one GasSponsorship.
     * @example
     * // Update one GasSponsorship
     * const gasSponsorship = await prisma.gasSponsorship.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends GasSponsorshipUpdateArgs>(args: SelectSubset<T, GasSponsorshipUpdateArgs<ExtArgs>>): Prisma__GasSponsorshipClient<$Result.GetResult<Prisma.$GasSponsorshipPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more GasSponsorships.
     * @param {GasSponsorshipDeleteManyArgs} args - Arguments to filter GasSponsorships to delete.
     * @example
     * // Delete a few GasSponsorships
     * const { count } = await prisma.gasSponsorship.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends GasSponsorshipDeleteManyArgs>(args?: SelectSubset<T, GasSponsorshipDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more GasSponsorships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GasSponsorshipUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many GasSponsorships
     * const gasSponsorship = await prisma.gasSponsorship.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends GasSponsorshipUpdateManyArgs>(args: SelectSubset<T, GasSponsorshipUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one GasSponsorship.
     * @param {GasSponsorshipUpsertArgs} args - Arguments to update or create a GasSponsorship.
     * @example
     * // Update or create a GasSponsorship
     * const gasSponsorship = await prisma.gasSponsorship.upsert({
     *   create: {
     *     // ... data to create a GasSponsorship
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the GasSponsorship we want to update
     *   }
     * })
     */
    upsert<T extends GasSponsorshipUpsertArgs>(args: SelectSubset<T, GasSponsorshipUpsertArgs<ExtArgs>>): Prisma__GasSponsorshipClient<$Result.GetResult<Prisma.$GasSponsorshipPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of GasSponsorships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GasSponsorshipCountArgs} args - Arguments to filter GasSponsorships to count.
     * @example
     * // Count the number of GasSponsorships
     * const count = await prisma.gasSponsorship.count({
     *   where: {
     *     // ... the filter for the GasSponsorships we want to count
     *   }
     * })
    **/
    count<T extends GasSponsorshipCountArgs>(
      args?: Subset<T, GasSponsorshipCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GasSponsorshipCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a GasSponsorship.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GasSponsorshipAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GasSponsorshipAggregateArgs>(args: Subset<T, GasSponsorshipAggregateArgs>): Prisma.PrismaPromise<GetGasSponsorshipAggregateType<T>>

    /**
     * Group by GasSponsorship.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GasSponsorshipGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends GasSponsorshipGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: GasSponsorshipGroupByArgs['orderBy'] }
        : { orderBy?: GasSponsorshipGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, GasSponsorshipGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGasSponsorshipGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the GasSponsorship model
   */
  readonly fields: GasSponsorshipFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for GasSponsorship.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__GasSponsorshipClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sponsorWallet<T extends WalletDefaultArgs<ExtArgs> = {}>(args?: Subset<T, WalletDefaultArgs<ExtArgs>>): Prisma__WalletClient<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    transactions<T extends GasSponsorship$transactionsArgs<ExtArgs> = {}>(args?: Subset<T, GasSponsorship$transactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlockchainTransactionPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the GasSponsorship model
   */ 
  interface GasSponsorshipFieldRefs {
    readonly id: FieldRef<"GasSponsorship", 'String'>
    readonly sponsorWalletId: FieldRef<"GasSponsorship", 'String'>
    readonly maxGasAmount: FieldRef<"GasSponsorship", 'String'>
    readonly usedGasAmount: FieldRef<"GasSponsorship", 'String'>
    readonly maxTransactions: FieldRef<"GasSponsorship", 'Int'>
    readonly usedTransactions: FieldRef<"GasSponsorship", 'Int'>
    readonly expiresAt: FieldRef<"GasSponsorship", 'DateTime'>
    readonly createdAt: FieldRef<"GasSponsorship", 'DateTime'>
    readonly updatedAt: FieldRef<"GasSponsorship", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * GasSponsorship findUnique
   */
  export type GasSponsorshipFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GasSponsorship
     */
    select?: GasSponsorshipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GasSponsorshipInclude<ExtArgs> | null
    /**
     * Filter, which GasSponsorship to fetch.
     */
    where: GasSponsorshipWhereUniqueInput
  }

  /**
   * GasSponsorship findUniqueOrThrow
   */
  export type GasSponsorshipFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GasSponsorship
     */
    select?: GasSponsorshipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GasSponsorshipInclude<ExtArgs> | null
    /**
     * Filter, which GasSponsorship to fetch.
     */
    where: GasSponsorshipWhereUniqueInput
  }

  /**
   * GasSponsorship findFirst
   */
  export type GasSponsorshipFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GasSponsorship
     */
    select?: GasSponsorshipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GasSponsorshipInclude<ExtArgs> | null
    /**
     * Filter, which GasSponsorship to fetch.
     */
    where?: GasSponsorshipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GasSponsorships to fetch.
     */
    orderBy?: GasSponsorshipOrderByWithRelationInput | GasSponsorshipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for GasSponsorships.
     */
    cursor?: GasSponsorshipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GasSponsorships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GasSponsorships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of GasSponsorships.
     */
    distinct?: GasSponsorshipScalarFieldEnum | GasSponsorshipScalarFieldEnum[]
  }

  /**
   * GasSponsorship findFirstOrThrow
   */
  export type GasSponsorshipFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GasSponsorship
     */
    select?: GasSponsorshipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GasSponsorshipInclude<ExtArgs> | null
    /**
     * Filter, which GasSponsorship to fetch.
     */
    where?: GasSponsorshipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GasSponsorships to fetch.
     */
    orderBy?: GasSponsorshipOrderByWithRelationInput | GasSponsorshipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for GasSponsorships.
     */
    cursor?: GasSponsorshipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GasSponsorships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GasSponsorships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of GasSponsorships.
     */
    distinct?: GasSponsorshipScalarFieldEnum | GasSponsorshipScalarFieldEnum[]
  }

  /**
   * GasSponsorship findMany
   */
  export type GasSponsorshipFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GasSponsorship
     */
    select?: GasSponsorshipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GasSponsorshipInclude<ExtArgs> | null
    /**
     * Filter, which GasSponsorships to fetch.
     */
    where?: GasSponsorshipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GasSponsorships to fetch.
     */
    orderBy?: GasSponsorshipOrderByWithRelationInput | GasSponsorshipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing GasSponsorships.
     */
    cursor?: GasSponsorshipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GasSponsorships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GasSponsorships.
     */
    skip?: number
    distinct?: GasSponsorshipScalarFieldEnum | GasSponsorshipScalarFieldEnum[]
  }

  /**
   * GasSponsorship create
   */
  export type GasSponsorshipCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GasSponsorship
     */
    select?: GasSponsorshipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GasSponsorshipInclude<ExtArgs> | null
    /**
     * The data needed to create a GasSponsorship.
     */
    data: XOR<GasSponsorshipCreateInput, GasSponsorshipUncheckedCreateInput>
  }

  /**
   * GasSponsorship createMany
   */
  export type GasSponsorshipCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many GasSponsorships.
     */
    data: GasSponsorshipCreateManyInput | GasSponsorshipCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * GasSponsorship createManyAndReturn
   */
  export type GasSponsorshipCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GasSponsorship
     */
    select?: GasSponsorshipSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many GasSponsorships.
     */
    data: GasSponsorshipCreateManyInput | GasSponsorshipCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GasSponsorshipIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * GasSponsorship update
   */
  export type GasSponsorshipUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GasSponsorship
     */
    select?: GasSponsorshipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GasSponsorshipInclude<ExtArgs> | null
    /**
     * The data needed to update a GasSponsorship.
     */
    data: XOR<GasSponsorshipUpdateInput, GasSponsorshipUncheckedUpdateInput>
    /**
     * Choose, which GasSponsorship to update.
     */
    where: GasSponsorshipWhereUniqueInput
  }

  /**
   * GasSponsorship updateMany
   */
  export type GasSponsorshipUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update GasSponsorships.
     */
    data: XOR<GasSponsorshipUpdateManyMutationInput, GasSponsorshipUncheckedUpdateManyInput>
    /**
     * Filter which GasSponsorships to update
     */
    where?: GasSponsorshipWhereInput
  }

  /**
   * GasSponsorship upsert
   */
  export type GasSponsorshipUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GasSponsorship
     */
    select?: GasSponsorshipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GasSponsorshipInclude<ExtArgs> | null
    /**
     * The filter to search for the GasSponsorship to update in case it exists.
     */
    where: GasSponsorshipWhereUniqueInput
    /**
     * In case the GasSponsorship found by the `where` argument doesn't exist, create a new GasSponsorship with this data.
     */
    create: XOR<GasSponsorshipCreateInput, GasSponsorshipUncheckedCreateInput>
    /**
     * In case the GasSponsorship was found with the provided `where` argument, update it with this data.
     */
    update: XOR<GasSponsorshipUpdateInput, GasSponsorshipUncheckedUpdateInput>
  }

  /**
   * GasSponsorship delete
   */
  export type GasSponsorshipDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GasSponsorship
     */
    select?: GasSponsorshipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GasSponsorshipInclude<ExtArgs> | null
    /**
     * Filter which GasSponsorship to delete.
     */
    where: GasSponsorshipWhereUniqueInput
  }

  /**
   * GasSponsorship deleteMany
   */
  export type GasSponsorshipDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which GasSponsorships to delete
     */
    where?: GasSponsorshipWhereInput
  }

  /**
   * GasSponsorship.transactions
   */
  export type GasSponsorship$transactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlockchainTransaction
     */
    select?: BlockchainTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockchainTransactionInclude<ExtArgs> | null
    where?: BlockchainTransactionWhereInput
    orderBy?: BlockchainTransactionOrderByWithRelationInput | BlockchainTransactionOrderByWithRelationInput[]
    cursor?: BlockchainTransactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BlockchainTransactionScalarFieldEnum | BlockchainTransactionScalarFieldEnum[]
  }

  /**
   * GasSponsorship without action
   */
  export type GasSponsorshipDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GasSponsorship
     */
    select?: GasSponsorshipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GasSponsorshipInclude<ExtArgs> | null
  }


  /**
   * Model Product
   */

  export type AggregateProduct = {
    _count: ProductCountAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  export type ProductMinAggregateOutputType = {
    id: string | null
    organizationId: string | null
    name: string | null
    description: string | null
    type: $Enums.ProductType | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductMaxAggregateOutputType = {
    id: string | null
    organizationId: string | null
    name: string | null
    description: string | null
    type: $Enums.ProductType | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductCountAggregateOutputType = {
    id: number
    organizationId: number
    name: number
    description: number
    type: number
    isActive: number
    metadata: number
    images: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProductMinAggregateInputType = {
    id?: true
    organizationId?: true
    name?: true
    description?: true
    type?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductMaxAggregateInputType = {
    id?: true
    organizationId?: true
    name?: true
    description?: true
    type?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductCountAggregateInputType = {
    id?: true
    organizationId?: true
    name?: true
    description?: true
    type?: true
    isActive?: true
    metadata?: true
    images?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProductAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Product to aggregate.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Products
    **/
    _count?: true | ProductCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductMaxAggregateInputType
  }

  export type GetProductAggregateType<T extends ProductAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct[P]>
      : GetScalarType<T[P], AggregateProduct[P]>
  }




  export type ProductGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithAggregationInput | ProductOrderByWithAggregationInput[]
    by: ProductScalarFieldEnum[] | ProductScalarFieldEnum
    having?: ProductScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductCountAggregateInputType | true
    _min?: ProductMinAggregateInputType
    _max?: ProductMaxAggregateInputType
  }

  export type ProductGroupByOutputType = {
    id: string
    organizationId: string
    name: string
    description: string | null
    type: $Enums.ProductType
    isActive: boolean
    metadata: JsonValue | null
    images: string[]
    createdAt: Date
    updatedAt: Date
    _count: ProductCountAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  type GetProductGroupByPayload<T extends ProductGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductGroupByOutputType[P]>
            : GetScalarType<T[P], ProductGroupByOutputType[P]>
        }
      >
    >


  export type ProductSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    name?: boolean
    description?: boolean
    type?: boolean
    isActive?: boolean
    metadata?: boolean
    images?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    prices?: boolean | Product$pricesArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    name?: boolean
    description?: boolean
    type?: boolean
    isActive?: boolean
    metadata?: boolean
    images?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectScalar = {
    id?: boolean
    organizationId?: boolean
    name?: boolean
    description?: boolean
    type?: boolean
    isActive?: boolean
    metadata?: boolean
    images?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProductInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    prices?: boolean | Product$pricesArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }

  export type $ProductPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Product"
    objects: {
      organization: Prisma.$OrganizationPayload<ExtArgs>
      prices: Prisma.$PricePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      organizationId: string
      name: string
      description: string | null
      type: $Enums.ProductType
      isActive: boolean
      metadata: Prisma.JsonValue | null
      images: string[]
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["product"]>
    composites: {}
  }

  type ProductGetPayload<S extends boolean | null | undefined | ProductDefaultArgs> = $Result.GetResult<Prisma.$ProductPayload, S>

  type ProductCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProductFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProductCountAggregateInputType | true
    }

  export interface ProductDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Product'], meta: { name: 'Product' } }
    /**
     * Find zero or one Product that matches the filter.
     * @param {ProductFindUniqueArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductFindUniqueArgs>(args: SelectSubset<T, ProductFindUniqueArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Product that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProductFindUniqueOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Product that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductFindFirstArgs>(args?: SelectSubset<T, ProductFindFirstArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Product that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Products
     * const products = await prisma.product.findMany()
     * 
     * // Get first 10 Products
     * const products = await prisma.product.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productWithIdOnly = await prisma.product.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductFindManyArgs>(args?: SelectSubset<T, ProductFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Product.
     * @param {ProductCreateArgs} args - Arguments to create a Product.
     * @example
     * // Create one Product
     * const Product = await prisma.product.create({
     *   data: {
     *     // ... data to create a Product
     *   }
     * })
     * 
     */
    create<T extends ProductCreateArgs>(args: SelectSubset<T, ProductCreateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Products.
     * @param {ProductCreateManyArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductCreateManyArgs>(args?: SelectSubset<T, ProductCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Products and returns the data saved in the database.
     * @param {ProductCreateManyAndReturnArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Products and only return the `id`
     * const productWithIdOnly = await prisma.product.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Product.
     * @param {ProductDeleteArgs} args - Arguments to delete one Product.
     * @example
     * // Delete one Product
     * const Product = await prisma.product.delete({
     *   where: {
     *     // ... filter to delete one Product
     *   }
     * })
     * 
     */
    delete<T extends ProductDeleteArgs>(args: SelectSubset<T, ProductDeleteArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Product.
     * @param {ProductUpdateArgs} args - Arguments to update one Product.
     * @example
     * // Update one Product
     * const product = await prisma.product.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductUpdateArgs>(args: SelectSubset<T, ProductUpdateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Products.
     * @param {ProductDeleteManyArgs} args - Arguments to filter Products to delete.
     * @example
     * // Delete a few Products
     * const { count } = await prisma.product.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductDeleteManyArgs>(args?: SelectSubset<T, ProductDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductUpdateManyArgs>(args: SelectSubset<T, ProductUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Product.
     * @param {ProductUpsertArgs} args - Arguments to update or create a Product.
     * @example
     * // Update or create a Product
     * const product = await prisma.product.upsert({
     *   create: {
     *     // ... data to create a Product
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product we want to update
     *   }
     * })
     */
    upsert<T extends ProductUpsertArgs>(args: SelectSubset<T, ProductUpsertArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCountArgs} args - Arguments to filter Products to count.
     * @example
     * // Count the number of Products
     * const count = await prisma.product.count({
     *   where: {
     *     // ... the filter for the Products we want to count
     *   }
     * })
    **/
    count<T extends ProductCountArgs>(
      args?: Subset<T, ProductCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductAggregateArgs>(args: Subset<T, ProductAggregateArgs>): Prisma.PrismaPromise<GetProductAggregateType<T>>

    /**
     * Group by Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductGroupByArgs['orderBy'] }
        : { orderBy?: ProductGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Product model
   */
  readonly fields: ProductFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Product.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organization<T extends OrganizationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationDefaultArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    prices<T extends Product$pricesArgs<ExtArgs> = {}>(args?: Subset<T, Product$pricesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Product model
   */ 
  interface ProductFieldRefs {
    readonly id: FieldRef<"Product", 'String'>
    readonly organizationId: FieldRef<"Product", 'String'>
    readonly name: FieldRef<"Product", 'String'>
    readonly description: FieldRef<"Product", 'String'>
    readonly type: FieldRef<"Product", 'ProductType'>
    readonly isActive: FieldRef<"Product", 'Boolean'>
    readonly metadata: FieldRef<"Product", 'Json'>
    readonly images: FieldRef<"Product", 'String[]'>
    readonly createdAt: FieldRef<"Product", 'DateTime'>
    readonly updatedAt: FieldRef<"Product", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Product findUnique
   */
  export type ProductFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findUniqueOrThrow
   */
  export type ProductFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findFirst
   */
  export type ProductFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findFirstOrThrow
   */
  export type ProductFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findMany
   */
  export type ProductFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Products to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product create
   */
  export type ProductCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to create a Product.
     */
    data: XOR<ProductCreateInput, ProductUncheckedCreateInput>
  }

  /**
   * Product createMany
   */
  export type ProductCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Product createManyAndReturn
   */
  export type ProductCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Product update
   */
  export type ProductUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to update a Product.
     */
    data: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
    /**
     * Choose, which Product to update.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product updateMany
   */
  export type ProductUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Products.
     */
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductWhereInput
  }

  /**
   * Product upsert
   */
  export type ProductUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The filter to search for the Product to update in case it exists.
     */
    where: ProductWhereUniqueInput
    /**
     * In case the Product found by the `where` argument doesn't exist, create a new Product with this data.
     */
    create: XOR<ProductCreateInput, ProductUncheckedCreateInput>
    /**
     * In case the Product was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
  }

  /**
   * Product delete
   */
  export type ProductDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter which Product to delete.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product deleteMany
   */
  export type ProductDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Products to delete
     */
    where?: ProductWhereInput
  }

  /**
   * Product.prices
   */
  export type Product$pricesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    where?: PriceWhereInput
    orderBy?: PriceOrderByWithRelationInput | PriceOrderByWithRelationInput[]
    cursor?: PriceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PriceScalarFieldEnum | PriceScalarFieldEnum[]
  }

  /**
   * Product without action
   */
  export type ProductDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
  }


  /**
   * Model Price
   */

  export type AggregatePrice = {
    _count: PriceCountAggregateOutputType | null
    _avg: PriceAvgAggregateOutputType | null
    _sum: PriceSumAggregateOutputType | null
    _min: PriceMinAggregateOutputType | null
    _max: PriceMaxAggregateOutputType | null
  }

  export type PriceAvgAggregateOutputType = {
    amount: Decimal | null
    intervalCount: number | null
    trialPeriodDays: number | null
  }

  export type PriceSumAggregateOutputType = {
    amount: Decimal | null
    intervalCount: number | null
    trialPeriodDays: number | null
  }

  export type PriceMinAggregateOutputType = {
    id: string | null
    productId: string | null
    amount: Decimal | null
    currency: string | null
    type: $Enums.PriceType | null
    interval: $Enums.BillingInterval | null
    intervalCount: number | null
    trialPeriodDays: number | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PriceMaxAggregateOutputType = {
    id: string | null
    productId: string | null
    amount: Decimal | null
    currency: string | null
    type: $Enums.PriceType | null
    interval: $Enums.BillingInterval | null
    intervalCount: number | null
    trialPeriodDays: number | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PriceCountAggregateOutputType = {
    id: number
    productId: number
    amount: number
    currency: number
    type: number
    interval: number
    intervalCount: number
    trialPeriodDays: number
    isActive: number
    metadata: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PriceAvgAggregateInputType = {
    amount?: true
    intervalCount?: true
    trialPeriodDays?: true
  }

  export type PriceSumAggregateInputType = {
    amount?: true
    intervalCount?: true
    trialPeriodDays?: true
  }

  export type PriceMinAggregateInputType = {
    id?: true
    productId?: true
    amount?: true
    currency?: true
    type?: true
    interval?: true
    intervalCount?: true
    trialPeriodDays?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PriceMaxAggregateInputType = {
    id?: true
    productId?: true
    amount?: true
    currency?: true
    type?: true
    interval?: true
    intervalCount?: true
    trialPeriodDays?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PriceCountAggregateInputType = {
    id?: true
    productId?: true
    amount?: true
    currency?: true
    type?: true
    interval?: true
    intervalCount?: true
    trialPeriodDays?: true
    isActive?: true
    metadata?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PriceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Price to aggregate.
     */
    where?: PriceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prices to fetch.
     */
    orderBy?: PriceOrderByWithRelationInput | PriceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PriceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Prices
    **/
    _count?: true | PriceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PriceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PriceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PriceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PriceMaxAggregateInputType
  }

  export type GetPriceAggregateType<T extends PriceAggregateArgs> = {
        [P in keyof T & keyof AggregatePrice]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePrice[P]>
      : GetScalarType<T[P], AggregatePrice[P]>
  }




  export type PriceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PriceWhereInput
    orderBy?: PriceOrderByWithAggregationInput | PriceOrderByWithAggregationInput[]
    by: PriceScalarFieldEnum[] | PriceScalarFieldEnum
    having?: PriceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PriceCountAggregateInputType | true
    _avg?: PriceAvgAggregateInputType
    _sum?: PriceSumAggregateInputType
    _min?: PriceMinAggregateInputType
    _max?: PriceMaxAggregateInputType
  }

  export type PriceGroupByOutputType = {
    id: string
    productId: string
    amount: Decimal
    currency: string
    type: $Enums.PriceType
    interval: $Enums.BillingInterval | null
    intervalCount: number
    trialPeriodDays: number | null
    isActive: boolean
    metadata: JsonValue | null
    createdAt: Date
    updatedAt: Date
    _count: PriceCountAggregateOutputType | null
    _avg: PriceAvgAggregateOutputType | null
    _sum: PriceSumAggregateOutputType | null
    _min: PriceMinAggregateOutputType | null
    _max: PriceMaxAggregateOutputType | null
  }

  type GetPriceGroupByPayload<T extends PriceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PriceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PriceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PriceGroupByOutputType[P]>
            : GetScalarType<T[P], PriceGroupByOutputType[P]>
        }
      >
    >


  export type PriceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    amount?: boolean
    currency?: boolean
    type?: boolean
    interval?: boolean
    intervalCount?: boolean
    trialPeriodDays?: boolean
    isActive?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    subscriptionItems?: boolean | Price$subscriptionItemsArgs<ExtArgs>
    paymentLinks?: boolean | Price$paymentLinksArgs<ExtArgs>
    _count?: boolean | PriceCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["price"]>

  export type PriceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    amount?: boolean
    currency?: boolean
    type?: boolean
    interval?: boolean
    intervalCount?: boolean
    trialPeriodDays?: boolean
    isActive?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["price"]>

  export type PriceSelectScalar = {
    id?: boolean
    productId?: boolean
    amount?: boolean
    currency?: boolean
    type?: boolean
    interval?: boolean
    intervalCount?: boolean
    trialPeriodDays?: boolean
    isActive?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PriceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    subscriptionItems?: boolean | Price$subscriptionItemsArgs<ExtArgs>
    paymentLinks?: boolean | Price$paymentLinksArgs<ExtArgs>
    _count?: boolean | PriceCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PriceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $PricePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Price"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
      subscriptionItems: Prisma.$SubscriptionItemPayload<ExtArgs>[]
      paymentLinks: Prisma.$PaymentLinkPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      productId: string
      amount: Prisma.Decimal
      currency: string
      type: $Enums.PriceType
      interval: $Enums.BillingInterval | null
      intervalCount: number
      trialPeriodDays: number | null
      isActive: boolean
      metadata: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["price"]>
    composites: {}
  }

  type PriceGetPayload<S extends boolean | null | undefined | PriceDefaultArgs> = $Result.GetResult<Prisma.$PricePayload, S>

  type PriceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PriceFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PriceCountAggregateInputType | true
    }

  export interface PriceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Price'], meta: { name: 'Price' } }
    /**
     * Find zero or one Price that matches the filter.
     * @param {PriceFindUniqueArgs} args - Arguments to find a Price
     * @example
     * // Get one Price
     * const price = await prisma.price.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PriceFindUniqueArgs>(args: SelectSubset<T, PriceFindUniqueArgs<ExtArgs>>): Prisma__PriceClient<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Price that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PriceFindUniqueOrThrowArgs} args - Arguments to find a Price
     * @example
     * // Get one Price
     * const price = await prisma.price.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PriceFindUniqueOrThrowArgs>(args: SelectSubset<T, PriceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PriceClient<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Price that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceFindFirstArgs} args - Arguments to find a Price
     * @example
     * // Get one Price
     * const price = await prisma.price.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PriceFindFirstArgs>(args?: SelectSubset<T, PriceFindFirstArgs<ExtArgs>>): Prisma__PriceClient<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Price that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceFindFirstOrThrowArgs} args - Arguments to find a Price
     * @example
     * // Get one Price
     * const price = await prisma.price.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PriceFindFirstOrThrowArgs>(args?: SelectSubset<T, PriceFindFirstOrThrowArgs<ExtArgs>>): Prisma__PriceClient<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Prices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Prices
     * const prices = await prisma.price.findMany()
     * 
     * // Get first 10 Prices
     * const prices = await prisma.price.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const priceWithIdOnly = await prisma.price.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PriceFindManyArgs>(args?: SelectSubset<T, PriceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Price.
     * @param {PriceCreateArgs} args - Arguments to create a Price.
     * @example
     * // Create one Price
     * const Price = await prisma.price.create({
     *   data: {
     *     // ... data to create a Price
     *   }
     * })
     * 
     */
    create<T extends PriceCreateArgs>(args: SelectSubset<T, PriceCreateArgs<ExtArgs>>): Prisma__PriceClient<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Prices.
     * @param {PriceCreateManyArgs} args - Arguments to create many Prices.
     * @example
     * // Create many Prices
     * const price = await prisma.price.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PriceCreateManyArgs>(args?: SelectSubset<T, PriceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Prices and returns the data saved in the database.
     * @param {PriceCreateManyAndReturnArgs} args - Arguments to create many Prices.
     * @example
     * // Create many Prices
     * const price = await prisma.price.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Prices and only return the `id`
     * const priceWithIdOnly = await prisma.price.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PriceCreateManyAndReturnArgs>(args?: SelectSubset<T, PriceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Price.
     * @param {PriceDeleteArgs} args - Arguments to delete one Price.
     * @example
     * // Delete one Price
     * const Price = await prisma.price.delete({
     *   where: {
     *     // ... filter to delete one Price
     *   }
     * })
     * 
     */
    delete<T extends PriceDeleteArgs>(args: SelectSubset<T, PriceDeleteArgs<ExtArgs>>): Prisma__PriceClient<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Price.
     * @param {PriceUpdateArgs} args - Arguments to update one Price.
     * @example
     * // Update one Price
     * const price = await prisma.price.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PriceUpdateArgs>(args: SelectSubset<T, PriceUpdateArgs<ExtArgs>>): Prisma__PriceClient<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Prices.
     * @param {PriceDeleteManyArgs} args - Arguments to filter Prices to delete.
     * @example
     * // Delete a few Prices
     * const { count } = await prisma.price.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PriceDeleteManyArgs>(args?: SelectSubset<T, PriceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Prices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Prices
     * const price = await prisma.price.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PriceUpdateManyArgs>(args: SelectSubset<T, PriceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Price.
     * @param {PriceUpsertArgs} args - Arguments to update or create a Price.
     * @example
     * // Update or create a Price
     * const price = await prisma.price.upsert({
     *   create: {
     *     // ... data to create a Price
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Price we want to update
     *   }
     * })
     */
    upsert<T extends PriceUpsertArgs>(args: SelectSubset<T, PriceUpsertArgs<ExtArgs>>): Prisma__PriceClient<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Prices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceCountArgs} args - Arguments to filter Prices to count.
     * @example
     * // Count the number of Prices
     * const count = await prisma.price.count({
     *   where: {
     *     // ... the filter for the Prices we want to count
     *   }
     * })
    **/
    count<T extends PriceCountArgs>(
      args?: Subset<T, PriceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PriceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Price.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PriceAggregateArgs>(args: Subset<T, PriceAggregateArgs>): Prisma.PrismaPromise<GetPriceAggregateType<T>>

    /**
     * Group by Price.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PriceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PriceGroupByArgs['orderBy'] }
        : { orderBy?: PriceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PriceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPriceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Price model
   */
  readonly fields: PriceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Price.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PriceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    subscriptionItems<T extends Price$subscriptionItemsArgs<ExtArgs> = {}>(args?: Subset<T, Price$subscriptionItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionItemPayload<ExtArgs>, T, "findMany"> | Null>
    paymentLinks<T extends Price$paymentLinksArgs<ExtArgs> = {}>(args?: Subset<T, Price$paymentLinksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentLinkPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Price model
   */ 
  interface PriceFieldRefs {
    readonly id: FieldRef<"Price", 'String'>
    readonly productId: FieldRef<"Price", 'String'>
    readonly amount: FieldRef<"Price", 'Decimal'>
    readonly currency: FieldRef<"Price", 'String'>
    readonly type: FieldRef<"Price", 'PriceType'>
    readonly interval: FieldRef<"Price", 'BillingInterval'>
    readonly intervalCount: FieldRef<"Price", 'Int'>
    readonly trialPeriodDays: FieldRef<"Price", 'Int'>
    readonly isActive: FieldRef<"Price", 'Boolean'>
    readonly metadata: FieldRef<"Price", 'Json'>
    readonly createdAt: FieldRef<"Price", 'DateTime'>
    readonly updatedAt: FieldRef<"Price", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Price findUnique
   */
  export type PriceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    /**
     * Filter, which Price to fetch.
     */
    where: PriceWhereUniqueInput
  }

  /**
   * Price findUniqueOrThrow
   */
  export type PriceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    /**
     * Filter, which Price to fetch.
     */
    where: PriceWhereUniqueInput
  }

  /**
   * Price findFirst
   */
  export type PriceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    /**
     * Filter, which Price to fetch.
     */
    where?: PriceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prices to fetch.
     */
    orderBy?: PriceOrderByWithRelationInput | PriceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Prices.
     */
    cursor?: PriceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Prices.
     */
    distinct?: PriceScalarFieldEnum | PriceScalarFieldEnum[]
  }

  /**
   * Price findFirstOrThrow
   */
  export type PriceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    /**
     * Filter, which Price to fetch.
     */
    where?: PriceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prices to fetch.
     */
    orderBy?: PriceOrderByWithRelationInput | PriceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Prices.
     */
    cursor?: PriceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Prices.
     */
    distinct?: PriceScalarFieldEnum | PriceScalarFieldEnum[]
  }

  /**
   * Price findMany
   */
  export type PriceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    /**
     * Filter, which Prices to fetch.
     */
    where?: PriceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prices to fetch.
     */
    orderBy?: PriceOrderByWithRelationInput | PriceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Prices.
     */
    cursor?: PriceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prices.
     */
    skip?: number
    distinct?: PriceScalarFieldEnum | PriceScalarFieldEnum[]
  }

  /**
   * Price create
   */
  export type PriceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    /**
     * The data needed to create a Price.
     */
    data: XOR<PriceCreateInput, PriceUncheckedCreateInput>
  }

  /**
   * Price createMany
   */
  export type PriceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Prices.
     */
    data: PriceCreateManyInput | PriceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Price createManyAndReturn
   */
  export type PriceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Prices.
     */
    data: PriceCreateManyInput | PriceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Price update
   */
  export type PriceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    /**
     * The data needed to update a Price.
     */
    data: XOR<PriceUpdateInput, PriceUncheckedUpdateInput>
    /**
     * Choose, which Price to update.
     */
    where: PriceWhereUniqueInput
  }

  /**
   * Price updateMany
   */
  export type PriceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Prices.
     */
    data: XOR<PriceUpdateManyMutationInput, PriceUncheckedUpdateManyInput>
    /**
     * Filter which Prices to update
     */
    where?: PriceWhereInput
  }

  /**
   * Price upsert
   */
  export type PriceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    /**
     * The filter to search for the Price to update in case it exists.
     */
    where: PriceWhereUniqueInput
    /**
     * In case the Price found by the `where` argument doesn't exist, create a new Price with this data.
     */
    create: XOR<PriceCreateInput, PriceUncheckedCreateInput>
    /**
     * In case the Price was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PriceUpdateInput, PriceUncheckedUpdateInput>
  }

  /**
   * Price delete
   */
  export type PriceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    /**
     * Filter which Price to delete.
     */
    where: PriceWhereUniqueInput
  }

  /**
   * Price deleteMany
   */
  export type PriceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Prices to delete
     */
    where?: PriceWhereInput
  }

  /**
   * Price.subscriptionItems
   */
  export type Price$subscriptionItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionItem
     */
    select?: SubscriptionItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionItemInclude<ExtArgs> | null
    where?: SubscriptionItemWhereInput
    orderBy?: SubscriptionItemOrderByWithRelationInput | SubscriptionItemOrderByWithRelationInput[]
    cursor?: SubscriptionItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubscriptionItemScalarFieldEnum | SubscriptionItemScalarFieldEnum[]
  }

  /**
   * Price.paymentLinks
   */
  export type Price$paymentLinksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLink
     */
    select?: PaymentLinkSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentLinkInclude<ExtArgs> | null
    where?: PaymentLinkWhereInput
    orderBy?: PaymentLinkOrderByWithRelationInput | PaymentLinkOrderByWithRelationInput[]
    cursor?: PaymentLinkWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentLinkScalarFieldEnum | PaymentLinkScalarFieldEnum[]
  }

  /**
   * Price without action
   */
  export type PriceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
  }


  /**
   * Model PaymentLink
   */

  export type AggregatePaymentLink = {
    _count: PaymentLinkCountAggregateOutputType | null
    _avg: PaymentLinkAvgAggregateOutputType | null
    _sum: PaymentLinkSumAggregateOutputType | null
    _min: PaymentLinkMinAggregateOutputType | null
    _max: PaymentLinkMaxAggregateOutputType | null
  }

  export type PaymentLinkAvgAggregateOutputType = {
    amount: Decimal | null
    targetAmount: Decimal | null
    smartContractChainId: number | null
  }

  export type PaymentLinkSumAggregateOutputType = {
    amount: Decimal | null
    targetAmount: Decimal | null
    smartContractChainId: number | null
  }

  export type PaymentLinkMinAggregateOutputType = {
    id: string | null
    organizationId: string | null
    createdById: string | null
    executingAgentId: string | null
    title: string | null
    description: string | null
    referenceId: string | null
    shortCode: string | null
    qrCode: string | null
    priceId: string | null
    amount: Decimal | null
    currency: string | null
    targetAmount: Decimal | null
    targetCurrency: string | null
    smartContractAddress: string | null
    smartContractChainId: number | null
    tokenAddress: string | null
    status: $Enums.PaymentLinkStatus | null
    allowMultiplePayments: boolean | null
    requiresKyc: boolean | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PaymentLinkMaxAggregateOutputType = {
    id: string | null
    organizationId: string | null
    createdById: string | null
    executingAgentId: string | null
    title: string | null
    description: string | null
    referenceId: string | null
    shortCode: string | null
    qrCode: string | null
    priceId: string | null
    amount: Decimal | null
    currency: string | null
    targetAmount: Decimal | null
    targetCurrency: string | null
    smartContractAddress: string | null
    smartContractChainId: number | null
    tokenAddress: string | null
    status: $Enums.PaymentLinkStatus | null
    allowMultiplePayments: boolean | null
    requiresKyc: boolean | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PaymentLinkCountAggregateOutputType = {
    id: number
    organizationId: number
    createdById: number
    executingAgentId: number
    title: number
    description: number
    referenceId: number
    shortCode: number
    qrCode: number
    priceId: number
    amount: number
    currency: number
    targetAmount: number
    targetCurrency: number
    smartContractAddress: number
    smartContractChainId: number
    tokenAddress: number
    status: number
    allowMultiplePayments: number
    requiresKyc: number
    expiresAt: number
    redirectUrls: number
    metadata: number
    theme: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PaymentLinkAvgAggregateInputType = {
    amount?: true
    targetAmount?: true
    smartContractChainId?: true
  }

  export type PaymentLinkSumAggregateInputType = {
    amount?: true
    targetAmount?: true
    smartContractChainId?: true
  }

  export type PaymentLinkMinAggregateInputType = {
    id?: true
    organizationId?: true
    createdById?: true
    executingAgentId?: true
    title?: true
    description?: true
    referenceId?: true
    shortCode?: true
    qrCode?: true
    priceId?: true
    amount?: true
    currency?: true
    targetAmount?: true
    targetCurrency?: true
    smartContractAddress?: true
    smartContractChainId?: true
    tokenAddress?: true
    status?: true
    allowMultiplePayments?: true
    requiresKyc?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PaymentLinkMaxAggregateInputType = {
    id?: true
    organizationId?: true
    createdById?: true
    executingAgentId?: true
    title?: true
    description?: true
    referenceId?: true
    shortCode?: true
    qrCode?: true
    priceId?: true
    amount?: true
    currency?: true
    targetAmount?: true
    targetCurrency?: true
    smartContractAddress?: true
    smartContractChainId?: true
    tokenAddress?: true
    status?: true
    allowMultiplePayments?: true
    requiresKyc?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PaymentLinkCountAggregateInputType = {
    id?: true
    organizationId?: true
    createdById?: true
    executingAgentId?: true
    title?: true
    description?: true
    referenceId?: true
    shortCode?: true
    qrCode?: true
    priceId?: true
    amount?: true
    currency?: true
    targetAmount?: true
    targetCurrency?: true
    smartContractAddress?: true
    smartContractChainId?: true
    tokenAddress?: true
    status?: true
    allowMultiplePayments?: true
    requiresKyc?: true
    expiresAt?: true
    redirectUrls?: true
    metadata?: true
    theme?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PaymentLinkAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentLink to aggregate.
     */
    where?: PaymentLinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentLinks to fetch.
     */
    orderBy?: PaymentLinkOrderByWithRelationInput | PaymentLinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentLinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentLinks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentLinks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PaymentLinks
    **/
    _count?: true | PaymentLinkCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentLinkAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentLinkSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentLinkMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentLinkMaxAggregateInputType
  }

  export type GetPaymentLinkAggregateType<T extends PaymentLinkAggregateArgs> = {
        [P in keyof T & keyof AggregatePaymentLink]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePaymentLink[P]>
      : GetScalarType<T[P], AggregatePaymentLink[P]>
  }




  export type PaymentLinkGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentLinkWhereInput
    orderBy?: PaymentLinkOrderByWithAggregationInput | PaymentLinkOrderByWithAggregationInput[]
    by: PaymentLinkScalarFieldEnum[] | PaymentLinkScalarFieldEnum
    having?: PaymentLinkScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentLinkCountAggregateInputType | true
    _avg?: PaymentLinkAvgAggregateInputType
    _sum?: PaymentLinkSumAggregateInputType
    _min?: PaymentLinkMinAggregateInputType
    _max?: PaymentLinkMaxAggregateInputType
  }

  export type PaymentLinkGroupByOutputType = {
    id: string
    organizationId: string
    createdById: string
    executingAgentId: string
    title: string
    description: string | null
    referenceId: string | null
    shortCode: string
    qrCode: string | null
    priceId: string | null
    amount: Decimal
    currency: string
    targetAmount: Decimal | null
    targetCurrency: string | null
    smartContractAddress: string | null
    smartContractChainId: number | null
    tokenAddress: string | null
    status: $Enums.PaymentLinkStatus
    allowMultiplePayments: boolean
    requiresKyc: boolean
    expiresAt: Date | null
    redirectUrls: JsonValue | null
    metadata: JsonValue | null
    theme: JsonValue | null
    createdAt: Date
    updatedAt: Date
    _count: PaymentLinkCountAggregateOutputType | null
    _avg: PaymentLinkAvgAggregateOutputType | null
    _sum: PaymentLinkSumAggregateOutputType | null
    _min: PaymentLinkMinAggregateOutputType | null
    _max: PaymentLinkMaxAggregateOutputType | null
  }

  type GetPaymentLinkGroupByPayload<T extends PaymentLinkGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentLinkGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentLinkGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentLinkGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentLinkGroupByOutputType[P]>
        }
      >
    >


  export type PaymentLinkSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    createdById?: boolean
    executingAgentId?: boolean
    title?: boolean
    description?: boolean
    referenceId?: boolean
    shortCode?: boolean
    qrCode?: boolean
    priceId?: boolean
    amount?: boolean
    currency?: boolean
    targetAmount?: boolean
    targetCurrency?: boolean
    smartContractAddress?: boolean
    smartContractChainId?: boolean
    tokenAddress?: boolean
    status?: boolean
    allowMultiplePayments?: boolean
    requiresKyc?: boolean
    expiresAt?: boolean
    redirectUrls?: boolean
    metadata?: boolean
    theme?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    executingAgent?: boolean | AgentDefaultArgs<ExtArgs>
    price?: boolean | PaymentLink$priceArgs<ExtArgs>
    paymentOrders?: boolean | PaymentLink$paymentOrdersArgs<ExtArgs>
    _count?: boolean | PaymentLinkCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["paymentLink"]>

  export type PaymentLinkSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    createdById?: boolean
    executingAgentId?: boolean
    title?: boolean
    description?: boolean
    referenceId?: boolean
    shortCode?: boolean
    qrCode?: boolean
    priceId?: boolean
    amount?: boolean
    currency?: boolean
    targetAmount?: boolean
    targetCurrency?: boolean
    smartContractAddress?: boolean
    smartContractChainId?: boolean
    tokenAddress?: boolean
    status?: boolean
    allowMultiplePayments?: boolean
    requiresKyc?: boolean
    expiresAt?: boolean
    redirectUrls?: boolean
    metadata?: boolean
    theme?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    executingAgent?: boolean | AgentDefaultArgs<ExtArgs>
    price?: boolean | PaymentLink$priceArgs<ExtArgs>
  }, ExtArgs["result"]["paymentLink"]>

  export type PaymentLinkSelectScalar = {
    id?: boolean
    organizationId?: boolean
    createdById?: boolean
    executingAgentId?: boolean
    title?: boolean
    description?: boolean
    referenceId?: boolean
    shortCode?: boolean
    qrCode?: boolean
    priceId?: boolean
    amount?: boolean
    currency?: boolean
    targetAmount?: boolean
    targetCurrency?: boolean
    smartContractAddress?: boolean
    smartContractChainId?: boolean
    tokenAddress?: boolean
    status?: boolean
    allowMultiplePayments?: boolean
    requiresKyc?: boolean
    expiresAt?: boolean
    redirectUrls?: boolean
    metadata?: boolean
    theme?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PaymentLinkInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    executingAgent?: boolean | AgentDefaultArgs<ExtArgs>
    price?: boolean | PaymentLink$priceArgs<ExtArgs>
    paymentOrders?: boolean | PaymentLink$paymentOrdersArgs<ExtArgs>
    _count?: boolean | PaymentLinkCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PaymentLinkIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    executingAgent?: boolean | AgentDefaultArgs<ExtArgs>
    price?: boolean | PaymentLink$priceArgs<ExtArgs>
  }

  export type $PaymentLinkPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PaymentLink"
    objects: {
      organization: Prisma.$OrganizationPayload<ExtArgs>
      createdBy: Prisma.$UserPayload<ExtArgs>
      executingAgent: Prisma.$AgentPayload<ExtArgs>
      price: Prisma.$PricePayload<ExtArgs> | null
      paymentOrders: Prisma.$PaymentOrderPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      organizationId: string
      createdById: string
      executingAgentId: string
      title: string
      description: string | null
      referenceId: string | null
      shortCode: string
      qrCode: string | null
      priceId: string | null
      amount: Prisma.Decimal
      currency: string
      targetAmount: Prisma.Decimal | null
      targetCurrency: string | null
      smartContractAddress: string | null
      smartContractChainId: number | null
      tokenAddress: string | null
      status: $Enums.PaymentLinkStatus
      allowMultiplePayments: boolean
      requiresKyc: boolean
      expiresAt: Date | null
      redirectUrls: Prisma.JsonValue | null
      metadata: Prisma.JsonValue | null
      theme: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["paymentLink"]>
    composites: {}
  }

  type PaymentLinkGetPayload<S extends boolean | null | undefined | PaymentLinkDefaultArgs> = $Result.GetResult<Prisma.$PaymentLinkPayload, S>

  type PaymentLinkCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PaymentLinkFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PaymentLinkCountAggregateInputType | true
    }

  export interface PaymentLinkDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PaymentLink'], meta: { name: 'PaymentLink' } }
    /**
     * Find zero or one PaymentLink that matches the filter.
     * @param {PaymentLinkFindUniqueArgs} args - Arguments to find a PaymentLink
     * @example
     * // Get one PaymentLink
     * const paymentLink = await prisma.paymentLink.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentLinkFindUniqueArgs>(args: SelectSubset<T, PaymentLinkFindUniqueArgs<ExtArgs>>): Prisma__PaymentLinkClient<$Result.GetResult<Prisma.$PaymentLinkPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PaymentLink that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PaymentLinkFindUniqueOrThrowArgs} args - Arguments to find a PaymentLink
     * @example
     * // Get one PaymentLink
     * const paymentLink = await prisma.paymentLink.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentLinkFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentLinkFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentLinkClient<$Result.GetResult<Prisma.$PaymentLinkPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PaymentLink that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentLinkFindFirstArgs} args - Arguments to find a PaymentLink
     * @example
     * // Get one PaymentLink
     * const paymentLink = await prisma.paymentLink.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentLinkFindFirstArgs>(args?: SelectSubset<T, PaymentLinkFindFirstArgs<ExtArgs>>): Prisma__PaymentLinkClient<$Result.GetResult<Prisma.$PaymentLinkPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PaymentLink that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentLinkFindFirstOrThrowArgs} args - Arguments to find a PaymentLink
     * @example
     * // Get one PaymentLink
     * const paymentLink = await prisma.paymentLink.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentLinkFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentLinkFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentLinkClient<$Result.GetResult<Prisma.$PaymentLinkPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PaymentLinks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentLinkFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PaymentLinks
     * const paymentLinks = await prisma.paymentLink.findMany()
     * 
     * // Get first 10 PaymentLinks
     * const paymentLinks = await prisma.paymentLink.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentLinkWithIdOnly = await prisma.paymentLink.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentLinkFindManyArgs>(args?: SelectSubset<T, PaymentLinkFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentLinkPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PaymentLink.
     * @param {PaymentLinkCreateArgs} args - Arguments to create a PaymentLink.
     * @example
     * // Create one PaymentLink
     * const PaymentLink = await prisma.paymentLink.create({
     *   data: {
     *     // ... data to create a PaymentLink
     *   }
     * })
     * 
     */
    create<T extends PaymentLinkCreateArgs>(args: SelectSubset<T, PaymentLinkCreateArgs<ExtArgs>>): Prisma__PaymentLinkClient<$Result.GetResult<Prisma.$PaymentLinkPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PaymentLinks.
     * @param {PaymentLinkCreateManyArgs} args - Arguments to create many PaymentLinks.
     * @example
     * // Create many PaymentLinks
     * const paymentLink = await prisma.paymentLink.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentLinkCreateManyArgs>(args?: SelectSubset<T, PaymentLinkCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PaymentLinks and returns the data saved in the database.
     * @param {PaymentLinkCreateManyAndReturnArgs} args - Arguments to create many PaymentLinks.
     * @example
     * // Create many PaymentLinks
     * const paymentLink = await prisma.paymentLink.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PaymentLinks and only return the `id`
     * const paymentLinkWithIdOnly = await prisma.paymentLink.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentLinkCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentLinkCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentLinkPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a PaymentLink.
     * @param {PaymentLinkDeleteArgs} args - Arguments to delete one PaymentLink.
     * @example
     * // Delete one PaymentLink
     * const PaymentLink = await prisma.paymentLink.delete({
     *   where: {
     *     // ... filter to delete one PaymentLink
     *   }
     * })
     * 
     */
    delete<T extends PaymentLinkDeleteArgs>(args: SelectSubset<T, PaymentLinkDeleteArgs<ExtArgs>>): Prisma__PaymentLinkClient<$Result.GetResult<Prisma.$PaymentLinkPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PaymentLink.
     * @param {PaymentLinkUpdateArgs} args - Arguments to update one PaymentLink.
     * @example
     * // Update one PaymentLink
     * const paymentLink = await prisma.paymentLink.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentLinkUpdateArgs>(args: SelectSubset<T, PaymentLinkUpdateArgs<ExtArgs>>): Prisma__PaymentLinkClient<$Result.GetResult<Prisma.$PaymentLinkPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PaymentLinks.
     * @param {PaymentLinkDeleteManyArgs} args - Arguments to filter PaymentLinks to delete.
     * @example
     * // Delete a few PaymentLinks
     * const { count } = await prisma.paymentLink.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentLinkDeleteManyArgs>(args?: SelectSubset<T, PaymentLinkDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentLinks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentLinkUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PaymentLinks
     * const paymentLink = await prisma.paymentLink.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentLinkUpdateManyArgs>(args: SelectSubset<T, PaymentLinkUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PaymentLink.
     * @param {PaymentLinkUpsertArgs} args - Arguments to update or create a PaymentLink.
     * @example
     * // Update or create a PaymentLink
     * const paymentLink = await prisma.paymentLink.upsert({
     *   create: {
     *     // ... data to create a PaymentLink
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PaymentLink we want to update
     *   }
     * })
     */
    upsert<T extends PaymentLinkUpsertArgs>(args: SelectSubset<T, PaymentLinkUpsertArgs<ExtArgs>>): Prisma__PaymentLinkClient<$Result.GetResult<Prisma.$PaymentLinkPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PaymentLinks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentLinkCountArgs} args - Arguments to filter PaymentLinks to count.
     * @example
     * // Count the number of PaymentLinks
     * const count = await prisma.paymentLink.count({
     *   where: {
     *     // ... the filter for the PaymentLinks we want to count
     *   }
     * })
    **/
    count<T extends PaymentLinkCountArgs>(
      args?: Subset<T, PaymentLinkCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentLinkCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PaymentLink.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentLinkAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentLinkAggregateArgs>(args: Subset<T, PaymentLinkAggregateArgs>): Prisma.PrismaPromise<GetPaymentLinkAggregateType<T>>

    /**
     * Group by PaymentLink.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentLinkGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentLinkGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentLinkGroupByArgs['orderBy'] }
        : { orderBy?: PaymentLinkGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentLinkGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentLinkGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PaymentLink model
   */
  readonly fields: PaymentLinkFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PaymentLink.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentLinkClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organization<T extends OrganizationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationDefaultArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    createdBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    executingAgent<T extends AgentDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AgentDefaultArgs<ExtArgs>>): Prisma__AgentClient<$Result.GetResult<Prisma.$AgentPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    price<T extends PaymentLink$priceArgs<ExtArgs> = {}>(args?: Subset<T, PaymentLink$priceArgs<ExtArgs>>): Prisma__PriceClient<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    paymentOrders<T extends PaymentLink$paymentOrdersArgs<ExtArgs> = {}>(args?: Subset<T, PaymentLink$paymentOrdersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentOrderPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PaymentLink model
   */ 
  interface PaymentLinkFieldRefs {
    readonly id: FieldRef<"PaymentLink", 'String'>
    readonly organizationId: FieldRef<"PaymentLink", 'String'>
    readonly createdById: FieldRef<"PaymentLink", 'String'>
    readonly executingAgentId: FieldRef<"PaymentLink", 'String'>
    readonly title: FieldRef<"PaymentLink", 'String'>
    readonly description: FieldRef<"PaymentLink", 'String'>
    readonly referenceId: FieldRef<"PaymentLink", 'String'>
    readonly shortCode: FieldRef<"PaymentLink", 'String'>
    readonly qrCode: FieldRef<"PaymentLink", 'String'>
    readonly priceId: FieldRef<"PaymentLink", 'String'>
    readonly amount: FieldRef<"PaymentLink", 'Decimal'>
    readonly currency: FieldRef<"PaymentLink", 'String'>
    readonly targetAmount: FieldRef<"PaymentLink", 'Decimal'>
    readonly targetCurrency: FieldRef<"PaymentLink", 'String'>
    readonly smartContractAddress: FieldRef<"PaymentLink", 'String'>
    readonly smartContractChainId: FieldRef<"PaymentLink", 'Int'>
    readonly tokenAddress: FieldRef<"PaymentLink", 'String'>
    readonly status: FieldRef<"PaymentLink", 'PaymentLinkStatus'>
    readonly allowMultiplePayments: FieldRef<"PaymentLink", 'Boolean'>
    readonly requiresKyc: FieldRef<"PaymentLink", 'Boolean'>
    readonly expiresAt: FieldRef<"PaymentLink", 'DateTime'>
    readonly redirectUrls: FieldRef<"PaymentLink", 'Json'>
    readonly metadata: FieldRef<"PaymentLink", 'Json'>
    readonly theme: FieldRef<"PaymentLink", 'Json'>
    readonly createdAt: FieldRef<"PaymentLink", 'DateTime'>
    readonly updatedAt: FieldRef<"PaymentLink", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PaymentLink findUnique
   */
  export type PaymentLinkFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLink
     */
    select?: PaymentLinkSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentLinkInclude<ExtArgs> | null
    /**
     * Filter, which PaymentLink to fetch.
     */
    where: PaymentLinkWhereUniqueInput
  }

  /**
   * PaymentLink findUniqueOrThrow
   */
  export type PaymentLinkFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLink
     */
    select?: PaymentLinkSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentLinkInclude<ExtArgs> | null
    /**
     * Filter, which PaymentLink to fetch.
     */
    where: PaymentLinkWhereUniqueInput
  }

  /**
   * PaymentLink findFirst
   */
  export type PaymentLinkFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLink
     */
    select?: PaymentLinkSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentLinkInclude<ExtArgs> | null
    /**
     * Filter, which PaymentLink to fetch.
     */
    where?: PaymentLinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentLinks to fetch.
     */
    orderBy?: PaymentLinkOrderByWithRelationInput | PaymentLinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentLinks.
     */
    cursor?: PaymentLinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentLinks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentLinks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentLinks.
     */
    distinct?: PaymentLinkScalarFieldEnum | PaymentLinkScalarFieldEnum[]
  }

  /**
   * PaymentLink findFirstOrThrow
   */
  export type PaymentLinkFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLink
     */
    select?: PaymentLinkSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentLinkInclude<ExtArgs> | null
    /**
     * Filter, which PaymentLink to fetch.
     */
    where?: PaymentLinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentLinks to fetch.
     */
    orderBy?: PaymentLinkOrderByWithRelationInput | PaymentLinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentLinks.
     */
    cursor?: PaymentLinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentLinks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentLinks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentLinks.
     */
    distinct?: PaymentLinkScalarFieldEnum | PaymentLinkScalarFieldEnum[]
  }

  /**
   * PaymentLink findMany
   */
  export type PaymentLinkFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLink
     */
    select?: PaymentLinkSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentLinkInclude<ExtArgs> | null
    /**
     * Filter, which PaymentLinks to fetch.
     */
    where?: PaymentLinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentLinks to fetch.
     */
    orderBy?: PaymentLinkOrderByWithRelationInput | PaymentLinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PaymentLinks.
     */
    cursor?: PaymentLinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentLinks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentLinks.
     */
    skip?: number
    distinct?: PaymentLinkScalarFieldEnum | PaymentLinkScalarFieldEnum[]
  }

  /**
   * PaymentLink create
   */
  export type PaymentLinkCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLink
     */
    select?: PaymentLinkSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentLinkInclude<ExtArgs> | null
    /**
     * The data needed to create a PaymentLink.
     */
    data: XOR<PaymentLinkCreateInput, PaymentLinkUncheckedCreateInput>
  }

  /**
   * PaymentLink createMany
   */
  export type PaymentLinkCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PaymentLinks.
     */
    data: PaymentLinkCreateManyInput | PaymentLinkCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PaymentLink createManyAndReturn
   */
  export type PaymentLinkCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLink
     */
    select?: PaymentLinkSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many PaymentLinks.
     */
    data: PaymentLinkCreateManyInput | PaymentLinkCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentLinkIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PaymentLink update
   */
  export type PaymentLinkUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLink
     */
    select?: PaymentLinkSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentLinkInclude<ExtArgs> | null
    /**
     * The data needed to update a PaymentLink.
     */
    data: XOR<PaymentLinkUpdateInput, PaymentLinkUncheckedUpdateInput>
    /**
     * Choose, which PaymentLink to update.
     */
    where: PaymentLinkWhereUniqueInput
  }

  /**
   * PaymentLink updateMany
   */
  export type PaymentLinkUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PaymentLinks.
     */
    data: XOR<PaymentLinkUpdateManyMutationInput, PaymentLinkUncheckedUpdateManyInput>
    /**
     * Filter which PaymentLinks to update
     */
    where?: PaymentLinkWhereInput
  }

  /**
   * PaymentLink upsert
   */
  export type PaymentLinkUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLink
     */
    select?: PaymentLinkSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentLinkInclude<ExtArgs> | null
    /**
     * The filter to search for the PaymentLink to update in case it exists.
     */
    where: PaymentLinkWhereUniqueInput
    /**
     * In case the PaymentLink found by the `where` argument doesn't exist, create a new PaymentLink with this data.
     */
    create: XOR<PaymentLinkCreateInput, PaymentLinkUncheckedCreateInput>
    /**
     * In case the PaymentLink was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentLinkUpdateInput, PaymentLinkUncheckedUpdateInput>
  }

  /**
   * PaymentLink delete
   */
  export type PaymentLinkDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLink
     */
    select?: PaymentLinkSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentLinkInclude<ExtArgs> | null
    /**
     * Filter which PaymentLink to delete.
     */
    where: PaymentLinkWhereUniqueInput
  }

  /**
   * PaymentLink deleteMany
   */
  export type PaymentLinkDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentLinks to delete
     */
    where?: PaymentLinkWhereInput
  }

  /**
   * PaymentLink.price
   */
  export type PaymentLink$priceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    where?: PriceWhereInput
  }

  /**
   * PaymentLink.paymentOrders
   */
  export type PaymentLink$paymentOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentOrder
     */
    select?: PaymentOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentOrderInclude<ExtArgs> | null
    where?: PaymentOrderWhereInput
    orderBy?: PaymentOrderOrderByWithRelationInput | PaymentOrderOrderByWithRelationInput[]
    cursor?: PaymentOrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentOrderScalarFieldEnum | PaymentOrderScalarFieldEnum[]
  }

  /**
   * PaymentLink without action
   */
  export type PaymentLinkDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLink
     */
    select?: PaymentLinkSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentLinkInclude<ExtArgs> | null
  }


  /**
   * Model PaymentOrder
   */

  export type AggregatePaymentOrder = {
    _count: PaymentOrderCountAggregateOutputType | null
    _avg: PaymentOrderAvgAggregateOutputType | null
    _sum: PaymentOrderSumAggregateOutputType | null
    _min: PaymentOrderMinAggregateOutputType | null
    _max: PaymentOrderMaxAggregateOutputType | null
  }

  export type PaymentOrderAvgAggregateOutputType = {
    requestedAmount: Decimal | null
    settledAmount: Decimal | null
    exchangeRate: Decimal | null
    platformFee: Decimal | null
    providerFee: Decimal | null
    networkFee: Decimal | null
    totalFee: Decimal | null
    riskScore: number | null
    retryCount: number | null
  }

  export type PaymentOrderSumAggregateOutputType = {
    requestedAmount: Decimal | null
    settledAmount: Decimal | null
    exchangeRate: Decimal | null
    platformFee: Decimal | null
    providerFee: Decimal | null
    networkFee: Decimal | null
    totalFee: Decimal | null
    riskScore: number | null
    retryCount: number | null
  }

  export type PaymentOrderMinAggregateOutputType = {
    id: string | null
    organizationId: string | null
    paymentLinkId: string | null
    customerId: string | null
    orderNumber: string | null
    status: $Enums.PaymentOrderStatus | null
    requestedAmount: Decimal | null
    requestedCurrency: string | null
    settledAmount: Decimal | null
    settledCurrency: string | null
    exchangeRate: Decimal | null
    exchangeRateLockedAt: Date | null
    exchangeRateSource: string | null
    platformFee: Decimal | null
    providerFee: Decimal | null
    networkFee: Decimal | null
    totalFee: Decimal | null
    customerEmail: string | null
    customerName: string | null
    customerWallet: string | null
    customerIp: string | null
    customerCountry: string | null
    riskScore: number | null
    kycStatus: $Enums.KycStatus | null
    kycVerifiedAt: Date | null
    failureReason: string | null
    failureCode: string | null
    retryCount: number | null
    createdAt: Date | null
    startedAt: Date | null
    completedAt: Date | null
    updatedAt: Date | null
  }

  export type PaymentOrderMaxAggregateOutputType = {
    id: string | null
    organizationId: string | null
    paymentLinkId: string | null
    customerId: string | null
    orderNumber: string | null
    status: $Enums.PaymentOrderStatus | null
    requestedAmount: Decimal | null
    requestedCurrency: string | null
    settledAmount: Decimal | null
    settledCurrency: string | null
    exchangeRate: Decimal | null
    exchangeRateLockedAt: Date | null
    exchangeRateSource: string | null
    platformFee: Decimal | null
    providerFee: Decimal | null
    networkFee: Decimal | null
    totalFee: Decimal | null
    customerEmail: string | null
    customerName: string | null
    customerWallet: string | null
    customerIp: string | null
    customerCountry: string | null
    riskScore: number | null
    kycStatus: $Enums.KycStatus | null
    kycVerifiedAt: Date | null
    failureReason: string | null
    failureCode: string | null
    retryCount: number | null
    createdAt: Date | null
    startedAt: Date | null
    completedAt: Date | null
    updatedAt: Date | null
  }

  export type PaymentOrderCountAggregateOutputType = {
    id: number
    organizationId: number
    paymentLinkId: number
    customerId: number
    orderNumber: number
    status: number
    requestedAmount: number
    requestedCurrency: number
    settledAmount: number
    settledCurrency: number
    exchangeRate: number
    exchangeRateLockedAt: number
    exchangeRateSource: number
    platformFee: number
    providerFee: number
    networkFee: number
    totalFee: number
    customerEmail: number
    customerName: number
    customerWallet: number
    customerIp: number
    customerCountry: number
    riskScore: number
    riskFactors: number
    kycStatus: number
    kycVerifiedAt: number
    selectedRoute: number
    failureReason: number
    failureCode: number
    retryCount: number
    createdAt: number
    startedAt: number
    completedAt: number
    updatedAt: number
    _all: number
  }


  export type PaymentOrderAvgAggregateInputType = {
    requestedAmount?: true
    settledAmount?: true
    exchangeRate?: true
    platformFee?: true
    providerFee?: true
    networkFee?: true
    totalFee?: true
    riskScore?: true
    retryCount?: true
  }

  export type PaymentOrderSumAggregateInputType = {
    requestedAmount?: true
    settledAmount?: true
    exchangeRate?: true
    platformFee?: true
    providerFee?: true
    networkFee?: true
    totalFee?: true
    riskScore?: true
    retryCount?: true
  }

  export type PaymentOrderMinAggregateInputType = {
    id?: true
    organizationId?: true
    paymentLinkId?: true
    customerId?: true
    orderNumber?: true
    status?: true
    requestedAmount?: true
    requestedCurrency?: true
    settledAmount?: true
    settledCurrency?: true
    exchangeRate?: true
    exchangeRateLockedAt?: true
    exchangeRateSource?: true
    platformFee?: true
    providerFee?: true
    networkFee?: true
    totalFee?: true
    customerEmail?: true
    customerName?: true
    customerWallet?: true
    customerIp?: true
    customerCountry?: true
    riskScore?: true
    kycStatus?: true
    kycVerifiedAt?: true
    failureReason?: true
    failureCode?: true
    retryCount?: true
    createdAt?: true
    startedAt?: true
    completedAt?: true
    updatedAt?: true
  }

  export type PaymentOrderMaxAggregateInputType = {
    id?: true
    organizationId?: true
    paymentLinkId?: true
    customerId?: true
    orderNumber?: true
    status?: true
    requestedAmount?: true
    requestedCurrency?: true
    settledAmount?: true
    settledCurrency?: true
    exchangeRate?: true
    exchangeRateLockedAt?: true
    exchangeRateSource?: true
    platformFee?: true
    providerFee?: true
    networkFee?: true
    totalFee?: true
    customerEmail?: true
    customerName?: true
    customerWallet?: true
    customerIp?: true
    customerCountry?: true
    riskScore?: true
    kycStatus?: true
    kycVerifiedAt?: true
    failureReason?: true
    failureCode?: true
    retryCount?: true
    createdAt?: true
    startedAt?: true
    completedAt?: true
    updatedAt?: true
  }

  export type PaymentOrderCountAggregateInputType = {
    id?: true
    organizationId?: true
    paymentLinkId?: true
    customerId?: true
    orderNumber?: true
    status?: true
    requestedAmount?: true
    requestedCurrency?: true
    settledAmount?: true
    settledCurrency?: true
    exchangeRate?: true
    exchangeRateLockedAt?: true
    exchangeRateSource?: true
    platformFee?: true
    providerFee?: true
    networkFee?: true
    totalFee?: true
    customerEmail?: true
    customerName?: true
    customerWallet?: true
    customerIp?: true
    customerCountry?: true
    riskScore?: true
    riskFactors?: true
    kycStatus?: true
    kycVerifiedAt?: true
    selectedRoute?: true
    failureReason?: true
    failureCode?: true
    retryCount?: true
    createdAt?: true
    startedAt?: true
    completedAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PaymentOrderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentOrder to aggregate.
     */
    where?: PaymentOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentOrders to fetch.
     */
    orderBy?: PaymentOrderOrderByWithRelationInput | PaymentOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PaymentOrders
    **/
    _count?: true | PaymentOrderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentOrderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentOrderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentOrderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentOrderMaxAggregateInputType
  }

  export type GetPaymentOrderAggregateType<T extends PaymentOrderAggregateArgs> = {
        [P in keyof T & keyof AggregatePaymentOrder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePaymentOrder[P]>
      : GetScalarType<T[P], AggregatePaymentOrder[P]>
  }




  export type PaymentOrderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentOrderWhereInput
    orderBy?: PaymentOrderOrderByWithAggregationInput | PaymentOrderOrderByWithAggregationInput[]
    by: PaymentOrderScalarFieldEnum[] | PaymentOrderScalarFieldEnum
    having?: PaymentOrderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentOrderCountAggregateInputType | true
    _avg?: PaymentOrderAvgAggregateInputType
    _sum?: PaymentOrderSumAggregateInputType
    _min?: PaymentOrderMinAggregateInputType
    _max?: PaymentOrderMaxAggregateInputType
  }

  export type PaymentOrderGroupByOutputType = {
    id: string
    organizationId: string
    paymentLinkId: string
    customerId: string | null
    orderNumber: string
    status: $Enums.PaymentOrderStatus
    requestedAmount: Decimal
    requestedCurrency: string
    settledAmount: Decimal | null
    settledCurrency: string | null
    exchangeRate: Decimal | null
    exchangeRateLockedAt: Date | null
    exchangeRateSource: string | null
    platformFee: Decimal
    providerFee: Decimal
    networkFee: Decimal
    totalFee: Decimal
    customerEmail: string | null
    customerName: string | null
    customerWallet: string | null
    customerIp: string | null
    customerCountry: string | null
    riskScore: number | null
    riskFactors: JsonValue | null
    kycStatus: $Enums.KycStatus
    kycVerifiedAt: Date | null
    selectedRoute: JsonValue | null
    failureReason: string | null
    failureCode: string | null
    retryCount: number
    createdAt: Date
    startedAt: Date | null
    completedAt: Date | null
    updatedAt: Date
    _count: PaymentOrderCountAggregateOutputType | null
    _avg: PaymentOrderAvgAggregateOutputType | null
    _sum: PaymentOrderSumAggregateOutputType | null
    _min: PaymentOrderMinAggregateOutputType | null
    _max: PaymentOrderMaxAggregateOutputType | null
  }

  type GetPaymentOrderGroupByPayload<T extends PaymentOrderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentOrderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentOrderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentOrderGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentOrderGroupByOutputType[P]>
        }
      >
    >


  export type PaymentOrderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    paymentLinkId?: boolean
    customerId?: boolean
    orderNumber?: boolean
    status?: boolean
    requestedAmount?: boolean
    requestedCurrency?: boolean
    settledAmount?: boolean
    settledCurrency?: boolean
    exchangeRate?: boolean
    exchangeRateLockedAt?: boolean
    exchangeRateSource?: boolean
    platformFee?: boolean
    providerFee?: boolean
    networkFee?: boolean
    totalFee?: boolean
    customerEmail?: boolean
    customerName?: boolean
    customerWallet?: boolean
    customerIp?: boolean
    customerCountry?: boolean
    riskScore?: boolean
    riskFactors?: boolean
    kycStatus?: boolean
    kycVerifiedAt?: boolean
    selectedRoute?: boolean
    failureReason?: boolean
    failureCode?: boolean
    retryCount?: boolean
    createdAt?: boolean
    startedAt?: boolean
    completedAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    paymentLink?: boolean | PaymentLinkDefaultArgs<ExtArgs>
    customer?: boolean | PaymentOrder$customerArgs<ExtArgs>
    providerTransactions?: boolean | PaymentOrder$providerTransactionsArgs<ExtArgs>
    blockchainTxs?: boolean | PaymentOrder$blockchainTxsArgs<ExtArgs>
    events?: boolean | PaymentOrder$eventsArgs<ExtArgs>
    agentDecisions?: boolean | PaymentOrder$agentDecisionsArgs<ExtArgs>
    manualSteps?: boolean | PaymentOrder$manualStepsArgs<ExtArgs>
    _count?: boolean | PaymentOrderCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["paymentOrder"]>

  export type PaymentOrderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    paymentLinkId?: boolean
    customerId?: boolean
    orderNumber?: boolean
    status?: boolean
    requestedAmount?: boolean
    requestedCurrency?: boolean
    settledAmount?: boolean
    settledCurrency?: boolean
    exchangeRate?: boolean
    exchangeRateLockedAt?: boolean
    exchangeRateSource?: boolean
    platformFee?: boolean
    providerFee?: boolean
    networkFee?: boolean
    totalFee?: boolean
    customerEmail?: boolean
    customerName?: boolean
    customerWallet?: boolean
    customerIp?: boolean
    customerCountry?: boolean
    riskScore?: boolean
    riskFactors?: boolean
    kycStatus?: boolean
    kycVerifiedAt?: boolean
    selectedRoute?: boolean
    failureReason?: boolean
    failureCode?: boolean
    retryCount?: boolean
    createdAt?: boolean
    startedAt?: boolean
    completedAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    paymentLink?: boolean | PaymentLinkDefaultArgs<ExtArgs>
    customer?: boolean | PaymentOrder$customerArgs<ExtArgs>
  }, ExtArgs["result"]["paymentOrder"]>

  export type PaymentOrderSelectScalar = {
    id?: boolean
    organizationId?: boolean
    paymentLinkId?: boolean
    customerId?: boolean
    orderNumber?: boolean
    status?: boolean
    requestedAmount?: boolean
    requestedCurrency?: boolean
    settledAmount?: boolean
    settledCurrency?: boolean
    exchangeRate?: boolean
    exchangeRateLockedAt?: boolean
    exchangeRateSource?: boolean
    platformFee?: boolean
    providerFee?: boolean
    networkFee?: boolean
    totalFee?: boolean
    customerEmail?: boolean
    customerName?: boolean
    customerWallet?: boolean
    customerIp?: boolean
    customerCountry?: boolean
    riskScore?: boolean
    riskFactors?: boolean
    kycStatus?: boolean
    kycVerifiedAt?: boolean
    selectedRoute?: boolean
    failureReason?: boolean
    failureCode?: boolean
    retryCount?: boolean
    createdAt?: boolean
    startedAt?: boolean
    completedAt?: boolean
    updatedAt?: boolean
  }

  export type PaymentOrderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    paymentLink?: boolean | PaymentLinkDefaultArgs<ExtArgs>
    customer?: boolean | PaymentOrder$customerArgs<ExtArgs>
    providerTransactions?: boolean | PaymentOrder$providerTransactionsArgs<ExtArgs>
    blockchainTxs?: boolean | PaymentOrder$blockchainTxsArgs<ExtArgs>
    events?: boolean | PaymentOrder$eventsArgs<ExtArgs>
    agentDecisions?: boolean | PaymentOrder$agentDecisionsArgs<ExtArgs>
    manualSteps?: boolean | PaymentOrder$manualStepsArgs<ExtArgs>
    _count?: boolean | PaymentOrderCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PaymentOrderIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    paymentLink?: boolean | PaymentLinkDefaultArgs<ExtArgs>
    customer?: boolean | PaymentOrder$customerArgs<ExtArgs>
  }

  export type $PaymentOrderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PaymentOrder"
    objects: {
      organization: Prisma.$OrganizationPayload<ExtArgs>
      paymentLink: Prisma.$PaymentLinkPayload<ExtArgs>
      customer: Prisma.$CustomerPayload<ExtArgs> | null
      providerTransactions: Prisma.$ProviderTransactionPayload<ExtArgs>[]
      blockchainTxs: Prisma.$BlockchainTransactionPayload<ExtArgs>[]
      events: Prisma.$PaymentEventPayload<ExtArgs>[]
      agentDecisions: Prisma.$AgentDecisionPayload<ExtArgs>[]
      manualSteps: Prisma.$ManualProcessStepPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      organizationId: string
      paymentLinkId: string
      customerId: string | null
      orderNumber: string
      status: $Enums.PaymentOrderStatus
      requestedAmount: Prisma.Decimal
      requestedCurrency: string
      settledAmount: Prisma.Decimal | null
      settledCurrency: string | null
      exchangeRate: Prisma.Decimal | null
      exchangeRateLockedAt: Date | null
      exchangeRateSource: string | null
      platformFee: Prisma.Decimal
      providerFee: Prisma.Decimal
      networkFee: Prisma.Decimal
      totalFee: Prisma.Decimal
      customerEmail: string | null
      customerName: string | null
      customerWallet: string | null
      customerIp: string | null
      customerCountry: string | null
      riskScore: number | null
      riskFactors: Prisma.JsonValue | null
      kycStatus: $Enums.KycStatus
      kycVerifiedAt: Date | null
      selectedRoute: Prisma.JsonValue | null
      failureReason: string | null
      failureCode: string | null
      retryCount: number
      createdAt: Date
      startedAt: Date | null
      completedAt: Date | null
      updatedAt: Date
    }, ExtArgs["result"]["paymentOrder"]>
    composites: {}
  }

  type PaymentOrderGetPayload<S extends boolean | null | undefined | PaymentOrderDefaultArgs> = $Result.GetResult<Prisma.$PaymentOrderPayload, S>

  type PaymentOrderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PaymentOrderFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PaymentOrderCountAggregateInputType | true
    }

  export interface PaymentOrderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PaymentOrder'], meta: { name: 'PaymentOrder' } }
    /**
     * Find zero or one PaymentOrder that matches the filter.
     * @param {PaymentOrderFindUniqueArgs} args - Arguments to find a PaymentOrder
     * @example
     * // Get one PaymentOrder
     * const paymentOrder = await prisma.paymentOrder.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentOrderFindUniqueArgs>(args: SelectSubset<T, PaymentOrderFindUniqueArgs<ExtArgs>>): Prisma__PaymentOrderClient<$Result.GetResult<Prisma.$PaymentOrderPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PaymentOrder that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PaymentOrderFindUniqueOrThrowArgs} args - Arguments to find a PaymentOrder
     * @example
     * // Get one PaymentOrder
     * const paymentOrder = await prisma.paymentOrder.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentOrderFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentOrderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentOrderClient<$Result.GetResult<Prisma.$PaymentOrderPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PaymentOrder that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentOrderFindFirstArgs} args - Arguments to find a PaymentOrder
     * @example
     * // Get one PaymentOrder
     * const paymentOrder = await prisma.paymentOrder.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentOrderFindFirstArgs>(args?: SelectSubset<T, PaymentOrderFindFirstArgs<ExtArgs>>): Prisma__PaymentOrderClient<$Result.GetResult<Prisma.$PaymentOrderPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PaymentOrder that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentOrderFindFirstOrThrowArgs} args - Arguments to find a PaymentOrder
     * @example
     * // Get one PaymentOrder
     * const paymentOrder = await prisma.paymentOrder.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentOrderFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentOrderFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentOrderClient<$Result.GetResult<Prisma.$PaymentOrderPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PaymentOrders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentOrderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PaymentOrders
     * const paymentOrders = await prisma.paymentOrder.findMany()
     * 
     * // Get first 10 PaymentOrders
     * const paymentOrders = await prisma.paymentOrder.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentOrderWithIdOnly = await prisma.paymentOrder.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentOrderFindManyArgs>(args?: SelectSubset<T, PaymentOrderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentOrderPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PaymentOrder.
     * @param {PaymentOrderCreateArgs} args - Arguments to create a PaymentOrder.
     * @example
     * // Create one PaymentOrder
     * const PaymentOrder = await prisma.paymentOrder.create({
     *   data: {
     *     // ... data to create a PaymentOrder
     *   }
     * })
     * 
     */
    create<T extends PaymentOrderCreateArgs>(args: SelectSubset<T, PaymentOrderCreateArgs<ExtArgs>>): Prisma__PaymentOrderClient<$Result.GetResult<Prisma.$PaymentOrderPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PaymentOrders.
     * @param {PaymentOrderCreateManyArgs} args - Arguments to create many PaymentOrders.
     * @example
     * // Create many PaymentOrders
     * const paymentOrder = await prisma.paymentOrder.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentOrderCreateManyArgs>(args?: SelectSubset<T, PaymentOrderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PaymentOrders and returns the data saved in the database.
     * @param {PaymentOrderCreateManyAndReturnArgs} args - Arguments to create many PaymentOrders.
     * @example
     * // Create many PaymentOrders
     * const paymentOrder = await prisma.paymentOrder.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PaymentOrders and only return the `id`
     * const paymentOrderWithIdOnly = await prisma.paymentOrder.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentOrderCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentOrderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentOrderPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a PaymentOrder.
     * @param {PaymentOrderDeleteArgs} args - Arguments to delete one PaymentOrder.
     * @example
     * // Delete one PaymentOrder
     * const PaymentOrder = await prisma.paymentOrder.delete({
     *   where: {
     *     // ... filter to delete one PaymentOrder
     *   }
     * })
     * 
     */
    delete<T extends PaymentOrderDeleteArgs>(args: SelectSubset<T, PaymentOrderDeleteArgs<ExtArgs>>): Prisma__PaymentOrderClient<$Result.GetResult<Prisma.$PaymentOrderPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PaymentOrder.
     * @param {PaymentOrderUpdateArgs} args - Arguments to update one PaymentOrder.
     * @example
     * // Update one PaymentOrder
     * const paymentOrder = await prisma.paymentOrder.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentOrderUpdateArgs>(args: SelectSubset<T, PaymentOrderUpdateArgs<ExtArgs>>): Prisma__PaymentOrderClient<$Result.GetResult<Prisma.$PaymentOrderPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PaymentOrders.
     * @param {PaymentOrderDeleteManyArgs} args - Arguments to filter PaymentOrders to delete.
     * @example
     * // Delete a few PaymentOrders
     * const { count } = await prisma.paymentOrder.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentOrderDeleteManyArgs>(args?: SelectSubset<T, PaymentOrderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentOrders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentOrderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PaymentOrders
     * const paymentOrder = await prisma.paymentOrder.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentOrderUpdateManyArgs>(args: SelectSubset<T, PaymentOrderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PaymentOrder.
     * @param {PaymentOrderUpsertArgs} args - Arguments to update or create a PaymentOrder.
     * @example
     * // Update or create a PaymentOrder
     * const paymentOrder = await prisma.paymentOrder.upsert({
     *   create: {
     *     // ... data to create a PaymentOrder
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PaymentOrder we want to update
     *   }
     * })
     */
    upsert<T extends PaymentOrderUpsertArgs>(args: SelectSubset<T, PaymentOrderUpsertArgs<ExtArgs>>): Prisma__PaymentOrderClient<$Result.GetResult<Prisma.$PaymentOrderPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PaymentOrders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentOrderCountArgs} args - Arguments to filter PaymentOrders to count.
     * @example
     * // Count the number of PaymentOrders
     * const count = await prisma.paymentOrder.count({
     *   where: {
     *     // ... the filter for the PaymentOrders we want to count
     *   }
     * })
    **/
    count<T extends PaymentOrderCountArgs>(
      args?: Subset<T, PaymentOrderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentOrderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PaymentOrder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentOrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentOrderAggregateArgs>(args: Subset<T, PaymentOrderAggregateArgs>): Prisma.PrismaPromise<GetPaymentOrderAggregateType<T>>

    /**
     * Group by PaymentOrder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentOrderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentOrderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentOrderGroupByArgs['orderBy'] }
        : { orderBy?: PaymentOrderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentOrderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentOrderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PaymentOrder model
   */
  readonly fields: PaymentOrderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PaymentOrder.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentOrderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organization<T extends OrganizationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationDefaultArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    paymentLink<T extends PaymentLinkDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PaymentLinkDefaultArgs<ExtArgs>>): Prisma__PaymentLinkClient<$Result.GetResult<Prisma.$PaymentLinkPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    customer<T extends PaymentOrder$customerArgs<ExtArgs> = {}>(args?: Subset<T, PaymentOrder$customerArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    providerTransactions<T extends PaymentOrder$providerTransactionsArgs<ExtArgs> = {}>(args?: Subset<T, PaymentOrder$providerTransactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderTransactionPayload<ExtArgs>, T, "findMany"> | Null>
    blockchainTxs<T extends PaymentOrder$blockchainTxsArgs<ExtArgs> = {}>(args?: Subset<T, PaymentOrder$blockchainTxsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlockchainTransactionPayload<ExtArgs>, T, "findMany"> | Null>
    events<T extends PaymentOrder$eventsArgs<ExtArgs> = {}>(args?: Subset<T, PaymentOrder$eventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "findMany"> | Null>
    agentDecisions<T extends PaymentOrder$agentDecisionsArgs<ExtArgs> = {}>(args?: Subset<T, PaymentOrder$agentDecisionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgentDecisionPayload<ExtArgs>, T, "findMany"> | Null>
    manualSteps<T extends PaymentOrder$manualStepsArgs<ExtArgs> = {}>(args?: Subset<T, PaymentOrder$manualStepsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ManualProcessStepPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PaymentOrder model
   */ 
  interface PaymentOrderFieldRefs {
    readonly id: FieldRef<"PaymentOrder", 'String'>
    readonly organizationId: FieldRef<"PaymentOrder", 'String'>
    readonly paymentLinkId: FieldRef<"PaymentOrder", 'String'>
    readonly customerId: FieldRef<"PaymentOrder", 'String'>
    readonly orderNumber: FieldRef<"PaymentOrder", 'String'>
    readonly status: FieldRef<"PaymentOrder", 'PaymentOrderStatus'>
    readonly requestedAmount: FieldRef<"PaymentOrder", 'Decimal'>
    readonly requestedCurrency: FieldRef<"PaymentOrder", 'String'>
    readonly settledAmount: FieldRef<"PaymentOrder", 'Decimal'>
    readonly settledCurrency: FieldRef<"PaymentOrder", 'String'>
    readonly exchangeRate: FieldRef<"PaymentOrder", 'Decimal'>
    readonly exchangeRateLockedAt: FieldRef<"PaymentOrder", 'DateTime'>
    readonly exchangeRateSource: FieldRef<"PaymentOrder", 'String'>
    readonly platformFee: FieldRef<"PaymentOrder", 'Decimal'>
    readonly providerFee: FieldRef<"PaymentOrder", 'Decimal'>
    readonly networkFee: FieldRef<"PaymentOrder", 'Decimal'>
    readonly totalFee: FieldRef<"PaymentOrder", 'Decimal'>
    readonly customerEmail: FieldRef<"PaymentOrder", 'String'>
    readonly customerName: FieldRef<"PaymentOrder", 'String'>
    readonly customerWallet: FieldRef<"PaymentOrder", 'String'>
    readonly customerIp: FieldRef<"PaymentOrder", 'String'>
    readonly customerCountry: FieldRef<"PaymentOrder", 'String'>
    readonly riskScore: FieldRef<"PaymentOrder", 'Int'>
    readonly riskFactors: FieldRef<"PaymentOrder", 'Json'>
    readonly kycStatus: FieldRef<"PaymentOrder", 'KycStatus'>
    readonly kycVerifiedAt: FieldRef<"PaymentOrder", 'DateTime'>
    readonly selectedRoute: FieldRef<"PaymentOrder", 'Json'>
    readonly failureReason: FieldRef<"PaymentOrder", 'String'>
    readonly failureCode: FieldRef<"PaymentOrder", 'String'>
    readonly retryCount: FieldRef<"PaymentOrder", 'Int'>
    readonly createdAt: FieldRef<"PaymentOrder", 'DateTime'>
    readonly startedAt: FieldRef<"PaymentOrder", 'DateTime'>
    readonly completedAt: FieldRef<"PaymentOrder", 'DateTime'>
    readonly updatedAt: FieldRef<"PaymentOrder", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PaymentOrder findUnique
   */
  export type PaymentOrderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentOrder
     */
    select?: PaymentOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentOrderInclude<ExtArgs> | null
    /**
     * Filter, which PaymentOrder to fetch.
     */
    where: PaymentOrderWhereUniqueInput
  }

  /**
   * PaymentOrder findUniqueOrThrow
   */
  export type PaymentOrderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentOrder
     */
    select?: PaymentOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentOrderInclude<ExtArgs> | null
    /**
     * Filter, which PaymentOrder to fetch.
     */
    where: PaymentOrderWhereUniqueInput
  }

  /**
   * PaymentOrder findFirst
   */
  export type PaymentOrderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentOrder
     */
    select?: PaymentOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentOrderInclude<ExtArgs> | null
    /**
     * Filter, which PaymentOrder to fetch.
     */
    where?: PaymentOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentOrders to fetch.
     */
    orderBy?: PaymentOrderOrderByWithRelationInput | PaymentOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentOrders.
     */
    cursor?: PaymentOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentOrders.
     */
    distinct?: PaymentOrderScalarFieldEnum | PaymentOrderScalarFieldEnum[]
  }

  /**
   * PaymentOrder findFirstOrThrow
   */
  export type PaymentOrderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentOrder
     */
    select?: PaymentOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentOrderInclude<ExtArgs> | null
    /**
     * Filter, which PaymentOrder to fetch.
     */
    where?: PaymentOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentOrders to fetch.
     */
    orderBy?: PaymentOrderOrderByWithRelationInput | PaymentOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentOrders.
     */
    cursor?: PaymentOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentOrders.
     */
    distinct?: PaymentOrderScalarFieldEnum | PaymentOrderScalarFieldEnum[]
  }

  /**
   * PaymentOrder findMany
   */
  export type PaymentOrderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentOrder
     */
    select?: PaymentOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentOrderInclude<ExtArgs> | null
    /**
     * Filter, which PaymentOrders to fetch.
     */
    where?: PaymentOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentOrders to fetch.
     */
    orderBy?: PaymentOrderOrderByWithRelationInput | PaymentOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PaymentOrders.
     */
    cursor?: PaymentOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentOrders.
     */
    skip?: number
    distinct?: PaymentOrderScalarFieldEnum | PaymentOrderScalarFieldEnum[]
  }

  /**
   * PaymentOrder create
   */
  export type PaymentOrderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentOrder
     */
    select?: PaymentOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentOrderInclude<ExtArgs> | null
    /**
     * The data needed to create a PaymentOrder.
     */
    data: XOR<PaymentOrderCreateInput, PaymentOrderUncheckedCreateInput>
  }

  /**
   * PaymentOrder createMany
   */
  export type PaymentOrderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PaymentOrders.
     */
    data: PaymentOrderCreateManyInput | PaymentOrderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PaymentOrder createManyAndReturn
   */
  export type PaymentOrderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentOrder
     */
    select?: PaymentOrderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many PaymentOrders.
     */
    data: PaymentOrderCreateManyInput | PaymentOrderCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentOrderIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PaymentOrder update
   */
  export type PaymentOrderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentOrder
     */
    select?: PaymentOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentOrderInclude<ExtArgs> | null
    /**
     * The data needed to update a PaymentOrder.
     */
    data: XOR<PaymentOrderUpdateInput, PaymentOrderUncheckedUpdateInput>
    /**
     * Choose, which PaymentOrder to update.
     */
    where: PaymentOrderWhereUniqueInput
  }

  /**
   * PaymentOrder updateMany
   */
  export type PaymentOrderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PaymentOrders.
     */
    data: XOR<PaymentOrderUpdateManyMutationInput, PaymentOrderUncheckedUpdateManyInput>
    /**
     * Filter which PaymentOrders to update
     */
    where?: PaymentOrderWhereInput
  }

  /**
   * PaymentOrder upsert
   */
  export type PaymentOrderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentOrder
     */
    select?: PaymentOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentOrderInclude<ExtArgs> | null
    /**
     * The filter to search for the PaymentOrder to update in case it exists.
     */
    where: PaymentOrderWhereUniqueInput
    /**
     * In case the PaymentOrder found by the `where` argument doesn't exist, create a new PaymentOrder with this data.
     */
    create: XOR<PaymentOrderCreateInput, PaymentOrderUncheckedCreateInput>
    /**
     * In case the PaymentOrder was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentOrderUpdateInput, PaymentOrderUncheckedUpdateInput>
  }

  /**
   * PaymentOrder delete
   */
  export type PaymentOrderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentOrder
     */
    select?: PaymentOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentOrderInclude<ExtArgs> | null
    /**
     * Filter which PaymentOrder to delete.
     */
    where: PaymentOrderWhereUniqueInput
  }

  /**
   * PaymentOrder deleteMany
   */
  export type PaymentOrderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentOrders to delete
     */
    where?: PaymentOrderWhereInput
  }

  /**
   * PaymentOrder.customer
   */
  export type PaymentOrder$customerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    where?: CustomerWhereInput
  }

  /**
   * PaymentOrder.providerTransactions
   */
  export type PaymentOrder$providerTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderTransaction
     */
    select?: ProviderTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderTransactionInclude<ExtArgs> | null
    where?: ProviderTransactionWhereInput
    orderBy?: ProviderTransactionOrderByWithRelationInput | ProviderTransactionOrderByWithRelationInput[]
    cursor?: ProviderTransactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProviderTransactionScalarFieldEnum | ProviderTransactionScalarFieldEnum[]
  }

  /**
   * PaymentOrder.blockchainTxs
   */
  export type PaymentOrder$blockchainTxsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlockchainTransaction
     */
    select?: BlockchainTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlockchainTransactionInclude<ExtArgs> | null
    where?: BlockchainTransactionWhereInput
    orderBy?: BlockchainTransactionOrderByWithRelationInput | BlockchainTransactionOrderByWithRelationInput[]
    cursor?: BlockchainTransactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BlockchainTransactionScalarFieldEnum | BlockchainTransactionScalarFieldEnum[]
  }

  /**
   * PaymentOrder.events
   */
  export type PaymentOrder$eventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentEventInclude<ExtArgs> | null
    where?: PaymentEventWhereInput
    orderBy?: PaymentEventOrderByWithRelationInput | PaymentEventOrderByWithRelationInput[]
    cursor?: PaymentEventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentEventScalarFieldEnum | PaymentEventScalarFieldEnum[]
  }

  /**
   * PaymentOrder.agentDecisions
   */
  export type PaymentOrder$agentDecisionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentDecision
     */
    select?: AgentDecisionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentDecisionInclude<ExtArgs> | null
    where?: AgentDecisionWhereInput
    orderBy?: AgentDecisionOrderByWithRelationInput | AgentDecisionOrderByWithRelationInput[]
    cursor?: AgentDecisionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AgentDecisionScalarFieldEnum | AgentDecisionScalarFieldEnum[]
  }

  /**
   * PaymentOrder.manualSteps
   */
  export type PaymentOrder$manualStepsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManualProcessStep
     */
    select?: ManualProcessStepSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManualProcessStepInclude<ExtArgs> | null
    where?: ManualProcessStepWhereInput
    orderBy?: ManualProcessStepOrderByWithRelationInput | ManualProcessStepOrderByWithRelationInput[]
    cursor?: ManualProcessStepWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ManualProcessStepScalarFieldEnum | ManualProcessStepScalarFieldEnum[]
  }

  /**
   * PaymentOrder without action
   */
  export type PaymentOrderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentOrder
     */
    select?: PaymentOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentOrderInclude<ExtArgs> | null
  }


  /**
   * Model Provider
   */

  export type AggregateProvider = {
    _count: ProviderCountAggregateOutputType | null
    _avg: ProviderAvgAggregateOutputType | null
    _sum: ProviderSumAggregateOutputType | null
    _min: ProviderMinAggregateOutputType | null
    _max: ProviderMaxAggregateOutputType | null
  }

  export type ProviderAvgAggregateOutputType = {
    avgResponseTime: number | null
    successRate: Decimal | null
  }

  export type ProviderSumAggregateOutputType = {
    avgResponseTime: number | null
    successRate: Decimal | null
  }

  export type ProviderMinAggregateOutputType = {
    id: string | null
    code: string | null
    name: string | null
    type: $Enums.ProviderType | null
    isActive: boolean | null
    healthStatus: $Enums.ProviderHealth | null
    lastHealthCheck: Date | null
    avgResponseTime: number | null
    successRate: Decimal | null
  }

  export type ProviderMaxAggregateOutputType = {
    id: string | null
    code: string | null
    name: string | null
    type: $Enums.ProviderType | null
    isActive: boolean | null
    healthStatus: $Enums.ProviderHealth | null
    lastHealthCheck: Date | null
    avgResponseTime: number | null
    successRate: Decimal | null
  }

  export type ProviderCountAggregateOutputType = {
    id: number
    code: number
    name: number
    type: number
    supportedCountries: number
    supportedCurrencies: number
    paymentMethods: number
    features: number
    isActive: number
    healthStatus: number
    lastHealthCheck: number
    avgResponseTime: number
    successRate: number
    _all: number
  }


  export type ProviderAvgAggregateInputType = {
    avgResponseTime?: true
    successRate?: true
  }

  export type ProviderSumAggregateInputType = {
    avgResponseTime?: true
    successRate?: true
  }

  export type ProviderMinAggregateInputType = {
    id?: true
    code?: true
    name?: true
    type?: true
    isActive?: true
    healthStatus?: true
    lastHealthCheck?: true
    avgResponseTime?: true
    successRate?: true
  }

  export type ProviderMaxAggregateInputType = {
    id?: true
    code?: true
    name?: true
    type?: true
    isActive?: true
    healthStatus?: true
    lastHealthCheck?: true
    avgResponseTime?: true
    successRate?: true
  }

  export type ProviderCountAggregateInputType = {
    id?: true
    code?: true
    name?: true
    type?: true
    supportedCountries?: true
    supportedCurrencies?: true
    paymentMethods?: true
    features?: true
    isActive?: true
    healthStatus?: true
    lastHealthCheck?: true
    avgResponseTime?: true
    successRate?: true
    _all?: true
  }

  export type ProviderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Provider to aggregate.
     */
    where?: ProviderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Providers to fetch.
     */
    orderBy?: ProviderOrderByWithRelationInput | ProviderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProviderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Providers
    **/
    _count?: true | ProviderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProviderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProviderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProviderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProviderMaxAggregateInputType
  }

  export type GetProviderAggregateType<T extends ProviderAggregateArgs> = {
        [P in keyof T & keyof AggregateProvider]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProvider[P]>
      : GetScalarType<T[P], AggregateProvider[P]>
  }




  export type ProviderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProviderWhereInput
    orderBy?: ProviderOrderByWithAggregationInput | ProviderOrderByWithAggregationInput[]
    by: ProviderScalarFieldEnum[] | ProviderScalarFieldEnum
    having?: ProviderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProviderCountAggregateInputType | true
    _avg?: ProviderAvgAggregateInputType
    _sum?: ProviderSumAggregateInputType
    _min?: ProviderMinAggregateInputType
    _max?: ProviderMaxAggregateInputType
  }

  export type ProviderGroupByOutputType = {
    id: string
    code: string
    name: string
    type: $Enums.ProviderType
    supportedCountries: string[]
    supportedCurrencies: string[]
    paymentMethods: string[]
    features: JsonValue
    isActive: boolean
    healthStatus: $Enums.ProviderHealth
    lastHealthCheck: Date
    avgResponseTime: number | null
    successRate: Decimal | null
    _count: ProviderCountAggregateOutputType | null
    _avg: ProviderAvgAggregateOutputType | null
    _sum: ProviderSumAggregateOutputType | null
    _min: ProviderMinAggregateOutputType | null
    _max: ProviderMaxAggregateOutputType | null
  }

  type GetProviderGroupByPayload<T extends ProviderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProviderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProviderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProviderGroupByOutputType[P]>
            : GetScalarType<T[P], ProviderGroupByOutputType[P]>
        }
      >
    >


  export type ProviderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    name?: boolean
    type?: boolean
    supportedCountries?: boolean
    supportedCurrencies?: boolean
    paymentMethods?: boolean
    features?: boolean
    isActive?: boolean
    healthStatus?: boolean
    lastHealthCheck?: boolean
    avgResponseTime?: boolean
    successRate?: boolean
    configs?: boolean | Provider$configsArgs<ExtArgs>
    routes?: boolean | Provider$routesArgs<ExtArgs>
    transactions?: boolean | Provider$transactionsArgs<ExtArgs>
    _count?: boolean | ProviderCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["provider"]>

  export type ProviderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    name?: boolean
    type?: boolean
    supportedCountries?: boolean
    supportedCurrencies?: boolean
    paymentMethods?: boolean
    features?: boolean
    isActive?: boolean
    healthStatus?: boolean
    lastHealthCheck?: boolean
    avgResponseTime?: boolean
    successRate?: boolean
  }, ExtArgs["result"]["provider"]>

  export type ProviderSelectScalar = {
    id?: boolean
    code?: boolean
    name?: boolean
    type?: boolean
    supportedCountries?: boolean
    supportedCurrencies?: boolean
    paymentMethods?: boolean
    features?: boolean
    isActive?: boolean
    healthStatus?: boolean
    lastHealthCheck?: boolean
    avgResponseTime?: boolean
    successRate?: boolean
  }

  export type ProviderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configs?: boolean | Provider$configsArgs<ExtArgs>
    routes?: boolean | Provider$routesArgs<ExtArgs>
    transactions?: boolean | Provider$transactionsArgs<ExtArgs>
    _count?: boolean | ProviderCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProviderIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ProviderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Provider"
    objects: {
      configs: Prisma.$ProviderConfigPayload<ExtArgs>[]
      routes: Prisma.$ProviderRoutePayload<ExtArgs>[]
      transactions: Prisma.$ProviderTransactionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      code: string
      name: string
      type: $Enums.ProviderType
      supportedCountries: string[]
      supportedCurrencies: string[]
      paymentMethods: string[]
      features: Prisma.JsonValue
      isActive: boolean
      healthStatus: $Enums.ProviderHealth
      lastHealthCheck: Date
      avgResponseTime: number | null
      successRate: Prisma.Decimal | null
    }, ExtArgs["result"]["provider"]>
    composites: {}
  }

  type ProviderGetPayload<S extends boolean | null | undefined | ProviderDefaultArgs> = $Result.GetResult<Prisma.$ProviderPayload, S>

  type ProviderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProviderFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProviderCountAggregateInputType | true
    }

  export interface ProviderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Provider'], meta: { name: 'Provider' } }
    /**
     * Find zero or one Provider that matches the filter.
     * @param {ProviderFindUniqueArgs} args - Arguments to find a Provider
     * @example
     * // Get one Provider
     * const provider = await prisma.provider.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProviderFindUniqueArgs>(args: SelectSubset<T, ProviderFindUniqueArgs<ExtArgs>>): Prisma__ProviderClient<$Result.GetResult<Prisma.$ProviderPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Provider that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProviderFindUniqueOrThrowArgs} args - Arguments to find a Provider
     * @example
     * // Get one Provider
     * const provider = await prisma.provider.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProviderFindUniqueOrThrowArgs>(args: SelectSubset<T, ProviderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProviderClient<$Result.GetResult<Prisma.$ProviderPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Provider that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderFindFirstArgs} args - Arguments to find a Provider
     * @example
     * // Get one Provider
     * const provider = await prisma.provider.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProviderFindFirstArgs>(args?: SelectSubset<T, ProviderFindFirstArgs<ExtArgs>>): Prisma__ProviderClient<$Result.GetResult<Prisma.$ProviderPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Provider that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderFindFirstOrThrowArgs} args - Arguments to find a Provider
     * @example
     * // Get one Provider
     * const provider = await prisma.provider.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProviderFindFirstOrThrowArgs>(args?: SelectSubset<T, ProviderFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProviderClient<$Result.GetResult<Prisma.$ProviderPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Providers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Providers
     * const providers = await prisma.provider.findMany()
     * 
     * // Get first 10 Providers
     * const providers = await prisma.provider.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const providerWithIdOnly = await prisma.provider.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProviderFindManyArgs>(args?: SelectSubset<T, ProviderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Provider.
     * @param {ProviderCreateArgs} args - Arguments to create a Provider.
     * @example
     * // Create one Provider
     * const Provider = await prisma.provider.create({
     *   data: {
     *     // ... data to create a Provider
     *   }
     * })
     * 
     */
    create<T extends ProviderCreateArgs>(args: SelectSubset<T, ProviderCreateArgs<ExtArgs>>): Prisma__ProviderClient<$Result.GetResult<Prisma.$ProviderPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Providers.
     * @param {ProviderCreateManyArgs} args - Arguments to create many Providers.
     * @example
     * // Create many Providers
     * const provider = await prisma.provider.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProviderCreateManyArgs>(args?: SelectSubset<T, ProviderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Providers and returns the data saved in the database.
     * @param {ProviderCreateManyAndReturnArgs} args - Arguments to create many Providers.
     * @example
     * // Create many Providers
     * const provider = await prisma.provider.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Providers and only return the `id`
     * const providerWithIdOnly = await prisma.provider.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProviderCreateManyAndReturnArgs>(args?: SelectSubset<T, ProviderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Provider.
     * @param {ProviderDeleteArgs} args - Arguments to delete one Provider.
     * @example
     * // Delete one Provider
     * const Provider = await prisma.provider.delete({
     *   where: {
     *     // ... filter to delete one Provider
     *   }
     * })
     * 
     */
    delete<T extends ProviderDeleteArgs>(args: SelectSubset<T, ProviderDeleteArgs<ExtArgs>>): Prisma__ProviderClient<$Result.GetResult<Prisma.$ProviderPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Provider.
     * @param {ProviderUpdateArgs} args - Arguments to update one Provider.
     * @example
     * // Update one Provider
     * const provider = await prisma.provider.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProviderUpdateArgs>(args: SelectSubset<T, ProviderUpdateArgs<ExtArgs>>): Prisma__ProviderClient<$Result.GetResult<Prisma.$ProviderPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Providers.
     * @param {ProviderDeleteManyArgs} args - Arguments to filter Providers to delete.
     * @example
     * // Delete a few Providers
     * const { count } = await prisma.provider.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProviderDeleteManyArgs>(args?: SelectSubset<T, ProviderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Providers
     * const provider = await prisma.provider.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProviderUpdateManyArgs>(args: SelectSubset<T, ProviderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Provider.
     * @param {ProviderUpsertArgs} args - Arguments to update or create a Provider.
     * @example
     * // Update or create a Provider
     * const provider = await prisma.provider.upsert({
     *   create: {
     *     // ... data to create a Provider
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Provider we want to update
     *   }
     * })
     */
    upsert<T extends ProviderUpsertArgs>(args: SelectSubset<T, ProviderUpsertArgs<ExtArgs>>): Prisma__ProviderClient<$Result.GetResult<Prisma.$ProviderPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderCountArgs} args - Arguments to filter Providers to count.
     * @example
     * // Count the number of Providers
     * const count = await prisma.provider.count({
     *   where: {
     *     // ... the filter for the Providers we want to count
     *   }
     * })
    **/
    count<T extends ProviderCountArgs>(
      args?: Subset<T, ProviderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProviderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Provider.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProviderAggregateArgs>(args: Subset<T, ProviderAggregateArgs>): Prisma.PrismaPromise<GetProviderAggregateType<T>>

    /**
     * Group by Provider.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProviderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProviderGroupByArgs['orderBy'] }
        : { orderBy?: ProviderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProviderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProviderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Provider model
   */
  readonly fields: ProviderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Provider.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProviderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    configs<T extends Provider$configsArgs<ExtArgs> = {}>(args?: Subset<T, Provider$configsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderConfigPayload<ExtArgs>, T, "findMany"> | Null>
    routes<T extends Provider$routesArgs<ExtArgs> = {}>(args?: Subset<T, Provider$routesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderRoutePayload<ExtArgs>, T, "findMany"> | Null>
    transactions<T extends Provider$transactionsArgs<ExtArgs> = {}>(args?: Subset<T, Provider$transactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderTransactionPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Provider model
   */ 
  interface ProviderFieldRefs {
    readonly id: FieldRef<"Provider", 'String'>
    readonly code: FieldRef<"Provider", 'String'>
    readonly name: FieldRef<"Provider", 'String'>
    readonly type: FieldRef<"Provider", 'ProviderType'>
    readonly supportedCountries: FieldRef<"Provider", 'String[]'>
    readonly supportedCurrencies: FieldRef<"Provider", 'String[]'>
    readonly paymentMethods: FieldRef<"Provider", 'String[]'>
    readonly features: FieldRef<"Provider", 'Json'>
    readonly isActive: FieldRef<"Provider", 'Boolean'>
    readonly healthStatus: FieldRef<"Provider", 'ProviderHealth'>
    readonly lastHealthCheck: FieldRef<"Provider", 'DateTime'>
    readonly avgResponseTime: FieldRef<"Provider", 'Int'>
    readonly successRate: FieldRef<"Provider", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * Provider findUnique
   */
  export type ProviderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provider
     */
    select?: ProviderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderInclude<ExtArgs> | null
    /**
     * Filter, which Provider to fetch.
     */
    where: ProviderWhereUniqueInput
  }

  /**
   * Provider findUniqueOrThrow
   */
  export type ProviderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provider
     */
    select?: ProviderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderInclude<ExtArgs> | null
    /**
     * Filter, which Provider to fetch.
     */
    where: ProviderWhereUniqueInput
  }

  /**
   * Provider findFirst
   */
  export type ProviderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provider
     */
    select?: ProviderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderInclude<ExtArgs> | null
    /**
     * Filter, which Provider to fetch.
     */
    where?: ProviderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Providers to fetch.
     */
    orderBy?: ProviderOrderByWithRelationInput | ProviderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Providers.
     */
    cursor?: ProviderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Providers.
     */
    distinct?: ProviderScalarFieldEnum | ProviderScalarFieldEnum[]
  }

  /**
   * Provider findFirstOrThrow
   */
  export type ProviderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provider
     */
    select?: ProviderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderInclude<ExtArgs> | null
    /**
     * Filter, which Provider to fetch.
     */
    where?: ProviderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Providers to fetch.
     */
    orderBy?: ProviderOrderByWithRelationInput | ProviderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Providers.
     */
    cursor?: ProviderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Providers.
     */
    distinct?: ProviderScalarFieldEnum | ProviderScalarFieldEnum[]
  }

  /**
   * Provider findMany
   */
  export type ProviderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provider
     */
    select?: ProviderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderInclude<ExtArgs> | null
    /**
     * Filter, which Providers to fetch.
     */
    where?: ProviderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Providers to fetch.
     */
    orderBy?: ProviderOrderByWithRelationInput | ProviderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Providers.
     */
    cursor?: ProviderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Providers.
     */
    skip?: number
    distinct?: ProviderScalarFieldEnum | ProviderScalarFieldEnum[]
  }

  /**
   * Provider create
   */
  export type ProviderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provider
     */
    select?: ProviderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderInclude<ExtArgs> | null
    /**
     * The data needed to create a Provider.
     */
    data: XOR<ProviderCreateInput, ProviderUncheckedCreateInput>
  }

  /**
   * Provider createMany
   */
  export type ProviderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Providers.
     */
    data: ProviderCreateManyInput | ProviderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Provider createManyAndReturn
   */
  export type ProviderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provider
     */
    select?: ProviderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Providers.
     */
    data: ProviderCreateManyInput | ProviderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Provider update
   */
  export type ProviderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provider
     */
    select?: ProviderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderInclude<ExtArgs> | null
    /**
     * The data needed to update a Provider.
     */
    data: XOR<ProviderUpdateInput, ProviderUncheckedUpdateInput>
    /**
     * Choose, which Provider to update.
     */
    where: ProviderWhereUniqueInput
  }

  /**
   * Provider updateMany
   */
  export type ProviderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Providers.
     */
    data: XOR<ProviderUpdateManyMutationInput, ProviderUncheckedUpdateManyInput>
    /**
     * Filter which Providers to update
     */
    where?: ProviderWhereInput
  }

  /**
   * Provider upsert
   */
  export type ProviderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provider
     */
    select?: ProviderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderInclude<ExtArgs> | null
    /**
     * The filter to search for the Provider to update in case it exists.
     */
    where: ProviderWhereUniqueInput
    /**
     * In case the Provider found by the `where` argument doesn't exist, create a new Provider with this data.
     */
    create: XOR<ProviderCreateInput, ProviderUncheckedCreateInput>
    /**
     * In case the Provider was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProviderUpdateInput, ProviderUncheckedUpdateInput>
  }

  /**
   * Provider delete
   */
  export type ProviderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provider
     */
    select?: ProviderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderInclude<ExtArgs> | null
    /**
     * Filter which Provider to delete.
     */
    where: ProviderWhereUniqueInput
  }

  /**
   * Provider deleteMany
   */
  export type ProviderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Providers to delete
     */
    where?: ProviderWhereInput
  }

  /**
   * Provider.configs
   */
  export type Provider$configsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderConfig
     */
    select?: ProviderConfigSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderConfigInclude<ExtArgs> | null
    where?: ProviderConfigWhereInput
    orderBy?: ProviderConfigOrderByWithRelationInput | ProviderConfigOrderByWithRelationInput[]
    cursor?: ProviderConfigWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProviderConfigScalarFieldEnum | ProviderConfigScalarFieldEnum[]
  }

  /**
   * Provider.routes
   */
  export type Provider$routesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderRoute
     */
    select?: ProviderRouteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderRouteInclude<ExtArgs> | null
    where?: ProviderRouteWhereInput
    orderBy?: ProviderRouteOrderByWithRelationInput | ProviderRouteOrderByWithRelationInput[]
    cursor?: ProviderRouteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProviderRouteScalarFieldEnum | ProviderRouteScalarFieldEnum[]
  }

  /**
   * Provider.transactions
   */
  export type Provider$transactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderTransaction
     */
    select?: ProviderTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderTransactionInclude<ExtArgs> | null
    where?: ProviderTransactionWhereInput
    orderBy?: ProviderTransactionOrderByWithRelationInput | ProviderTransactionOrderByWithRelationInput[]
    cursor?: ProviderTransactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProviderTransactionScalarFieldEnum | ProviderTransactionScalarFieldEnum[]
  }

  /**
   * Provider without action
   */
  export type ProviderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provider
     */
    select?: ProviderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderInclude<ExtArgs> | null
  }


  /**
   * Model ProviderConfig
   */

  export type AggregateProviderConfig = {
    _count: ProviderConfigCountAggregateOutputType | null
    _min: ProviderConfigMinAggregateOutputType | null
    _max: ProviderConfigMaxAggregateOutputType | null
  }

  export type ProviderConfigMinAggregateOutputType = {
    id: string | null
    organizationId: string | null
    providerId: string | null
    environment: $Enums.Environment | null
    webhookSecret: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProviderConfigMaxAggregateOutputType = {
    id: string | null
    organizationId: string | null
    providerId: string | null
    environment: $Enums.Environment | null
    webhookSecret: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProviderConfigCountAggregateOutputType = {
    id: number
    organizationId: number
    providerId: number
    environment: number
    credentials: number
    webhookSecret: number
    settings: number
    isActive: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProviderConfigMinAggregateInputType = {
    id?: true
    organizationId?: true
    providerId?: true
    environment?: true
    webhookSecret?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProviderConfigMaxAggregateInputType = {
    id?: true
    organizationId?: true
    providerId?: true
    environment?: true
    webhookSecret?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProviderConfigCountAggregateInputType = {
    id?: true
    organizationId?: true
    providerId?: true
    environment?: true
    credentials?: true
    webhookSecret?: true
    settings?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProviderConfigAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProviderConfig to aggregate.
     */
    where?: ProviderConfigWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderConfigs to fetch.
     */
    orderBy?: ProviderConfigOrderByWithRelationInput | ProviderConfigOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProviderConfigWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderConfigs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderConfigs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProviderConfigs
    **/
    _count?: true | ProviderConfigCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProviderConfigMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProviderConfigMaxAggregateInputType
  }

  export type GetProviderConfigAggregateType<T extends ProviderConfigAggregateArgs> = {
        [P in keyof T & keyof AggregateProviderConfig]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProviderConfig[P]>
      : GetScalarType<T[P], AggregateProviderConfig[P]>
  }




  export type ProviderConfigGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProviderConfigWhereInput
    orderBy?: ProviderConfigOrderByWithAggregationInput | ProviderConfigOrderByWithAggregationInput[]
    by: ProviderConfigScalarFieldEnum[] | ProviderConfigScalarFieldEnum
    having?: ProviderConfigScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProviderConfigCountAggregateInputType | true
    _min?: ProviderConfigMinAggregateInputType
    _max?: ProviderConfigMaxAggregateInputType
  }

  export type ProviderConfigGroupByOutputType = {
    id: string
    organizationId: string
    providerId: string
    environment: $Enums.Environment
    credentials: JsonValue
    webhookSecret: string | null
    settings: JsonValue
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    _count: ProviderConfigCountAggregateOutputType | null
    _min: ProviderConfigMinAggregateOutputType | null
    _max: ProviderConfigMaxAggregateOutputType | null
  }

  type GetProviderConfigGroupByPayload<T extends ProviderConfigGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProviderConfigGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProviderConfigGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProviderConfigGroupByOutputType[P]>
            : GetScalarType<T[P], ProviderConfigGroupByOutputType[P]>
        }
      >
    >


  export type ProviderConfigSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    providerId?: boolean
    environment?: boolean
    credentials?: boolean
    webhookSecret?: boolean
    settings?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    provider?: boolean | ProviderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["providerConfig"]>

  export type ProviderConfigSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    providerId?: boolean
    environment?: boolean
    credentials?: boolean
    webhookSecret?: boolean
    settings?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    provider?: boolean | ProviderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["providerConfig"]>

  export type ProviderConfigSelectScalar = {
    id?: boolean
    organizationId?: boolean
    providerId?: boolean
    environment?: boolean
    credentials?: boolean
    webhookSecret?: boolean
    settings?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProviderConfigInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    provider?: boolean | ProviderDefaultArgs<ExtArgs>
  }
  export type ProviderConfigIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    provider?: boolean | ProviderDefaultArgs<ExtArgs>
  }

  export type $ProviderConfigPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProviderConfig"
    objects: {
      organization: Prisma.$OrganizationPayload<ExtArgs>
      provider: Prisma.$ProviderPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      organizationId: string
      providerId: string
      environment: $Enums.Environment
      credentials: Prisma.JsonValue
      webhookSecret: string | null
      settings: Prisma.JsonValue
      isActive: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["providerConfig"]>
    composites: {}
  }

  type ProviderConfigGetPayload<S extends boolean | null | undefined | ProviderConfigDefaultArgs> = $Result.GetResult<Prisma.$ProviderConfigPayload, S>

  type ProviderConfigCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProviderConfigFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProviderConfigCountAggregateInputType | true
    }

  export interface ProviderConfigDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProviderConfig'], meta: { name: 'ProviderConfig' } }
    /**
     * Find zero or one ProviderConfig that matches the filter.
     * @param {ProviderConfigFindUniqueArgs} args - Arguments to find a ProviderConfig
     * @example
     * // Get one ProviderConfig
     * const providerConfig = await prisma.providerConfig.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProviderConfigFindUniqueArgs>(args: SelectSubset<T, ProviderConfigFindUniqueArgs<ExtArgs>>): Prisma__ProviderConfigClient<$Result.GetResult<Prisma.$ProviderConfigPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ProviderConfig that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProviderConfigFindUniqueOrThrowArgs} args - Arguments to find a ProviderConfig
     * @example
     * // Get one ProviderConfig
     * const providerConfig = await prisma.providerConfig.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProviderConfigFindUniqueOrThrowArgs>(args: SelectSubset<T, ProviderConfigFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProviderConfigClient<$Result.GetResult<Prisma.$ProviderConfigPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ProviderConfig that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderConfigFindFirstArgs} args - Arguments to find a ProviderConfig
     * @example
     * // Get one ProviderConfig
     * const providerConfig = await prisma.providerConfig.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProviderConfigFindFirstArgs>(args?: SelectSubset<T, ProviderConfigFindFirstArgs<ExtArgs>>): Prisma__ProviderConfigClient<$Result.GetResult<Prisma.$ProviderConfigPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ProviderConfig that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderConfigFindFirstOrThrowArgs} args - Arguments to find a ProviderConfig
     * @example
     * // Get one ProviderConfig
     * const providerConfig = await prisma.providerConfig.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProviderConfigFindFirstOrThrowArgs>(args?: SelectSubset<T, ProviderConfigFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProviderConfigClient<$Result.GetResult<Prisma.$ProviderConfigPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ProviderConfigs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderConfigFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProviderConfigs
     * const providerConfigs = await prisma.providerConfig.findMany()
     * 
     * // Get first 10 ProviderConfigs
     * const providerConfigs = await prisma.providerConfig.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const providerConfigWithIdOnly = await prisma.providerConfig.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProviderConfigFindManyArgs>(args?: SelectSubset<T, ProviderConfigFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderConfigPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ProviderConfig.
     * @param {ProviderConfigCreateArgs} args - Arguments to create a ProviderConfig.
     * @example
     * // Create one ProviderConfig
     * const ProviderConfig = await prisma.providerConfig.create({
     *   data: {
     *     // ... data to create a ProviderConfig
     *   }
     * })
     * 
     */
    create<T extends ProviderConfigCreateArgs>(args: SelectSubset<T, ProviderConfigCreateArgs<ExtArgs>>): Prisma__ProviderConfigClient<$Result.GetResult<Prisma.$ProviderConfigPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ProviderConfigs.
     * @param {ProviderConfigCreateManyArgs} args - Arguments to create many ProviderConfigs.
     * @example
     * // Create many ProviderConfigs
     * const providerConfig = await prisma.providerConfig.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProviderConfigCreateManyArgs>(args?: SelectSubset<T, ProviderConfigCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProviderConfigs and returns the data saved in the database.
     * @param {ProviderConfigCreateManyAndReturnArgs} args - Arguments to create many ProviderConfigs.
     * @example
     * // Create many ProviderConfigs
     * const providerConfig = await prisma.providerConfig.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProviderConfigs and only return the `id`
     * const providerConfigWithIdOnly = await prisma.providerConfig.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProviderConfigCreateManyAndReturnArgs>(args?: SelectSubset<T, ProviderConfigCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderConfigPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ProviderConfig.
     * @param {ProviderConfigDeleteArgs} args - Arguments to delete one ProviderConfig.
     * @example
     * // Delete one ProviderConfig
     * const ProviderConfig = await prisma.providerConfig.delete({
     *   where: {
     *     // ... filter to delete one ProviderConfig
     *   }
     * })
     * 
     */
    delete<T extends ProviderConfigDeleteArgs>(args: SelectSubset<T, ProviderConfigDeleteArgs<ExtArgs>>): Prisma__ProviderConfigClient<$Result.GetResult<Prisma.$ProviderConfigPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ProviderConfig.
     * @param {ProviderConfigUpdateArgs} args - Arguments to update one ProviderConfig.
     * @example
     * // Update one ProviderConfig
     * const providerConfig = await prisma.providerConfig.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProviderConfigUpdateArgs>(args: SelectSubset<T, ProviderConfigUpdateArgs<ExtArgs>>): Prisma__ProviderConfigClient<$Result.GetResult<Prisma.$ProviderConfigPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ProviderConfigs.
     * @param {ProviderConfigDeleteManyArgs} args - Arguments to filter ProviderConfigs to delete.
     * @example
     * // Delete a few ProviderConfigs
     * const { count } = await prisma.providerConfig.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProviderConfigDeleteManyArgs>(args?: SelectSubset<T, ProviderConfigDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProviderConfigs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderConfigUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProviderConfigs
     * const providerConfig = await prisma.providerConfig.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProviderConfigUpdateManyArgs>(args: SelectSubset<T, ProviderConfigUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ProviderConfig.
     * @param {ProviderConfigUpsertArgs} args - Arguments to update or create a ProviderConfig.
     * @example
     * // Update or create a ProviderConfig
     * const providerConfig = await prisma.providerConfig.upsert({
     *   create: {
     *     // ... data to create a ProviderConfig
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProviderConfig we want to update
     *   }
     * })
     */
    upsert<T extends ProviderConfigUpsertArgs>(args: SelectSubset<T, ProviderConfigUpsertArgs<ExtArgs>>): Prisma__ProviderConfigClient<$Result.GetResult<Prisma.$ProviderConfigPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ProviderConfigs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderConfigCountArgs} args - Arguments to filter ProviderConfigs to count.
     * @example
     * // Count the number of ProviderConfigs
     * const count = await prisma.providerConfig.count({
     *   where: {
     *     // ... the filter for the ProviderConfigs we want to count
     *   }
     * })
    **/
    count<T extends ProviderConfigCountArgs>(
      args?: Subset<T, ProviderConfigCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProviderConfigCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProviderConfig.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderConfigAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProviderConfigAggregateArgs>(args: Subset<T, ProviderConfigAggregateArgs>): Prisma.PrismaPromise<GetProviderConfigAggregateType<T>>

    /**
     * Group by ProviderConfig.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderConfigGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProviderConfigGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProviderConfigGroupByArgs['orderBy'] }
        : { orderBy?: ProviderConfigGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProviderConfigGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProviderConfigGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProviderConfig model
   */
  readonly fields: ProviderConfigFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProviderConfig.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProviderConfigClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organization<T extends OrganizationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationDefaultArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    provider<T extends ProviderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProviderDefaultArgs<ExtArgs>>): Prisma__ProviderClient<$Result.GetResult<Prisma.$ProviderPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProviderConfig model
   */ 
  interface ProviderConfigFieldRefs {
    readonly id: FieldRef<"ProviderConfig", 'String'>
    readonly organizationId: FieldRef<"ProviderConfig", 'String'>
    readonly providerId: FieldRef<"ProviderConfig", 'String'>
    readonly environment: FieldRef<"ProviderConfig", 'Environment'>
    readonly credentials: FieldRef<"ProviderConfig", 'Json'>
    readonly webhookSecret: FieldRef<"ProviderConfig", 'String'>
    readonly settings: FieldRef<"ProviderConfig", 'Json'>
    readonly isActive: FieldRef<"ProviderConfig", 'Boolean'>
    readonly createdAt: FieldRef<"ProviderConfig", 'DateTime'>
    readonly updatedAt: FieldRef<"ProviderConfig", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProviderConfig findUnique
   */
  export type ProviderConfigFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderConfig
     */
    select?: ProviderConfigSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderConfigInclude<ExtArgs> | null
    /**
     * Filter, which ProviderConfig to fetch.
     */
    where: ProviderConfigWhereUniqueInput
  }

  /**
   * ProviderConfig findUniqueOrThrow
   */
  export type ProviderConfigFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderConfig
     */
    select?: ProviderConfigSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderConfigInclude<ExtArgs> | null
    /**
     * Filter, which ProviderConfig to fetch.
     */
    where: ProviderConfigWhereUniqueInput
  }

  /**
   * ProviderConfig findFirst
   */
  export type ProviderConfigFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderConfig
     */
    select?: ProviderConfigSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderConfigInclude<ExtArgs> | null
    /**
     * Filter, which ProviderConfig to fetch.
     */
    where?: ProviderConfigWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderConfigs to fetch.
     */
    orderBy?: ProviderConfigOrderByWithRelationInput | ProviderConfigOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProviderConfigs.
     */
    cursor?: ProviderConfigWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderConfigs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderConfigs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProviderConfigs.
     */
    distinct?: ProviderConfigScalarFieldEnum | ProviderConfigScalarFieldEnum[]
  }

  /**
   * ProviderConfig findFirstOrThrow
   */
  export type ProviderConfigFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderConfig
     */
    select?: ProviderConfigSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderConfigInclude<ExtArgs> | null
    /**
     * Filter, which ProviderConfig to fetch.
     */
    where?: ProviderConfigWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderConfigs to fetch.
     */
    orderBy?: ProviderConfigOrderByWithRelationInput | ProviderConfigOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProviderConfigs.
     */
    cursor?: ProviderConfigWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderConfigs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderConfigs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProviderConfigs.
     */
    distinct?: ProviderConfigScalarFieldEnum | ProviderConfigScalarFieldEnum[]
  }

  /**
   * ProviderConfig findMany
   */
  export type ProviderConfigFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderConfig
     */
    select?: ProviderConfigSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderConfigInclude<ExtArgs> | null
    /**
     * Filter, which ProviderConfigs to fetch.
     */
    where?: ProviderConfigWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderConfigs to fetch.
     */
    orderBy?: ProviderConfigOrderByWithRelationInput | ProviderConfigOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProviderConfigs.
     */
    cursor?: ProviderConfigWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderConfigs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderConfigs.
     */
    skip?: number
    distinct?: ProviderConfigScalarFieldEnum | ProviderConfigScalarFieldEnum[]
  }

  /**
   * ProviderConfig create
   */
  export type ProviderConfigCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderConfig
     */
    select?: ProviderConfigSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderConfigInclude<ExtArgs> | null
    /**
     * The data needed to create a ProviderConfig.
     */
    data: XOR<ProviderConfigCreateInput, ProviderConfigUncheckedCreateInput>
  }

  /**
   * ProviderConfig createMany
   */
  export type ProviderConfigCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProviderConfigs.
     */
    data: ProviderConfigCreateManyInput | ProviderConfigCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProviderConfig createManyAndReturn
   */
  export type ProviderConfigCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderConfig
     */
    select?: ProviderConfigSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ProviderConfigs.
     */
    data: ProviderConfigCreateManyInput | ProviderConfigCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderConfigIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProviderConfig update
   */
  export type ProviderConfigUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderConfig
     */
    select?: ProviderConfigSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderConfigInclude<ExtArgs> | null
    /**
     * The data needed to update a ProviderConfig.
     */
    data: XOR<ProviderConfigUpdateInput, ProviderConfigUncheckedUpdateInput>
    /**
     * Choose, which ProviderConfig to update.
     */
    where: ProviderConfigWhereUniqueInput
  }

  /**
   * ProviderConfig updateMany
   */
  export type ProviderConfigUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProviderConfigs.
     */
    data: XOR<ProviderConfigUpdateManyMutationInput, ProviderConfigUncheckedUpdateManyInput>
    /**
     * Filter which ProviderConfigs to update
     */
    where?: ProviderConfigWhereInput
  }

  /**
   * ProviderConfig upsert
   */
  export type ProviderConfigUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderConfig
     */
    select?: ProviderConfigSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderConfigInclude<ExtArgs> | null
    /**
     * The filter to search for the ProviderConfig to update in case it exists.
     */
    where: ProviderConfigWhereUniqueInput
    /**
     * In case the ProviderConfig found by the `where` argument doesn't exist, create a new ProviderConfig with this data.
     */
    create: XOR<ProviderConfigCreateInput, ProviderConfigUncheckedCreateInput>
    /**
     * In case the ProviderConfig was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProviderConfigUpdateInput, ProviderConfigUncheckedUpdateInput>
  }

  /**
   * ProviderConfig delete
   */
  export type ProviderConfigDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderConfig
     */
    select?: ProviderConfigSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderConfigInclude<ExtArgs> | null
    /**
     * Filter which ProviderConfig to delete.
     */
    where: ProviderConfigWhereUniqueInput
  }

  /**
   * ProviderConfig deleteMany
   */
  export type ProviderConfigDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProviderConfigs to delete
     */
    where?: ProviderConfigWhereInput
  }

  /**
   * ProviderConfig without action
   */
  export type ProviderConfigDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderConfig
     */
    select?: ProviderConfigSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderConfigInclude<ExtArgs> | null
  }


  /**
   * Model ProviderRoute
   */

  export type AggregateProviderRoute = {
    _count: ProviderRouteCountAggregateOutputType | null
    _avg: ProviderRouteAvgAggregateOutputType | null
    _sum: ProviderRouteSumAggregateOutputType | null
    _min: ProviderRouteMinAggregateOutputType | null
    _max: ProviderRouteMaxAggregateOutputType | null
  }

  export type ProviderRouteAvgAggregateOutputType = {
    fixedFee: Decimal | null
    percentageFee: Decimal | null
    minAmount: Decimal | null
    maxAmount: Decimal | null
    estimatedTime: number | null
    priority: number | null
  }

  export type ProviderRouteSumAggregateOutputType = {
    fixedFee: Decimal | null
    percentageFee: Decimal | null
    minAmount: Decimal | null
    maxAmount: Decimal | null
    estimatedTime: number | null
    priority: number | null
  }

  export type ProviderRouteMinAggregateOutputType = {
    id: string | null
    providerId: string | null
    name: string | null
    fromCountry: string | null
    toCountry: string | null
    fromCurrency: string | null
    toCurrency: string | null
    paymentMethod: string | null
    fixedFee: Decimal | null
    percentageFee: Decimal | null
    minAmount: Decimal | null
    maxAmount: Decimal | null
    estimatedTime: number | null
    cutoffTime: string | null
    isActive: boolean | null
    priority: number | null
  }

  export type ProviderRouteMaxAggregateOutputType = {
    id: string | null
    providerId: string | null
    name: string | null
    fromCountry: string | null
    toCountry: string | null
    fromCurrency: string | null
    toCurrency: string | null
    paymentMethod: string | null
    fixedFee: Decimal | null
    percentageFee: Decimal | null
    minAmount: Decimal | null
    maxAmount: Decimal | null
    estimatedTime: number | null
    cutoffTime: string | null
    isActive: boolean | null
    priority: number | null
  }

  export type ProviderRouteCountAggregateOutputType = {
    id: number
    providerId: number
    name: number
    fromCountry: number
    toCountry: number
    fromCurrency: number
    toCurrency: number
    paymentMethod: number
    fixedFee: number
    percentageFee: number
    minAmount: number
    maxAmount: number
    estimatedTime: number
    cutoffTime: number
    workingDays: number
    isActive: number
    priority: number
    _all: number
  }


  export type ProviderRouteAvgAggregateInputType = {
    fixedFee?: true
    percentageFee?: true
    minAmount?: true
    maxAmount?: true
    estimatedTime?: true
    priority?: true
  }

  export type ProviderRouteSumAggregateInputType = {
    fixedFee?: true
    percentageFee?: true
    minAmount?: true
    maxAmount?: true
    estimatedTime?: true
    priority?: true
  }

  export type ProviderRouteMinAggregateInputType = {
    id?: true
    providerId?: true
    name?: true
    fromCountry?: true
    toCountry?: true
    fromCurrency?: true
    toCurrency?: true
    paymentMethod?: true
    fixedFee?: true
    percentageFee?: true
    minAmount?: true
    maxAmount?: true
    estimatedTime?: true
    cutoffTime?: true
    isActive?: true
    priority?: true
  }

  export type ProviderRouteMaxAggregateInputType = {
    id?: true
    providerId?: true
    name?: true
    fromCountry?: true
    toCountry?: true
    fromCurrency?: true
    toCurrency?: true
    paymentMethod?: true
    fixedFee?: true
    percentageFee?: true
    minAmount?: true
    maxAmount?: true
    estimatedTime?: true
    cutoffTime?: true
    isActive?: true
    priority?: true
  }

  export type ProviderRouteCountAggregateInputType = {
    id?: true
    providerId?: true
    name?: true
    fromCountry?: true
    toCountry?: true
    fromCurrency?: true
    toCurrency?: true
    paymentMethod?: true
    fixedFee?: true
    percentageFee?: true
    minAmount?: true
    maxAmount?: true
    estimatedTime?: true
    cutoffTime?: true
    workingDays?: true
    isActive?: true
    priority?: true
    _all?: true
  }

  export type ProviderRouteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProviderRoute to aggregate.
     */
    where?: ProviderRouteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderRoutes to fetch.
     */
    orderBy?: ProviderRouteOrderByWithRelationInput | ProviderRouteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProviderRouteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderRoutes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderRoutes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProviderRoutes
    **/
    _count?: true | ProviderRouteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProviderRouteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProviderRouteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProviderRouteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProviderRouteMaxAggregateInputType
  }

  export type GetProviderRouteAggregateType<T extends ProviderRouteAggregateArgs> = {
        [P in keyof T & keyof AggregateProviderRoute]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProviderRoute[P]>
      : GetScalarType<T[P], AggregateProviderRoute[P]>
  }




  export type ProviderRouteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProviderRouteWhereInput
    orderBy?: ProviderRouteOrderByWithAggregationInput | ProviderRouteOrderByWithAggregationInput[]
    by: ProviderRouteScalarFieldEnum[] | ProviderRouteScalarFieldEnum
    having?: ProviderRouteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProviderRouteCountAggregateInputType | true
    _avg?: ProviderRouteAvgAggregateInputType
    _sum?: ProviderRouteSumAggregateInputType
    _min?: ProviderRouteMinAggregateInputType
    _max?: ProviderRouteMaxAggregateInputType
  }

  export type ProviderRouteGroupByOutputType = {
    id: string
    providerId: string
    name: string
    fromCountry: string
    toCountry: string
    fromCurrency: string
    toCurrency: string
    paymentMethod: string
    fixedFee: Decimal
    percentageFee: Decimal
    minAmount: Decimal
    maxAmount: Decimal
    estimatedTime: number
    cutoffTime: string | null
    workingDays: string[]
    isActive: boolean
    priority: number
    _count: ProviderRouteCountAggregateOutputType | null
    _avg: ProviderRouteAvgAggregateOutputType | null
    _sum: ProviderRouteSumAggregateOutputType | null
    _min: ProviderRouteMinAggregateOutputType | null
    _max: ProviderRouteMaxAggregateOutputType | null
  }

  type GetProviderRouteGroupByPayload<T extends ProviderRouteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProviderRouteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProviderRouteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProviderRouteGroupByOutputType[P]>
            : GetScalarType<T[P], ProviderRouteGroupByOutputType[P]>
        }
      >
    >


  export type ProviderRouteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    providerId?: boolean
    name?: boolean
    fromCountry?: boolean
    toCountry?: boolean
    fromCurrency?: boolean
    toCurrency?: boolean
    paymentMethod?: boolean
    fixedFee?: boolean
    percentageFee?: boolean
    minAmount?: boolean
    maxAmount?: boolean
    estimatedTime?: boolean
    cutoffTime?: boolean
    workingDays?: boolean
    isActive?: boolean
    priority?: boolean
    provider?: boolean | ProviderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["providerRoute"]>

  export type ProviderRouteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    providerId?: boolean
    name?: boolean
    fromCountry?: boolean
    toCountry?: boolean
    fromCurrency?: boolean
    toCurrency?: boolean
    paymentMethod?: boolean
    fixedFee?: boolean
    percentageFee?: boolean
    minAmount?: boolean
    maxAmount?: boolean
    estimatedTime?: boolean
    cutoffTime?: boolean
    workingDays?: boolean
    isActive?: boolean
    priority?: boolean
    provider?: boolean | ProviderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["providerRoute"]>

  export type ProviderRouteSelectScalar = {
    id?: boolean
    providerId?: boolean
    name?: boolean
    fromCountry?: boolean
    toCountry?: boolean
    fromCurrency?: boolean
    toCurrency?: boolean
    paymentMethod?: boolean
    fixedFee?: boolean
    percentageFee?: boolean
    minAmount?: boolean
    maxAmount?: boolean
    estimatedTime?: boolean
    cutoffTime?: boolean
    workingDays?: boolean
    isActive?: boolean
    priority?: boolean
  }

  export type ProviderRouteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provider?: boolean | ProviderDefaultArgs<ExtArgs>
  }
  export type ProviderRouteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provider?: boolean | ProviderDefaultArgs<ExtArgs>
  }

  export type $ProviderRoutePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProviderRoute"
    objects: {
      provider: Prisma.$ProviderPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      providerId: string
      name: string
      fromCountry: string
      toCountry: string
      fromCurrency: string
      toCurrency: string
      paymentMethod: string
      fixedFee: Prisma.Decimal
      percentageFee: Prisma.Decimal
      minAmount: Prisma.Decimal
      maxAmount: Prisma.Decimal
      estimatedTime: number
      cutoffTime: string | null
      workingDays: string[]
      isActive: boolean
      priority: number
    }, ExtArgs["result"]["providerRoute"]>
    composites: {}
  }

  type ProviderRouteGetPayload<S extends boolean | null | undefined | ProviderRouteDefaultArgs> = $Result.GetResult<Prisma.$ProviderRoutePayload, S>

  type ProviderRouteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProviderRouteFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProviderRouteCountAggregateInputType | true
    }

  export interface ProviderRouteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProviderRoute'], meta: { name: 'ProviderRoute' } }
    /**
     * Find zero or one ProviderRoute that matches the filter.
     * @param {ProviderRouteFindUniqueArgs} args - Arguments to find a ProviderRoute
     * @example
     * // Get one ProviderRoute
     * const providerRoute = await prisma.providerRoute.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProviderRouteFindUniqueArgs>(args: SelectSubset<T, ProviderRouteFindUniqueArgs<ExtArgs>>): Prisma__ProviderRouteClient<$Result.GetResult<Prisma.$ProviderRoutePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ProviderRoute that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProviderRouteFindUniqueOrThrowArgs} args - Arguments to find a ProviderRoute
     * @example
     * // Get one ProviderRoute
     * const providerRoute = await prisma.providerRoute.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProviderRouteFindUniqueOrThrowArgs>(args: SelectSubset<T, ProviderRouteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProviderRouteClient<$Result.GetResult<Prisma.$ProviderRoutePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ProviderRoute that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderRouteFindFirstArgs} args - Arguments to find a ProviderRoute
     * @example
     * // Get one ProviderRoute
     * const providerRoute = await prisma.providerRoute.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProviderRouteFindFirstArgs>(args?: SelectSubset<T, ProviderRouteFindFirstArgs<ExtArgs>>): Prisma__ProviderRouteClient<$Result.GetResult<Prisma.$ProviderRoutePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ProviderRoute that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderRouteFindFirstOrThrowArgs} args - Arguments to find a ProviderRoute
     * @example
     * // Get one ProviderRoute
     * const providerRoute = await prisma.providerRoute.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProviderRouteFindFirstOrThrowArgs>(args?: SelectSubset<T, ProviderRouteFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProviderRouteClient<$Result.GetResult<Prisma.$ProviderRoutePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ProviderRoutes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderRouteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProviderRoutes
     * const providerRoutes = await prisma.providerRoute.findMany()
     * 
     * // Get first 10 ProviderRoutes
     * const providerRoutes = await prisma.providerRoute.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const providerRouteWithIdOnly = await prisma.providerRoute.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProviderRouteFindManyArgs>(args?: SelectSubset<T, ProviderRouteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderRoutePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ProviderRoute.
     * @param {ProviderRouteCreateArgs} args - Arguments to create a ProviderRoute.
     * @example
     * // Create one ProviderRoute
     * const ProviderRoute = await prisma.providerRoute.create({
     *   data: {
     *     // ... data to create a ProviderRoute
     *   }
     * })
     * 
     */
    create<T extends ProviderRouteCreateArgs>(args: SelectSubset<T, ProviderRouteCreateArgs<ExtArgs>>): Prisma__ProviderRouteClient<$Result.GetResult<Prisma.$ProviderRoutePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ProviderRoutes.
     * @param {ProviderRouteCreateManyArgs} args - Arguments to create many ProviderRoutes.
     * @example
     * // Create many ProviderRoutes
     * const providerRoute = await prisma.providerRoute.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProviderRouteCreateManyArgs>(args?: SelectSubset<T, ProviderRouteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProviderRoutes and returns the data saved in the database.
     * @param {ProviderRouteCreateManyAndReturnArgs} args - Arguments to create many ProviderRoutes.
     * @example
     * // Create many ProviderRoutes
     * const providerRoute = await prisma.providerRoute.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProviderRoutes and only return the `id`
     * const providerRouteWithIdOnly = await prisma.providerRoute.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProviderRouteCreateManyAndReturnArgs>(args?: SelectSubset<T, ProviderRouteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderRoutePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ProviderRoute.
     * @param {ProviderRouteDeleteArgs} args - Arguments to delete one ProviderRoute.
     * @example
     * // Delete one ProviderRoute
     * const ProviderRoute = await prisma.providerRoute.delete({
     *   where: {
     *     // ... filter to delete one ProviderRoute
     *   }
     * })
     * 
     */
    delete<T extends ProviderRouteDeleteArgs>(args: SelectSubset<T, ProviderRouteDeleteArgs<ExtArgs>>): Prisma__ProviderRouteClient<$Result.GetResult<Prisma.$ProviderRoutePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ProviderRoute.
     * @param {ProviderRouteUpdateArgs} args - Arguments to update one ProviderRoute.
     * @example
     * // Update one ProviderRoute
     * const providerRoute = await prisma.providerRoute.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProviderRouteUpdateArgs>(args: SelectSubset<T, ProviderRouteUpdateArgs<ExtArgs>>): Prisma__ProviderRouteClient<$Result.GetResult<Prisma.$ProviderRoutePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ProviderRoutes.
     * @param {ProviderRouteDeleteManyArgs} args - Arguments to filter ProviderRoutes to delete.
     * @example
     * // Delete a few ProviderRoutes
     * const { count } = await prisma.providerRoute.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProviderRouteDeleteManyArgs>(args?: SelectSubset<T, ProviderRouteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProviderRoutes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderRouteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProviderRoutes
     * const providerRoute = await prisma.providerRoute.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProviderRouteUpdateManyArgs>(args: SelectSubset<T, ProviderRouteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ProviderRoute.
     * @param {ProviderRouteUpsertArgs} args - Arguments to update or create a ProviderRoute.
     * @example
     * // Update or create a ProviderRoute
     * const providerRoute = await prisma.providerRoute.upsert({
     *   create: {
     *     // ... data to create a ProviderRoute
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProviderRoute we want to update
     *   }
     * })
     */
    upsert<T extends ProviderRouteUpsertArgs>(args: SelectSubset<T, ProviderRouteUpsertArgs<ExtArgs>>): Prisma__ProviderRouteClient<$Result.GetResult<Prisma.$ProviderRoutePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ProviderRoutes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderRouteCountArgs} args - Arguments to filter ProviderRoutes to count.
     * @example
     * // Count the number of ProviderRoutes
     * const count = await prisma.providerRoute.count({
     *   where: {
     *     // ... the filter for the ProviderRoutes we want to count
     *   }
     * })
    **/
    count<T extends ProviderRouteCountArgs>(
      args?: Subset<T, ProviderRouteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProviderRouteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProviderRoute.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderRouteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProviderRouteAggregateArgs>(args: Subset<T, ProviderRouteAggregateArgs>): Prisma.PrismaPromise<GetProviderRouteAggregateType<T>>

    /**
     * Group by ProviderRoute.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderRouteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProviderRouteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProviderRouteGroupByArgs['orderBy'] }
        : { orderBy?: ProviderRouteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProviderRouteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProviderRouteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProviderRoute model
   */
  readonly fields: ProviderRouteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProviderRoute.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProviderRouteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    provider<T extends ProviderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProviderDefaultArgs<ExtArgs>>): Prisma__ProviderClient<$Result.GetResult<Prisma.$ProviderPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProviderRoute model
   */ 
  interface ProviderRouteFieldRefs {
    readonly id: FieldRef<"ProviderRoute", 'String'>
    readonly providerId: FieldRef<"ProviderRoute", 'String'>
    readonly name: FieldRef<"ProviderRoute", 'String'>
    readonly fromCountry: FieldRef<"ProviderRoute", 'String'>
    readonly toCountry: FieldRef<"ProviderRoute", 'String'>
    readonly fromCurrency: FieldRef<"ProviderRoute", 'String'>
    readonly toCurrency: FieldRef<"ProviderRoute", 'String'>
    readonly paymentMethod: FieldRef<"ProviderRoute", 'String'>
    readonly fixedFee: FieldRef<"ProviderRoute", 'Decimal'>
    readonly percentageFee: FieldRef<"ProviderRoute", 'Decimal'>
    readonly minAmount: FieldRef<"ProviderRoute", 'Decimal'>
    readonly maxAmount: FieldRef<"ProviderRoute", 'Decimal'>
    readonly estimatedTime: FieldRef<"ProviderRoute", 'Int'>
    readonly cutoffTime: FieldRef<"ProviderRoute", 'String'>
    readonly workingDays: FieldRef<"ProviderRoute", 'String[]'>
    readonly isActive: FieldRef<"ProviderRoute", 'Boolean'>
    readonly priority: FieldRef<"ProviderRoute", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * ProviderRoute findUnique
   */
  export type ProviderRouteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderRoute
     */
    select?: ProviderRouteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderRouteInclude<ExtArgs> | null
    /**
     * Filter, which ProviderRoute to fetch.
     */
    where: ProviderRouteWhereUniqueInput
  }

  /**
   * ProviderRoute findUniqueOrThrow
   */
  export type ProviderRouteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderRoute
     */
    select?: ProviderRouteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderRouteInclude<ExtArgs> | null
    /**
     * Filter, which ProviderRoute to fetch.
     */
    where: ProviderRouteWhereUniqueInput
  }

  /**
   * ProviderRoute findFirst
   */
  export type ProviderRouteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderRoute
     */
    select?: ProviderRouteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderRouteInclude<ExtArgs> | null
    /**
     * Filter, which ProviderRoute to fetch.
     */
    where?: ProviderRouteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderRoutes to fetch.
     */
    orderBy?: ProviderRouteOrderByWithRelationInput | ProviderRouteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProviderRoutes.
     */
    cursor?: ProviderRouteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderRoutes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderRoutes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProviderRoutes.
     */
    distinct?: ProviderRouteScalarFieldEnum | ProviderRouteScalarFieldEnum[]
  }

  /**
   * ProviderRoute findFirstOrThrow
   */
  export type ProviderRouteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderRoute
     */
    select?: ProviderRouteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderRouteInclude<ExtArgs> | null
    /**
     * Filter, which ProviderRoute to fetch.
     */
    where?: ProviderRouteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderRoutes to fetch.
     */
    orderBy?: ProviderRouteOrderByWithRelationInput | ProviderRouteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProviderRoutes.
     */
    cursor?: ProviderRouteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderRoutes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderRoutes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProviderRoutes.
     */
    distinct?: ProviderRouteScalarFieldEnum | ProviderRouteScalarFieldEnum[]
  }

  /**
   * ProviderRoute findMany
   */
  export type ProviderRouteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderRoute
     */
    select?: ProviderRouteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderRouteInclude<ExtArgs> | null
    /**
     * Filter, which ProviderRoutes to fetch.
     */
    where?: ProviderRouteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderRoutes to fetch.
     */
    orderBy?: ProviderRouteOrderByWithRelationInput | ProviderRouteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProviderRoutes.
     */
    cursor?: ProviderRouteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderRoutes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderRoutes.
     */
    skip?: number
    distinct?: ProviderRouteScalarFieldEnum | ProviderRouteScalarFieldEnum[]
  }

  /**
   * ProviderRoute create
   */
  export type ProviderRouteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderRoute
     */
    select?: ProviderRouteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderRouteInclude<ExtArgs> | null
    /**
     * The data needed to create a ProviderRoute.
     */
    data: XOR<ProviderRouteCreateInput, ProviderRouteUncheckedCreateInput>
  }

  /**
   * ProviderRoute createMany
   */
  export type ProviderRouteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProviderRoutes.
     */
    data: ProviderRouteCreateManyInput | ProviderRouteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProviderRoute createManyAndReturn
   */
  export type ProviderRouteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderRoute
     */
    select?: ProviderRouteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ProviderRoutes.
     */
    data: ProviderRouteCreateManyInput | ProviderRouteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderRouteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProviderRoute update
   */
  export type ProviderRouteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderRoute
     */
    select?: ProviderRouteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderRouteInclude<ExtArgs> | null
    /**
     * The data needed to update a ProviderRoute.
     */
    data: XOR<ProviderRouteUpdateInput, ProviderRouteUncheckedUpdateInput>
    /**
     * Choose, which ProviderRoute to update.
     */
    where: ProviderRouteWhereUniqueInput
  }

  /**
   * ProviderRoute updateMany
   */
  export type ProviderRouteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProviderRoutes.
     */
    data: XOR<ProviderRouteUpdateManyMutationInput, ProviderRouteUncheckedUpdateManyInput>
    /**
     * Filter which ProviderRoutes to update
     */
    where?: ProviderRouteWhereInput
  }

  /**
   * ProviderRoute upsert
   */
  export type ProviderRouteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderRoute
     */
    select?: ProviderRouteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderRouteInclude<ExtArgs> | null
    /**
     * The filter to search for the ProviderRoute to update in case it exists.
     */
    where: ProviderRouteWhereUniqueInput
    /**
     * In case the ProviderRoute found by the `where` argument doesn't exist, create a new ProviderRoute with this data.
     */
    create: XOR<ProviderRouteCreateInput, ProviderRouteUncheckedCreateInput>
    /**
     * In case the ProviderRoute was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProviderRouteUpdateInput, ProviderRouteUncheckedUpdateInput>
  }

  /**
   * ProviderRoute delete
   */
  export type ProviderRouteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderRoute
     */
    select?: ProviderRouteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderRouteInclude<ExtArgs> | null
    /**
     * Filter which ProviderRoute to delete.
     */
    where: ProviderRouteWhereUniqueInput
  }

  /**
   * ProviderRoute deleteMany
   */
  export type ProviderRouteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProviderRoutes to delete
     */
    where?: ProviderRouteWhereInput
  }

  /**
   * ProviderRoute without action
   */
  export type ProviderRouteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderRoute
     */
    select?: ProviderRouteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderRouteInclude<ExtArgs> | null
  }


  /**
   * Model ProviderTransaction
   */

  export type AggregateProviderTransaction = {
    _count: ProviderTransactionCountAggregateOutputType | null
    _min: ProviderTransactionMinAggregateOutputType | null
    _max: ProviderTransactionMaxAggregateOutputType | null
  }

  export type ProviderTransactionMinAggregateOutputType = {
    id: string | null
    paymentOrderId: string | null
    providerId: string | null
    type: $Enums.ProviderTxType | null
    externalId: string | null
    status: string | null
    errorCode: string | null
    errorMessage: string | null
    isRetryable: boolean | null
    createdAt: Date | null
    completedAt: Date | null
  }

  export type ProviderTransactionMaxAggregateOutputType = {
    id: string | null
    paymentOrderId: string | null
    providerId: string | null
    type: $Enums.ProviderTxType | null
    externalId: string | null
    status: string | null
    errorCode: string | null
    errorMessage: string | null
    isRetryable: boolean | null
    createdAt: Date | null
    completedAt: Date | null
  }

  export type ProviderTransactionCountAggregateOutputType = {
    id: number
    paymentOrderId: number
    providerId: number
    type: number
    externalId: number
    status: number
    request: number
    response: number
    errorCode: number
    errorMessage: number
    isRetryable: number
    createdAt: number
    completedAt: number
    _all: number
  }


  export type ProviderTransactionMinAggregateInputType = {
    id?: true
    paymentOrderId?: true
    providerId?: true
    type?: true
    externalId?: true
    status?: true
    errorCode?: true
    errorMessage?: true
    isRetryable?: true
    createdAt?: true
    completedAt?: true
  }

  export type ProviderTransactionMaxAggregateInputType = {
    id?: true
    paymentOrderId?: true
    providerId?: true
    type?: true
    externalId?: true
    status?: true
    errorCode?: true
    errorMessage?: true
    isRetryable?: true
    createdAt?: true
    completedAt?: true
  }

  export type ProviderTransactionCountAggregateInputType = {
    id?: true
    paymentOrderId?: true
    providerId?: true
    type?: true
    externalId?: true
    status?: true
    request?: true
    response?: true
    errorCode?: true
    errorMessage?: true
    isRetryable?: true
    createdAt?: true
    completedAt?: true
    _all?: true
  }

  export type ProviderTransactionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProviderTransaction to aggregate.
     */
    where?: ProviderTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderTransactions to fetch.
     */
    orderBy?: ProviderTransactionOrderByWithRelationInput | ProviderTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProviderTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProviderTransactions
    **/
    _count?: true | ProviderTransactionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProviderTransactionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProviderTransactionMaxAggregateInputType
  }

  export type GetProviderTransactionAggregateType<T extends ProviderTransactionAggregateArgs> = {
        [P in keyof T & keyof AggregateProviderTransaction]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProviderTransaction[P]>
      : GetScalarType<T[P], AggregateProviderTransaction[P]>
  }




  export type ProviderTransactionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProviderTransactionWhereInput
    orderBy?: ProviderTransactionOrderByWithAggregationInput | ProviderTransactionOrderByWithAggregationInput[]
    by: ProviderTransactionScalarFieldEnum[] | ProviderTransactionScalarFieldEnum
    having?: ProviderTransactionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProviderTransactionCountAggregateInputType | true
    _min?: ProviderTransactionMinAggregateInputType
    _max?: ProviderTransactionMaxAggregateInputType
  }

  export type ProviderTransactionGroupByOutputType = {
    id: string
    paymentOrderId: string
    providerId: string
    type: $Enums.ProviderTxType
    externalId: string | null
    status: string
    request: JsonValue
    response: JsonValue | null
    errorCode: string | null
    errorMessage: string | null
    isRetryable: boolean
    createdAt: Date
    completedAt: Date | null
    _count: ProviderTransactionCountAggregateOutputType | null
    _min: ProviderTransactionMinAggregateOutputType | null
    _max: ProviderTransactionMaxAggregateOutputType | null
  }

  type GetProviderTransactionGroupByPayload<T extends ProviderTransactionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProviderTransactionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProviderTransactionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProviderTransactionGroupByOutputType[P]>
            : GetScalarType<T[P], ProviderTransactionGroupByOutputType[P]>
        }
      >
    >


  export type ProviderTransactionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    paymentOrderId?: boolean
    providerId?: boolean
    type?: boolean
    externalId?: boolean
    status?: boolean
    request?: boolean
    response?: boolean
    errorCode?: boolean
    errorMessage?: boolean
    isRetryable?: boolean
    createdAt?: boolean
    completedAt?: boolean
    paymentOrder?: boolean | PaymentOrderDefaultArgs<ExtArgs>
    provider?: boolean | ProviderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["providerTransaction"]>

  export type ProviderTransactionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    paymentOrderId?: boolean
    providerId?: boolean
    type?: boolean
    externalId?: boolean
    status?: boolean
    request?: boolean
    response?: boolean
    errorCode?: boolean
    errorMessage?: boolean
    isRetryable?: boolean
    createdAt?: boolean
    completedAt?: boolean
    paymentOrder?: boolean | PaymentOrderDefaultArgs<ExtArgs>
    provider?: boolean | ProviderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["providerTransaction"]>

  export type ProviderTransactionSelectScalar = {
    id?: boolean
    paymentOrderId?: boolean
    providerId?: boolean
    type?: boolean
    externalId?: boolean
    status?: boolean
    request?: boolean
    response?: boolean
    errorCode?: boolean
    errorMessage?: boolean
    isRetryable?: boolean
    createdAt?: boolean
    completedAt?: boolean
  }

  export type ProviderTransactionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    paymentOrder?: boolean | PaymentOrderDefaultArgs<ExtArgs>
    provider?: boolean | ProviderDefaultArgs<ExtArgs>
  }
  export type ProviderTransactionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    paymentOrder?: boolean | PaymentOrderDefaultArgs<ExtArgs>
    provider?: boolean | ProviderDefaultArgs<ExtArgs>
  }

  export type $ProviderTransactionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProviderTransaction"
    objects: {
      paymentOrder: Prisma.$PaymentOrderPayload<ExtArgs>
      provider: Prisma.$ProviderPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      paymentOrderId: string
      providerId: string
      type: $Enums.ProviderTxType
      externalId: string | null
      status: string
      request: Prisma.JsonValue
      response: Prisma.JsonValue | null
      errorCode: string | null
      errorMessage: string | null
      isRetryable: boolean
      createdAt: Date
      completedAt: Date | null
    }, ExtArgs["result"]["providerTransaction"]>
    composites: {}
  }

  type ProviderTransactionGetPayload<S extends boolean | null | undefined | ProviderTransactionDefaultArgs> = $Result.GetResult<Prisma.$ProviderTransactionPayload, S>

  type ProviderTransactionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProviderTransactionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProviderTransactionCountAggregateInputType | true
    }

  export interface ProviderTransactionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProviderTransaction'], meta: { name: 'ProviderTransaction' } }
    /**
     * Find zero or one ProviderTransaction that matches the filter.
     * @param {ProviderTransactionFindUniqueArgs} args - Arguments to find a ProviderTransaction
     * @example
     * // Get one ProviderTransaction
     * const providerTransaction = await prisma.providerTransaction.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProviderTransactionFindUniqueArgs>(args: SelectSubset<T, ProviderTransactionFindUniqueArgs<ExtArgs>>): Prisma__ProviderTransactionClient<$Result.GetResult<Prisma.$ProviderTransactionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ProviderTransaction that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProviderTransactionFindUniqueOrThrowArgs} args - Arguments to find a ProviderTransaction
     * @example
     * // Get one ProviderTransaction
     * const providerTransaction = await prisma.providerTransaction.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProviderTransactionFindUniqueOrThrowArgs>(args: SelectSubset<T, ProviderTransactionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProviderTransactionClient<$Result.GetResult<Prisma.$ProviderTransactionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ProviderTransaction that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderTransactionFindFirstArgs} args - Arguments to find a ProviderTransaction
     * @example
     * // Get one ProviderTransaction
     * const providerTransaction = await prisma.providerTransaction.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProviderTransactionFindFirstArgs>(args?: SelectSubset<T, ProviderTransactionFindFirstArgs<ExtArgs>>): Prisma__ProviderTransactionClient<$Result.GetResult<Prisma.$ProviderTransactionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ProviderTransaction that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderTransactionFindFirstOrThrowArgs} args - Arguments to find a ProviderTransaction
     * @example
     * // Get one ProviderTransaction
     * const providerTransaction = await prisma.providerTransaction.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProviderTransactionFindFirstOrThrowArgs>(args?: SelectSubset<T, ProviderTransactionFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProviderTransactionClient<$Result.GetResult<Prisma.$ProviderTransactionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ProviderTransactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderTransactionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProviderTransactions
     * const providerTransactions = await prisma.providerTransaction.findMany()
     * 
     * // Get first 10 ProviderTransactions
     * const providerTransactions = await prisma.providerTransaction.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const providerTransactionWithIdOnly = await prisma.providerTransaction.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProviderTransactionFindManyArgs>(args?: SelectSubset<T, ProviderTransactionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderTransactionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ProviderTransaction.
     * @param {ProviderTransactionCreateArgs} args - Arguments to create a ProviderTransaction.
     * @example
     * // Create one ProviderTransaction
     * const ProviderTransaction = await prisma.providerTransaction.create({
     *   data: {
     *     // ... data to create a ProviderTransaction
     *   }
     * })
     * 
     */
    create<T extends ProviderTransactionCreateArgs>(args: SelectSubset<T, ProviderTransactionCreateArgs<ExtArgs>>): Prisma__ProviderTransactionClient<$Result.GetResult<Prisma.$ProviderTransactionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ProviderTransactions.
     * @param {ProviderTransactionCreateManyArgs} args - Arguments to create many ProviderTransactions.
     * @example
     * // Create many ProviderTransactions
     * const providerTransaction = await prisma.providerTransaction.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProviderTransactionCreateManyArgs>(args?: SelectSubset<T, ProviderTransactionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProviderTransactions and returns the data saved in the database.
     * @param {ProviderTransactionCreateManyAndReturnArgs} args - Arguments to create many ProviderTransactions.
     * @example
     * // Create many ProviderTransactions
     * const providerTransaction = await prisma.providerTransaction.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProviderTransactions and only return the `id`
     * const providerTransactionWithIdOnly = await prisma.providerTransaction.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProviderTransactionCreateManyAndReturnArgs>(args?: SelectSubset<T, ProviderTransactionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderTransactionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ProviderTransaction.
     * @param {ProviderTransactionDeleteArgs} args - Arguments to delete one ProviderTransaction.
     * @example
     * // Delete one ProviderTransaction
     * const ProviderTransaction = await prisma.providerTransaction.delete({
     *   where: {
     *     // ... filter to delete one ProviderTransaction
     *   }
     * })
     * 
     */
    delete<T extends ProviderTransactionDeleteArgs>(args: SelectSubset<T, ProviderTransactionDeleteArgs<ExtArgs>>): Prisma__ProviderTransactionClient<$Result.GetResult<Prisma.$ProviderTransactionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ProviderTransaction.
     * @param {ProviderTransactionUpdateArgs} args - Arguments to update one ProviderTransaction.
     * @example
     * // Update one ProviderTransaction
     * const providerTransaction = await prisma.providerTransaction.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProviderTransactionUpdateArgs>(args: SelectSubset<T, ProviderTransactionUpdateArgs<ExtArgs>>): Prisma__ProviderTransactionClient<$Result.GetResult<Prisma.$ProviderTransactionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ProviderTransactions.
     * @param {ProviderTransactionDeleteManyArgs} args - Arguments to filter ProviderTransactions to delete.
     * @example
     * // Delete a few ProviderTransactions
     * const { count } = await prisma.providerTransaction.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProviderTransactionDeleteManyArgs>(args?: SelectSubset<T, ProviderTransactionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProviderTransactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderTransactionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProviderTransactions
     * const providerTransaction = await prisma.providerTransaction.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProviderTransactionUpdateManyArgs>(args: SelectSubset<T, ProviderTransactionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ProviderTransaction.
     * @param {ProviderTransactionUpsertArgs} args - Arguments to update or create a ProviderTransaction.
     * @example
     * // Update or create a ProviderTransaction
     * const providerTransaction = await prisma.providerTransaction.upsert({
     *   create: {
     *     // ... data to create a ProviderTransaction
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProviderTransaction we want to update
     *   }
     * })
     */
    upsert<T extends ProviderTransactionUpsertArgs>(args: SelectSubset<T, ProviderTransactionUpsertArgs<ExtArgs>>): Prisma__ProviderTransactionClient<$Result.GetResult<Prisma.$ProviderTransactionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ProviderTransactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderTransactionCountArgs} args - Arguments to filter ProviderTransactions to count.
     * @example
     * // Count the number of ProviderTransactions
     * const count = await prisma.providerTransaction.count({
     *   where: {
     *     // ... the filter for the ProviderTransactions we want to count
     *   }
     * })
    **/
    count<T extends ProviderTransactionCountArgs>(
      args?: Subset<T, ProviderTransactionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProviderTransactionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProviderTransaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderTransactionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProviderTransactionAggregateArgs>(args: Subset<T, ProviderTransactionAggregateArgs>): Prisma.PrismaPromise<GetProviderTransactionAggregateType<T>>

    /**
     * Group by ProviderTransaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderTransactionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProviderTransactionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProviderTransactionGroupByArgs['orderBy'] }
        : { orderBy?: ProviderTransactionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProviderTransactionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProviderTransactionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProviderTransaction model
   */
  readonly fields: ProviderTransactionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProviderTransaction.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProviderTransactionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    paymentOrder<T extends PaymentOrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PaymentOrderDefaultArgs<ExtArgs>>): Prisma__PaymentOrderClient<$Result.GetResult<Prisma.$PaymentOrderPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    provider<T extends ProviderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProviderDefaultArgs<ExtArgs>>): Prisma__ProviderClient<$Result.GetResult<Prisma.$ProviderPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProviderTransaction model
   */ 
  interface ProviderTransactionFieldRefs {
    readonly id: FieldRef<"ProviderTransaction", 'String'>
    readonly paymentOrderId: FieldRef<"ProviderTransaction", 'String'>
    readonly providerId: FieldRef<"ProviderTransaction", 'String'>
    readonly type: FieldRef<"ProviderTransaction", 'ProviderTxType'>
    readonly externalId: FieldRef<"ProviderTransaction", 'String'>
    readonly status: FieldRef<"ProviderTransaction", 'String'>
    readonly request: FieldRef<"ProviderTransaction", 'Json'>
    readonly response: FieldRef<"ProviderTransaction", 'Json'>
    readonly errorCode: FieldRef<"ProviderTransaction", 'String'>
    readonly errorMessage: FieldRef<"ProviderTransaction", 'String'>
    readonly isRetryable: FieldRef<"ProviderTransaction", 'Boolean'>
    readonly createdAt: FieldRef<"ProviderTransaction", 'DateTime'>
    readonly completedAt: FieldRef<"ProviderTransaction", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProviderTransaction findUnique
   */
  export type ProviderTransactionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderTransaction
     */
    select?: ProviderTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderTransactionInclude<ExtArgs> | null
    /**
     * Filter, which ProviderTransaction to fetch.
     */
    where: ProviderTransactionWhereUniqueInput
  }

  /**
   * ProviderTransaction findUniqueOrThrow
   */
  export type ProviderTransactionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderTransaction
     */
    select?: ProviderTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderTransactionInclude<ExtArgs> | null
    /**
     * Filter, which ProviderTransaction to fetch.
     */
    where: ProviderTransactionWhereUniqueInput
  }

  /**
   * ProviderTransaction findFirst
   */
  export type ProviderTransactionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderTransaction
     */
    select?: ProviderTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderTransactionInclude<ExtArgs> | null
    /**
     * Filter, which ProviderTransaction to fetch.
     */
    where?: ProviderTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderTransactions to fetch.
     */
    orderBy?: ProviderTransactionOrderByWithRelationInput | ProviderTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProviderTransactions.
     */
    cursor?: ProviderTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProviderTransactions.
     */
    distinct?: ProviderTransactionScalarFieldEnum | ProviderTransactionScalarFieldEnum[]
  }

  /**
   * ProviderTransaction findFirstOrThrow
   */
  export type ProviderTransactionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderTransaction
     */
    select?: ProviderTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderTransactionInclude<ExtArgs> | null
    /**
     * Filter, which ProviderTransaction to fetch.
     */
    where?: ProviderTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderTransactions to fetch.
     */
    orderBy?: ProviderTransactionOrderByWithRelationInput | ProviderTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProviderTransactions.
     */
    cursor?: ProviderTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProviderTransactions.
     */
    distinct?: ProviderTransactionScalarFieldEnum | ProviderTransactionScalarFieldEnum[]
  }

  /**
   * ProviderTransaction findMany
   */
  export type ProviderTransactionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderTransaction
     */
    select?: ProviderTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderTransactionInclude<ExtArgs> | null
    /**
     * Filter, which ProviderTransactions to fetch.
     */
    where?: ProviderTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderTransactions to fetch.
     */
    orderBy?: ProviderTransactionOrderByWithRelationInput | ProviderTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProviderTransactions.
     */
    cursor?: ProviderTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderTransactions.
     */
    skip?: number
    distinct?: ProviderTransactionScalarFieldEnum | ProviderTransactionScalarFieldEnum[]
  }

  /**
   * ProviderTransaction create
   */
  export type ProviderTransactionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderTransaction
     */
    select?: ProviderTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderTransactionInclude<ExtArgs> | null
    /**
     * The data needed to create a ProviderTransaction.
     */
    data: XOR<ProviderTransactionCreateInput, ProviderTransactionUncheckedCreateInput>
  }

  /**
   * ProviderTransaction createMany
   */
  export type ProviderTransactionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProviderTransactions.
     */
    data: ProviderTransactionCreateManyInput | ProviderTransactionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProviderTransaction createManyAndReturn
   */
  export type ProviderTransactionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderTransaction
     */
    select?: ProviderTransactionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ProviderTransactions.
     */
    data: ProviderTransactionCreateManyInput | ProviderTransactionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderTransactionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProviderTransaction update
   */
  export type ProviderTransactionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderTransaction
     */
    select?: ProviderTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderTransactionInclude<ExtArgs> | null
    /**
     * The data needed to update a ProviderTransaction.
     */
    data: XOR<ProviderTransactionUpdateInput, ProviderTransactionUncheckedUpdateInput>
    /**
     * Choose, which ProviderTransaction to update.
     */
    where: ProviderTransactionWhereUniqueInput
  }

  /**
   * ProviderTransaction updateMany
   */
  export type ProviderTransactionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProviderTransactions.
     */
    data: XOR<ProviderTransactionUpdateManyMutationInput, ProviderTransactionUncheckedUpdateManyInput>
    /**
     * Filter which ProviderTransactions to update
     */
    where?: ProviderTransactionWhereInput
  }

  /**
   * ProviderTransaction upsert
   */
  export type ProviderTransactionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderTransaction
     */
    select?: ProviderTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderTransactionInclude<ExtArgs> | null
    /**
     * The filter to search for the ProviderTransaction to update in case it exists.
     */
    where: ProviderTransactionWhereUniqueInput
    /**
     * In case the ProviderTransaction found by the `where` argument doesn't exist, create a new ProviderTransaction with this data.
     */
    create: XOR<ProviderTransactionCreateInput, ProviderTransactionUncheckedCreateInput>
    /**
     * In case the ProviderTransaction was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProviderTransactionUpdateInput, ProviderTransactionUncheckedUpdateInput>
  }

  /**
   * ProviderTransaction delete
   */
  export type ProviderTransactionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderTransaction
     */
    select?: ProviderTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderTransactionInclude<ExtArgs> | null
    /**
     * Filter which ProviderTransaction to delete.
     */
    where: ProviderTransactionWhereUniqueInput
  }

  /**
   * ProviderTransaction deleteMany
   */
  export type ProviderTransactionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProviderTransactions to delete
     */
    where?: ProviderTransactionWhereInput
  }

  /**
   * ProviderTransaction without action
   */
  export type ProviderTransactionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderTransaction
     */
    select?: ProviderTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderTransactionInclude<ExtArgs> | null
  }


  /**
   * Model Agent
   */

  export type AggregateAgent = {
    _count: AgentCountAggregateOutputType | null
    _avg: AgentAvgAggregateOutputType | null
    _sum: AgentSumAggregateOutputType | null
    _min: AgentMinAggregateOutputType | null
    _max: AgentMaxAggregateOutputType | null
  }

  export type AgentAvgAggregateOutputType = {
    supportedChains: number | null
    totalExecutions: number | null
    avgExecutionTime: number | null
    successRate: Decimal | null
  }

  export type AgentSumAggregateOutputType = {
    supportedChains: number[]
    totalExecutions: number | null
    avgExecutionTime: number | null
    successRate: Decimal | null
  }

  export type AgentMinAggregateOutputType = {
    id: string | null
    organizationId: string | null
    name: string | null
    type: $Enums.AgentType | null
    version: string | null
    model: string | null
    agentWalletId: string | null
    systemPrompt: string | null
    isActive: boolean | null
    totalExecutions: number | null
    avgExecutionTime: number | null
    successRate: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AgentMaxAggregateOutputType = {
    id: string | null
    organizationId: string | null
    name: string | null
    type: $Enums.AgentType | null
    version: string | null
    model: string | null
    agentWalletId: string | null
    systemPrompt: string | null
    isActive: boolean | null
    totalExecutions: number | null
    avgExecutionTime: number | null
    successRate: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AgentCountAggregateOutputType = {
    id: number
    organizationId: number
    name: number
    type: number
    version: number
    model: number
    agentWalletId: number
    graphDefinition: number
    tools: number
    systemPrompt: number
    supportedProviders: number
    supportedChains: number
    capabilities: number
    isActive: number
    totalExecutions: number
    avgExecutionTime: number
    successRate: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AgentAvgAggregateInputType = {
    supportedChains?: true
    totalExecutions?: true
    avgExecutionTime?: true
    successRate?: true
  }

  export type AgentSumAggregateInputType = {
    supportedChains?: true
    totalExecutions?: true
    avgExecutionTime?: true
    successRate?: true
  }

  export type AgentMinAggregateInputType = {
    id?: true
    organizationId?: true
    name?: true
    type?: true
    version?: true
    model?: true
    agentWalletId?: true
    systemPrompt?: true
    isActive?: true
    totalExecutions?: true
    avgExecutionTime?: true
    successRate?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AgentMaxAggregateInputType = {
    id?: true
    organizationId?: true
    name?: true
    type?: true
    version?: true
    model?: true
    agentWalletId?: true
    systemPrompt?: true
    isActive?: true
    totalExecutions?: true
    avgExecutionTime?: true
    successRate?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AgentCountAggregateInputType = {
    id?: true
    organizationId?: true
    name?: true
    type?: true
    version?: true
    model?: true
    agentWalletId?: true
    graphDefinition?: true
    tools?: true
    systemPrompt?: true
    supportedProviders?: true
    supportedChains?: true
    capabilities?: true
    isActive?: true
    totalExecutions?: true
    avgExecutionTime?: true
    successRate?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AgentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Agent to aggregate.
     */
    where?: AgentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Agents to fetch.
     */
    orderBy?: AgentOrderByWithRelationInput | AgentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AgentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Agents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Agents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Agents
    **/
    _count?: true | AgentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AgentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AgentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AgentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AgentMaxAggregateInputType
  }

  export type GetAgentAggregateType<T extends AgentAggregateArgs> = {
        [P in keyof T & keyof AggregateAgent]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAgent[P]>
      : GetScalarType<T[P], AggregateAgent[P]>
  }




  export type AgentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgentWhereInput
    orderBy?: AgentOrderByWithAggregationInput | AgentOrderByWithAggregationInput[]
    by: AgentScalarFieldEnum[] | AgentScalarFieldEnum
    having?: AgentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AgentCountAggregateInputType | true
    _avg?: AgentAvgAggregateInputType
    _sum?: AgentSumAggregateInputType
    _min?: AgentMinAggregateInputType
    _max?: AgentMaxAggregateInputType
  }

  export type AgentGroupByOutputType = {
    id: string
    organizationId: string
    name: string
    type: $Enums.AgentType
    version: string
    model: string
    agentWalletId: string | null
    graphDefinition: JsonValue
    tools: string[]
    systemPrompt: string | null
    supportedProviders: string[]
    supportedChains: number[]
    capabilities: JsonValue | null
    isActive: boolean
    totalExecutions: number
    avgExecutionTime: number | null
    successRate: Decimal | null
    createdAt: Date
    updatedAt: Date
    _count: AgentCountAggregateOutputType | null
    _avg: AgentAvgAggregateOutputType | null
    _sum: AgentSumAggregateOutputType | null
    _min: AgentMinAggregateOutputType | null
    _max: AgentMaxAggregateOutputType | null
  }

  type GetAgentGroupByPayload<T extends AgentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AgentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AgentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AgentGroupByOutputType[P]>
            : GetScalarType<T[P], AgentGroupByOutputType[P]>
        }
      >
    >


  export type AgentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    name?: boolean
    type?: boolean
    version?: boolean
    model?: boolean
    agentWalletId?: boolean
    graphDefinition?: boolean
    tools?: boolean
    systemPrompt?: boolean
    supportedProviders?: boolean
    supportedChains?: boolean
    capabilities?: boolean
    isActive?: boolean
    totalExecutions?: boolean
    avgExecutionTime?: boolean
    successRate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    agentWallet?: boolean | Agent$agentWalletArgs<ExtArgs>
    paymentLinks?: boolean | Agent$paymentLinksArgs<ExtArgs>
    decisions?: boolean | Agent$decisionsArgs<ExtArgs>
    checkpoints?: boolean | Agent$checkpointsArgs<ExtArgs>
    _count?: boolean | AgentCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agent"]>

  export type AgentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    name?: boolean
    type?: boolean
    version?: boolean
    model?: boolean
    agentWalletId?: boolean
    graphDefinition?: boolean
    tools?: boolean
    systemPrompt?: boolean
    supportedProviders?: boolean
    supportedChains?: boolean
    capabilities?: boolean
    isActive?: boolean
    totalExecutions?: boolean
    avgExecutionTime?: boolean
    successRate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    agentWallet?: boolean | Agent$agentWalletArgs<ExtArgs>
  }, ExtArgs["result"]["agent"]>

  export type AgentSelectScalar = {
    id?: boolean
    organizationId?: boolean
    name?: boolean
    type?: boolean
    version?: boolean
    model?: boolean
    agentWalletId?: boolean
    graphDefinition?: boolean
    tools?: boolean
    systemPrompt?: boolean
    supportedProviders?: boolean
    supportedChains?: boolean
    capabilities?: boolean
    isActive?: boolean
    totalExecutions?: boolean
    avgExecutionTime?: boolean
    successRate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AgentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    agentWallet?: boolean | Agent$agentWalletArgs<ExtArgs>
    paymentLinks?: boolean | Agent$paymentLinksArgs<ExtArgs>
    decisions?: boolean | Agent$decisionsArgs<ExtArgs>
    checkpoints?: boolean | Agent$checkpointsArgs<ExtArgs>
    _count?: boolean | AgentCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AgentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    agentWallet?: boolean | Agent$agentWalletArgs<ExtArgs>
  }

  export type $AgentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Agent"
    objects: {
      organization: Prisma.$OrganizationPayload<ExtArgs>
      agentWallet: Prisma.$WalletPayload<ExtArgs> | null
      paymentLinks: Prisma.$PaymentLinkPayload<ExtArgs>[]
      decisions: Prisma.$AgentDecisionPayload<ExtArgs>[]
      checkpoints: Prisma.$AgentCheckpointPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      organizationId: string
      name: string
      type: $Enums.AgentType
      version: string
      model: string
      agentWalletId: string | null
      graphDefinition: Prisma.JsonValue
      tools: string[]
      systemPrompt: string | null
      supportedProviders: string[]
      supportedChains: number[]
      capabilities: Prisma.JsonValue | null
      isActive: boolean
      totalExecutions: number
      avgExecutionTime: number | null
      successRate: Prisma.Decimal | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["agent"]>
    composites: {}
  }

  type AgentGetPayload<S extends boolean | null | undefined | AgentDefaultArgs> = $Result.GetResult<Prisma.$AgentPayload, S>

  type AgentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AgentFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AgentCountAggregateInputType | true
    }

  export interface AgentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Agent'], meta: { name: 'Agent' } }
    /**
     * Find zero or one Agent that matches the filter.
     * @param {AgentFindUniqueArgs} args - Arguments to find a Agent
     * @example
     * // Get one Agent
     * const agent = await prisma.agent.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AgentFindUniqueArgs>(args: SelectSubset<T, AgentFindUniqueArgs<ExtArgs>>): Prisma__AgentClient<$Result.GetResult<Prisma.$AgentPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Agent that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AgentFindUniqueOrThrowArgs} args - Arguments to find a Agent
     * @example
     * // Get one Agent
     * const agent = await prisma.agent.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AgentFindUniqueOrThrowArgs>(args: SelectSubset<T, AgentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AgentClient<$Result.GetResult<Prisma.$AgentPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Agent that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentFindFirstArgs} args - Arguments to find a Agent
     * @example
     * // Get one Agent
     * const agent = await prisma.agent.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AgentFindFirstArgs>(args?: SelectSubset<T, AgentFindFirstArgs<ExtArgs>>): Prisma__AgentClient<$Result.GetResult<Prisma.$AgentPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Agent that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentFindFirstOrThrowArgs} args - Arguments to find a Agent
     * @example
     * // Get one Agent
     * const agent = await prisma.agent.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AgentFindFirstOrThrowArgs>(args?: SelectSubset<T, AgentFindFirstOrThrowArgs<ExtArgs>>): Prisma__AgentClient<$Result.GetResult<Prisma.$AgentPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Agents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Agents
     * const agents = await prisma.agent.findMany()
     * 
     * // Get first 10 Agents
     * const agents = await prisma.agent.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const agentWithIdOnly = await prisma.agent.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AgentFindManyArgs>(args?: SelectSubset<T, AgentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgentPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Agent.
     * @param {AgentCreateArgs} args - Arguments to create a Agent.
     * @example
     * // Create one Agent
     * const Agent = await prisma.agent.create({
     *   data: {
     *     // ... data to create a Agent
     *   }
     * })
     * 
     */
    create<T extends AgentCreateArgs>(args: SelectSubset<T, AgentCreateArgs<ExtArgs>>): Prisma__AgentClient<$Result.GetResult<Prisma.$AgentPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Agents.
     * @param {AgentCreateManyArgs} args - Arguments to create many Agents.
     * @example
     * // Create many Agents
     * const agent = await prisma.agent.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AgentCreateManyArgs>(args?: SelectSubset<T, AgentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Agents and returns the data saved in the database.
     * @param {AgentCreateManyAndReturnArgs} args - Arguments to create many Agents.
     * @example
     * // Create many Agents
     * const agent = await prisma.agent.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Agents and only return the `id`
     * const agentWithIdOnly = await prisma.agent.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AgentCreateManyAndReturnArgs>(args?: SelectSubset<T, AgentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgentPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Agent.
     * @param {AgentDeleteArgs} args - Arguments to delete one Agent.
     * @example
     * // Delete one Agent
     * const Agent = await prisma.agent.delete({
     *   where: {
     *     // ... filter to delete one Agent
     *   }
     * })
     * 
     */
    delete<T extends AgentDeleteArgs>(args: SelectSubset<T, AgentDeleteArgs<ExtArgs>>): Prisma__AgentClient<$Result.GetResult<Prisma.$AgentPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Agent.
     * @param {AgentUpdateArgs} args - Arguments to update one Agent.
     * @example
     * // Update one Agent
     * const agent = await prisma.agent.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AgentUpdateArgs>(args: SelectSubset<T, AgentUpdateArgs<ExtArgs>>): Prisma__AgentClient<$Result.GetResult<Prisma.$AgentPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Agents.
     * @param {AgentDeleteManyArgs} args - Arguments to filter Agents to delete.
     * @example
     * // Delete a few Agents
     * const { count } = await prisma.agent.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AgentDeleteManyArgs>(args?: SelectSubset<T, AgentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Agents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Agents
     * const agent = await prisma.agent.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AgentUpdateManyArgs>(args: SelectSubset<T, AgentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Agent.
     * @param {AgentUpsertArgs} args - Arguments to update or create a Agent.
     * @example
     * // Update or create a Agent
     * const agent = await prisma.agent.upsert({
     *   create: {
     *     // ... data to create a Agent
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Agent we want to update
     *   }
     * })
     */
    upsert<T extends AgentUpsertArgs>(args: SelectSubset<T, AgentUpsertArgs<ExtArgs>>): Prisma__AgentClient<$Result.GetResult<Prisma.$AgentPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Agents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentCountArgs} args - Arguments to filter Agents to count.
     * @example
     * // Count the number of Agents
     * const count = await prisma.agent.count({
     *   where: {
     *     // ... the filter for the Agents we want to count
     *   }
     * })
    **/
    count<T extends AgentCountArgs>(
      args?: Subset<T, AgentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AgentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Agent.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AgentAggregateArgs>(args: Subset<T, AgentAggregateArgs>): Prisma.PrismaPromise<GetAgentAggregateType<T>>

    /**
     * Group by Agent.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AgentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AgentGroupByArgs['orderBy'] }
        : { orderBy?: AgentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AgentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAgentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Agent model
   */
  readonly fields: AgentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Agent.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AgentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organization<T extends OrganizationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationDefaultArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    agentWallet<T extends Agent$agentWalletArgs<ExtArgs> = {}>(args?: Subset<T, Agent$agentWalletArgs<ExtArgs>>): Prisma__WalletClient<$Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    paymentLinks<T extends Agent$paymentLinksArgs<ExtArgs> = {}>(args?: Subset<T, Agent$paymentLinksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentLinkPayload<ExtArgs>, T, "findMany"> | Null>
    decisions<T extends Agent$decisionsArgs<ExtArgs> = {}>(args?: Subset<T, Agent$decisionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgentDecisionPayload<ExtArgs>, T, "findMany"> | Null>
    checkpoints<T extends Agent$checkpointsArgs<ExtArgs> = {}>(args?: Subset<T, Agent$checkpointsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgentCheckpointPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Agent model
   */ 
  interface AgentFieldRefs {
    readonly id: FieldRef<"Agent", 'String'>
    readonly organizationId: FieldRef<"Agent", 'String'>
    readonly name: FieldRef<"Agent", 'String'>
    readonly type: FieldRef<"Agent", 'AgentType'>
    readonly version: FieldRef<"Agent", 'String'>
    readonly model: FieldRef<"Agent", 'String'>
    readonly agentWalletId: FieldRef<"Agent", 'String'>
    readonly graphDefinition: FieldRef<"Agent", 'Json'>
    readonly tools: FieldRef<"Agent", 'String[]'>
    readonly systemPrompt: FieldRef<"Agent", 'String'>
    readonly supportedProviders: FieldRef<"Agent", 'String[]'>
    readonly supportedChains: FieldRef<"Agent", 'Int[]'>
    readonly capabilities: FieldRef<"Agent", 'Json'>
    readonly isActive: FieldRef<"Agent", 'Boolean'>
    readonly totalExecutions: FieldRef<"Agent", 'Int'>
    readonly avgExecutionTime: FieldRef<"Agent", 'Int'>
    readonly successRate: FieldRef<"Agent", 'Decimal'>
    readonly createdAt: FieldRef<"Agent", 'DateTime'>
    readonly updatedAt: FieldRef<"Agent", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Agent findUnique
   */
  export type AgentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agent
     */
    select?: AgentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentInclude<ExtArgs> | null
    /**
     * Filter, which Agent to fetch.
     */
    where: AgentWhereUniqueInput
  }

  /**
   * Agent findUniqueOrThrow
   */
  export type AgentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agent
     */
    select?: AgentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentInclude<ExtArgs> | null
    /**
     * Filter, which Agent to fetch.
     */
    where: AgentWhereUniqueInput
  }

  /**
   * Agent findFirst
   */
  export type AgentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agent
     */
    select?: AgentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentInclude<ExtArgs> | null
    /**
     * Filter, which Agent to fetch.
     */
    where?: AgentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Agents to fetch.
     */
    orderBy?: AgentOrderByWithRelationInput | AgentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Agents.
     */
    cursor?: AgentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Agents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Agents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Agents.
     */
    distinct?: AgentScalarFieldEnum | AgentScalarFieldEnum[]
  }

  /**
   * Agent findFirstOrThrow
   */
  export type AgentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agent
     */
    select?: AgentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentInclude<ExtArgs> | null
    /**
     * Filter, which Agent to fetch.
     */
    where?: AgentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Agents to fetch.
     */
    orderBy?: AgentOrderByWithRelationInput | AgentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Agents.
     */
    cursor?: AgentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Agents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Agents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Agents.
     */
    distinct?: AgentScalarFieldEnum | AgentScalarFieldEnum[]
  }

  /**
   * Agent findMany
   */
  export type AgentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agent
     */
    select?: AgentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentInclude<ExtArgs> | null
    /**
     * Filter, which Agents to fetch.
     */
    where?: AgentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Agents to fetch.
     */
    orderBy?: AgentOrderByWithRelationInput | AgentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Agents.
     */
    cursor?: AgentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Agents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Agents.
     */
    skip?: number
    distinct?: AgentScalarFieldEnum | AgentScalarFieldEnum[]
  }

  /**
   * Agent create
   */
  export type AgentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agent
     */
    select?: AgentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentInclude<ExtArgs> | null
    /**
     * The data needed to create a Agent.
     */
    data: XOR<AgentCreateInput, AgentUncheckedCreateInput>
  }

  /**
   * Agent createMany
   */
  export type AgentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Agents.
     */
    data: AgentCreateManyInput | AgentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Agent createManyAndReturn
   */
  export type AgentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agent
     */
    select?: AgentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Agents.
     */
    data: AgentCreateManyInput | AgentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Agent update
   */
  export type AgentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agent
     */
    select?: AgentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentInclude<ExtArgs> | null
    /**
     * The data needed to update a Agent.
     */
    data: XOR<AgentUpdateInput, AgentUncheckedUpdateInput>
    /**
     * Choose, which Agent to update.
     */
    where: AgentWhereUniqueInput
  }

  /**
   * Agent updateMany
   */
  export type AgentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Agents.
     */
    data: XOR<AgentUpdateManyMutationInput, AgentUncheckedUpdateManyInput>
    /**
     * Filter which Agents to update
     */
    where?: AgentWhereInput
  }

  /**
   * Agent upsert
   */
  export type AgentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agent
     */
    select?: AgentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentInclude<ExtArgs> | null
    /**
     * The filter to search for the Agent to update in case it exists.
     */
    where: AgentWhereUniqueInput
    /**
     * In case the Agent found by the `where` argument doesn't exist, create a new Agent with this data.
     */
    create: XOR<AgentCreateInput, AgentUncheckedCreateInput>
    /**
     * In case the Agent was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AgentUpdateInput, AgentUncheckedUpdateInput>
  }

  /**
   * Agent delete
   */
  export type AgentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agent
     */
    select?: AgentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentInclude<ExtArgs> | null
    /**
     * Filter which Agent to delete.
     */
    where: AgentWhereUniqueInput
  }

  /**
   * Agent deleteMany
   */
  export type AgentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Agents to delete
     */
    where?: AgentWhereInput
  }

  /**
   * Agent.agentWallet
   */
  export type Agent$agentWalletArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wallet
     */
    select?: WalletSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WalletInclude<ExtArgs> | null
    where?: WalletWhereInput
  }

  /**
   * Agent.paymentLinks
   */
  export type Agent$paymentLinksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentLink
     */
    select?: PaymentLinkSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentLinkInclude<ExtArgs> | null
    where?: PaymentLinkWhereInput
    orderBy?: PaymentLinkOrderByWithRelationInput | PaymentLinkOrderByWithRelationInput[]
    cursor?: PaymentLinkWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentLinkScalarFieldEnum | PaymentLinkScalarFieldEnum[]
  }

  /**
   * Agent.decisions
   */
  export type Agent$decisionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentDecision
     */
    select?: AgentDecisionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentDecisionInclude<ExtArgs> | null
    where?: AgentDecisionWhereInput
    orderBy?: AgentDecisionOrderByWithRelationInput | AgentDecisionOrderByWithRelationInput[]
    cursor?: AgentDecisionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AgentDecisionScalarFieldEnum | AgentDecisionScalarFieldEnum[]
  }

  /**
   * Agent.checkpoints
   */
  export type Agent$checkpointsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentCheckpoint
     */
    select?: AgentCheckpointSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentCheckpointInclude<ExtArgs> | null
    where?: AgentCheckpointWhereInput
    orderBy?: AgentCheckpointOrderByWithRelationInput | AgentCheckpointOrderByWithRelationInput[]
    cursor?: AgentCheckpointWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AgentCheckpointScalarFieldEnum | AgentCheckpointScalarFieldEnum[]
  }

  /**
   * Agent without action
   */
  export type AgentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agent
     */
    select?: AgentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentInclude<ExtArgs> | null
  }


  /**
   * Model AgentDecision
   */

  export type AggregateAgentDecision = {
    _count: AgentDecisionCountAggregateOutputType | null
    _avg: AgentDecisionAvgAggregateOutputType | null
    _sum: AgentDecisionSumAggregateOutputType | null
    _min: AgentDecisionMinAggregateOutputType | null
    _max: AgentDecisionMaxAggregateOutputType | null
  }

  export type AgentDecisionAvgAggregateOutputType = {
    confidence: Decimal | null
    executionTime: number | null
    tokensUsed: number | null
  }

  export type AgentDecisionSumAggregateOutputType = {
    confidence: Decimal | null
    executionTime: number | null
    tokensUsed: number | null
  }

  export type AgentDecisionMinAggregateOutputType = {
    id: string | null
    agentId: string | null
    paymentOrderId: string | null
    decisionType: string | null
    confidence: Decimal | null
    executionTime: number | null
    tokensUsed: number | null
    wasOverridden: boolean | null
    overriddenBy: string | null
    overrideReason: string | null
    createdAt: Date | null
  }

  export type AgentDecisionMaxAggregateOutputType = {
    id: string | null
    agentId: string | null
    paymentOrderId: string | null
    decisionType: string | null
    confidence: Decimal | null
    executionTime: number | null
    tokensUsed: number | null
    wasOverridden: boolean | null
    overriddenBy: string | null
    overrideReason: string | null
    createdAt: Date | null
  }

  export type AgentDecisionCountAggregateOutputType = {
    id: number
    agentId: number
    paymentOrderId: number
    decisionType: number
    input: number
    reasoning: number
    decision: number
    confidence: number
    executionTime: number
    tokensUsed: number
    wasOverridden: number
    overriddenBy: number
    overrideReason: number
    createdAt: number
    _all: number
  }


  export type AgentDecisionAvgAggregateInputType = {
    confidence?: true
    executionTime?: true
    tokensUsed?: true
  }

  export type AgentDecisionSumAggregateInputType = {
    confidence?: true
    executionTime?: true
    tokensUsed?: true
  }

  export type AgentDecisionMinAggregateInputType = {
    id?: true
    agentId?: true
    paymentOrderId?: true
    decisionType?: true
    confidence?: true
    executionTime?: true
    tokensUsed?: true
    wasOverridden?: true
    overriddenBy?: true
    overrideReason?: true
    createdAt?: true
  }

  export type AgentDecisionMaxAggregateInputType = {
    id?: true
    agentId?: true
    paymentOrderId?: true
    decisionType?: true
    confidence?: true
    executionTime?: true
    tokensUsed?: true
    wasOverridden?: true
    overriddenBy?: true
    overrideReason?: true
    createdAt?: true
  }

  export type AgentDecisionCountAggregateInputType = {
    id?: true
    agentId?: true
    paymentOrderId?: true
    decisionType?: true
    input?: true
    reasoning?: true
    decision?: true
    confidence?: true
    executionTime?: true
    tokensUsed?: true
    wasOverridden?: true
    overriddenBy?: true
    overrideReason?: true
    createdAt?: true
    _all?: true
  }

  export type AgentDecisionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgentDecision to aggregate.
     */
    where?: AgentDecisionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgentDecisions to fetch.
     */
    orderBy?: AgentDecisionOrderByWithRelationInput | AgentDecisionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AgentDecisionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgentDecisions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgentDecisions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AgentDecisions
    **/
    _count?: true | AgentDecisionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AgentDecisionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AgentDecisionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AgentDecisionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AgentDecisionMaxAggregateInputType
  }

  export type GetAgentDecisionAggregateType<T extends AgentDecisionAggregateArgs> = {
        [P in keyof T & keyof AggregateAgentDecision]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAgentDecision[P]>
      : GetScalarType<T[P], AggregateAgentDecision[P]>
  }




  export type AgentDecisionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgentDecisionWhereInput
    orderBy?: AgentDecisionOrderByWithAggregationInput | AgentDecisionOrderByWithAggregationInput[]
    by: AgentDecisionScalarFieldEnum[] | AgentDecisionScalarFieldEnum
    having?: AgentDecisionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AgentDecisionCountAggregateInputType | true
    _avg?: AgentDecisionAvgAggregateInputType
    _sum?: AgentDecisionSumAggregateInputType
    _min?: AgentDecisionMinAggregateInputType
    _max?: AgentDecisionMaxAggregateInputType
  }

  export type AgentDecisionGroupByOutputType = {
    id: string
    agentId: string
    paymentOrderId: string | null
    decisionType: string
    input: JsonValue
    reasoning: JsonValue
    decision: JsonValue
    confidence: Decimal
    executionTime: number
    tokensUsed: number | null
    wasOverridden: boolean
    overriddenBy: string | null
    overrideReason: string | null
    createdAt: Date
    _count: AgentDecisionCountAggregateOutputType | null
    _avg: AgentDecisionAvgAggregateOutputType | null
    _sum: AgentDecisionSumAggregateOutputType | null
    _min: AgentDecisionMinAggregateOutputType | null
    _max: AgentDecisionMaxAggregateOutputType | null
  }

  type GetAgentDecisionGroupByPayload<T extends AgentDecisionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AgentDecisionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AgentDecisionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AgentDecisionGroupByOutputType[P]>
            : GetScalarType<T[P], AgentDecisionGroupByOutputType[P]>
        }
      >
    >


  export type AgentDecisionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agentId?: boolean
    paymentOrderId?: boolean
    decisionType?: boolean
    input?: boolean
    reasoning?: boolean
    decision?: boolean
    confidence?: boolean
    executionTime?: boolean
    tokensUsed?: boolean
    wasOverridden?: boolean
    overriddenBy?: boolean
    overrideReason?: boolean
    createdAt?: boolean
    agent?: boolean | AgentDefaultArgs<ExtArgs>
    paymentOrder?: boolean | AgentDecision$paymentOrderArgs<ExtArgs>
    interactions?: boolean | AgentDecision$interactionsArgs<ExtArgs>
    _count?: boolean | AgentDecisionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agentDecision"]>

  export type AgentDecisionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agentId?: boolean
    paymentOrderId?: boolean
    decisionType?: boolean
    input?: boolean
    reasoning?: boolean
    decision?: boolean
    confidence?: boolean
    executionTime?: boolean
    tokensUsed?: boolean
    wasOverridden?: boolean
    overriddenBy?: boolean
    overrideReason?: boolean
    createdAt?: boolean
    agent?: boolean | AgentDefaultArgs<ExtArgs>
    paymentOrder?: boolean | AgentDecision$paymentOrderArgs<ExtArgs>
  }, ExtArgs["result"]["agentDecision"]>

  export type AgentDecisionSelectScalar = {
    id?: boolean
    agentId?: boolean
    paymentOrderId?: boolean
    decisionType?: boolean
    input?: boolean
    reasoning?: boolean
    decision?: boolean
    confidence?: boolean
    executionTime?: boolean
    tokensUsed?: boolean
    wasOverridden?: boolean
    overriddenBy?: boolean
    overrideReason?: boolean
    createdAt?: boolean
  }

  export type AgentDecisionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agent?: boolean | AgentDefaultArgs<ExtArgs>
    paymentOrder?: boolean | AgentDecision$paymentOrderArgs<ExtArgs>
    interactions?: boolean | AgentDecision$interactionsArgs<ExtArgs>
    _count?: boolean | AgentDecisionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AgentDecisionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agent?: boolean | AgentDefaultArgs<ExtArgs>
    paymentOrder?: boolean | AgentDecision$paymentOrderArgs<ExtArgs>
  }

  export type $AgentDecisionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AgentDecision"
    objects: {
      agent: Prisma.$AgentPayload<ExtArgs>
      paymentOrder: Prisma.$PaymentOrderPayload<ExtArgs> | null
      interactions: Prisma.$AgentInteractionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      agentId: string
      paymentOrderId: string | null
      decisionType: string
      input: Prisma.JsonValue
      reasoning: Prisma.JsonValue
      decision: Prisma.JsonValue
      confidence: Prisma.Decimal
      executionTime: number
      tokensUsed: number | null
      wasOverridden: boolean
      overriddenBy: string | null
      overrideReason: string | null
      createdAt: Date
    }, ExtArgs["result"]["agentDecision"]>
    composites: {}
  }

  type AgentDecisionGetPayload<S extends boolean | null | undefined | AgentDecisionDefaultArgs> = $Result.GetResult<Prisma.$AgentDecisionPayload, S>

  type AgentDecisionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AgentDecisionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AgentDecisionCountAggregateInputType | true
    }

  export interface AgentDecisionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AgentDecision'], meta: { name: 'AgentDecision' } }
    /**
     * Find zero or one AgentDecision that matches the filter.
     * @param {AgentDecisionFindUniqueArgs} args - Arguments to find a AgentDecision
     * @example
     * // Get one AgentDecision
     * const agentDecision = await prisma.agentDecision.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AgentDecisionFindUniqueArgs>(args: SelectSubset<T, AgentDecisionFindUniqueArgs<ExtArgs>>): Prisma__AgentDecisionClient<$Result.GetResult<Prisma.$AgentDecisionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AgentDecision that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AgentDecisionFindUniqueOrThrowArgs} args - Arguments to find a AgentDecision
     * @example
     * // Get one AgentDecision
     * const agentDecision = await prisma.agentDecision.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AgentDecisionFindUniqueOrThrowArgs>(args: SelectSubset<T, AgentDecisionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AgentDecisionClient<$Result.GetResult<Prisma.$AgentDecisionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AgentDecision that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentDecisionFindFirstArgs} args - Arguments to find a AgentDecision
     * @example
     * // Get one AgentDecision
     * const agentDecision = await prisma.agentDecision.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AgentDecisionFindFirstArgs>(args?: SelectSubset<T, AgentDecisionFindFirstArgs<ExtArgs>>): Prisma__AgentDecisionClient<$Result.GetResult<Prisma.$AgentDecisionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AgentDecision that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentDecisionFindFirstOrThrowArgs} args - Arguments to find a AgentDecision
     * @example
     * // Get one AgentDecision
     * const agentDecision = await prisma.agentDecision.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AgentDecisionFindFirstOrThrowArgs>(args?: SelectSubset<T, AgentDecisionFindFirstOrThrowArgs<ExtArgs>>): Prisma__AgentDecisionClient<$Result.GetResult<Prisma.$AgentDecisionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AgentDecisions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentDecisionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AgentDecisions
     * const agentDecisions = await prisma.agentDecision.findMany()
     * 
     * // Get first 10 AgentDecisions
     * const agentDecisions = await prisma.agentDecision.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const agentDecisionWithIdOnly = await prisma.agentDecision.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AgentDecisionFindManyArgs>(args?: SelectSubset<T, AgentDecisionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgentDecisionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AgentDecision.
     * @param {AgentDecisionCreateArgs} args - Arguments to create a AgentDecision.
     * @example
     * // Create one AgentDecision
     * const AgentDecision = await prisma.agentDecision.create({
     *   data: {
     *     // ... data to create a AgentDecision
     *   }
     * })
     * 
     */
    create<T extends AgentDecisionCreateArgs>(args: SelectSubset<T, AgentDecisionCreateArgs<ExtArgs>>): Prisma__AgentDecisionClient<$Result.GetResult<Prisma.$AgentDecisionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AgentDecisions.
     * @param {AgentDecisionCreateManyArgs} args - Arguments to create many AgentDecisions.
     * @example
     * // Create many AgentDecisions
     * const agentDecision = await prisma.agentDecision.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AgentDecisionCreateManyArgs>(args?: SelectSubset<T, AgentDecisionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AgentDecisions and returns the data saved in the database.
     * @param {AgentDecisionCreateManyAndReturnArgs} args - Arguments to create many AgentDecisions.
     * @example
     * // Create many AgentDecisions
     * const agentDecision = await prisma.agentDecision.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AgentDecisions and only return the `id`
     * const agentDecisionWithIdOnly = await prisma.agentDecision.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AgentDecisionCreateManyAndReturnArgs>(args?: SelectSubset<T, AgentDecisionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgentDecisionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a AgentDecision.
     * @param {AgentDecisionDeleteArgs} args - Arguments to delete one AgentDecision.
     * @example
     * // Delete one AgentDecision
     * const AgentDecision = await prisma.agentDecision.delete({
     *   where: {
     *     // ... filter to delete one AgentDecision
     *   }
     * })
     * 
     */
    delete<T extends AgentDecisionDeleteArgs>(args: SelectSubset<T, AgentDecisionDeleteArgs<ExtArgs>>): Prisma__AgentDecisionClient<$Result.GetResult<Prisma.$AgentDecisionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AgentDecision.
     * @param {AgentDecisionUpdateArgs} args - Arguments to update one AgentDecision.
     * @example
     * // Update one AgentDecision
     * const agentDecision = await prisma.agentDecision.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AgentDecisionUpdateArgs>(args: SelectSubset<T, AgentDecisionUpdateArgs<ExtArgs>>): Prisma__AgentDecisionClient<$Result.GetResult<Prisma.$AgentDecisionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AgentDecisions.
     * @param {AgentDecisionDeleteManyArgs} args - Arguments to filter AgentDecisions to delete.
     * @example
     * // Delete a few AgentDecisions
     * const { count } = await prisma.agentDecision.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AgentDecisionDeleteManyArgs>(args?: SelectSubset<T, AgentDecisionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AgentDecisions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentDecisionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AgentDecisions
     * const agentDecision = await prisma.agentDecision.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AgentDecisionUpdateManyArgs>(args: SelectSubset<T, AgentDecisionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AgentDecision.
     * @param {AgentDecisionUpsertArgs} args - Arguments to update or create a AgentDecision.
     * @example
     * // Update or create a AgentDecision
     * const agentDecision = await prisma.agentDecision.upsert({
     *   create: {
     *     // ... data to create a AgentDecision
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AgentDecision we want to update
     *   }
     * })
     */
    upsert<T extends AgentDecisionUpsertArgs>(args: SelectSubset<T, AgentDecisionUpsertArgs<ExtArgs>>): Prisma__AgentDecisionClient<$Result.GetResult<Prisma.$AgentDecisionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AgentDecisions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentDecisionCountArgs} args - Arguments to filter AgentDecisions to count.
     * @example
     * // Count the number of AgentDecisions
     * const count = await prisma.agentDecision.count({
     *   where: {
     *     // ... the filter for the AgentDecisions we want to count
     *   }
     * })
    **/
    count<T extends AgentDecisionCountArgs>(
      args?: Subset<T, AgentDecisionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AgentDecisionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AgentDecision.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentDecisionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AgentDecisionAggregateArgs>(args: Subset<T, AgentDecisionAggregateArgs>): Prisma.PrismaPromise<GetAgentDecisionAggregateType<T>>

    /**
     * Group by AgentDecision.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentDecisionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AgentDecisionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AgentDecisionGroupByArgs['orderBy'] }
        : { orderBy?: AgentDecisionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AgentDecisionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAgentDecisionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AgentDecision model
   */
  readonly fields: AgentDecisionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AgentDecision.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AgentDecisionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    agent<T extends AgentDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AgentDefaultArgs<ExtArgs>>): Prisma__AgentClient<$Result.GetResult<Prisma.$AgentPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    paymentOrder<T extends AgentDecision$paymentOrderArgs<ExtArgs> = {}>(args?: Subset<T, AgentDecision$paymentOrderArgs<ExtArgs>>): Prisma__PaymentOrderClient<$Result.GetResult<Prisma.$PaymentOrderPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    interactions<T extends AgentDecision$interactionsArgs<ExtArgs> = {}>(args?: Subset<T, AgentDecision$interactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgentInteractionPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AgentDecision model
   */ 
  interface AgentDecisionFieldRefs {
    readonly id: FieldRef<"AgentDecision", 'String'>
    readonly agentId: FieldRef<"AgentDecision", 'String'>
    readonly paymentOrderId: FieldRef<"AgentDecision", 'String'>
    readonly decisionType: FieldRef<"AgentDecision", 'String'>
    readonly input: FieldRef<"AgentDecision", 'Json'>
    readonly reasoning: FieldRef<"AgentDecision", 'Json'>
    readonly decision: FieldRef<"AgentDecision", 'Json'>
    readonly confidence: FieldRef<"AgentDecision", 'Decimal'>
    readonly executionTime: FieldRef<"AgentDecision", 'Int'>
    readonly tokensUsed: FieldRef<"AgentDecision", 'Int'>
    readonly wasOverridden: FieldRef<"AgentDecision", 'Boolean'>
    readonly overriddenBy: FieldRef<"AgentDecision", 'String'>
    readonly overrideReason: FieldRef<"AgentDecision", 'String'>
    readonly createdAt: FieldRef<"AgentDecision", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AgentDecision findUnique
   */
  export type AgentDecisionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentDecision
     */
    select?: AgentDecisionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentDecisionInclude<ExtArgs> | null
    /**
     * Filter, which AgentDecision to fetch.
     */
    where: AgentDecisionWhereUniqueInput
  }

  /**
   * AgentDecision findUniqueOrThrow
   */
  export type AgentDecisionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentDecision
     */
    select?: AgentDecisionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentDecisionInclude<ExtArgs> | null
    /**
     * Filter, which AgentDecision to fetch.
     */
    where: AgentDecisionWhereUniqueInput
  }

  /**
   * AgentDecision findFirst
   */
  export type AgentDecisionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentDecision
     */
    select?: AgentDecisionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentDecisionInclude<ExtArgs> | null
    /**
     * Filter, which AgentDecision to fetch.
     */
    where?: AgentDecisionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgentDecisions to fetch.
     */
    orderBy?: AgentDecisionOrderByWithRelationInput | AgentDecisionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgentDecisions.
     */
    cursor?: AgentDecisionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgentDecisions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgentDecisions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgentDecisions.
     */
    distinct?: AgentDecisionScalarFieldEnum | AgentDecisionScalarFieldEnum[]
  }

  /**
   * AgentDecision findFirstOrThrow
   */
  export type AgentDecisionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentDecision
     */
    select?: AgentDecisionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentDecisionInclude<ExtArgs> | null
    /**
     * Filter, which AgentDecision to fetch.
     */
    where?: AgentDecisionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgentDecisions to fetch.
     */
    orderBy?: AgentDecisionOrderByWithRelationInput | AgentDecisionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgentDecisions.
     */
    cursor?: AgentDecisionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgentDecisions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgentDecisions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgentDecisions.
     */
    distinct?: AgentDecisionScalarFieldEnum | AgentDecisionScalarFieldEnum[]
  }

  /**
   * AgentDecision findMany
   */
  export type AgentDecisionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentDecision
     */
    select?: AgentDecisionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentDecisionInclude<ExtArgs> | null
    /**
     * Filter, which AgentDecisions to fetch.
     */
    where?: AgentDecisionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgentDecisions to fetch.
     */
    orderBy?: AgentDecisionOrderByWithRelationInput | AgentDecisionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AgentDecisions.
     */
    cursor?: AgentDecisionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgentDecisions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgentDecisions.
     */
    skip?: number
    distinct?: AgentDecisionScalarFieldEnum | AgentDecisionScalarFieldEnum[]
  }

  /**
   * AgentDecision create
   */
  export type AgentDecisionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentDecision
     */
    select?: AgentDecisionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentDecisionInclude<ExtArgs> | null
    /**
     * The data needed to create a AgentDecision.
     */
    data: XOR<AgentDecisionCreateInput, AgentDecisionUncheckedCreateInput>
  }

  /**
   * AgentDecision createMany
   */
  export type AgentDecisionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AgentDecisions.
     */
    data: AgentDecisionCreateManyInput | AgentDecisionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AgentDecision createManyAndReturn
   */
  export type AgentDecisionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentDecision
     */
    select?: AgentDecisionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many AgentDecisions.
     */
    data: AgentDecisionCreateManyInput | AgentDecisionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentDecisionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AgentDecision update
   */
  export type AgentDecisionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentDecision
     */
    select?: AgentDecisionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentDecisionInclude<ExtArgs> | null
    /**
     * The data needed to update a AgentDecision.
     */
    data: XOR<AgentDecisionUpdateInput, AgentDecisionUncheckedUpdateInput>
    /**
     * Choose, which AgentDecision to update.
     */
    where: AgentDecisionWhereUniqueInput
  }

  /**
   * AgentDecision updateMany
   */
  export type AgentDecisionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AgentDecisions.
     */
    data: XOR<AgentDecisionUpdateManyMutationInput, AgentDecisionUncheckedUpdateManyInput>
    /**
     * Filter which AgentDecisions to update
     */
    where?: AgentDecisionWhereInput
  }

  /**
   * AgentDecision upsert
   */
  export type AgentDecisionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentDecision
     */
    select?: AgentDecisionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentDecisionInclude<ExtArgs> | null
    /**
     * The filter to search for the AgentDecision to update in case it exists.
     */
    where: AgentDecisionWhereUniqueInput
    /**
     * In case the AgentDecision found by the `where` argument doesn't exist, create a new AgentDecision with this data.
     */
    create: XOR<AgentDecisionCreateInput, AgentDecisionUncheckedCreateInput>
    /**
     * In case the AgentDecision was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AgentDecisionUpdateInput, AgentDecisionUncheckedUpdateInput>
  }

  /**
   * AgentDecision delete
   */
  export type AgentDecisionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentDecision
     */
    select?: AgentDecisionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentDecisionInclude<ExtArgs> | null
    /**
     * Filter which AgentDecision to delete.
     */
    where: AgentDecisionWhereUniqueInput
  }

  /**
   * AgentDecision deleteMany
   */
  export type AgentDecisionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgentDecisions to delete
     */
    where?: AgentDecisionWhereInput
  }

  /**
   * AgentDecision.paymentOrder
   */
  export type AgentDecision$paymentOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentOrder
     */
    select?: PaymentOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentOrderInclude<ExtArgs> | null
    where?: PaymentOrderWhereInput
  }

  /**
   * AgentDecision.interactions
   */
  export type AgentDecision$interactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentInteraction
     */
    select?: AgentInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentInteractionInclude<ExtArgs> | null
    where?: AgentInteractionWhereInput
    orderBy?: AgentInteractionOrderByWithRelationInput | AgentInteractionOrderByWithRelationInput[]
    cursor?: AgentInteractionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AgentInteractionScalarFieldEnum | AgentInteractionScalarFieldEnum[]
  }

  /**
   * AgentDecision without action
   */
  export type AgentDecisionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentDecision
     */
    select?: AgentDecisionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentDecisionInclude<ExtArgs> | null
  }


  /**
   * Model AgentCheckpoint
   */

  export type AggregateAgentCheckpoint = {
    _count: AgentCheckpointCountAggregateOutputType | null
    _min: AgentCheckpointMinAggregateOutputType | null
    _max: AgentCheckpointMaxAggregateOutputType | null
  }

  export type AgentCheckpointMinAggregateOutputType = {
    id: string | null
    agentId: string | null
    threadId: string | null
    checkpointId: string | null
    createdAt: Date | null
  }

  export type AgentCheckpointMaxAggregateOutputType = {
    id: string | null
    agentId: string | null
    threadId: string | null
    checkpointId: string | null
    createdAt: Date | null
  }

  export type AgentCheckpointCountAggregateOutputType = {
    id: number
    agentId: number
    threadId: number
    checkpointId: number
    state: number
    metadata: number
    createdAt: number
    _all: number
  }


  export type AgentCheckpointMinAggregateInputType = {
    id?: true
    agentId?: true
    threadId?: true
    checkpointId?: true
    createdAt?: true
  }

  export type AgentCheckpointMaxAggregateInputType = {
    id?: true
    agentId?: true
    threadId?: true
    checkpointId?: true
    createdAt?: true
  }

  export type AgentCheckpointCountAggregateInputType = {
    id?: true
    agentId?: true
    threadId?: true
    checkpointId?: true
    state?: true
    metadata?: true
    createdAt?: true
    _all?: true
  }

  export type AgentCheckpointAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgentCheckpoint to aggregate.
     */
    where?: AgentCheckpointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgentCheckpoints to fetch.
     */
    orderBy?: AgentCheckpointOrderByWithRelationInput | AgentCheckpointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AgentCheckpointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgentCheckpoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgentCheckpoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AgentCheckpoints
    **/
    _count?: true | AgentCheckpointCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AgentCheckpointMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AgentCheckpointMaxAggregateInputType
  }

  export type GetAgentCheckpointAggregateType<T extends AgentCheckpointAggregateArgs> = {
        [P in keyof T & keyof AggregateAgentCheckpoint]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAgentCheckpoint[P]>
      : GetScalarType<T[P], AggregateAgentCheckpoint[P]>
  }




  export type AgentCheckpointGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgentCheckpointWhereInput
    orderBy?: AgentCheckpointOrderByWithAggregationInput | AgentCheckpointOrderByWithAggregationInput[]
    by: AgentCheckpointScalarFieldEnum[] | AgentCheckpointScalarFieldEnum
    having?: AgentCheckpointScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AgentCheckpointCountAggregateInputType | true
    _min?: AgentCheckpointMinAggregateInputType
    _max?: AgentCheckpointMaxAggregateInputType
  }

  export type AgentCheckpointGroupByOutputType = {
    id: string
    agentId: string
    threadId: string
    checkpointId: string
    state: JsonValue
    metadata: JsonValue | null
    createdAt: Date
    _count: AgentCheckpointCountAggregateOutputType | null
    _min: AgentCheckpointMinAggregateOutputType | null
    _max: AgentCheckpointMaxAggregateOutputType | null
  }

  type GetAgentCheckpointGroupByPayload<T extends AgentCheckpointGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AgentCheckpointGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AgentCheckpointGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AgentCheckpointGroupByOutputType[P]>
            : GetScalarType<T[P], AgentCheckpointGroupByOutputType[P]>
        }
      >
    >


  export type AgentCheckpointSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agentId?: boolean
    threadId?: boolean
    checkpointId?: boolean
    state?: boolean
    metadata?: boolean
    createdAt?: boolean
    agent?: boolean | AgentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agentCheckpoint"]>

  export type AgentCheckpointSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agentId?: boolean
    threadId?: boolean
    checkpointId?: boolean
    state?: boolean
    metadata?: boolean
    createdAt?: boolean
    agent?: boolean | AgentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agentCheckpoint"]>

  export type AgentCheckpointSelectScalar = {
    id?: boolean
    agentId?: boolean
    threadId?: boolean
    checkpointId?: boolean
    state?: boolean
    metadata?: boolean
    createdAt?: boolean
  }

  export type AgentCheckpointInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agent?: boolean | AgentDefaultArgs<ExtArgs>
  }
  export type AgentCheckpointIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agent?: boolean | AgentDefaultArgs<ExtArgs>
  }

  export type $AgentCheckpointPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AgentCheckpoint"
    objects: {
      agent: Prisma.$AgentPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      agentId: string
      threadId: string
      checkpointId: string
      state: Prisma.JsonValue
      metadata: Prisma.JsonValue | null
      createdAt: Date
    }, ExtArgs["result"]["agentCheckpoint"]>
    composites: {}
  }

  type AgentCheckpointGetPayload<S extends boolean | null | undefined | AgentCheckpointDefaultArgs> = $Result.GetResult<Prisma.$AgentCheckpointPayload, S>

  type AgentCheckpointCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AgentCheckpointFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AgentCheckpointCountAggregateInputType | true
    }

  export interface AgentCheckpointDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AgentCheckpoint'], meta: { name: 'AgentCheckpoint' } }
    /**
     * Find zero or one AgentCheckpoint that matches the filter.
     * @param {AgentCheckpointFindUniqueArgs} args - Arguments to find a AgentCheckpoint
     * @example
     * // Get one AgentCheckpoint
     * const agentCheckpoint = await prisma.agentCheckpoint.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AgentCheckpointFindUniqueArgs>(args: SelectSubset<T, AgentCheckpointFindUniqueArgs<ExtArgs>>): Prisma__AgentCheckpointClient<$Result.GetResult<Prisma.$AgentCheckpointPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AgentCheckpoint that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AgentCheckpointFindUniqueOrThrowArgs} args - Arguments to find a AgentCheckpoint
     * @example
     * // Get one AgentCheckpoint
     * const agentCheckpoint = await prisma.agentCheckpoint.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AgentCheckpointFindUniqueOrThrowArgs>(args: SelectSubset<T, AgentCheckpointFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AgentCheckpointClient<$Result.GetResult<Prisma.$AgentCheckpointPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AgentCheckpoint that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentCheckpointFindFirstArgs} args - Arguments to find a AgentCheckpoint
     * @example
     * // Get one AgentCheckpoint
     * const agentCheckpoint = await prisma.agentCheckpoint.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AgentCheckpointFindFirstArgs>(args?: SelectSubset<T, AgentCheckpointFindFirstArgs<ExtArgs>>): Prisma__AgentCheckpointClient<$Result.GetResult<Prisma.$AgentCheckpointPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AgentCheckpoint that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentCheckpointFindFirstOrThrowArgs} args - Arguments to find a AgentCheckpoint
     * @example
     * // Get one AgentCheckpoint
     * const agentCheckpoint = await prisma.agentCheckpoint.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AgentCheckpointFindFirstOrThrowArgs>(args?: SelectSubset<T, AgentCheckpointFindFirstOrThrowArgs<ExtArgs>>): Prisma__AgentCheckpointClient<$Result.GetResult<Prisma.$AgentCheckpointPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AgentCheckpoints that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentCheckpointFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AgentCheckpoints
     * const agentCheckpoints = await prisma.agentCheckpoint.findMany()
     * 
     * // Get first 10 AgentCheckpoints
     * const agentCheckpoints = await prisma.agentCheckpoint.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const agentCheckpointWithIdOnly = await prisma.agentCheckpoint.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AgentCheckpointFindManyArgs>(args?: SelectSubset<T, AgentCheckpointFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgentCheckpointPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AgentCheckpoint.
     * @param {AgentCheckpointCreateArgs} args - Arguments to create a AgentCheckpoint.
     * @example
     * // Create one AgentCheckpoint
     * const AgentCheckpoint = await prisma.agentCheckpoint.create({
     *   data: {
     *     // ... data to create a AgentCheckpoint
     *   }
     * })
     * 
     */
    create<T extends AgentCheckpointCreateArgs>(args: SelectSubset<T, AgentCheckpointCreateArgs<ExtArgs>>): Prisma__AgentCheckpointClient<$Result.GetResult<Prisma.$AgentCheckpointPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AgentCheckpoints.
     * @param {AgentCheckpointCreateManyArgs} args - Arguments to create many AgentCheckpoints.
     * @example
     * // Create many AgentCheckpoints
     * const agentCheckpoint = await prisma.agentCheckpoint.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AgentCheckpointCreateManyArgs>(args?: SelectSubset<T, AgentCheckpointCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AgentCheckpoints and returns the data saved in the database.
     * @param {AgentCheckpointCreateManyAndReturnArgs} args - Arguments to create many AgentCheckpoints.
     * @example
     * // Create many AgentCheckpoints
     * const agentCheckpoint = await prisma.agentCheckpoint.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AgentCheckpoints and only return the `id`
     * const agentCheckpointWithIdOnly = await prisma.agentCheckpoint.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AgentCheckpointCreateManyAndReturnArgs>(args?: SelectSubset<T, AgentCheckpointCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgentCheckpointPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a AgentCheckpoint.
     * @param {AgentCheckpointDeleteArgs} args - Arguments to delete one AgentCheckpoint.
     * @example
     * // Delete one AgentCheckpoint
     * const AgentCheckpoint = await prisma.agentCheckpoint.delete({
     *   where: {
     *     // ... filter to delete one AgentCheckpoint
     *   }
     * })
     * 
     */
    delete<T extends AgentCheckpointDeleteArgs>(args: SelectSubset<T, AgentCheckpointDeleteArgs<ExtArgs>>): Prisma__AgentCheckpointClient<$Result.GetResult<Prisma.$AgentCheckpointPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AgentCheckpoint.
     * @param {AgentCheckpointUpdateArgs} args - Arguments to update one AgentCheckpoint.
     * @example
     * // Update one AgentCheckpoint
     * const agentCheckpoint = await prisma.agentCheckpoint.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AgentCheckpointUpdateArgs>(args: SelectSubset<T, AgentCheckpointUpdateArgs<ExtArgs>>): Prisma__AgentCheckpointClient<$Result.GetResult<Prisma.$AgentCheckpointPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AgentCheckpoints.
     * @param {AgentCheckpointDeleteManyArgs} args - Arguments to filter AgentCheckpoints to delete.
     * @example
     * // Delete a few AgentCheckpoints
     * const { count } = await prisma.agentCheckpoint.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AgentCheckpointDeleteManyArgs>(args?: SelectSubset<T, AgentCheckpointDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AgentCheckpoints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentCheckpointUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AgentCheckpoints
     * const agentCheckpoint = await prisma.agentCheckpoint.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AgentCheckpointUpdateManyArgs>(args: SelectSubset<T, AgentCheckpointUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AgentCheckpoint.
     * @param {AgentCheckpointUpsertArgs} args - Arguments to update or create a AgentCheckpoint.
     * @example
     * // Update or create a AgentCheckpoint
     * const agentCheckpoint = await prisma.agentCheckpoint.upsert({
     *   create: {
     *     // ... data to create a AgentCheckpoint
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AgentCheckpoint we want to update
     *   }
     * })
     */
    upsert<T extends AgentCheckpointUpsertArgs>(args: SelectSubset<T, AgentCheckpointUpsertArgs<ExtArgs>>): Prisma__AgentCheckpointClient<$Result.GetResult<Prisma.$AgentCheckpointPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AgentCheckpoints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentCheckpointCountArgs} args - Arguments to filter AgentCheckpoints to count.
     * @example
     * // Count the number of AgentCheckpoints
     * const count = await prisma.agentCheckpoint.count({
     *   where: {
     *     // ... the filter for the AgentCheckpoints we want to count
     *   }
     * })
    **/
    count<T extends AgentCheckpointCountArgs>(
      args?: Subset<T, AgentCheckpointCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AgentCheckpointCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AgentCheckpoint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentCheckpointAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AgentCheckpointAggregateArgs>(args: Subset<T, AgentCheckpointAggregateArgs>): Prisma.PrismaPromise<GetAgentCheckpointAggregateType<T>>

    /**
     * Group by AgentCheckpoint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentCheckpointGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AgentCheckpointGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AgentCheckpointGroupByArgs['orderBy'] }
        : { orderBy?: AgentCheckpointGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AgentCheckpointGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAgentCheckpointGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AgentCheckpoint model
   */
  readonly fields: AgentCheckpointFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AgentCheckpoint.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AgentCheckpointClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    agent<T extends AgentDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AgentDefaultArgs<ExtArgs>>): Prisma__AgentClient<$Result.GetResult<Prisma.$AgentPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AgentCheckpoint model
   */ 
  interface AgentCheckpointFieldRefs {
    readonly id: FieldRef<"AgentCheckpoint", 'String'>
    readonly agentId: FieldRef<"AgentCheckpoint", 'String'>
    readonly threadId: FieldRef<"AgentCheckpoint", 'String'>
    readonly checkpointId: FieldRef<"AgentCheckpoint", 'String'>
    readonly state: FieldRef<"AgentCheckpoint", 'Json'>
    readonly metadata: FieldRef<"AgentCheckpoint", 'Json'>
    readonly createdAt: FieldRef<"AgentCheckpoint", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AgentCheckpoint findUnique
   */
  export type AgentCheckpointFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentCheckpoint
     */
    select?: AgentCheckpointSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentCheckpointInclude<ExtArgs> | null
    /**
     * Filter, which AgentCheckpoint to fetch.
     */
    where: AgentCheckpointWhereUniqueInput
  }

  /**
   * AgentCheckpoint findUniqueOrThrow
   */
  export type AgentCheckpointFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentCheckpoint
     */
    select?: AgentCheckpointSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentCheckpointInclude<ExtArgs> | null
    /**
     * Filter, which AgentCheckpoint to fetch.
     */
    where: AgentCheckpointWhereUniqueInput
  }

  /**
   * AgentCheckpoint findFirst
   */
  export type AgentCheckpointFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentCheckpoint
     */
    select?: AgentCheckpointSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentCheckpointInclude<ExtArgs> | null
    /**
     * Filter, which AgentCheckpoint to fetch.
     */
    where?: AgentCheckpointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgentCheckpoints to fetch.
     */
    orderBy?: AgentCheckpointOrderByWithRelationInput | AgentCheckpointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgentCheckpoints.
     */
    cursor?: AgentCheckpointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgentCheckpoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgentCheckpoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgentCheckpoints.
     */
    distinct?: AgentCheckpointScalarFieldEnum | AgentCheckpointScalarFieldEnum[]
  }

  /**
   * AgentCheckpoint findFirstOrThrow
   */
  export type AgentCheckpointFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentCheckpoint
     */
    select?: AgentCheckpointSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentCheckpointInclude<ExtArgs> | null
    /**
     * Filter, which AgentCheckpoint to fetch.
     */
    where?: AgentCheckpointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgentCheckpoints to fetch.
     */
    orderBy?: AgentCheckpointOrderByWithRelationInput | AgentCheckpointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgentCheckpoints.
     */
    cursor?: AgentCheckpointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgentCheckpoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgentCheckpoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgentCheckpoints.
     */
    distinct?: AgentCheckpointScalarFieldEnum | AgentCheckpointScalarFieldEnum[]
  }

  /**
   * AgentCheckpoint findMany
   */
  export type AgentCheckpointFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentCheckpoint
     */
    select?: AgentCheckpointSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentCheckpointInclude<ExtArgs> | null
    /**
     * Filter, which AgentCheckpoints to fetch.
     */
    where?: AgentCheckpointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgentCheckpoints to fetch.
     */
    orderBy?: AgentCheckpointOrderByWithRelationInput | AgentCheckpointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AgentCheckpoints.
     */
    cursor?: AgentCheckpointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgentCheckpoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgentCheckpoints.
     */
    skip?: number
    distinct?: AgentCheckpointScalarFieldEnum | AgentCheckpointScalarFieldEnum[]
  }

  /**
   * AgentCheckpoint create
   */
  export type AgentCheckpointCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentCheckpoint
     */
    select?: AgentCheckpointSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentCheckpointInclude<ExtArgs> | null
    /**
     * The data needed to create a AgentCheckpoint.
     */
    data: XOR<AgentCheckpointCreateInput, AgentCheckpointUncheckedCreateInput>
  }

  /**
   * AgentCheckpoint createMany
   */
  export type AgentCheckpointCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AgentCheckpoints.
     */
    data: AgentCheckpointCreateManyInput | AgentCheckpointCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AgentCheckpoint createManyAndReturn
   */
  export type AgentCheckpointCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentCheckpoint
     */
    select?: AgentCheckpointSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many AgentCheckpoints.
     */
    data: AgentCheckpointCreateManyInput | AgentCheckpointCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentCheckpointIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AgentCheckpoint update
   */
  export type AgentCheckpointUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentCheckpoint
     */
    select?: AgentCheckpointSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentCheckpointInclude<ExtArgs> | null
    /**
     * The data needed to update a AgentCheckpoint.
     */
    data: XOR<AgentCheckpointUpdateInput, AgentCheckpointUncheckedUpdateInput>
    /**
     * Choose, which AgentCheckpoint to update.
     */
    where: AgentCheckpointWhereUniqueInput
  }

  /**
   * AgentCheckpoint updateMany
   */
  export type AgentCheckpointUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AgentCheckpoints.
     */
    data: XOR<AgentCheckpointUpdateManyMutationInput, AgentCheckpointUncheckedUpdateManyInput>
    /**
     * Filter which AgentCheckpoints to update
     */
    where?: AgentCheckpointWhereInput
  }

  /**
   * AgentCheckpoint upsert
   */
  export type AgentCheckpointUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentCheckpoint
     */
    select?: AgentCheckpointSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentCheckpointInclude<ExtArgs> | null
    /**
     * The filter to search for the AgentCheckpoint to update in case it exists.
     */
    where: AgentCheckpointWhereUniqueInput
    /**
     * In case the AgentCheckpoint found by the `where` argument doesn't exist, create a new AgentCheckpoint with this data.
     */
    create: XOR<AgentCheckpointCreateInput, AgentCheckpointUncheckedCreateInput>
    /**
     * In case the AgentCheckpoint was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AgentCheckpointUpdateInput, AgentCheckpointUncheckedUpdateInput>
  }

  /**
   * AgentCheckpoint delete
   */
  export type AgentCheckpointDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentCheckpoint
     */
    select?: AgentCheckpointSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentCheckpointInclude<ExtArgs> | null
    /**
     * Filter which AgentCheckpoint to delete.
     */
    where: AgentCheckpointWhereUniqueInput
  }

  /**
   * AgentCheckpoint deleteMany
   */
  export type AgentCheckpointDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgentCheckpoints to delete
     */
    where?: AgentCheckpointWhereInput
  }

  /**
   * AgentCheckpoint without action
   */
  export type AgentCheckpointDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentCheckpoint
     */
    select?: AgentCheckpointSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentCheckpointInclude<ExtArgs> | null
  }


  /**
   * Model AgentInteraction
   */

  export type AggregateAgentInteraction = {
    _count: AgentInteractionCountAggregateOutputType | null
    _min: AgentInteractionMinAggregateOutputType | null
    _max: AgentInteractionMaxAggregateOutputType | null
  }

  export type AgentInteractionMinAggregateOutputType = {
    id: string | null
    agentDecisionId: string | null
    userId: string | null
    type: $Enums.InteractionType | null
    message: string | null
    action: string | null
    createdAt: Date | null
  }

  export type AgentInteractionMaxAggregateOutputType = {
    id: string | null
    agentDecisionId: string | null
    userId: string | null
    type: $Enums.InteractionType | null
    message: string | null
    action: string | null
    createdAt: Date | null
  }

  export type AgentInteractionCountAggregateOutputType = {
    id: number
    agentDecisionId: number
    userId: number
    type: number
    message: number
    action: number
    result: number
    createdAt: number
    _all: number
  }


  export type AgentInteractionMinAggregateInputType = {
    id?: true
    agentDecisionId?: true
    userId?: true
    type?: true
    message?: true
    action?: true
    createdAt?: true
  }

  export type AgentInteractionMaxAggregateInputType = {
    id?: true
    agentDecisionId?: true
    userId?: true
    type?: true
    message?: true
    action?: true
    createdAt?: true
  }

  export type AgentInteractionCountAggregateInputType = {
    id?: true
    agentDecisionId?: true
    userId?: true
    type?: true
    message?: true
    action?: true
    result?: true
    createdAt?: true
    _all?: true
  }

  export type AgentInteractionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgentInteraction to aggregate.
     */
    where?: AgentInteractionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgentInteractions to fetch.
     */
    orderBy?: AgentInteractionOrderByWithRelationInput | AgentInteractionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AgentInteractionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgentInteractions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgentInteractions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AgentInteractions
    **/
    _count?: true | AgentInteractionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AgentInteractionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AgentInteractionMaxAggregateInputType
  }

  export type GetAgentInteractionAggregateType<T extends AgentInteractionAggregateArgs> = {
        [P in keyof T & keyof AggregateAgentInteraction]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAgentInteraction[P]>
      : GetScalarType<T[P], AggregateAgentInteraction[P]>
  }




  export type AgentInteractionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgentInteractionWhereInput
    orderBy?: AgentInteractionOrderByWithAggregationInput | AgentInteractionOrderByWithAggregationInput[]
    by: AgentInteractionScalarFieldEnum[] | AgentInteractionScalarFieldEnum
    having?: AgentInteractionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AgentInteractionCountAggregateInputType | true
    _min?: AgentInteractionMinAggregateInputType
    _max?: AgentInteractionMaxAggregateInputType
  }

  export type AgentInteractionGroupByOutputType = {
    id: string
    agentDecisionId: string
    userId: string
    type: $Enums.InteractionType
    message: string | null
    action: string | null
    result: JsonValue | null
    createdAt: Date
    _count: AgentInteractionCountAggregateOutputType | null
    _min: AgentInteractionMinAggregateOutputType | null
    _max: AgentInteractionMaxAggregateOutputType | null
  }

  type GetAgentInteractionGroupByPayload<T extends AgentInteractionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AgentInteractionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AgentInteractionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AgentInteractionGroupByOutputType[P]>
            : GetScalarType<T[P], AgentInteractionGroupByOutputType[P]>
        }
      >
    >


  export type AgentInteractionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agentDecisionId?: boolean
    userId?: boolean
    type?: boolean
    message?: boolean
    action?: boolean
    result?: boolean
    createdAt?: boolean
    agentDecision?: boolean | AgentDecisionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agentInteraction"]>

  export type AgentInteractionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agentDecisionId?: boolean
    userId?: boolean
    type?: boolean
    message?: boolean
    action?: boolean
    result?: boolean
    createdAt?: boolean
    agentDecision?: boolean | AgentDecisionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agentInteraction"]>

  export type AgentInteractionSelectScalar = {
    id?: boolean
    agentDecisionId?: boolean
    userId?: boolean
    type?: boolean
    message?: boolean
    action?: boolean
    result?: boolean
    createdAt?: boolean
  }

  export type AgentInteractionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agentDecision?: boolean | AgentDecisionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AgentInteractionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agentDecision?: boolean | AgentDecisionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AgentInteractionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AgentInteraction"
    objects: {
      agentDecision: Prisma.$AgentDecisionPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      agentDecisionId: string
      userId: string
      type: $Enums.InteractionType
      message: string | null
      action: string | null
      result: Prisma.JsonValue | null
      createdAt: Date
    }, ExtArgs["result"]["agentInteraction"]>
    composites: {}
  }

  type AgentInteractionGetPayload<S extends boolean | null | undefined | AgentInteractionDefaultArgs> = $Result.GetResult<Prisma.$AgentInteractionPayload, S>

  type AgentInteractionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AgentInteractionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AgentInteractionCountAggregateInputType | true
    }

  export interface AgentInteractionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AgentInteraction'], meta: { name: 'AgentInteraction' } }
    /**
     * Find zero or one AgentInteraction that matches the filter.
     * @param {AgentInteractionFindUniqueArgs} args - Arguments to find a AgentInteraction
     * @example
     * // Get one AgentInteraction
     * const agentInteraction = await prisma.agentInteraction.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AgentInteractionFindUniqueArgs>(args: SelectSubset<T, AgentInteractionFindUniqueArgs<ExtArgs>>): Prisma__AgentInteractionClient<$Result.GetResult<Prisma.$AgentInteractionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AgentInteraction that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AgentInteractionFindUniqueOrThrowArgs} args - Arguments to find a AgentInteraction
     * @example
     * // Get one AgentInteraction
     * const agentInteraction = await prisma.agentInteraction.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AgentInteractionFindUniqueOrThrowArgs>(args: SelectSubset<T, AgentInteractionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AgentInteractionClient<$Result.GetResult<Prisma.$AgentInteractionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AgentInteraction that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentInteractionFindFirstArgs} args - Arguments to find a AgentInteraction
     * @example
     * // Get one AgentInteraction
     * const agentInteraction = await prisma.agentInteraction.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AgentInteractionFindFirstArgs>(args?: SelectSubset<T, AgentInteractionFindFirstArgs<ExtArgs>>): Prisma__AgentInteractionClient<$Result.GetResult<Prisma.$AgentInteractionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AgentInteraction that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentInteractionFindFirstOrThrowArgs} args - Arguments to find a AgentInteraction
     * @example
     * // Get one AgentInteraction
     * const agentInteraction = await prisma.agentInteraction.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AgentInteractionFindFirstOrThrowArgs>(args?: SelectSubset<T, AgentInteractionFindFirstOrThrowArgs<ExtArgs>>): Prisma__AgentInteractionClient<$Result.GetResult<Prisma.$AgentInteractionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AgentInteractions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentInteractionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AgentInteractions
     * const agentInteractions = await prisma.agentInteraction.findMany()
     * 
     * // Get first 10 AgentInteractions
     * const agentInteractions = await prisma.agentInteraction.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const agentInteractionWithIdOnly = await prisma.agentInteraction.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AgentInteractionFindManyArgs>(args?: SelectSubset<T, AgentInteractionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgentInteractionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AgentInteraction.
     * @param {AgentInteractionCreateArgs} args - Arguments to create a AgentInteraction.
     * @example
     * // Create one AgentInteraction
     * const AgentInteraction = await prisma.agentInteraction.create({
     *   data: {
     *     // ... data to create a AgentInteraction
     *   }
     * })
     * 
     */
    create<T extends AgentInteractionCreateArgs>(args: SelectSubset<T, AgentInteractionCreateArgs<ExtArgs>>): Prisma__AgentInteractionClient<$Result.GetResult<Prisma.$AgentInteractionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AgentInteractions.
     * @param {AgentInteractionCreateManyArgs} args - Arguments to create many AgentInteractions.
     * @example
     * // Create many AgentInteractions
     * const agentInteraction = await prisma.agentInteraction.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AgentInteractionCreateManyArgs>(args?: SelectSubset<T, AgentInteractionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AgentInteractions and returns the data saved in the database.
     * @param {AgentInteractionCreateManyAndReturnArgs} args - Arguments to create many AgentInteractions.
     * @example
     * // Create many AgentInteractions
     * const agentInteraction = await prisma.agentInteraction.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AgentInteractions and only return the `id`
     * const agentInteractionWithIdOnly = await prisma.agentInteraction.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AgentInteractionCreateManyAndReturnArgs>(args?: SelectSubset<T, AgentInteractionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgentInteractionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a AgentInteraction.
     * @param {AgentInteractionDeleteArgs} args - Arguments to delete one AgentInteraction.
     * @example
     * // Delete one AgentInteraction
     * const AgentInteraction = await prisma.agentInteraction.delete({
     *   where: {
     *     // ... filter to delete one AgentInteraction
     *   }
     * })
     * 
     */
    delete<T extends AgentInteractionDeleteArgs>(args: SelectSubset<T, AgentInteractionDeleteArgs<ExtArgs>>): Prisma__AgentInteractionClient<$Result.GetResult<Prisma.$AgentInteractionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AgentInteraction.
     * @param {AgentInteractionUpdateArgs} args - Arguments to update one AgentInteraction.
     * @example
     * // Update one AgentInteraction
     * const agentInteraction = await prisma.agentInteraction.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AgentInteractionUpdateArgs>(args: SelectSubset<T, AgentInteractionUpdateArgs<ExtArgs>>): Prisma__AgentInteractionClient<$Result.GetResult<Prisma.$AgentInteractionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AgentInteractions.
     * @param {AgentInteractionDeleteManyArgs} args - Arguments to filter AgentInteractions to delete.
     * @example
     * // Delete a few AgentInteractions
     * const { count } = await prisma.agentInteraction.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AgentInteractionDeleteManyArgs>(args?: SelectSubset<T, AgentInteractionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AgentInteractions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentInteractionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AgentInteractions
     * const agentInteraction = await prisma.agentInteraction.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AgentInteractionUpdateManyArgs>(args: SelectSubset<T, AgentInteractionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AgentInteraction.
     * @param {AgentInteractionUpsertArgs} args - Arguments to update or create a AgentInteraction.
     * @example
     * // Update or create a AgentInteraction
     * const agentInteraction = await prisma.agentInteraction.upsert({
     *   create: {
     *     // ... data to create a AgentInteraction
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AgentInteraction we want to update
     *   }
     * })
     */
    upsert<T extends AgentInteractionUpsertArgs>(args: SelectSubset<T, AgentInteractionUpsertArgs<ExtArgs>>): Prisma__AgentInteractionClient<$Result.GetResult<Prisma.$AgentInteractionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AgentInteractions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentInteractionCountArgs} args - Arguments to filter AgentInteractions to count.
     * @example
     * // Count the number of AgentInteractions
     * const count = await prisma.agentInteraction.count({
     *   where: {
     *     // ... the filter for the AgentInteractions we want to count
     *   }
     * })
    **/
    count<T extends AgentInteractionCountArgs>(
      args?: Subset<T, AgentInteractionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AgentInteractionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AgentInteraction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentInteractionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AgentInteractionAggregateArgs>(args: Subset<T, AgentInteractionAggregateArgs>): Prisma.PrismaPromise<GetAgentInteractionAggregateType<T>>

    /**
     * Group by AgentInteraction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentInteractionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AgentInteractionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AgentInteractionGroupByArgs['orderBy'] }
        : { orderBy?: AgentInteractionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AgentInteractionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAgentInteractionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AgentInteraction model
   */
  readonly fields: AgentInteractionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AgentInteraction.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AgentInteractionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    agentDecision<T extends AgentDecisionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AgentDecisionDefaultArgs<ExtArgs>>): Prisma__AgentDecisionClient<$Result.GetResult<Prisma.$AgentDecisionPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AgentInteraction model
   */ 
  interface AgentInteractionFieldRefs {
    readonly id: FieldRef<"AgentInteraction", 'String'>
    readonly agentDecisionId: FieldRef<"AgentInteraction", 'String'>
    readonly userId: FieldRef<"AgentInteraction", 'String'>
    readonly type: FieldRef<"AgentInteraction", 'InteractionType'>
    readonly message: FieldRef<"AgentInteraction", 'String'>
    readonly action: FieldRef<"AgentInteraction", 'String'>
    readonly result: FieldRef<"AgentInteraction", 'Json'>
    readonly createdAt: FieldRef<"AgentInteraction", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AgentInteraction findUnique
   */
  export type AgentInteractionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentInteraction
     */
    select?: AgentInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentInteractionInclude<ExtArgs> | null
    /**
     * Filter, which AgentInteraction to fetch.
     */
    where: AgentInteractionWhereUniqueInput
  }

  /**
   * AgentInteraction findUniqueOrThrow
   */
  export type AgentInteractionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentInteraction
     */
    select?: AgentInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentInteractionInclude<ExtArgs> | null
    /**
     * Filter, which AgentInteraction to fetch.
     */
    where: AgentInteractionWhereUniqueInput
  }

  /**
   * AgentInteraction findFirst
   */
  export type AgentInteractionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentInteraction
     */
    select?: AgentInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentInteractionInclude<ExtArgs> | null
    /**
     * Filter, which AgentInteraction to fetch.
     */
    where?: AgentInteractionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgentInteractions to fetch.
     */
    orderBy?: AgentInteractionOrderByWithRelationInput | AgentInteractionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgentInteractions.
     */
    cursor?: AgentInteractionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgentInteractions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgentInteractions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgentInteractions.
     */
    distinct?: AgentInteractionScalarFieldEnum | AgentInteractionScalarFieldEnum[]
  }

  /**
   * AgentInteraction findFirstOrThrow
   */
  export type AgentInteractionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentInteraction
     */
    select?: AgentInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentInteractionInclude<ExtArgs> | null
    /**
     * Filter, which AgentInteraction to fetch.
     */
    where?: AgentInteractionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgentInteractions to fetch.
     */
    orderBy?: AgentInteractionOrderByWithRelationInput | AgentInteractionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgentInteractions.
     */
    cursor?: AgentInteractionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgentInteractions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgentInteractions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgentInteractions.
     */
    distinct?: AgentInteractionScalarFieldEnum | AgentInteractionScalarFieldEnum[]
  }

  /**
   * AgentInteraction findMany
   */
  export type AgentInteractionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentInteraction
     */
    select?: AgentInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentInteractionInclude<ExtArgs> | null
    /**
     * Filter, which AgentInteractions to fetch.
     */
    where?: AgentInteractionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgentInteractions to fetch.
     */
    orderBy?: AgentInteractionOrderByWithRelationInput | AgentInteractionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AgentInteractions.
     */
    cursor?: AgentInteractionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgentInteractions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgentInteractions.
     */
    skip?: number
    distinct?: AgentInteractionScalarFieldEnum | AgentInteractionScalarFieldEnum[]
  }

  /**
   * AgentInteraction create
   */
  export type AgentInteractionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentInteraction
     */
    select?: AgentInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentInteractionInclude<ExtArgs> | null
    /**
     * The data needed to create a AgentInteraction.
     */
    data: XOR<AgentInteractionCreateInput, AgentInteractionUncheckedCreateInput>
  }

  /**
   * AgentInteraction createMany
   */
  export type AgentInteractionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AgentInteractions.
     */
    data: AgentInteractionCreateManyInput | AgentInteractionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AgentInteraction createManyAndReturn
   */
  export type AgentInteractionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentInteraction
     */
    select?: AgentInteractionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many AgentInteractions.
     */
    data: AgentInteractionCreateManyInput | AgentInteractionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentInteractionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AgentInteraction update
   */
  export type AgentInteractionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentInteraction
     */
    select?: AgentInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentInteractionInclude<ExtArgs> | null
    /**
     * The data needed to update a AgentInteraction.
     */
    data: XOR<AgentInteractionUpdateInput, AgentInteractionUncheckedUpdateInput>
    /**
     * Choose, which AgentInteraction to update.
     */
    where: AgentInteractionWhereUniqueInput
  }

  /**
   * AgentInteraction updateMany
   */
  export type AgentInteractionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AgentInteractions.
     */
    data: XOR<AgentInteractionUpdateManyMutationInput, AgentInteractionUncheckedUpdateManyInput>
    /**
     * Filter which AgentInteractions to update
     */
    where?: AgentInteractionWhereInput
  }

  /**
   * AgentInteraction upsert
   */
  export type AgentInteractionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentInteraction
     */
    select?: AgentInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentInteractionInclude<ExtArgs> | null
    /**
     * The filter to search for the AgentInteraction to update in case it exists.
     */
    where: AgentInteractionWhereUniqueInput
    /**
     * In case the AgentInteraction found by the `where` argument doesn't exist, create a new AgentInteraction with this data.
     */
    create: XOR<AgentInteractionCreateInput, AgentInteractionUncheckedCreateInput>
    /**
     * In case the AgentInteraction was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AgentInteractionUpdateInput, AgentInteractionUncheckedUpdateInput>
  }

  /**
   * AgentInteraction delete
   */
  export type AgentInteractionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentInteraction
     */
    select?: AgentInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentInteractionInclude<ExtArgs> | null
    /**
     * Filter which AgentInteraction to delete.
     */
    where: AgentInteractionWhereUniqueInput
  }

  /**
   * AgentInteraction deleteMany
   */
  export type AgentInteractionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgentInteractions to delete
     */
    where?: AgentInteractionWhereInput
  }

  /**
   * AgentInteraction without action
   */
  export type AgentInteractionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentInteraction
     */
    select?: AgentInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentInteractionInclude<ExtArgs> | null
  }


  /**
   * Model Webhook
   */

  export type AggregateWebhook = {
    _count: WebhookCountAggregateOutputType | null
    _avg: WebhookAvgAggregateOutputType | null
    _sum: WebhookSumAggregateOutputType | null
    _min: WebhookMinAggregateOutputType | null
    _max: WebhookMaxAggregateOutputType | null
  }

  export type WebhookAvgAggregateOutputType = {
    failureCount: number | null
  }

  export type WebhookSumAggregateOutputType = {
    failureCount: number | null
  }

  export type WebhookMinAggregateOutputType = {
    id: string | null
    organizationId: string | null
    url: string | null
    secret: string | null
    isActive: boolean | null
    failureCount: number | null
    lastFailureAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type WebhookMaxAggregateOutputType = {
    id: string | null
    organizationId: string | null
    url: string | null
    secret: string | null
    isActive: boolean | null
    failureCount: number | null
    lastFailureAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type WebhookCountAggregateOutputType = {
    id: number
    organizationId: number
    url: number
    events: number
    secret: number
    isActive: number
    failureCount: number
    lastFailureAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type WebhookAvgAggregateInputType = {
    failureCount?: true
  }

  export type WebhookSumAggregateInputType = {
    failureCount?: true
  }

  export type WebhookMinAggregateInputType = {
    id?: true
    organizationId?: true
    url?: true
    secret?: true
    isActive?: true
    failureCount?: true
    lastFailureAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type WebhookMaxAggregateInputType = {
    id?: true
    organizationId?: true
    url?: true
    secret?: true
    isActive?: true
    failureCount?: true
    lastFailureAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type WebhookCountAggregateInputType = {
    id?: true
    organizationId?: true
    url?: true
    events?: true
    secret?: true
    isActive?: true
    failureCount?: true
    lastFailureAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type WebhookAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Webhook to aggregate.
     */
    where?: WebhookWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Webhooks to fetch.
     */
    orderBy?: WebhookOrderByWithRelationInput | WebhookOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: WebhookWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Webhooks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Webhooks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Webhooks
    **/
    _count?: true | WebhookCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WebhookAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WebhookSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WebhookMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WebhookMaxAggregateInputType
  }

  export type GetWebhookAggregateType<T extends WebhookAggregateArgs> = {
        [P in keyof T & keyof AggregateWebhook]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWebhook[P]>
      : GetScalarType<T[P], AggregateWebhook[P]>
  }




  export type WebhookGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WebhookWhereInput
    orderBy?: WebhookOrderByWithAggregationInput | WebhookOrderByWithAggregationInput[]
    by: WebhookScalarFieldEnum[] | WebhookScalarFieldEnum
    having?: WebhookScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WebhookCountAggregateInputType | true
    _avg?: WebhookAvgAggregateInputType
    _sum?: WebhookSumAggregateInputType
    _min?: WebhookMinAggregateInputType
    _max?: WebhookMaxAggregateInputType
  }

  export type WebhookGroupByOutputType = {
    id: string
    organizationId: string
    url: string
    events: string[]
    secret: string
    isActive: boolean
    failureCount: number
    lastFailureAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: WebhookCountAggregateOutputType | null
    _avg: WebhookAvgAggregateOutputType | null
    _sum: WebhookSumAggregateOutputType | null
    _min: WebhookMinAggregateOutputType | null
    _max: WebhookMaxAggregateOutputType | null
  }

  type GetWebhookGroupByPayload<T extends WebhookGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<WebhookGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof WebhookGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], WebhookGroupByOutputType[P]>
            : GetScalarType<T[P], WebhookGroupByOutputType[P]>
        }
      >
    >


  export type WebhookSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    url?: boolean
    events?: boolean
    secret?: boolean
    isActive?: boolean
    failureCount?: boolean
    lastFailureAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    deliveries?: boolean | Webhook$deliveriesArgs<ExtArgs>
    _count?: boolean | WebhookCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["webhook"]>

  export type WebhookSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    url?: boolean
    events?: boolean
    secret?: boolean
    isActive?: boolean
    failureCount?: boolean
    lastFailureAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["webhook"]>

  export type WebhookSelectScalar = {
    id?: boolean
    organizationId?: boolean
    url?: boolean
    events?: boolean
    secret?: boolean
    isActive?: boolean
    failureCount?: boolean
    lastFailureAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type WebhookInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    deliveries?: boolean | Webhook$deliveriesArgs<ExtArgs>
    _count?: boolean | WebhookCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type WebhookIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }

  export type $WebhookPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Webhook"
    objects: {
      organization: Prisma.$OrganizationPayload<ExtArgs>
      deliveries: Prisma.$WebhookDeliveryPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      organizationId: string
      url: string
      events: string[]
      secret: string
      isActive: boolean
      failureCount: number
      lastFailureAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["webhook"]>
    composites: {}
  }

  type WebhookGetPayload<S extends boolean | null | undefined | WebhookDefaultArgs> = $Result.GetResult<Prisma.$WebhookPayload, S>

  type WebhookCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<WebhookFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: WebhookCountAggregateInputType | true
    }

  export interface WebhookDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Webhook'], meta: { name: 'Webhook' } }
    /**
     * Find zero or one Webhook that matches the filter.
     * @param {WebhookFindUniqueArgs} args - Arguments to find a Webhook
     * @example
     * // Get one Webhook
     * const webhook = await prisma.webhook.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends WebhookFindUniqueArgs>(args: SelectSubset<T, WebhookFindUniqueArgs<ExtArgs>>): Prisma__WebhookClient<$Result.GetResult<Prisma.$WebhookPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Webhook that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {WebhookFindUniqueOrThrowArgs} args - Arguments to find a Webhook
     * @example
     * // Get one Webhook
     * const webhook = await prisma.webhook.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends WebhookFindUniqueOrThrowArgs>(args: SelectSubset<T, WebhookFindUniqueOrThrowArgs<ExtArgs>>): Prisma__WebhookClient<$Result.GetResult<Prisma.$WebhookPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Webhook that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WebhookFindFirstArgs} args - Arguments to find a Webhook
     * @example
     * // Get one Webhook
     * const webhook = await prisma.webhook.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends WebhookFindFirstArgs>(args?: SelectSubset<T, WebhookFindFirstArgs<ExtArgs>>): Prisma__WebhookClient<$Result.GetResult<Prisma.$WebhookPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Webhook that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WebhookFindFirstOrThrowArgs} args - Arguments to find a Webhook
     * @example
     * // Get one Webhook
     * const webhook = await prisma.webhook.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends WebhookFindFirstOrThrowArgs>(args?: SelectSubset<T, WebhookFindFirstOrThrowArgs<ExtArgs>>): Prisma__WebhookClient<$Result.GetResult<Prisma.$WebhookPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Webhooks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WebhookFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Webhooks
     * const webhooks = await prisma.webhook.findMany()
     * 
     * // Get first 10 Webhooks
     * const webhooks = await prisma.webhook.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const webhookWithIdOnly = await prisma.webhook.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends WebhookFindManyArgs>(args?: SelectSubset<T, WebhookFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WebhookPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Webhook.
     * @param {WebhookCreateArgs} args - Arguments to create a Webhook.
     * @example
     * // Create one Webhook
     * const Webhook = await prisma.webhook.create({
     *   data: {
     *     // ... data to create a Webhook
     *   }
     * })
     * 
     */
    create<T extends WebhookCreateArgs>(args: SelectSubset<T, WebhookCreateArgs<ExtArgs>>): Prisma__WebhookClient<$Result.GetResult<Prisma.$WebhookPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Webhooks.
     * @param {WebhookCreateManyArgs} args - Arguments to create many Webhooks.
     * @example
     * // Create many Webhooks
     * const webhook = await prisma.webhook.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends WebhookCreateManyArgs>(args?: SelectSubset<T, WebhookCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Webhooks and returns the data saved in the database.
     * @param {WebhookCreateManyAndReturnArgs} args - Arguments to create many Webhooks.
     * @example
     * // Create many Webhooks
     * const webhook = await prisma.webhook.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Webhooks and only return the `id`
     * const webhookWithIdOnly = await prisma.webhook.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends WebhookCreateManyAndReturnArgs>(args?: SelectSubset<T, WebhookCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WebhookPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Webhook.
     * @param {WebhookDeleteArgs} args - Arguments to delete one Webhook.
     * @example
     * // Delete one Webhook
     * const Webhook = await prisma.webhook.delete({
     *   where: {
     *     // ... filter to delete one Webhook
     *   }
     * })
     * 
     */
    delete<T extends WebhookDeleteArgs>(args: SelectSubset<T, WebhookDeleteArgs<ExtArgs>>): Prisma__WebhookClient<$Result.GetResult<Prisma.$WebhookPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Webhook.
     * @param {WebhookUpdateArgs} args - Arguments to update one Webhook.
     * @example
     * // Update one Webhook
     * const webhook = await prisma.webhook.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends WebhookUpdateArgs>(args: SelectSubset<T, WebhookUpdateArgs<ExtArgs>>): Prisma__WebhookClient<$Result.GetResult<Prisma.$WebhookPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Webhooks.
     * @param {WebhookDeleteManyArgs} args - Arguments to filter Webhooks to delete.
     * @example
     * // Delete a few Webhooks
     * const { count } = await prisma.webhook.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends WebhookDeleteManyArgs>(args?: SelectSubset<T, WebhookDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Webhooks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WebhookUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Webhooks
     * const webhook = await prisma.webhook.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends WebhookUpdateManyArgs>(args: SelectSubset<T, WebhookUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Webhook.
     * @param {WebhookUpsertArgs} args - Arguments to update or create a Webhook.
     * @example
     * // Update or create a Webhook
     * const webhook = await prisma.webhook.upsert({
     *   create: {
     *     // ... data to create a Webhook
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Webhook we want to update
     *   }
     * })
     */
    upsert<T extends WebhookUpsertArgs>(args: SelectSubset<T, WebhookUpsertArgs<ExtArgs>>): Prisma__WebhookClient<$Result.GetResult<Prisma.$WebhookPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Webhooks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WebhookCountArgs} args - Arguments to filter Webhooks to count.
     * @example
     * // Count the number of Webhooks
     * const count = await prisma.webhook.count({
     *   where: {
     *     // ... the filter for the Webhooks we want to count
     *   }
     * })
    **/
    count<T extends WebhookCountArgs>(
      args?: Subset<T, WebhookCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WebhookCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Webhook.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WebhookAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WebhookAggregateArgs>(args: Subset<T, WebhookAggregateArgs>): Prisma.PrismaPromise<GetWebhookAggregateType<T>>

    /**
     * Group by Webhook.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WebhookGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WebhookGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WebhookGroupByArgs['orderBy'] }
        : { orderBy?: WebhookGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WebhookGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWebhookGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Webhook model
   */
  readonly fields: WebhookFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Webhook.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__WebhookClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organization<T extends OrganizationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationDefaultArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    deliveries<T extends Webhook$deliveriesArgs<ExtArgs> = {}>(args?: Subset<T, Webhook$deliveriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WebhookDeliveryPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Webhook model
   */ 
  interface WebhookFieldRefs {
    readonly id: FieldRef<"Webhook", 'String'>
    readonly organizationId: FieldRef<"Webhook", 'String'>
    readonly url: FieldRef<"Webhook", 'String'>
    readonly events: FieldRef<"Webhook", 'String[]'>
    readonly secret: FieldRef<"Webhook", 'String'>
    readonly isActive: FieldRef<"Webhook", 'Boolean'>
    readonly failureCount: FieldRef<"Webhook", 'Int'>
    readonly lastFailureAt: FieldRef<"Webhook", 'DateTime'>
    readonly createdAt: FieldRef<"Webhook", 'DateTime'>
    readonly updatedAt: FieldRef<"Webhook", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Webhook findUnique
   */
  export type WebhookFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Webhook
     */
    select?: WebhookSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WebhookInclude<ExtArgs> | null
    /**
     * Filter, which Webhook to fetch.
     */
    where: WebhookWhereUniqueInput
  }

  /**
   * Webhook findUniqueOrThrow
   */
  export type WebhookFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Webhook
     */
    select?: WebhookSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WebhookInclude<ExtArgs> | null
    /**
     * Filter, which Webhook to fetch.
     */
    where: WebhookWhereUniqueInput
  }

  /**
   * Webhook findFirst
   */
  export type WebhookFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Webhook
     */
    select?: WebhookSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WebhookInclude<ExtArgs> | null
    /**
     * Filter, which Webhook to fetch.
     */
    where?: WebhookWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Webhooks to fetch.
     */
    orderBy?: WebhookOrderByWithRelationInput | WebhookOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Webhooks.
     */
    cursor?: WebhookWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Webhooks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Webhooks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Webhooks.
     */
    distinct?: WebhookScalarFieldEnum | WebhookScalarFieldEnum[]
  }

  /**
   * Webhook findFirstOrThrow
   */
  export type WebhookFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Webhook
     */
    select?: WebhookSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WebhookInclude<ExtArgs> | null
    /**
     * Filter, which Webhook to fetch.
     */
    where?: WebhookWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Webhooks to fetch.
     */
    orderBy?: WebhookOrderByWithRelationInput | WebhookOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Webhooks.
     */
    cursor?: WebhookWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Webhooks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Webhooks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Webhooks.
     */
    distinct?: WebhookScalarFieldEnum | WebhookScalarFieldEnum[]
  }

  /**
   * Webhook findMany
   */
  export type WebhookFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Webhook
     */
    select?: WebhookSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WebhookInclude<ExtArgs> | null
    /**
     * Filter, which Webhooks to fetch.
     */
    where?: WebhookWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Webhooks to fetch.
     */
    orderBy?: WebhookOrderByWithRelationInput | WebhookOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Webhooks.
     */
    cursor?: WebhookWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Webhooks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Webhooks.
     */
    skip?: number
    distinct?: WebhookScalarFieldEnum | WebhookScalarFieldEnum[]
  }

  /**
   * Webhook create
   */
  export type WebhookCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Webhook
     */
    select?: WebhookSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WebhookInclude<ExtArgs> | null
    /**
     * The data needed to create a Webhook.
     */
    data: XOR<WebhookCreateInput, WebhookUncheckedCreateInput>
  }

  /**
   * Webhook createMany
   */
  export type WebhookCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Webhooks.
     */
    data: WebhookCreateManyInput | WebhookCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Webhook createManyAndReturn
   */
  export type WebhookCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Webhook
     */
    select?: WebhookSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Webhooks.
     */
    data: WebhookCreateManyInput | WebhookCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WebhookIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Webhook update
   */
  export type WebhookUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Webhook
     */
    select?: WebhookSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WebhookInclude<ExtArgs> | null
    /**
     * The data needed to update a Webhook.
     */
    data: XOR<WebhookUpdateInput, WebhookUncheckedUpdateInput>
    /**
     * Choose, which Webhook to update.
     */
    where: WebhookWhereUniqueInput
  }

  /**
   * Webhook updateMany
   */
  export type WebhookUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Webhooks.
     */
    data: XOR<WebhookUpdateManyMutationInput, WebhookUncheckedUpdateManyInput>
    /**
     * Filter which Webhooks to update
     */
    where?: WebhookWhereInput
  }

  /**
   * Webhook upsert
   */
  export type WebhookUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Webhook
     */
    select?: WebhookSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WebhookInclude<ExtArgs> | null
    /**
     * The filter to search for the Webhook to update in case it exists.
     */
    where: WebhookWhereUniqueInput
    /**
     * In case the Webhook found by the `where` argument doesn't exist, create a new Webhook with this data.
     */
    create: XOR<WebhookCreateInput, WebhookUncheckedCreateInput>
    /**
     * In case the Webhook was found with the provided `where` argument, update it with this data.
     */
    update: XOR<WebhookUpdateInput, WebhookUncheckedUpdateInput>
  }

  /**
   * Webhook delete
   */
  export type WebhookDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Webhook
     */
    select?: WebhookSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WebhookInclude<ExtArgs> | null
    /**
     * Filter which Webhook to delete.
     */
    where: WebhookWhereUniqueInput
  }

  /**
   * Webhook deleteMany
   */
  export type WebhookDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Webhooks to delete
     */
    where?: WebhookWhereInput
  }

  /**
   * Webhook.deliveries
   */
  export type Webhook$deliveriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WebhookDelivery
     */
    select?: WebhookDeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WebhookDeliveryInclude<ExtArgs> | null
    where?: WebhookDeliveryWhereInput
    orderBy?: WebhookDeliveryOrderByWithRelationInput | WebhookDeliveryOrderByWithRelationInput[]
    cursor?: WebhookDeliveryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: WebhookDeliveryScalarFieldEnum | WebhookDeliveryScalarFieldEnum[]
  }

  /**
   * Webhook without action
   */
  export type WebhookDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Webhook
     */
    select?: WebhookSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WebhookInclude<ExtArgs> | null
  }


  /**
   * Model WebhookDelivery
   */

  export type AggregateWebhookDelivery = {
    _count: WebhookDeliveryCountAggregateOutputType | null
    _avg: WebhookDeliveryAvgAggregateOutputType | null
    _sum: WebhookDeliverySumAggregateOutputType | null
    _min: WebhookDeliveryMinAggregateOutputType | null
    _max: WebhookDeliveryMaxAggregateOutputType | null
  }

  export type WebhookDeliveryAvgAggregateOutputType = {
    statusCode: number | null
    attempts: number | null
  }

  export type WebhookDeliverySumAggregateOutputType = {
    statusCode: number | null
    attempts: number | null
  }

  export type WebhookDeliveryMinAggregateOutputType = {
    id: string | null
    webhookId: string | null
    eventType: string | null
    eventId: string | null
    statusCode: number | null
    response: string | null
    error: string | null
    attempts: number | null
    nextRetryAt: Date | null
    createdAt: Date | null
    deliveredAt: Date | null
  }

  export type WebhookDeliveryMaxAggregateOutputType = {
    id: string | null
    webhookId: string | null
    eventType: string | null
    eventId: string | null
    statusCode: number | null
    response: string | null
    error: string | null
    attempts: number | null
    nextRetryAt: Date | null
    createdAt: Date | null
    deliveredAt: Date | null
  }

  export type WebhookDeliveryCountAggregateOutputType = {
    id: number
    webhookId: number
    eventType: number
    eventId: number
    payload: number
    statusCode: number
    response: number
    error: number
    attempts: number
    nextRetryAt: number
    createdAt: number
    deliveredAt: number
    _all: number
  }


  export type WebhookDeliveryAvgAggregateInputType = {
    statusCode?: true
    attempts?: true
  }

  export type WebhookDeliverySumAggregateInputType = {
    statusCode?: true
    attempts?: true
  }

  export type WebhookDeliveryMinAggregateInputType = {
    id?: true
    webhookId?: true
    eventType?: true
    eventId?: true
    statusCode?: true
    response?: true
    error?: true
    attempts?: true
    nextRetryAt?: true
    createdAt?: true
    deliveredAt?: true
  }

  export type WebhookDeliveryMaxAggregateInputType = {
    id?: true
    webhookId?: true
    eventType?: true
    eventId?: true
    statusCode?: true
    response?: true
    error?: true
    attempts?: true
    nextRetryAt?: true
    createdAt?: true
    deliveredAt?: true
  }

  export type WebhookDeliveryCountAggregateInputType = {
    id?: true
    webhookId?: true
    eventType?: true
    eventId?: true
    payload?: true
    statusCode?: true
    response?: true
    error?: true
    attempts?: true
    nextRetryAt?: true
    createdAt?: true
    deliveredAt?: true
    _all?: true
  }

  export type WebhookDeliveryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which WebhookDelivery to aggregate.
     */
    where?: WebhookDeliveryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WebhookDeliveries to fetch.
     */
    orderBy?: WebhookDeliveryOrderByWithRelationInput | WebhookDeliveryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: WebhookDeliveryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WebhookDeliveries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WebhookDeliveries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WebhookDeliveries
    **/
    _count?: true | WebhookDeliveryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WebhookDeliveryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WebhookDeliverySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WebhookDeliveryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WebhookDeliveryMaxAggregateInputType
  }

  export type GetWebhookDeliveryAggregateType<T extends WebhookDeliveryAggregateArgs> = {
        [P in keyof T & keyof AggregateWebhookDelivery]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWebhookDelivery[P]>
      : GetScalarType<T[P], AggregateWebhookDelivery[P]>
  }




  export type WebhookDeliveryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WebhookDeliveryWhereInput
    orderBy?: WebhookDeliveryOrderByWithAggregationInput | WebhookDeliveryOrderByWithAggregationInput[]
    by: WebhookDeliveryScalarFieldEnum[] | WebhookDeliveryScalarFieldEnum
    having?: WebhookDeliveryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WebhookDeliveryCountAggregateInputType | true
    _avg?: WebhookDeliveryAvgAggregateInputType
    _sum?: WebhookDeliverySumAggregateInputType
    _min?: WebhookDeliveryMinAggregateInputType
    _max?: WebhookDeliveryMaxAggregateInputType
  }

  export type WebhookDeliveryGroupByOutputType = {
    id: string
    webhookId: string
    eventType: string
    eventId: string
    payload: JsonValue
    statusCode: number | null
    response: string | null
    error: string | null
    attempts: number
    nextRetryAt: Date | null
    createdAt: Date
    deliveredAt: Date | null
    _count: WebhookDeliveryCountAggregateOutputType | null
    _avg: WebhookDeliveryAvgAggregateOutputType | null
    _sum: WebhookDeliverySumAggregateOutputType | null
    _min: WebhookDeliveryMinAggregateOutputType | null
    _max: WebhookDeliveryMaxAggregateOutputType | null
  }

  type GetWebhookDeliveryGroupByPayload<T extends WebhookDeliveryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<WebhookDeliveryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof WebhookDeliveryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], WebhookDeliveryGroupByOutputType[P]>
            : GetScalarType<T[P], WebhookDeliveryGroupByOutputType[P]>
        }
      >
    >


  export type WebhookDeliverySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    webhookId?: boolean
    eventType?: boolean
    eventId?: boolean
    payload?: boolean
    statusCode?: boolean
    response?: boolean
    error?: boolean
    attempts?: boolean
    nextRetryAt?: boolean
    createdAt?: boolean
    deliveredAt?: boolean
    webhook?: boolean | WebhookDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["webhookDelivery"]>

  export type WebhookDeliverySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    webhookId?: boolean
    eventType?: boolean
    eventId?: boolean
    payload?: boolean
    statusCode?: boolean
    response?: boolean
    error?: boolean
    attempts?: boolean
    nextRetryAt?: boolean
    createdAt?: boolean
    deliveredAt?: boolean
    webhook?: boolean | WebhookDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["webhookDelivery"]>

  export type WebhookDeliverySelectScalar = {
    id?: boolean
    webhookId?: boolean
    eventType?: boolean
    eventId?: boolean
    payload?: boolean
    statusCode?: boolean
    response?: boolean
    error?: boolean
    attempts?: boolean
    nextRetryAt?: boolean
    createdAt?: boolean
    deliveredAt?: boolean
  }

  export type WebhookDeliveryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    webhook?: boolean | WebhookDefaultArgs<ExtArgs>
  }
  export type WebhookDeliveryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    webhook?: boolean | WebhookDefaultArgs<ExtArgs>
  }

  export type $WebhookDeliveryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "WebhookDelivery"
    objects: {
      webhook: Prisma.$WebhookPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      webhookId: string
      eventType: string
      eventId: string
      payload: Prisma.JsonValue
      statusCode: number | null
      response: string | null
      error: string | null
      attempts: number
      nextRetryAt: Date | null
      createdAt: Date
      deliveredAt: Date | null
    }, ExtArgs["result"]["webhookDelivery"]>
    composites: {}
  }

  type WebhookDeliveryGetPayload<S extends boolean | null | undefined | WebhookDeliveryDefaultArgs> = $Result.GetResult<Prisma.$WebhookDeliveryPayload, S>

  type WebhookDeliveryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<WebhookDeliveryFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: WebhookDeliveryCountAggregateInputType | true
    }

  export interface WebhookDeliveryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['WebhookDelivery'], meta: { name: 'WebhookDelivery' } }
    /**
     * Find zero or one WebhookDelivery that matches the filter.
     * @param {WebhookDeliveryFindUniqueArgs} args - Arguments to find a WebhookDelivery
     * @example
     * // Get one WebhookDelivery
     * const webhookDelivery = await prisma.webhookDelivery.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends WebhookDeliveryFindUniqueArgs>(args: SelectSubset<T, WebhookDeliveryFindUniqueArgs<ExtArgs>>): Prisma__WebhookDeliveryClient<$Result.GetResult<Prisma.$WebhookDeliveryPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one WebhookDelivery that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {WebhookDeliveryFindUniqueOrThrowArgs} args - Arguments to find a WebhookDelivery
     * @example
     * // Get one WebhookDelivery
     * const webhookDelivery = await prisma.webhookDelivery.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends WebhookDeliveryFindUniqueOrThrowArgs>(args: SelectSubset<T, WebhookDeliveryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__WebhookDeliveryClient<$Result.GetResult<Prisma.$WebhookDeliveryPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first WebhookDelivery that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WebhookDeliveryFindFirstArgs} args - Arguments to find a WebhookDelivery
     * @example
     * // Get one WebhookDelivery
     * const webhookDelivery = await prisma.webhookDelivery.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends WebhookDeliveryFindFirstArgs>(args?: SelectSubset<T, WebhookDeliveryFindFirstArgs<ExtArgs>>): Prisma__WebhookDeliveryClient<$Result.GetResult<Prisma.$WebhookDeliveryPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first WebhookDelivery that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WebhookDeliveryFindFirstOrThrowArgs} args - Arguments to find a WebhookDelivery
     * @example
     * // Get one WebhookDelivery
     * const webhookDelivery = await prisma.webhookDelivery.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends WebhookDeliveryFindFirstOrThrowArgs>(args?: SelectSubset<T, WebhookDeliveryFindFirstOrThrowArgs<ExtArgs>>): Prisma__WebhookDeliveryClient<$Result.GetResult<Prisma.$WebhookDeliveryPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more WebhookDeliveries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WebhookDeliveryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WebhookDeliveries
     * const webhookDeliveries = await prisma.webhookDelivery.findMany()
     * 
     * // Get first 10 WebhookDeliveries
     * const webhookDeliveries = await prisma.webhookDelivery.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const webhookDeliveryWithIdOnly = await prisma.webhookDelivery.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends WebhookDeliveryFindManyArgs>(args?: SelectSubset<T, WebhookDeliveryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WebhookDeliveryPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a WebhookDelivery.
     * @param {WebhookDeliveryCreateArgs} args - Arguments to create a WebhookDelivery.
     * @example
     * // Create one WebhookDelivery
     * const WebhookDelivery = await prisma.webhookDelivery.create({
     *   data: {
     *     // ... data to create a WebhookDelivery
     *   }
     * })
     * 
     */
    create<T extends WebhookDeliveryCreateArgs>(args: SelectSubset<T, WebhookDeliveryCreateArgs<ExtArgs>>): Prisma__WebhookDeliveryClient<$Result.GetResult<Prisma.$WebhookDeliveryPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many WebhookDeliveries.
     * @param {WebhookDeliveryCreateManyArgs} args - Arguments to create many WebhookDeliveries.
     * @example
     * // Create many WebhookDeliveries
     * const webhookDelivery = await prisma.webhookDelivery.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends WebhookDeliveryCreateManyArgs>(args?: SelectSubset<T, WebhookDeliveryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many WebhookDeliveries and returns the data saved in the database.
     * @param {WebhookDeliveryCreateManyAndReturnArgs} args - Arguments to create many WebhookDeliveries.
     * @example
     * // Create many WebhookDeliveries
     * const webhookDelivery = await prisma.webhookDelivery.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many WebhookDeliveries and only return the `id`
     * const webhookDeliveryWithIdOnly = await prisma.webhookDelivery.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends WebhookDeliveryCreateManyAndReturnArgs>(args?: SelectSubset<T, WebhookDeliveryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WebhookDeliveryPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a WebhookDelivery.
     * @param {WebhookDeliveryDeleteArgs} args - Arguments to delete one WebhookDelivery.
     * @example
     * // Delete one WebhookDelivery
     * const WebhookDelivery = await prisma.webhookDelivery.delete({
     *   where: {
     *     // ... filter to delete one WebhookDelivery
     *   }
     * })
     * 
     */
    delete<T extends WebhookDeliveryDeleteArgs>(args: SelectSubset<T, WebhookDeliveryDeleteArgs<ExtArgs>>): Prisma__WebhookDeliveryClient<$Result.GetResult<Prisma.$WebhookDeliveryPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one WebhookDelivery.
     * @param {WebhookDeliveryUpdateArgs} args - Arguments to update one WebhookDelivery.
     * @example
     * // Update one WebhookDelivery
     * const webhookDelivery = await prisma.webhookDelivery.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends WebhookDeliveryUpdateArgs>(args: SelectSubset<T, WebhookDeliveryUpdateArgs<ExtArgs>>): Prisma__WebhookDeliveryClient<$Result.GetResult<Prisma.$WebhookDeliveryPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more WebhookDeliveries.
     * @param {WebhookDeliveryDeleteManyArgs} args - Arguments to filter WebhookDeliveries to delete.
     * @example
     * // Delete a few WebhookDeliveries
     * const { count } = await prisma.webhookDelivery.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends WebhookDeliveryDeleteManyArgs>(args?: SelectSubset<T, WebhookDeliveryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more WebhookDeliveries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WebhookDeliveryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WebhookDeliveries
     * const webhookDelivery = await prisma.webhookDelivery.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends WebhookDeliveryUpdateManyArgs>(args: SelectSubset<T, WebhookDeliveryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one WebhookDelivery.
     * @param {WebhookDeliveryUpsertArgs} args - Arguments to update or create a WebhookDelivery.
     * @example
     * // Update or create a WebhookDelivery
     * const webhookDelivery = await prisma.webhookDelivery.upsert({
     *   create: {
     *     // ... data to create a WebhookDelivery
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WebhookDelivery we want to update
     *   }
     * })
     */
    upsert<T extends WebhookDeliveryUpsertArgs>(args: SelectSubset<T, WebhookDeliveryUpsertArgs<ExtArgs>>): Prisma__WebhookDeliveryClient<$Result.GetResult<Prisma.$WebhookDeliveryPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of WebhookDeliveries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WebhookDeliveryCountArgs} args - Arguments to filter WebhookDeliveries to count.
     * @example
     * // Count the number of WebhookDeliveries
     * const count = await prisma.webhookDelivery.count({
     *   where: {
     *     // ... the filter for the WebhookDeliveries we want to count
     *   }
     * })
    **/
    count<T extends WebhookDeliveryCountArgs>(
      args?: Subset<T, WebhookDeliveryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WebhookDeliveryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WebhookDelivery.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WebhookDeliveryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WebhookDeliveryAggregateArgs>(args: Subset<T, WebhookDeliveryAggregateArgs>): Prisma.PrismaPromise<GetWebhookDeliveryAggregateType<T>>

    /**
     * Group by WebhookDelivery.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WebhookDeliveryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WebhookDeliveryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WebhookDeliveryGroupByArgs['orderBy'] }
        : { orderBy?: WebhookDeliveryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WebhookDeliveryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWebhookDeliveryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the WebhookDelivery model
   */
  readonly fields: WebhookDeliveryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for WebhookDelivery.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__WebhookDeliveryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    webhook<T extends WebhookDefaultArgs<ExtArgs> = {}>(args?: Subset<T, WebhookDefaultArgs<ExtArgs>>): Prisma__WebhookClient<$Result.GetResult<Prisma.$WebhookPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the WebhookDelivery model
   */ 
  interface WebhookDeliveryFieldRefs {
    readonly id: FieldRef<"WebhookDelivery", 'String'>
    readonly webhookId: FieldRef<"WebhookDelivery", 'String'>
    readonly eventType: FieldRef<"WebhookDelivery", 'String'>
    readonly eventId: FieldRef<"WebhookDelivery", 'String'>
    readonly payload: FieldRef<"WebhookDelivery", 'Json'>
    readonly statusCode: FieldRef<"WebhookDelivery", 'Int'>
    readonly response: FieldRef<"WebhookDelivery", 'String'>
    readonly error: FieldRef<"WebhookDelivery", 'String'>
    readonly attempts: FieldRef<"WebhookDelivery", 'Int'>
    readonly nextRetryAt: FieldRef<"WebhookDelivery", 'DateTime'>
    readonly createdAt: FieldRef<"WebhookDelivery", 'DateTime'>
    readonly deliveredAt: FieldRef<"WebhookDelivery", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * WebhookDelivery findUnique
   */
  export type WebhookDeliveryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WebhookDelivery
     */
    select?: WebhookDeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WebhookDeliveryInclude<ExtArgs> | null
    /**
     * Filter, which WebhookDelivery to fetch.
     */
    where: WebhookDeliveryWhereUniqueInput
  }

  /**
   * WebhookDelivery findUniqueOrThrow
   */
  export type WebhookDeliveryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WebhookDelivery
     */
    select?: WebhookDeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WebhookDeliveryInclude<ExtArgs> | null
    /**
     * Filter, which WebhookDelivery to fetch.
     */
    where: WebhookDeliveryWhereUniqueInput
  }

  /**
   * WebhookDelivery findFirst
   */
  export type WebhookDeliveryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WebhookDelivery
     */
    select?: WebhookDeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WebhookDeliveryInclude<ExtArgs> | null
    /**
     * Filter, which WebhookDelivery to fetch.
     */
    where?: WebhookDeliveryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WebhookDeliveries to fetch.
     */
    orderBy?: WebhookDeliveryOrderByWithRelationInput | WebhookDeliveryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WebhookDeliveries.
     */
    cursor?: WebhookDeliveryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WebhookDeliveries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WebhookDeliveries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WebhookDeliveries.
     */
    distinct?: WebhookDeliveryScalarFieldEnum | WebhookDeliveryScalarFieldEnum[]
  }

  /**
   * WebhookDelivery findFirstOrThrow
   */
  export type WebhookDeliveryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WebhookDelivery
     */
    select?: WebhookDeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WebhookDeliveryInclude<ExtArgs> | null
    /**
     * Filter, which WebhookDelivery to fetch.
     */
    where?: WebhookDeliveryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WebhookDeliveries to fetch.
     */
    orderBy?: WebhookDeliveryOrderByWithRelationInput | WebhookDeliveryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WebhookDeliveries.
     */
    cursor?: WebhookDeliveryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WebhookDeliveries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WebhookDeliveries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WebhookDeliveries.
     */
    distinct?: WebhookDeliveryScalarFieldEnum | WebhookDeliveryScalarFieldEnum[]
  }

  /**
   * WebhookDelivery findMany
   */
  export type WebhookDeliveryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WebhookDelivery
     */
    select?: WebhookDeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WebhookDeliveryInclude<ExtArgs> | null
    /**
     * Filter, which WebhookDeliveries to fetch.
     */
    where?: WebhookDeliveryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WebhookDeliveries to fetch.
     */
    orderBy?: WebhookDeliveryOrderByWithRelationInput | WebhookDeliveryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WebhookDeliveries.
     */
    cursor?: WebhookDeliveryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WebhookDeliveries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WebhookDeliveries.
     */
    skip?: number
    distinct?: WebhookDeliveryScalarFieldEnum | WebhookDeliveryScalarFieldEnum[]
  }

  /**
   * WebhookDelivery create
   */
  export type WebhookDeliveryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WebhookDelivery
     */
    select?: WebhookDeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WebhookDeliveryInclude<ExtArgs> | null
    /**
     * The data needed to create a WebhookDelivery.
     */
    data: XOR<WebhookDeliveryCreateInput, WebhookDeliveryUncheckedCreateInput>
  }

  /**
   * WebhookDelivery createMany
   */
  export type WebhookDeliveryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many WebhookDeliveries.
     */
    data: WebhookDeliveryCreateManyInput | WebhookDeliveryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * WebhookDelivery createManyAndReturn
   */
  export type WebhookDeliveryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WebhookDelivery
     */
    select?: WebhookDeliverySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many WebhookDeliveries.
     */
    data: WebhookDeliveryCreateManyInput | WebhookDeliveryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WebhookDeliveryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * WebhookDelivery update
   */
  export type WebhookDeliveryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WebhookDelivery
     */
    select?: WebhookDeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WebhookDeliveryInclude<ExtArgs> | null
    /**
     * The data needed to update a WebhookDelivery.
     */
    data: XOR<WebhookDeliveryUpdateInput, WebhookDeliveryUncheckedUpdateInput>
    /**
     * Choose, which WebhookDelivery to update.
     */
    where: WebhookDeliveryWhereUniqueInput
  }

  /**
   * WebhookDelivery updateMany
   */
  export type WebhookDeliveryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update WebhookDeliveries.
     */
    data: XOR<WebhookDeliveryUpdateManyMutationInput, WebhookDeliveryUncheckedUpdateManyInput>
    /**
     * Filter which WebhookDeliveries to update
     */
    where?: WebhookDeliveryWhereInput
  }

  /**
   * WebhookDelivery upsert
   */
  export type WebhookDeliveryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WebhookDelivery
     */
    select?: WebhookDeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WebhookDeliveryInclude<ExtArgs> | null
    /**
     * The filter to search for the WebhookDelivery to update in case it exists.
     */
    where: WebhookDeliveryWhereUniqueInput
    /**
     * In case the WebhookDelivery found by the `where` argument doesn't exist, create a new WebhookDelivery with this data.
     */
    create: XOR<WebhookDeliveryCreateInput, WebhookDeliveryUncheckedCreateInput>
    /**
     * In case the WebhookDelivery was found with the provided `where` argument, update it with this data.
     */
    update: XOR<WebhookDeliveryUpdateInput, WebhookDeliveryUncheckedUpdateInput>
  }

  /**
   * WebhookDelivery delete
   */
  export type WebhookDeliveryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WebhookDelivery
     */
    select?: WebhookDeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WebhookDeliveryInclude<ExtArgs> | null
    /**
     * Filter which WebhookDelivery to delete.
     */
    where: WebhookDeliveryWhereUniqueInput
  }

  /**
   * WebhookDelivery deleteMany
   */
  export type WebhookDeliveryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which WebhookDeliveries to delete
     */
    where?: WebhookDeliveryWhereInput
  }

  /**
   * WebhookDelivery without action
   */
  export type WebhookDeliveryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WebhookDelivery
     */
    select?: WebhookDeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WebhookDeliveryInclude<ExtArgs> | null
  }


  /**
   * Model ManualProcessStep
   */

  export type AggregateManualProcessStep = {
    _count: ManualProcessStepCountAggregateOutputType | null
    _min: ManualProcessStepMinAggregateOutputType | null
    _max: ManualProcessStepMaxAggregateOutputType | null
  }

  export type ManualProcessStepMinAggregateOutputType = {
    id: string | null
    paymentOrderId: string | null
    type: $Enums.ManualStepType | null
    reason: string | null
    instructions: string | null
    assignedTo: string | null
    assignedTeam: string | null
    priority: $Enums.Priority | null
    status: $Enums.ManualStepStatus | null
    resolution: string | null
    createdAt: Date | null
    startedAt: Date | null
    completedAt: Date | null
    dueAt: Date | null
  }

  export type ManualProcessStepMaxAggregateOutputType = {
    id: string | null
    paymentOrderId: string | null
    type: $Enums.ManualStepType | null
    reason: string | null
    instructions: string | null
    assignedTo: string | null
    assignedTeam: string | null
    priority: $Enums.Priority | null
    status: $Enums.ManualStepStatus | null
    resolution: string | null
    createdAt: Date | null
    startedAt: Date | null
    completedAt: Date | null
    dueAt: Date | null
  }

  export type ManualProcessStepCountAggregateOutputType = {
    id: number
    paymentOrderId: number
    type: number
    reason: number
    instructions: number
    assignedTo: number
    assignedTeam: number
    priority: number
    status: number
    resolution: number
    createdAt: number
    startedAt: number
    completedAt: number
    dueAt: number
    _all: number
  }


  export type ManualProcessStepMinAggregateInputType = {
    id?: true
    paymentOrderId?: true
    type?: true
    reason?: true
    instructions?: true
    assignedTo?: true
    assignedTeam?: true
    priority?: true
    status?: true
    resolution?: true
    createdAt?: true
    startedAt?: true
    completedAt?: true
    dueAt?: true
  }

  export type ManualProcessStepMaxAggregateInputType = {
    id?: true
    paymentOrderId?: true
    type?: true
    reason?: true
    instructions?: true
    assignedTo?: true
    assignedTeam?: true
    priority?: true
    status?: true
    resolution?: true
    createdAt?: true
    startedAt?: true
    completedAt?: true
    dueAt?: true
  }

  export type ManualProcessStepCountAggregateInputType = {
    id?: true
    paymentOrderId?: true
    type?: true
    reason?: true
    instructions?: true
    assignedTo?: true
    assignedTeam?: true
    priority?: true
    status?: true
    resolution?: true
    createdAt?: true
    startedAt?: true
    completedAt?: true
    dueAt?: true
    _all?: true
  }

  export type ManualProcessStepAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ManualProcessStep to aggregate.
     */
    where?: ManualProcessStepWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ManualProcessSteps to fetch.
     */
    orderBy?: ManualProcessStepOrderByWithRelationInput | ManualProcessStepOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ManualProcessStepWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ManualProcessSteps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ManualProcessSteps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ManualProcessSteps
    **/
    _count?: true | ManualProcessStepCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ManualProcessStepMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ManualProcessStepMaxAggregateInputType
  }

  export type GetManualProcessStepAggregateType<T extends ManualProcessStepAggregateArgs> = {
        [P in keyof T & keyof AggregateManualProcessStep]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateManualProcessStep[P]>
      : GetScalarType<T[P], AggregateManualProcessStep[P]>
  }




  export type ManualProcessStepGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ManualProcessStepWhereInput
    orderBy?: ManualProcessStepOrderByWithAggregationInput | ManualProcessStepOrderByWithAggregationInput[]
    by: ManualProcessStepScalarFieldEnum[] | ManualProcessStepScalarFieldEnum
    having?: ManualProcessStepScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ManualProcessStepCountAggregateInputType | true
    _min?: ManualProcessStepMinAggregateInputType
    _max?: ManualProcessStepMaxAggregateInputType
  }

  export type ManualProcessStepGroupByOutputType = {
    id: string
    paymentOrderId: string
    type: $Enums.ManualStepType
    reason: string
    instructions: string | null
    assignedTo: string | null
    assignedTeam: string | null
    priority: $Enums.Priority
    status: $Enums.ManualStepStatus
    resolution: string | null
    createdAt: Date
    startedAt: Date | null
    completedAt: Date | null
    dueAt: Date | null
    _count: ManualProcessStepCountAggregateOutputType | null
    _min: ManualProcessStepMinAggregateOutputType | null
    _max: ManualProcessStepMaxAggregateOutputType | null
  }

  type GetManualProcessStepGroupByPayload<T extends ManualProcessStepGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ManualProcessStepGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ManualProcessStepGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ManualProcessStepGroupByOutputType[P]>
            : GetScalarType<T[P], ManualProcessStepGroupByOutputType[P]>
        }
      >
    >


  export type ManualProcessStepSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    paymentOrderId?: boolean
    type?: boolean
    reason?: boolean
    instructions?: boolean
    assignedTo?: boolean
    assignedTeam?: boolean
    priority?: boolean
    status?: boolean
    resolution?: boolean
    createdAt?: boolean
    startedAt?: boolean
    completedAt?: boolean
    dueAt?: boolean
    paymentOrder?: boolean | PaymentOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["manualProcessStep"]>

  export type ManualProcessStepSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    paymentOrderId?: boolean
    type?: boolean
    reason?: boolean
    instructions?: boolean
    assignedTo?: boolean
    assignedTeam?: boolean
    priority?: boolean
    status?: boolean
    resolution?: boolean
    createdAt?: boolean
    startedAt?: boolean
    completedAt?: boolean
    dueAt?: boolean
    paymentOrder?: boolean | PaymentOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["manualProcessStep"]>

  export type ManualProcessStepSelectScalar = {
    id?: boolean
    paymentOrderId?: boolean
    type?: boolean
    reason?: boolean
    instructions?: boolean
    assignedTo?: boolean
    assignedTeam?: boolean
    priority?: boolean
    status?: boolean
    resolution?: boolean
    createdAt?: boolean
    startedAt?: boolean
    completedAt?: boolean
    dueAt?: boolean
  }

  export type ManualProcessStepInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    paymentOrder?: boolean | PaymentOrderDefaultArgs<ExtArgs>
  }
  export type ManualProcessStepIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    paymentOrder?: boolean | PaymentOrderDefaultArgs<ExtArgs>
  }

  export type $ManualProcessStepPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ManualProcessStep"
    objects: {
      paymentOrder: Prisma.$PaymentOrderPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      paymentOrderId: string
      type: $Enums.ManualStepType
      reason: string
      instructions: string | null
      assignedTo: string | null
      assignedTeam: string | null
      priority: $Enums.Priority
      status: $Enums.ManualStepStatus
      resolution: string | null
      createdAt: Date
      startedAt: Date | null
      completedAt: Date | null
      dueAt: Date | null
    }, ExtArgs["result"]["manualProcessStep"]>
    composites: {}
  }

  type ManualProcessStepGetPayload<S extends boolean | null | undefined | ManualProcessStepDefaultArgs> = $Result.GetResult<Prisma.$ManualProcessStepPayload, S>

  type ManualProcessStepCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ManualProcessStepFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ManualProcessStepCountAggregateInputType | true
    }

  export interface ManualProcessStepDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ManualProcessStep'], meta: { name: 'ManualProcessStep' } }
    /**
     * Find zero or one ManualProcessStep that matches the filter.
     * @param {ManualProcessStepFindUniqueArgs} args - Arguments to find a ManualProcessStep
     * @example
     * // Get one ManualProcessStep
     * const manualProcessStep = await prisma.manualProcessStep.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ManualProcessStepFindUniqueArgs>(args: SelectSubset<T, ManualProcessStepFindUniqueArgs<ExtArgs>>): Prisma__ManualProcessStepClient<$Result.GetResult<Prisma.$ManualProcessStepPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ManualProcessStep that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ManualProcessStepFindUniqueOrThrowArgs} args - Arguments to find a ManualProcessStep
     * @example
     * // Get one ManualProcessStep
     * const manualProcessStep = await prisma.manualProcessStep.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ManualProcessStepFindUniqueOrThrowArgs>(args: SelectSubset<T, ManualProcessStepFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ManualProcessStepClient<$Result.GetResult<Prisma.$ManualProcessStepPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ManualProcessStep that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManualProcessStepFindFirstArgs} args - Arguments to find a ManualProcessStep
     * @example
     * // Get one ManualProcessStep
     * const manualProcessStep = await prisma.manualProcessStep.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ManualProcessStepFindFirstArgs>(args?: SelectSubset<T, ManualProcessStepFindFirstArgs<ExtArgs>>): Prisma__ManualProcessStepClient<$Result.GetResult<Prisma.$ManualProcessStepPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ManualProcessStep that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManualProcessStepFindFirstOrThrowArgs} args - Arguments to find a ManualProcessStep
     * @example
     * // Get one ManualProcessStep
     * const manualProcessStep = await prisma.manualProcessStep.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ManualProcessStepFindFirstOrThrowArgs>(args?: SelectSubset<T, ManualProcessStepFindFirstOrThrowArgs<ExtArgs>>): Prisma__ManualProcessStepClient<$Result.GetResult<Prisma.$ManualProcessStepPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ManualProcessSteps that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManualProcessStepFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ManualProcessSteps
     * const manualProcessSteps = await prisma.manualProcessStep.findMany()
     * 
     * // Get first 10 ManualProcessSteps
     * const manualProcessSteps = await prisma.manualProcessStep.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const manualProcessStepWithIdOnly = await prisma.manualProcessStep.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ManualProcessStepFindManyArgs>(args?: SelectSubset<T, ManualProcessStepFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ManualProcessStepPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ManualProcessStep.
     * @param {ManualProcessStepCreateArgs} args - Arguments to create a ManualProcessStep.
     * @example
     * // Create one ManualProcessStep
     * const ManualProcessStep = await prisma.manualProcessStep.create({
     *   data: {
     *     // ... data to create a ManualProcessStep
     *   }
     * })
     * 
     */
    create<T extends ManualProcessStepCreateArgs>(args: SelectSubset<T, ManualProcessStepCreateArgs<ExtArgs>>): Prisma__ManualProcessStepClient<$Result.GetResult<Prisma.$ManualProcessStepPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ManualProcessSteps.
     * @param {ManualProcessStepCreateManyArgs} args - Arguments to create many ManualProcessSteps.
     * @example
     * // Create many ManualProcessSteps
     * const manualProcessStep = await prisma.manualProcessStep.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ManualProcessStepCreateManyArgs>(args?: SelectSubset<T, ManualProcessStepCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ManualProcessSteps and returns the data saved in the database.
     * @param {ManualProcessStepCreateManyAndReturnArgs} args - Arguments to create many ManualProcessSteps.
     * @example
     * // Create many ManualProcessSteps
     * const manualProcessStep = await prisma.manualProcessStep.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ManualProcessSteps and only return the `id`
     * const manualProcessStepWithIdOnly = await prisma.manualProcessStep.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ManualProcessStepCreateManyAndReturnArgs>(args?: SelectSubset<T, ManualProcessStepCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ManualProcessStepPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ManualProcessStep.
     * @param {ManualProcessStepDeleteArgs} args - Arguments to delete one ManualProcessStep.
     * @example
     * // Delete one ManualProcessStep
     * const ManualProcessStep = await prisma.manualProcessStep.delete({
     *   where: {
     *     // ... filter to delete one ManualProcessStep
     *   }
     * })
     * 
     */
    delete<T extends ManualProcessStepDeleteArgs>(args: SelectSubset<T, ManualProcessStepDeleteArgs<ExtArgs>>): Prisma__ManualProcessStepClient<$Result.GetResult<Prisma.$ManualProcessStepPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ManualProcessStep.
     * @param {ManualProcessStepUpdateArgs} args - Arguments to update one ManualProcessStep.
     * @example
     * // Update one ManualProcessStep
     * const manualProcessStep = await prisma.manualProcessStep.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ManualProcessStepUpdateArgs>(args: SelectSubset<T, ManualProcessStepUpdateArgs<ExtArgs>>): Prisma__ManualProcessStepClient<$Result.GetResult<Prisma.$ManualProcessStepPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ManualProcessSteps.
     * @param {ManualProcessStepDeleteManyArgs} args - Arguments to filter ManualProcessSteps to delete.
     * @example
     * // Delete a few ManualProcessSteps
     * const { count } = await prisma.manualProcessStep.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ManualProcessStepDeleteManyArgs>(args?: SelectSubset<T, ManualProcessStepDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ManualProcessSteps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManualProcessStepUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ManualProcessSteps
     * const manualProcessStep = await prisma.manualProcessStep.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ManualProcessStepUpdateManyArgs>(args: SelectSubset<T, ManualProcessStepUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ManualProcessStep.
     * @param {ManualProcessStepUpsertArgs} args - Arguments to update or create a ManualProcessStep.
     * @example
     * // Update or create a ManualProcessStep
     * const manualProcessStep = await prisma.manualProcessStep.upsert({
     *   create: {
     *     // ... data to create a ManualProcessStep
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ManualProcessStep we want to update
     *   }
     * })
     */
    upsert<T extends ManualProcessStepUpsertArgs>(args: SelectSubset<T, ManualProcessStepUpsertArgs<ExtArgs>>): Prisma__ManualProcessStepClient<$Result.GetResult<Prisma.$ManualProcessStepPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ManualProcessSteps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManualProcessStepCountArgs} args - Arguments to filter ManualProcessSteps to count.
     * @example
     * // Count the number of ManualProcessSteps
     * const count = await prisma.manualProcessStep.count({
     *   where: {
     *     // ... the filter for the ManualProcessSteps we want to count
     *   }
     * })
    **/
    count<T extends ManualProcessStepCountArgs>(
      args?: Subset<T, ManualProcessStepCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ManualProcessStepCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ManualProcessStep.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManualProcessStepAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ManualProcessStepAggregateArgs>(args: Subset<T, ManualProcessStepAggregateArgs>): Prisma.PrismaPromise<GetManualProcessStepAggregateType<T>>

    /**
     * Group by ManualProcessStep.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManualProcessStepGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ManualProcessStepGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ManualProcessStepGroupByArgs['orderBy'] }
        : { orderBy?: ManualProcessStepGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ManualProcessStepGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetManualProcessStepGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ManualProcessStep model
   */
  readonly fields: ManualProcessStepFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ManualProcessStep.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ManualProcessStepClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    paymentOrder<T extends PaymentOrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PaymentOrderDefaultArgs<ExtArgs>>): Prisma__PaymentOrderClient<$Result.GetResult<Prisma.$PaymentOrderPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ManualProcessStep model
   */ 
  interface ManualProcessStepFieldRefs {
    readonly id: FieldRef<"ManualProcessStep", 'String'>
    readonly paymentOrderId: FieldRef<"ManualProcessStep", 'String'>
    readonly type: FieldRef<"ManualProcessStep", 'ManualStepType'>
    readonly reason: FieldRef<"ManualProcessStep", 'String'>
    readonly instructions: FieldRef<"ManualProcessStep", 'String'>
    readonly assignedTo: FieldRef<"ManualProcessStep", 'String'>
    readonly assignedTeam: FieldRef<"ManualProcessStep", 'String'>
    readonly priority: FieldRef<"ManualProcessStep", 'Priority'>
    readonly status: FieldRef<"ManualProcessStep", 'ManualStepStatus'>
    readonly resolution: FieldRef<"ManualProcessStep", 'String'>
    readonly createdAt: FieldRef<"ManualProcessStep", 'DateTime'>
    readonly startedAt: FieldRef<"ManualProcessStep", 'DateTime'>
    readonly completedAt: FieldRef<"ManualProcessStep", 'DateTime'>
    readonly dueAt: FieldRef<"ManualProcessStep", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ManualProcessStep findUnique
   */
  export type ManualProcessStepFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManualProcessStep
     */
    select?: ManualProcessStepSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManualProcessStepInclude<ExtArgs> | null
    /**
     * Filter, which ManualProcessStep to fetch.
     */
    where: ManualProcessStepWhereUniqueInput
  }

  /**
   * ManualProcessStep findUniqueOrThrow
   */
  export type ManualProcessStepFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManualProcessStep
     */
    select?: ManualProcessStepSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManualProcessStepInclude<ExtArgs> | null
    /**
     * Filter, which ManualProcessStep to fetch.
     */
    where: ManualProcessStepWhereUniqueInput
  }

  /**
   * ManualProcessStep findFirst
   */
  export type ManualProcessStepFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManualProcessStep
     */
    select?: ManualProcessStepSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManualProcessStepInclude<ExtArgs> | null
    /**
     * Filter, which ManualProcessStep to fetch.
     */
    where?: ManualProcessStepWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ManualProcessSteps to fetch.
     */
    orderBy?: ManualProcessStepOrderByWithRelationInput | ManualProcessStepOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ManualProcessSteps.
     */
    cursor?: ManualProcessStepWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ManualProcessSteps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ManualProcessSteps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ManualProcessSteps.
     */
    distinct?: ManualProcessStepScalarFieldEnum | ManualProcessStepScalarFieldEnum[]
  }

  /**
   * ManualProcessStep findFirstOrThrow
   */
  export type ManualProcessStepFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManualProcessStep
     */
    select?: ManualProcessStepSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManualProcessStepInclude<ExtArgs> | null
    /**
     * Filter, which ManualProcessStep to fetch.
     */
    where?: ManualProcessStepWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ManualProcessSteps to fetch.
     */
    orderBy?: ManualProcessStepOrderByWithRelationInput | ManualProcessStepOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ManualProcessSteps.
     */
    cursor?: ManualProcessStepWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ManualProcessSteps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ManualProcessSteps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ManualProcessSteps.
     */
    distinct?: ManualProcessStepScalarFieldEnum | ManualProcessStepScalarFieldEnum[]
  }

  /**
   * ManualProcessStep findMany
   */
  export type ManualProcessStepFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManualProcessStep
     */
    select?: ManualProcessStepSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManualProcessStepInclude<ExtArgs> | null
    /**
     * Filter, which ManualProcessSteps to fetch.
     */
    where?: ManualProcessStepWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ManualProcessSteps to fetch.
     */
    orderBy?: ManualProcessStepOrderByWithRelationInput | ManualProcessStepOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ManualProcessSteps.
     */
    cursor?: ManualProcessStepWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ManualProcessSteps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ManualProcessSteps.
     */
    skip?: number
    distinct?: ManualProcessStepScalarFieldEnum | ManualProcessStepScalarFieldEnum[]
  }

  /**
   * ManualProcessStep create
   */
  export type ManualProcessStepCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManualProcessStep
     */
    select?: ManualProcessStepSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManualProcessStepInclude<ExtArgs> | null
    /**
     * The data needed to create a ManualProcessStep.
     */
    data: XOR<ManualProcessStepCreateInput, ManualProcessStepUncheckedCreateInput>
  }

  /**
   * ManualProcessStep createMany
   */
  export type ManualProcessStepCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ManualProcessSteps.
     */
    data: ManualProcessStepCreateManyInput | ManualProcessStepCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ManualProcessStep createManyAndReturn
   */
  export type ManualProcessStepCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManualProcessStep
     */
    select?: ManualProcessStepSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ManualProcessSteps.
     */
    data: ManualProcessStepCreateManyInput | ManualProcessStepCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManualProcessStepIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ManualProcessStep update
   */
  export type ManualProcessStepUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManualProcessStep
     */
    select?: ManualProcessStepSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManualProcessStepInclude<ExtArgs> | null
    /**
     * The data needed to update a ManualProcessStep.
     */
    data: XOR<ManualProcessStepUpdateInput, ManualProcessStepUncheckedUpdateInput>
    /**
     * Choose, which ManualProcessStep to update.
     */
    where: ManualProcessStepWhereUniqueInput
  }

  /**
   * ManualProcessStep updateMany
   */
  export type ManualProcessStepUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ManualProcessSteps.
     */
    data: XOR<ManualProcessStepUpdateManyMutationInput, ManualProcessStepUncheckedUpdateManyInput>
    /**
     * Filter which ManualProcessSteps to update
     */
    where?: ManualProcessStepWhereInput
  }

  /**
   * ManualProcessStep upsert
   */
  export type ManualProcessStepUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManualProcessStep
     */
    select?: ManualProcessStepSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManualProcessStepInclude<ExtArgs> | null
    /**
     * The filter to search for the ManualProcessStep to update in case it exists.
     */
    where: ManualProcessStepWhereUniqueInput
    /**
     * In case the ManualProcessStep found by the `where` argument doesn't exist, create a new ManualProcessStep with this data.
     */
    create: XOR<ManualProcessStepCreateInput, ManualProcessStepUncheckedCreateInput>
    /**
     * In case the ManualProcessStep was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ManualProcessStepUpdateInput, ManualProcessStepUncheckedUpdateInput>
  }

  /**
   * ManualProcessStep delete
   */
  export type ManualProcessStepDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManualProcessStep
     */
    select?: ManualProcessStepSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManualProcessStepInclude<ExtArgs> | null
    /**
     * Filter which ManualProcessStep to delete.
     */
    where: ManualProcessStepWhereUniqueInput
  }

  /**
   * ManualProcessStep deleteMany
   */
  export type ManualProcessStepDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ManualProcessSteps to delete
     */
    where?: ManualProcessStepWhereInput
  }

  /**
   * ManualProcessStep without action
   */
  export type ManualProcessStepDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManualProcessStep
     */
    select?: ManualProcessStepSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManualProcessStepInclude<ExtArgs> | null
  }


  /**
   * Model PaymentEvent
   */

  export type AggregatePaymentEvent = {
    _count: PaymentEventCountAggregateOutputType | null
    _avg: PaymentEventAvgAggregateOutputType | null
    _sum: PaymentEventSumAggregateOutputType | null
    _min: PaymentEventMinAggregateOutputType | null
    _max: PaymentEventMaxAggregateOutputType | null
  }

  export type PaymentEventAvgAggregateOutputType = {
    sequenceNumber: number | null
    kafkaPartition: number | null
    kafkaOffset: number | null
  }

  export type PaymentEventSumAggregateOutputType = {
    sequenceNumber: number | null
    kafkaPartition: number | null
    kafkaOffset: bigint | null
  }

  export type PaymentEventMinAggregateOutputType = {
    id: string | null
    paymentOrderId: string | null
    sequenceNumber: number | null
    eventType: string | null
    eventVersion: string | null
    kafkaTopic: string | null
    kafkaPartition: number | null
    kafkaOffset: bigint | null
    occurredAt: Date | null
  }

  export type PaymentEventMaxAggregateOutputType = {
    id: string | null
    paymentOrderId: string | null
    sequenceNumber: number | null
    eventType: string | null
    eventVersion: string | null
    kafkaTopic: string | null
    kafkaPartition: number | null
    kafkaOffset: bigint | null
    occurredAt: Date | null
  }

  export type PaymentEventCountAggregateOutputType = {
    id: number
    paymentOrderId: number
    sequenceNumber: number
    eventType: number
    eventVersion: number
    data: number
    metadata: number
    kafkaTopic: number
    kafkaPartition: number
    kafkaOffset: number
    occurredAt: number
    _all: number
  }


  export type PaymentEventAvgAggregateInputType = {
    sequenceNumber?: true
    kafkaPartition?: true
    kafkaOffset?: true
  }

  export type PaymentEventSumAggregateInputType = {
    sequenceNumber?: true
    kafkaPartition?: true
    kafkaOffset?: true
  }

  export type PaymentEventMinAggregateInputType = {
    id?: true
    paymentOrderId?: true
    sequenceNumber?: true
    eventType?: true
    eventVersion?: true
    kafkaTopic?: true
    kafkaPartition?: true
    kafkaOffset?: true
    occurredAt?: true
  }

  export type PaymentEventMaxAggregateInputType = {
    id?: true
    paymentOrderId?: true
    sequenceNumber?: true
    eventType?: true
    eventVersion?: true
    kafkaTopic?: true
    kafkaPartition?: true
    kafkaOffset?: true
    occurredAt?: true
  }

  export type PaymentEventCountAggregateInputType = {
    id?: true
    paymentOrderId?: true
    sequenceNumber?: true
    eventType?: true
    eventVersion?: true
    data?: true
    metadata?: true
    kafkaTopic?: true
    kafkaPartition?: true
    kafkaOffset?: true
    occurredAt?: true
    _all?: true
  }

  export type PaymentEventAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentEvent to aggregate.
     */
    where?: PaymentEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentEvents to fetch.
     */
    orderBy?: PaymentEventOrderByWithRelationInput | PaymentEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentEvents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PaymentEvents
    **/
    _count?: true | PaymentEventCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentEventAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentEventSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentEventMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentEventMaxAggregateInputType
  }

  export type GetPaymentEventAggregateType<T extends PaymentEventAggregateArgs> = {
        [P in keyof T & keyof AggregatePaymentEvent]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePaymentEvent[P]>
      : GetScalarType<T[P], AggregatePaymentEvent[P]>
  }




  export type PaymentEventGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentEventWhereInput
    orderBy?: PaymentEventOrderByWithAggregationInput | PaymentEventOrderByWithAggregationInput[]
    by: PaymentEventScalarFieldEnum[] | PaymentEventScalarFieldEnum
    having?: PaymentEventScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentEventCountAggregateInputType | true
    _avg?: PaymentEventAvgAggregateInputType
    _sum?: PaymentEventSumAggregateInputType
    _min?: PaymentEventMinAggregateInputType
    _max?: PaymentEventMaxAggregateInputType
  }

  export type PaymentEventGroupByOutputType = {
    id: string
    paymentOrderId: string
    sequenceNumber: number
    eventType: string
    eventVersion: string
    data: JsonValue
    metadata: JsonValue | null
    kafkaTopic: string | null
    kafkaPartition: number | null
    kafkaOffset: bigint | null
    occurredAt: Date
    _count: PaymentEventCountAggregateOutputType | null
    _avg: PaymentEventAvgAggregateOutputType | null
    _sum: PaymentEventSumAggregateOutputType | null
    _min: PaymentEventMinAggregateOutputType | null
    _max: PaymentEventMaxAggregateOutputType | null
  }

  type GetPaymentEventGroupByPayload<T extends PaymentEventGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentEventGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentEventGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentEventGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentEventGroupByOutputType[P]>
        }
      >
    >


  export type PaymentEventSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    paymentOrderId?: boolean
    sequenceNumber?: boolean
    eventType?: boolean
    eventVersion?: boolean
    data?: boolean
    metadata?: boolean
    kafkaTopic?: boolean
    kafkaPartition?: boolean
    kafkaOffset?: boolean
    occurredAt?: boolean
    paymentOrder?: boolean | PaymentOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["paymentEvent"]>

  export type PaymentEventSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    paymentOrderId?: boolean
    sequenceNumber?: boolean
    eventType?: boolean
    eventVersion?: boolean
    data?: boolean
    metadata?: boolean
    kafkaTopic?: boolean
    kafkaPartition?: boolean
    kafkaOffset?: boolean
    occurredAt?: boolean
    paymentOrder?: boolean | PaymentOrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["paymentEvent"]>

  export type PaymentEventSelectScalar = {
    id?: boolean
    paymentOrderId?: boolean
    sequenceNumber?: boolean
    eventType?: boolean
    eventVersion?: boolean
    data?: boolean
    metadata?: boolean
    kafkaTopic?: boolean
    kafkaPartition?: boolean
    kafkaOffset?: boolean
    occurredAt?: boolean
  }

  export type PaymentEventInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    paymentOrder?: boolean | PaymentOrderDefaultArgs<ExtArgs>
  }
  export type PaymentEventIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    paymentOrder?: boolean | PaymentOrderDefaultArgs<ExtArgs>
  }

  export type $PaymentEventPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PaymentEvent"
    objects: {
      paymentOrder: Prisma.$PaymentOrderPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      paymentOrderId: string
      sequenceNumber: number
      eventType: string
      eventVersion: string
      data: Prisma.JsonValue
      metadata: Prisma.JsonValue | null
      kafkaTopic: string | null
      kafkaPartition: number | null
      kafkaOffset: bigint | null
      occurredAt: Date
    }, ExtArgs["result"]["paymentEvent"]>
    composites: {}
  }

  type PaymentEventGetPayload<S extends boolean | null | undefined | PaymentEventDefaultArgs> = $Result.GetResult<Prisma.$PaymentEventPayload, S>

  type PaymentEventCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PaymentEventFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PaymentEventCountAggregateInputType | true
    }

  export interface PaymentEventDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PaymentEvent'], meta: { name: 'PaymentEvent' } }
    /**
     * Find zero or one PaymentEvent that matches the filter.
     * @param {PaymentEventFindUniqueArgs} args - Arguments to find a PaymentEvent
     * @example
     * // Get one PaymentEvent
     * const paymentEvent = await prisma.paymentEvent.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentEventFindUniqueArgs>(args: SelectSubset<T, PaymentEventFindUniqueArgs<ExtArgs>>): Prisma__PaymentEventClient<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PaymentEvent that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PaymentEventFindUniqueOrThrowArgs} args - Arguments to find a PaymentEvent
     * @example
     * // Get one PaymentEvent
     * const paymentEvent = await prisma.paymentEvent.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentEventFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentEventFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentEventClient<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PaymentEvent that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentEventFindFirstArgs} args - Arguments to find a PaymentEvent
     * @example
     * // Get one PaymentEvent
     * const paymentEvent = await prisma.paymentEvent.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentEventFindFirstArgs>(args?: SelectSubset<T, PaymentEventFindFirstArgs<ExtArgs>>): Prisma__PaymentEventClient<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PaymentEvent that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentEventFindFirstOrThrowArgs} args - Arguments to find a PaymentEvent
     * @example
     * // Get one PaymentEvent
     * const paymentEvent = await prisma.paymentEvent.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentEventFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentEventFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentEventClient<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PaymentEvents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentEventFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PaymentEvents
     * const paymentEvents = await prisma.paymentEvent.findMany()
     * 
     * // Get first 10 PaymentEvents
     * const paymentEvents = await prisma.paymentEvent.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentEventWithIdOnly = await prisma.paymentEvent.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentEventFindManyArgs>(args?: SelectSubset<T, PaymentEventFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PaymentEvent.
     * @param {PaymentEventCreateArgs} args - Arguments to create a PaymentEvent.
     * @example
     * // Create one PaymentEvent
     * const PaymentEvent = await prisma.paymentEvent.create({
     *   data: {
     *     // ... data to create a PaymentEvent
     *   }
     * })
     * 
     */
    create<T extends PaymentEventCreateArgs>(args: SelectSubset<T, PaymentEventCreateArgs<ExtArgs>>): Prisma__PaymentEventClient<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PaymentEvents.
     * @param {PaymentEventCreateManyArgs} args - Arguments to create many PaymentEvents.
     * @example
     * // Create many PaymentEvents
     * const paymentEvent = await prisma.paymentEvent.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentEventCreateManyArgs>(args?: SelectSubset<T, PaymentEventCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PaymentEvents and returns the data saved in the database.
     * @param {PaymentEventCreateManyAndReturnArgs} args - Arguments to create many PaymentEvents.
     * @example
     * // Create many PaymentEvents
     * const paymentEvent = await prisma.paymentEvent.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PaymentEvents and only return the `id`
     * const paymentEventWithIdOnly = await prisma.paymentEvent.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentEventCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentEventCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a PaymentEvent.
     * @param {PaymentEventDeleteArgs} args - Arguments to delete one PaymentEvent.
     * @example
     * // Delete one PaymentEvent
     * const PaymentEvent = await prisma.paymentEvent.delete({
     *   where: {
     *     // ... filter to delete one PaymentEvent
     *   }
     * })
     * 
     */
    delete<T extends PaymentEventDeleteArgs>(args: SelectSubset<T, PaymentEventDeleteArgs<ExtArgs>>): Prisma__PaymentEventClient<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PaymentEvent.
     * @param {PaymentEventUpdateArgs} args - Arguments to update one PaymentEvent.
     * @example
     * // Update one PaymentEvent
     * const paymentEvent = await prisma.paymentEvent.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentEventUpdateArgs>(args: SelectSubset<T, PaymentEventUpdateArgs<ExtArgs>>): Prisma__PaymentEventClient<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PaymentEvents.
     * @param {PaymentEventDeleteManyArgs} args - Arguments to filter PaymentEvents to delete.
     * @example
     * // Delete a few PaymentEvents
     * const { count } = await prisma.paymentEvent.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentEventDeleteManyArgs>(args?: SelectSubset<T, PaymentEventDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentEvents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentEventUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PaymentEvents
     * const paymentEvent = await prisma.paymentEvent.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentEventUpdateManyArgs>(args: SelectSubset<T, PaymentEventUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PaymentEvent.
     * @param {PaymentEventUpsertArgs} args - Arguments to update or create a PaymentEvent.
     * @example
     * // Update or create a PaymentEvent
     * const paymentEvent = await prisma.paymentEvent.upsert({
     *   create: {
     *     // ... data to create a PaymentEvent
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PaymentEvent we want to update
     *   }
     * })
     */
    upsert<T extends PaymentEventUpsertArgs>(args: SelectSubset<T, PaymentEventUpsertArgs<ExtArgs>>): Prisma__PaymentEventClient<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PaymentEvents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentEventCountArgs} args - Arguments to filter PaymentEvents to count.
     * @example
     * // Count the number of PaymentEvents
     * const count = await prisma.paymentEvent.count({
     *   where: {
     *     // ... the filter for the PaymentEvents we want to count
     *   }
     * })
    **/
    count<T extends PaymentEventCountArgs>(
      args?: Subset<T, PaymentEventCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentEventCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PaymentEvent.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentEventAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentEventAggregateArgs>(args: Subset<T, PaymentEventAggregateArgs>): Prisma.PrismaPromise<GetPaymentEventAggregateType<T>>

    /**
     * Group by PaymentEvent.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentEventGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentEventGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentEventGroupByArgs['orderBy'] }
        : { orderBy?: PaymentEventGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentEventGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentEventGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PaymentEvent model
   */
  readonly fields: PaymentEventFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PaymentEvent.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentEventClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    paymentOrder<T extends PaymentOrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PaymentOrderDefaultArgs<ExtArgs>>): Prisma__PaymentOrderClient<$Result.GetResult<Prisma.$PaymentOrderPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PaymentEvent model
   */ 
  interface PaymentEventFieldRefs {
    readonly id: FieldRef<"PaymentEvent", 'String'>
    readonly paymentOrderId: FieldRef<"PaymentEvent", 'String'>
    readonly sequenceNumber: FieldRef<"PaymentEvent", 'Int'>
    readonly eventType: FieldRef<"PaymentEvent", 'String'>
    readonly eventVersion: FieldRef<"PaymentEvent", 'String'>
    readonly data: FieldRef<"PaymentEvent", 'Json'>
    readonly metadata: FieldRef<"PaymentEvent", 'Json'>
    readonly kafkaTopic: FieldRef<"PaymentEvent", 'String'>
    readonly kafkaPartition: FieldRef<"PaymentEvent", 'Int'>
    readonly kafkaOffset: FieldRef<"PaymentEvent", 'BigInt'>
    readonly occurredAt: FieldRef<"PaymentEvent", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PaymentEvent findUnique
   */
  export type PaymentEventFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentEventInclude<ExtArgs> | null
    /**
     * Filter, which PaymentEvent to fetch.
     */
    where: PaymentEventWhereUniqueInput
  }

  /**
   * PaymentEvent findUniqueOrThrow
   */
  export type PaymentEventFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentEventInclude<ExtArgs> | null
    /**
     * Filter, which PaymentEvent to fetch.
     */
    where: PaymentEventWhereUniqueInput
  }

  /**
   * PaymentEvent findFirst
   */
  export type PaymentEventFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentEventInclude<ExtArgs> | null
    /**
     * Filter, which PaymentEvent to fetch.
     */
    where?: PaymentEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentEvents to fetch.
     */
    orderBy?: PaymentEventOrderByWithRelationInput | PaymentEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentEvents.
     */
    cursor?: PaymentEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentEvents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentEvents.
     */
    distinct?: PaymentEventScalarFieldEnum | PaymentEventScalarFieldEnum[]
  }

  /**
   * PaymentEvent findFirstOrThrow
   */
  export type PaymentEventFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentEventInclude<ExtArgs> | null
    /**
     * Filter, which PaymentEvent to fetch.
     */
    where?: PaymentEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentEvents to fetch.
     */
    orderBy?: PaymentEventOrderByWithRelationInput | PaymentEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentEvents.
     */
    cursor?: PaymentEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentEvents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentEvents.
     */
    distinct?: PaymentEventScalarFieldEnum | PaymentEventScalarFieldEnum[]
  }

  /**
   * PaymentEvent findMany
   */
  export type PaymentEventFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentEventInclude<ExtArgs> | null
    /**
     * Filter, which PaymentEvents to fetch.
     */
    where?: PaymentEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentEvents to fetch.
     */
    orderBy?: PaymentEventOrderByWithRelationInput | PaymentEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PaymentEvents.
     */
    cursor?: PaymentEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentEvents.
     */
    skip?: number
    distinct?: PaymentEventScalarFieldEnum | PaymentEventScalarFieldEnum[]
  }

  /**
   * PaymentEvent create
   */
  export type PaymentEventCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentEventInclude<ExtArgs> | null
    /**
     * The data needed to create a PaymentEvent.
     */
    data: XOR<PaymentEventCreateInput, PaymentEventUncheckedCreateInput>
  }

  /**
   * PaymentEvent createMany
   */
  export type PaymentEventCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PaymentEvents.
     */
    data: PaymentEventCreateManyInput | PaymentEventCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PaymentEvent createManyAndReturn
   */
  export type PaymentEventCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many PaymentEvents.
     */
    data: PaymentEventCreateManyInput | PaymentEventCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentEventIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PaymentEvent update
   */
  export type PaymentEventUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentEventInclude<ExtArgs> | null
    /**
     * The data needed to update a PaymentEvent.
     */
    data: XOR<PaymentEventUpdateInput, PaymentEventUncheckedUpdateInput>
    /**
     * Choose, which PaymentEvent to update.
     */
    where: PaymentEventWhereUniqueInput
  }

  /**
   * PaymentEvent updateMany
   */
  export type PaymentEventUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PaymentEvents.
     */
    data: XOR<PaymentEventUpdateManyMutationInput, PaymentEventUncheckedUpdateManyInput>
    /**
     * Filter which PaymentEvents to update
     */
    where?: PaymentEventWhereInput
  }

  /**
   * PaymentEvent upsert
   */
  export type PaymentEventUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentEventInclude<ExtArgs> | null
    /**
     * The filter to search for the PaymentEvent to update in case it exists.
     */
    where: PaymentEventWhereUniqueInput
    /**
     * In case the PaymentEvent found by the `where` argument doesn't exist, create a new PaymentEvent with this data.
     */
    create: XOR<PaymentEventCreateInput, PaymentEventUncheckedCreateInput>
    /**
     * In case the PaymentEvent was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentEventUpdateInput, PaymentEventUncheckedUpdateInput>
  }

  /**
   * PaymentEvent delete
   */
  export type PaymentEventDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentEventInclude<ExtArgs> | null
    /**
     * Filter which PaymentEvent to delete.
     */
    where: PaymentEventWhereUniqueInput
  }

  /**
   * PaymentEvent deleteMany
   */
  export type PaymentEventDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentEvents to delete
     */
    where?: PaymentEventWhereInput
  }

  /**
   * PaymentEvent without action
   */
  export type PaymentEventDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentEventInclude<ExtArgs> | null
  }


  /**
   * Model AuditLog
   */

  export type AggregateAuditLog = {
    _count: AuditLogCountAggregateOutputType | null
    _min: AuditLogMinAggregateOutputType | null
    _max: AuditLogMaxAggregateOutputType | null
  }

  export type AuditLogMinAggregateOutputType = {
    id: string | null
    organizationId: string | null
    userId: string | null
    action: string | null
    entityType: string | null
    entityId: string | null
    ipAddress: string | null
    userAgent: string | null
    requestId: string | null
    createdAt: Date | null
  }

  export type AuditLogMaxAggregateOutputType = {
    id: string | null
    organizationId: string | null
    userId: string | null
    action: string | null
    entityType: string | null
    entityId: string | null
    ipAddress: string | null
    userAgent: string | null
    requestId: string | null
    createdAt: Date | null
  }

  export type AuditLogCountAggregateOutputType = {
    id: number
    organizationId: number
    userId: number
    action: number
    entityType: number
    entityId: number
    changes: number
    metadata: number
    ipAddress: number
    userAgent: number
    requestId: number
    createdAt: number
    _all: number
  }


  export type AuditLogMinAggregateInputType = {
    id?: true
    organizationId?: true
    userId?: true
    action?: true
    entityType?: true
    entityId?: true
    ipAddress?: true
    userAgent?: true
    requestId?: true
    createdAt?: true
  }

  export type AuditLogMaxAggregateInputType = {
    id?: true
    organizationId?: true
    userId?: true
    action?: true
    entityType?: true
    entityId?: true
    ipAddress?: true
    userAgent?: true
    requestId?: true
    createdAt?: true
  }

  export type AuditLogCountAggregateInputType = {
    id?: true
    organizationId?: true
    userId?: true
    action?: true
    entityType?: true
    entityId?: true
    changes?: true
    metadata?: true
    ipAddress?: true
    userAgent?: true
    requestId?: true
    createdAt?: true
    _all?: true
  }

  export type AuditLogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AuditLog to aggregate.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AuditLogs
    **/
    _count?: true | AuditLogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AuditLogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AuditLogMaxAggregateInputType
  }

  export type GetAuditLogAggregateType<T extends AuditLogAggregateArgs> = {
        [P in keyof T & keyof AggregateAuditLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAuditLog[P]>
      : GetScalarType<T[P], AggregateAuditLog[P]>
  }




  export type AuditLogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuditLogWhereInput
    orderBy?: AuditLogOrderByWithAggregationInput | AuditLogOrderByWithAggregationInput[]
    by: AuditLogScalarFieldEnum[] | AuditLogScalarFieldEnum
    having?: AuditLogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AuditLogCountAggregateInputType | true
    _min?: AuditLogMinAggregateInputType
    _max?: AuditLogMaxAggregateInputType
  }

  export type AuditLogGroupByOutputType = {
    id: string
    organizationId: string
    userId: string | null
    action: string
    entityType: string | null
    entityId: string | null
    changes: JsonValue | null
    metadata: JsonValue | null
    ipAddress: string | null
    userAgent: string | null
    requestId: string | null
    createdAt: Date
    _count: AuditLogCountAggregateOutputType | null
    _min: AuditLogMinAggregateOutputType | null
    _max: AuditLogMaxAggregateOutputType | null
  }

  type GetAuditLogGroupByPayload<T extends AuditLogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AuditLogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AuditLogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AuditLogGroupByOutputType[P]>
            : GetScalarType<T[P], AuditLogGroupByOutputType[P]>
        }
      >
    >


  export type AuditLogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    userId?: boolean
    action?: boolean
    entityType?: boolean
    entityId?: boolean
    changes?: boolean
    metadata?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    requestId?: boolean
    createdAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | AuditLog$userArgs<ExtArgs>
  }, ExtArgs["result"]["auditLog"]>

  export type AuditLogSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    userId?: boolean
    action?: boolean
    entityType?: boolean
    entityId?: boolean
    changes?: boolean
    metadata?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    requestId?: boolean
    createdAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | AuditLog$userArgs<ExtArgs>
  }, ExtArgs["result"]["auditLog"]>

  export type AuditLogSelectScalar = {
    id?: boolean
    organizationId?: boolean
    userId?: boolean
    action?: boolean
    entityType?: boolean
    entityId?: boolean
    changes?: boolean
    metadata?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    requestId?: boolean
    createdAt?: boolean
  }

  export type AuditLogInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | AuditLog$userArgs<ExtArgs>
  }
  export type AuditLogIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | AuditLog$userArgs<ExtArgs>
  }

  export type $AuditLogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AuditLog"
    objects: {
      organization: Prisma.$OrganizationPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      organizationId: string
      userId: string | null
      action: string
      entityType: string | null
      entityId: string | null
      changes: Prisma.JsonValue | null
      metadata: Prisma.JsonValue | null
      ipAddress: string | null
      userAgent: string | null
      requestId: string | null
      createdAt: Date
    }, ExtArgs["result"]["auditLog"]>
    composites: {}
  }

  type AuditLogGetPayload<S extends boolean | null | undefined | AuditLogDefaultArgs> = $Result.GetResult<Prisma.$AuditLogPayload, S>

  type AuditLogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AuditLogFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AuditLogCountAggregateInputType | true
    }

  export interface AuditLogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AuditLog'], meta: { name: 'AuditLog' } }
    /**
     * Find zero or one AuditLog that matches the filter.
     * @param {AuditLogFindUniqueArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AuditLogFindUniqueArgs>(args: SelectSubset<T, AuditLogFindUniqueArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AuditLog that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AuditLogFindUniqueOrThrowArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AuditLogFindUniqueOrThrowArgs>(args: SelectSubset<T, AuditLogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AuditLog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogFindFirstArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AuditLogFindFirstArgs>(args?: SelectSubset<T, AuditLogFindFirstArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AuditLog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogFindFirstOrThrowArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AuditLogFindFirstOrThrowArgs>(args?: SelectSubset<T, AuditLogFindFirstOrThrowArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AuditLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AuditLogs
     * const auditLogs = await prisma.auditLog.findMany()
     * 
     * // Get first 10 AuditLogs
     * const auditLogs = await prisma.auditLog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const auditLogWithIdOnly = await prisma.auditLog.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AuditLogFindManyArgs>(args?: SelectSubset<T, AuditLogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AuditLog.
     * @param {AuditLogCreateArgs} args - Arguments to create a AuditLog.
     * @example
     * // Create one AuditLog
     * const AuditLog = await prisma.auditLog.create({
     *   data: {
     *     // ... data to create a AuditLog
     *   }
     * })
     * 
     */
    create<T extends AuditLogCreateArgs>(args: SelectSubset<T, AuditLogCreateArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AuditLogs.
     * @param {AuditLogCreateManyArgs} args - Arguments to create many AuditLogs.
     * @example
     * // Create many AuditLogs
     * const auditLog = await prisma.auditLog.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AuditLogCreateManyArgs>(args?: SelectSubset<T, AuditLogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AuditLogs and returns the data saved in the database.
     * @param {AuditLogCreateManyAndReturnArgs} args - Arguments to create many AuditLogs.
     * @example
     * // Create many AuditLogs
     * const auditLog = await prisma.auditLog.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AuditLogs and only return the `id`
     * const auditLogWithIdOnly = await prisma.auditLog.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AuditLogCreateManyAndReturnArgs>(args?: SelectSubset<T, AuditLogCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a AuditLog.
     * @param {AuditLogDeleteArgs} args - Arguments to delete one AuditLog.
     * @example
     * // Delete one AuditLog
     * const AuditLog = await prisma.auditLog.delete({
     *   where: {
     *     // ... filter to delete one AuditLog
     *   }
     * })
     * 
     */
    delete<T extends AuditLogDeleteArgs>(args: SelectSubset<T, AuditLogDeleteArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AuditLog.
     * @param {AuditLogUpdateArgs} args - Arguments to update one AuditLog.
     * @example
     * // Update one AuditLog
     * const auditLog = await prisma.auditLog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AuditLogUpdateArgs>(args: SelectSubset<T, AuditLogUpdateArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AuditLogs.
     * @param {AuditLogDeleteManyArgs} args - Arguments to filter AuditLogs to delete.
     * @example
     * // Delete a few AuditLogs
     * const { count } = await prisma.auditLog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AuditLogDeleteManyArgs>(args?: SelectSubset<T, AuditLogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AuditLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AuditLogs
     * const auditLog = await prisma.auditLog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AuditLogUpdateManyArgs>(args: SelectSubset<T, AuditLogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AuditLog.
     * @param {AuditLogUpsertArgs} args - Arguments to update or create a AuditLog.
     * @example
     * // Update or create a AuditLog
     * const auditLog = await prisma.auditLog.upsert({
     *   create: {
     *     // ... data to create a AuditLog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AuditLog we want to update
     *   }
     * })
     */
    upsert<T extends AuditLogUpsertArgs>(args: SelectSubset<T, AuditLogUpsertArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AuditLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogCountArgs} args - Arguments to filter AuditLogs to count.
     * @example
     * // Count the number of AuditLogs
     * const count = await prisma.auditLog.count({
     *   where: {
     *     // ... the filter for the AuditLogs we want to count
     *   }
     * })
    **/
    count<T extends AuditLogCountArgs>(
      args?: Subset<T, AuditLogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AuditLogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AuditLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AuditLogAggregateArgs>(args: Subset<T, AuditLogAggregateArgs>): Prisma.PrismaPromise<GetAuditLogAggregateType<T>>

    /**
     * Group by AuditLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AuditLogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AuditLogGroupByArgs['orderBy'] }
        : { orderBy?: AuditLogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AuditLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAuditLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AuditLog model
   */
  readonly fields: AuditLogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AuditLog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AuditLogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organization<T extends OrganizationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationDefaultArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends AuditLog$userArgs<ExtArgs> = {}>(args?: Subset<T, AuditLog$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AuditLog model
   */ 
  interface AuditLogFieldRefs {
    readonly id: FieldRef<"AuditLog", 'String'>
    readonly organizationId: FieldRef<"AuditLog", 'String'>
    readonly userId: FieldRef<"AuditLog", 'String'>
    readonly action: FieldRef<"AuditLog", 'String'>
    readonly entityType: FieldRef<"AuditLog", 'String'>
    readonly entityId: FieldRef<"AuditLog", 'String'>
    readonly changes: FieldRef<"AuditLog", 'Json'>
    readonly metadata: FieldRef<"AuditLog", 'Json'>
    readonly ipAddress: FieldRef<"AuditLog", 'String'>
    readonly userAgent: FieldRef<"AuditLog", 'String'>
    readonly requestId: FieldRef<"AuditLog", 'String'>
    readonly createdAt: FieldRef<"AuditLog", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AuditLog findUnique
   */
  export type AuditLogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog findUniqueOrThrow
   */
  export type AuditLogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog findFirst
   */
  export type AuditLogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AuditLogs.
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AuditLogs.
     */
    distinct?: AuditLogScalarFieldEnum | AuditLogScalarFieldEnum[]
  }

  /**
   * AuditLog findFirstOrThrow
   */
  export type AuditLogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AuditLogs.
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AuditLogs.
     */
    distinct?: AuditLogScalarFieldEnum | AuditLogScalarFieldEnum[]
  }

  /**
   * AuditLog findMany
   */
  export type AuditLogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    /**
     * Filter, which AuditLogs to fetch.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AuditLogs.
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    distinct?: AuditLogScalarFieldEnum | AuditLogScalarFieldEnum[]
  }

  /**
   * AuditLog create
   */
  export type AuditLogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    /**
     * The data needed to create a AuditLog.
     */
    data: XOR<AuditLogCreateInput, AuditLogUncheckedCreateInput>
  }

  /**
   * AuditLog createMany
   */
  export type AuditLogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AuditLogs.
     */
    data: AuditLogCreateManyInput | AuditLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AuditLog createManyAndReturn
   */
  export type AuditLogCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many AuditLogs.
     */
    data: AuditLogCreateManyInput | AuditLogCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AuditLog update
   */
  export type AuditLogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    /**
     * The data needed to update a AuditLog.
     */
    data: XOR<AuditLogUpdateInput, AuditLogUncheckedUpdateInput>
    /**
     * Choose, which AuditLog to update.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog updateMany
   */
  export type AuditLogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AuditLogs.
     */
    data: XOR<AuditLogUpdateManyMutationInput, AuditLogUncheckedUpdateManyInput>
    /**
     * Filter which AuditLogs to update
     */
    where?: AuditLogWhereInput
  }

  /**
   * AuditLog upsert
   */
  export type AuditLogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    /**
     * The filter to search for the AuditLog to update in case it exists.
     */
    where: AuditLogWhereUniqueInput
    /**
     * In case the AuditLog found by the `where` argument doesn't exist, create a new AuditLog with this data.
     */
    create: XOR<AuditLogCreateInput, AuditLogUncheckedCreateInput>
    /**
     * In case the AuditLog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AuditLogUpdateInput, AuditLogUncheckedUpdateInput>
  }

  /**
   * AuditLog delete
   */
  export type AuditLogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    /**
     * Filter which AuditLog to delete.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog deleteMany
   */
  export type AuditLogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AuditLogs to delete
     */
    where?: AuditLogWhereInput
  }

  /**
   * AuditLog.user
   */
  export type AuditLog$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * AuditLog without action
   */
  export type AuditLogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
  }


  /**
   * Model ApiKey
   */

  export type AggregateApiKey = {
    _count: ApiKeyCountAggregateOutputType | null
    _avg: ApiKeyAvgAggregateOutputType | null
    _sum: ApiKeySumAggregateOutputType | null
    _min: ApiKeyMinAggregateOutputType | null
    _max: ApiKeyMaxAggregateOutputType | null
  }

  export type ApiKeyAvgAggregateOutputType = {
    rateLimit: number | null
  }

  export type ApiKeySumAggregateOutputType = {
    rateLimit: number | null
  }

  export type ApiKeyMinAggregateOutputType = {
    id: string | null
    organizationId: string | null
    name: string | null
    keyHash: string | null
    prefix: string | null
    rateLimit: number | null
    isActive: boolean | null
    expiresAt: Date | null
    lastUsedAt: Date | null
    createdAt: Date | null
    revokedAt: Date | null
  }

  export type ApiKeyMaxAggregateOutputType = {
    id: string | null
    organizationId: string | null
    name: string | null
    keyHash: string | null
    prefix: string | null
    rateLimit: number | null
    isActive: boolean | null
    expiresAt: Date | null
    lastUsedAt: Date | null
    createdAt: Date | null
    revokedAt: Date | null
  }

  export type ApiKeyCountAggregateOutputType = {
    id: number
    organizationId: number
    name: number
    keyHash: number
    prefix: number
    scopes: number
    rateLimit: number
    isActive: number
    expiresAt: number
    lastUsedAt: number
    createdAt: number
    revokedAt: number
    _all: number
  }


  export type ApiKeyAvgAggregateInputType = {
    rateLimit?: true
  }

  export type ApiKeySumAggregateInputType = {
    rateLimit?: true
  }

  export type ApiKeyMinAggregateInputType = {
    id?: true
    organizationId?: true
    name?: true
    keyHash?: true
    prefix?: true
    rateLimit?: true
    isActive?: true
    expiresAt?: true
    lastUsedAt?: true
    createdAt?: true
    revokedAt?: true
  }

  export type ApiKeyMaxAggregateInputType = {
    id?: true
    organizationId?: true
    name?: true
    keyHash?: true
    prefix?: true
    rateLimit?: true
    isActive?: true
    expiresAt?: true
    lastUsedAt?: true
    createdAt?: true
    revokedAt?: true
  }

  export type ApiKeyCountAggregateInputType = {
    id?: true
    organizationId?: true
    name?: true
    keyHash?: true
    prefix?: true
    scopes?: true
    rateLimit?: true
    isActive?: true
    expiresAt?: true
    lastUsedAt?: true
    createdAt?: true
    revokedAt?: true
    _all?: true
  }

  export type ApiKeyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ApiKey to aggregate.
     */
    where?: ApiKeyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApiKeys to fetch.
     */
    orderBy?: ApiKeyOrderByWithRelationInput | ApiKeyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ApiKeyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApiKeys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApiKeys.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ApiKeys
    **/
    _count?: true | ApiKeyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ApiKeyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ApiKeySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ApiKeyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ApiKeyMaxAggregateInputType
  }

  export type GetApiKeyAggregateType<T extends ApiKeyAggregateArgs> = {
        [P in keyof T & keyof AggregateApiKey]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateApiKey[P]>
      : GetScalarType<T[P], AggregateApiKey[P]>
  }




  export type ApiKeyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApiKeyWhereInput
    orderBy?: ApiKeyOrderByWithAggregationInput | ApiKeyOrderByWithAggregationInput[]
    by: ApiKeyScalarFieldEnum[] | ApiKeyScalarFieldEnum
    having?: ApiKeyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ApiKeyCountAggregateInputType | true
    _avg?: ApiKeyAvgAggregateInputType
    _sum?: ApiKeySumAggregateInputType
    _min?: ApiKeyMinAggregateInputType
    _max?: ApiKeyMaxAggregateInputType
  }

  export type ApiKeyGroupByOutputType = {
    id: string
    organizationId: string
    name: string
    keyHash: string
    prefix: string
    scopes: string[]
    rateLimit: number | null
    isActive: boolean
    expiresAt: Date | null
    lastUsedAt: Date | null
    createdAt: Date
    revokedAt: Date | null
    _count: ApiKeyCountAggregateOutputType | null
    _avg: ApiKeyAvgAggregateOutputType | null
    _sum: ApiKeySumAggregateOutputType | null
    _min: ApiKeyMinAggregateOutputType | null
    _max: ApiKeyMaxAggregateOutputType | null
  }

  type GetApiKeyGroupByPayload<T extends ApiKeyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ApiKeyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ApiKeyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ApiKeyGroupByOutputType[P]>
            : GetScalarType<T[P], ApiKeyGroupByOutputType[P]>
        }
      >
    >


  export type ApiKeySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    name?: boolean
    keyHash?: boolean
    prefix?: boolean
    scopes?: boolean
    rateLimit?: boolean
    isActive?: boolean
    expiresAt?: boolean
    lastUsedAt?: boolean
    createdAt?: boolean
    revokedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["apiKey"]>

  export type ApiKeySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    name?: boolean
    keyHash?: boolean
    prefix?: boolean
    scopes?: boolean
    rateLimit?: boolean
    isActive?: boolean
    expiresAt?: boolean
    lastUsedAt?: boolean
    createdAt?: boolean
    revokedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["apiKey"]>

  export type ApiKeySelectScalar = {
    id?: boolean
    organizationId?: boolean
    name?: boolean
    keyHash?: boolean
    prefix?: boolean
    scopes?: boolean
    rateLimit?: boolean
    isActive?: boolean
    expiresAt?: boolean
    lastUsedAt?: boolean
    createdAt?: boolean
    revokedAt?: boolean
  }

  export type ApiKeyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }
  export type ApiKeyIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }

  export type $ApiKeyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ApiKey"
    objects: {
      organization: Prisma.$OrganizationPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      organizationId: string
      name: string
      keyHash: string
      prefix: string
      scopes: string[]
      rateLimit: number | null
      isActive: boolean
      expiresAt: Date | null
      lastUsedAt: Date | null
      createdAt: Date
      revokedAt: Date | null
    }, ExtArgs["result"]["apiKey"]>
    composites: {}
  }

  type ApiKeyGetPayload<S extends boolean | null | undefined | ApiKeyDefaultArgs> = $Result.GetResult<Prisma.$ApiKeyPayload, S>

  type ApiKeyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ApiKeyFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ApiKeyCountAggregateInputType | true
    }

  export interface ApiKeyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ApiKey'], meta: { name: 'ApiKey' } }
    /**
     * Find zero or one ApiKey that matches the filter.
     * @param {ApiKeyFindUniqueArgs} args - Arguments to find a ApiKey
     * @example
     * // Get one ApiKey
     * const apiKey = await prisma.apiKey.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ApiKeyFindUniqueArgs>(args: SelectSubset<T, ApiKeyFindUniqueArgs<ExtArgs>>): Prisma__ApiKeyClient<$Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ApiKey that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ApiKeyFindUniqueOrThrowArgs} args - Arguments to find a ApiKey
     * @example
     * // Get one ApiKey
     * const apiKey = await prisma.apiKey.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ApiKeyFindUniqueOrThrowArgs>(args: SelectSubset<T, ApiKeyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ApiKeyClient<$Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ApiKey that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiKeyFindFirstArgs} args - Arguments to find a ApiKey
     * @example
     * // Get one ApiKey
     * const apiKey = await prisma.apiKey.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ApiKeyFindFirstArgs>(args?: SelectSubset<T, ApiKeyFindFirstArgs<ExtArgs>>): Prisma__ApiKeyClient<$Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ApiKey that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiKeyFindFirstOrThrowArgs} args - Arguments to find a ApiKey
     * @example
     * // Get one ApiKey
     * const apiKey = await prisma.apiKey.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ApiKeyFindFirstOrThrowArgs>(args?: SelectSubset<T, ApiKeyFindFirstOrThrowArgs<ExtArgs>>): Prisma__ApiKeyClient<$Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ApiKeys that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiKeyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ApiKeys
     * const apiKeys = await prisma.apiKey.findMany()
     * 
     * // Get first 10 ApiKeys
     * const apiKeys = await prisma.apiKey.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const apiKeyWithIdOnly = await prisma.apiKey.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ApiKeyFindManyArgs>(args?: SelectSubset<T, ApiKeyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ApiKey.
     * @param {ApiKeyCreateArgs} args - Arguments to create a ApiKey.
     * @example
     * // Create one ApiKey
     * const ApiKey = await prisma.apiKey.create({
     *   data: {
     *     // ... data to create a ApiKey
     *   }
     * })
     * 
     */
    create<T extends ApiKeyCreateArgs>(args: SelectSubset<T, ApiKeyCreateArgs<ExtArgs>>): Prisma__ApiKeyClient<$Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ApiKeys.
     * @param {ApiKeyCreateManyArgs} args - Arguments to create many ApiKeys.
     * @example
     * // Create many ApiKeys
     * const apiKey = await prisma.apiKey.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ApiKeyCreateManyArgs>(args?: SelectSubset<T, ApiKeyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ApiKeys and returns the data saved in the database.
     * @param {ApiKeyCreateManyAndReturnArgs} args - Arguments to create many ApiKeys.
     * @example
     * // Create many ApiKeys
     * const apiKey = await prisma.apiKey.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ApiKeys and only return the `id`
     * const apiKeyWithIdOnly = await prisma.apiKey.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ApiKeyCreateManyAndReturnArgs>(args?: SelectSubset<T, ApiKeyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ApiKey.
     * @param {ApiKeyDeleteArgs} args - Arguments to delete one ApiKey.
     * @example
     * // Delete one ApiKey
     * const ApiKey = await prisma.apiKey.delete({
     *   where: {
     *     // ... filter to delete one ApiKey
     *   }
     * })
     * 
     */
    delete<T extends ApiKeyDeleteArgs>(args: SelectSubset<T, ApiKeyDeleteArgs<ExtArgs>>): Prisma__ApiKeyClient<$Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ApiKey.
     * @param {ApiKeyUpdateArgs} args - Arguments to update one ApiKey.
     * @example
     * // Update one ApiKey
     * const apiKey = await prisma.apiKey.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ApiKeyUpdateArgs>(args: SelectSubset<T, ApiKeyUpdateArgs<ExtArgs>>): Prisma__ApiKeyClient<$Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ApiKeys.
     * @param {ApiKeyDeleteManyArgs} args - Arguments to filter ApiKeys to delete.
     * @example
     * // Delete a few ApiKeys
     * const { count } = await prisma.apiKey.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ApiKeyDeleteManyArgs>(args?: SelectSubset<T, ApiKeyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ApiKeys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiKeyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ApiKeys
     * const apiKey = await prisma.apiKey.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ApiKeyUpdateManyArgs>(args: SelectSubset<T, ApiKeyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ApiKey.
     * @param {ApiKeyUpsertArgs} args - Arguments to update or create a ApiKey.
     * @example
     * // Update or create a ApiKey
     * const apiKey = await prisma.apiKey.upsert({
     *   create: {
     *     // ... data to create a ApiKey
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ApiKey we want to update
     *   }
     * })
     */
    upsert<T extends ApiKeyUpsertArgs>(args: SelectSubset<T, ApiKeyUpsertArgs<ExtArgs>>): Prisma__ApiKeyClient<$Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ApiKeys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiKeyCountArgs} args - Arguments to filter ApiKeys to count.
     * @example
     * // Count the number of ApiKeys
     * const count = await prisma.apiKey.count({
     *   where: {
     *     // ... the filter for the ApiKeys we want to count
     *   }
     * })
    **/
    count<T extends ApiKeyCountArgs>(
      args?: Subset<T, ApiKeyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ApiKeyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ApiKey.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiKeyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ApiKeyAggregateArgs>(args: Subset<T, ApiKeyAggregateArgs>): Prisma.PrismaPromise<GetApiKeyAggregateType<T>>

    /**
     * Group by ApiKey.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiKeyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ApiKeyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ApiKeyGroupByArgs['orderBy'] }
        : { orderBy?: ApiKeyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ApiKeyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetApiKeyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ApiKey model
   */
  readonly fields: ApiKeyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ApiKey.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ApiKeyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organization<T extends OrganizationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationDefaultArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ApiKey model
   */ 
  interface ApiKeyFieldRefs {
    readonly id: FieldRef<"ApiKey", 'String'>
    readonly organizationId: FieldRef<"ApiKey", 'String'>
    readonly name: FieldRef<"ApiKey", 'String'>
    readonly keyHash: FieldRef<"ApiKey", 'String'>
    readonly prefix: FieldRef<"ApiKey", 'String'>
    readonly scopes: FieldRef<"ApiKey", 'String[]'>
    readonly rateLimit: FieldRef<"ApiKey", 'Int'>
    readonly isActive: FieldRef<"ApiKey", 'Boolean'>
    readonly expiresAt: FieldRef<"ApiKey", 'DateTime'>
    readonly lastUsedAt: FieldRef<"ApiKey", 'DateTime'>
    readonly createdAt: FieldRef<"ApiKey", 'DateTime'>
    readonly revokedAt: FieldRef<"ApiKey", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ApiKey findUnique
   */
  export type ApiKeyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKey
     */
    select?: ApiKeySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiKeyInclude<ExtArgs> | null
    /**
     * Filter, which ApiKey to fetch.
     */
    where: ApiKeyWhereUniqueInput
  }

  /**
   * ApiKey findUniqueOrThrow
   */
  export type ApiKeyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKey
     */
    select?: ApiKeySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiKeyInclude<ExtArgs> | null
    /**
     * Filter, which ApiKey to fetch.
     */
    where: ApiKeyWhereUniqueInput
  }

  /**
   * ApiKey findFirst
   */
  export type ApiKeyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKey
     */
    select?: ApiKeySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiKeyInclude<ExtArgs> | null
    /**
     * Filter, which ApiKey to fetch.
     */
    where?: ApiKeyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApiKeys to fetch.
     */
    orderBy?: ApiKeyOrderByWithRelationInput | ApiKeyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ApiKeys.
     */
    cursor?: ApiKeyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApiKeys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApiKeys.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ApiKeys.
     */
    distinct?: ApiKeyScalarFieldEnum | ApiKeyScalarFieldEnum[]
  }

  /**
   * ApiKey findFirstOrThrow
   */
  export type ApiKeyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKey
     */
    select?: ApiKeySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiKeyInclude<ExtArgs> | null
    /**
     * Filter, which ApiKey to fetch.
     */
    where?: ApiKeyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApiKeys to fetch.
     */
    orderBy?: ApiKeyOrderByWithRelationInput | ApiKeyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ApiKeys.
     */
    cursor?: ApiKeyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApiKeys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApiKeys.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ApiKeys.
     */
    distinct?: ApiKeyScalarFieldEnum | ApiKeyScalarFieldEnum[]
  }

  /**
   * ApiKey findMany
   */
  export type ApiKeyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKey
     */
    select?: ApiKeySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiKeyInclude<ExtArgs> | null
    /**
     * Filter, which ApiKeys to fetch.
     */
    where?: ApiKeyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApiKeys to fetch.
     */
    orderBy?: ApiKeyOrderByWithRelationInput | ApiKeyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ApiKeys.
     */
    cursor?: ApiKeyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApiKeys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApiKeys.
     */
    skip?: number
    distinct?: ApiKeyScalarFieldEnum | ApiKeyScalarFieldEnum[]
  }

  /**
   * ApiKey create
   */
  export type ApiKeyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKey
     */
    select?: ApiKeySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiKeyInclude<ExtArgs> | null
    /**
     * The data needed to create a ApiKey.
     */
    data: XOR<ApiKeyCreateInput, ApiKeyUncheckedCreateInput>
  }

  /**
   * ApiKey createMany
   */
  export type ApiKeyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ApiKeys.
     */
    data: ApiKeyCreateManyInput | ApiKeyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ApiKey createManyAndReturn
   */
  export type ApiKeyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKey
     */
    select?: ApiKeySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ApiKeys.
     */
    data: ApiKeyCreateManyInput | ApiKeyCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiKeyIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ApiKey update
   */
  export type ApiKeyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKey
     */
    select?: ApiKeySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiKeyInclude<ExtArgs> | null
    /**
     * The data needed to update a ApiKey.
     */
    data: XOR<ApiKeyUpdateInput, ApiKeyUncheckedUpdateInput>
    /**
     * Choose, which ApiKey to update.
     */
    where: ApiKeyWhereUniqueInput
  }

  /**
   * ApiKey updateMany
   */
  export type ApiKeyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ApiKeys.
     */
    data: XOR<ApiKeyUpdateManyMutationInput, ApiKeyUncheckedUpdateManyInput>
    /**
     * Filter which ApiKeys to update
     */
    where?: ApiKeyWhereInput
  }

  /**
   * ApiKey upsert
   */
  export type ApiKeyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKey
     */
    select?: ApiKeySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiKeyInclude<ExtArgs> | null
    /**
     * The filter to search for the ApiKey to update in case it exists.
     */
    where: ApiKeyWhereUniqueInput
    /**
     * In case the ApiKey found by the `where` argument doesn't exist, create a new ApiKey with this data.
     */
    create: XOR<ApiKeyCreateInput, ApiKeyUncheckedCreateInput>
    /**
     * In case the ApiKey was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ApiKeyUpdateInput, ApiKeyUncheckedUpdateInput>
  }

  /**
   * ApiKey delete
   */
  export type ApiKeyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKey
     */
    select?: ApiKeySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiKeyInclude<ExtArgs> | null
    /**
     * Filter which ApiKey to delete.
     */
    where: ApiKeyWhereUniqueInput
  }

  /**
   * ApiKey deleteMany
   */
  export type ApiKeyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ApiKeys to delete
     */
    where?: ApiKeyWhereInput
  }

  /**
   * ApiKey without action
   */
  export type ApiKeyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiKey
     */
    select?: ApiKeySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiKeyInclude<ExtArgs> | null
  }


  /**
   * Model OrganizationUser
   */

  export type AggregateOrganizationUser = {
    _count: OrganizationUserCountAggregateOutputType | null
    _min: OrganizationUserMinAggregateOutputType | null
    _max: OrganizationUserMaxAggregateOutputType | null
  }

  export type OrganizationUserMinAggregateOutputType = {
    id: string | null
    organizationId: string | null
    userId: string | null
    role: $Enums.UserRole | null
    invitedBy: string | null
    invitedAt: Date | null
    acceptedAt: Date | null
    isActive: boolean | null
  }

  export type OrganizationUserMaxAggregateOutputType = {
    id: string | null
    organizationId: string | null
    userId: string | null
    role: $Enums.UserRole | null
    invitedBy: string | null
    invitedAt: Date | null
    acceptedAt: Date | null
    isActive: boolean | null
  }

  export type OrganizationUserCountAggregateOutputType = {
    id: number
    organizationId: number
    userId: number
    role: number
    permissions: number
    invitedBy: number
    invitedAt: number
    acceptedAt: number
    isActive: number
    _all: number
  }


  export type OrganizationUserMinAggregateInputType = {
    id?: true
    organizationId?: true
    userId?: true
    role?: true
    invitedBy?: true
    invitedAt?: true
    acceptedAt?: true
    isActive?: true
  }

  export type OrganizationUserMaxAggregateInputType = {
    id?: true
    organizationId?: true
    userId?: true
    role?: true
    invitedBy?: true
    invitedAt?: true
    acceptedAt?: true
    isActive?: true
  }

  export type OrganizationUserCountAggregateInputType = {
    id?: true
    organizationId?: true
    userId?: true
    role?: true
    permissions?: true
    invitedBy?: true
    invitedAt?: true
    acceptedAt?: true
    isActive?: true
    _all?: true
  }

  export type OrganizationUserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrganizationUser to aggregate.
     */
    where?: OrganizationUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrganizationUsers to fetch.
     */
    orderBy?: OrganizationUserOrderByWithRelationInput | OrganizationUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrganizationUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrganizationUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrganizationUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrganizationUsers
    **/
    _count?: true | OrganizationUserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrganizationUserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrganizationUserMaxAggregateInputType
  }

  export type GetOrganizationUserAggregateType<T extends OrganizationUserAggregateArgs> = {
        [P in keyof T & keyof AggregateOrganizationUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrganizationUser[P]>
      : GetScalarType<T[P], AggregateOrganizationUser[P]>
  }




  export type OrganizationUserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrganizationUserWhereInput
    orderBy?: OrganizationUserOrderByWithAggregationInput | OrganizationUserOrderByWithAggregationInput[]
    by: OrganizationUserScalarFieldEnum[] | OrganizationUserScalarFieldEnum
    having?: OrganizationUserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrganizationUserCountAggregateInputType | true
    _min?: OrganizationUserMinAggregateInputType
    _max?: OrganizationUserMaxAggregateInputType
  }

  export type OrganizationUserGroupByOutputType = {
    id: string
    organizationId: string
    userId: string
    role: $Enums.UserRole
    permissions: string[]
    invitedBy: string | null
    invitedAt: Date
    acceptedAt: Date | null
    isActive: boolean
    _count: OrganizationUserCountAggregateOutputType | null
    _min: OrganizationUserMinAggregateOutputType | null
    _max: OrganizationUserMaxAggregateOutputType | null
  }

  type GetOrganizationUserGroupByPayload<T extends OrganizationUserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrganizationUserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrganizationUserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrganizationUserGroupByOutputType[P]>
            : GetScalarType<T[P], OrganizationUserGroupByOutputType[P]>
        }
      >
    >


  export type OrganizationUserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    userId?: boolean
    role?: boolean
    permissions?: boolean
    invitedBy?: boolean
    invitedAt?: boolean
    acceptedAt?: boolean
    isActive?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["organizationUser"]>

  export type OrganizationUserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    userId?: boolean
    role?: boolean
    permissions?: boolean
    invitedBy?: boolean
    invitedAt?: boolean
    acceptedAt?: boolean
    isActive?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["organizationUser"]>

  export type OrganizationUserSelectScalar = {
    id?: boolean
    organizationId?: boolean
    userId?: boolean
    role?: boolean
    permissions?: boolean
    invitedBy?: boolean
    invitedAt?: boolean
    acceptedAt?: boolean
    isActive?: boolean
  }

  export type OrganizationUserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type OrganizationUserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $OrganizationUserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrganizationUser"
    objects: {
      organization: Prisma.$OrganizationPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      organizationId: string
      userId: string
      role: $Enums.UserRole
      permissions: string[]
      invitedBy: string | null
      invitedAt: Date
      acceptedAt: Date | null
      isActive: boolean
    }, ExtArgs["result"]["organizationUser"]>
    composites: {}
  }

  type OrganizationUserGetPayload<S extends boolean | null | undefined | OrganizationUserDefaultArgs> = $Result.GetResult<Prisma.$OrganizationUserPayload, S>

  type OrganizationUserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<OrganizationUserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: OrganizationUserCountAggregateInputType | true
    }

  export interface OrganizationUserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrganizationUser'], meta: { name: 'OrganizationUser' } }
    /**
     * Find zero or one OrganizationUser that matches the filter.
     * @param {OrganizationUserFindUniqueArgs} args - Arguments to find a OrganizationUser
     * @example
     * // Get one OrganizationUser
     * const organizationUser = await prisma.organizationUser.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrganizationUserFindUniqueArgs>(args: SelectSubset<T, OrganizationUserFindUniqueArgs<ExtArgs>>): Prisma__OrganizationUserClient<$Result.GetResult<Prisma.$OrganizationUserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one OrganizationUser that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {OrganizationUserFindUniqueOrThrowArgs} args - Arguments to find a OrganizationUser
     * @example
     * // Get one OrganizationUser
     * const organizationUser = await prisma.organizationUser.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrganizationUserFindUniqueOrThrowArgs>(args: SelectSubset<T, OrganizationUserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrganizationUserClient<$Result.GetResult<Prisma.$OrganizationUserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first OrganizationUser that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationUserFindFirstArgs} args - Arguments to find a OrganizationUser
     * @example
     * // Get one OrganizationUser
     * const organizationUser = await prisma.organizationUser.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrganizationUserFindFirstArgs>(args?: SelectSubset<T, OrganizationUserFindFirstArgs<ExtArgs>>): Prisma__OrganizationUserClient<$Result.GetResult<Prisma.$OrganizationUserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first OrganizationUser that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationUserFindFirstOrThrowArgs} args - Arguments to find a OrganizationUser
     * @example
     * // Get one OrganizationUser
     * const organizationUser = await prisma.organizationUser.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrganizationUserFindFirstOrThrowArgs>(args?: SelectSubset<T, OrganizationUserFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrganizationUserClient<$Result.GetResult<Prisma.$OrganizationUserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more OrganizationUsers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationUserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrganizationUsers
     * const organizationUsers = await prisma.organizationUser.findMany()
     * 
     * // Get first 10 OrganizationUsers
     * const organizationUsers = await prisma.organizationUser.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const organizationUserWithIdOnly = await prisma.organizationUser.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrganizationUserFindManyArgs>(args?: SelectSubset<T, OrganizationUserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganizationUserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a OrganizationUser.
     * @param {OrganizationUserCreateArgs} args - Arguments to create a OrganizationUser.
     * @example
     * // Create one OrganizationUser
     * const OrganizationUser = await prisma.organizationUser.create({
     *   data: {
     *     // ... data to create a OrganizationUser
     *   }
     * })
     * 
     */
    create<T extends OrganizationUserCreateArgs>(args: SelectSubset<T, OrganizationUserCreateArgs<ExtArgs>>): Prisma__OrganizationUserClient<$Result.GetResult<Prisma.$OrganizationUserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many OrganizationUsers.
     * @param {OrganizationUserCreateManyArgs} args - Arguments to create many OrganizationUsers.
     * @example
     * // Create many OrganizationUsers
     * const organizationUser = await prisma.organizationUser.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrganizationUserCreateManyArgs>(args?: SelectSubset<T, OrganizationUserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrganizationUsers and returns the data saved in the database.
     * @param {OrganizationUserCreateManyAndReturnArgs} args - Arguments to create many OrganizationUsers.
     * @example
     * // Create many OrganizationUsers
     * const organizationUser = await prisma.organizationUser.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrganizationUsers and only return the `id`
     * const organizationUserWithIdOnly = await prisma.organizationUser.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrganizationUserCreateManyAndReturnArgs>(args?: SelectSubset<T, OrganizationUserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganizationUserPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a OrganizationUser.
     * @param {OrganizationUserDeleteArgs} args - Arguments to delete one OrganizationUser.
     * @example
     * // Delete one OrganizationUser
     * const OrganizationUser = await prisma.organizationUser.delete({
     *   where: {
     *     // ... filter to delete one OrganizationUser
     *   }
     * })
     * 
     */
    delete<T extends OrganizationUserDeleteArgs>(args: SelectSubset<T, OrganizationUserDeleteArgs<ExtArgs>>): Prisma__OrganizationUserClient<$Result.GetResult<Prisma.$OrganizationUserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one OrganizationUser.
     * @param {OrganizationUserUpdateArgs} args - Arguments to update one OrganizationUser.
     * @example
     * // Update one OrganizationUser
     * const organizationUser = await prisma.organizationUser.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrganizationUserUpdateArgs>(args: SelectSubset<T, OrganizationUserUpdateArgs<ExtArgs>>): Prisma__OrganizationUserClient<$Result.GetResult<Prisma.$OrganizationUserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more OrganizationUsers.
     * @param {OrganizationUserDeleteManyArgs} args - Arguments to filter OrganizationUsers to delete.
     * @example
     * // Delete a few OrganizationUsers
     * const { count } = await prisma.organizationUser.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrganizationUserDeleteManyArgs>(args?: SelectSubset<T, OrganizationUserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrganizationUsers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationUserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrganizationUsers
     * const organizationUser = await prisma.organizationUser.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrganizationUserUpdateManyArgs>(args: SelectSubset<T, OrganizationUserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one OrganizationUser.
     * @param {OrganizationUserUpsertArgs} args - Arguments to update or create a OrganizationUser.
     * @example
     * // Update or create a OrganizationUser
     * const organizationUser = await prisma.organizationUser.upsert({
     *   create: {
     *     // ... data to create a OrganizationUser
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrganizationUser we want to update
     *   }
     * })
     */
    upsert<T extends OrganizationUserUpsertArgs>(args: SelectSubset<T, OrganizationUserUpsertArgs<ExtArgs>>): Prisma__OrganizationUserClient<$Result.GetResult<Prisma.$OrganizationUserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of OrganizationUsers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationUserCountArgs} args - Arguments to filter OrganizationUsers to count.
     * @example
     * // Count the number of OrganizationUsers
     * const count = await prisma.organizationUser.count({
     *   where: {
     *     // ... the filter for the OrganizationUsers we want to count
     *   }
     * })
    **/
    count<T extends OrganizationUserCountArgs>(
      args?: Subset<T, OrganizationUserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrganizationUserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrganizationUser.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationUserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrganizationUserAggregateArgs>(args: Subset<T, OrganizationUserAggregateArgs>): Prisma.PrismaPromise<GetOrganizationUserAggregateType<T>>

    /**
     * Group by OrganizationUser.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationUserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrganizationUserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrganizationUserGroupByArgs['orderBy'] }
        : { orderBy?: OrganizationUserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrganizationUserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrganizationUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrganizationUser model
   */
  readonly fields: OrganizationUserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrganizationUser.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrganizationUserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organization<T extends OrganizationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationDefaultArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrganizationUser model
   */ 
  interface OrganizationUserFieldRefs {
    readonly id: FieldRef<"OrganizationUser", 'String'>
    readonly organizationId: FieldRef<"OrganizationUser", 'String'>
    readonly userId: FieldRef<"OrganizationUser", 'String'>
    readonly role: FieldRef<"OrganizationUser", 'UserRole'>
    readonly permissions: FieldRef<"OrganizationUser", 'String[]'>
    readonly invitedBy: FieldRef<"OrganizationUser", 'String'>
    readonly invitedAt: FieldRef<"OrganizationUser", 'DateTime'>
    readonly acceptedAt: FieldRef<"OrganizationUser", 'DateTime'>
    readonly isActive: FieldRef<"OrganizationUser", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * OrganizationUser findUnique
   */
  export type OrganizationUserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationUser
     */
    select?: OrganizationUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationUserInclude<ExtArgs> | null
    /**
     * Filter, which OrganizationUser to fetch.
     */
    where: OrganizationUserWhereUniqueInput
  }

  /**
   * OrganizationUser findUniqueOrThrow
   */
  export type OrganizationUserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationUser
     */
    select?: OrganizationUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationUserInclude<ExtArgs> | null
    /**
     * Filter, which OrganizationUser to fetch.
     */
    where: OrganizationUserWhereUniqueInput
  }

  /**
   * OrganizationUser findFirst
   */
  export type OrganizationUserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationUser
     */
    select?: OrganizationUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationUserInclude<ExtArgs> | null
    /**
     * Filter, which OrganizationUser to fetch.
     */
    where?: OrganizationUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrganizationUsers to fetch.
     */
    orderBy?: OrganizationUserOrderByWithRelationInput | OrganizationUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrganizationUsers.
     */
    cursor?: OrganizationUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrganizationUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrganizationUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrganizationUsers.
     */
    distinct?: OrganizationUserScalarFieldEnum | OrganizationUserScalarFieldEnum[]
  }

  /**
   * OrganizationUser findFirstOrThrow
   */
  export type OrganizationUserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationUser
     */
    select?: OrganizationUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationUserInclude<ExtArgs> | null
    /**
     * Filter, which OrganizationUser to fetch.
     */
    where?: OrganizationUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrganizationUsers to fetch.
     */
    orderBy?: OrganizationUserOrderByWithRelationInput | OrganizationUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrganizationUsers.
     */
    cursor?: OrganizationUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrganizationUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrganizationUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrganizationUsers.
     */
    distinct?: OrganizationUserScalarFieldEnum | OrganizationUserScalarFieldEnum[]
  }

  /**
   * OrganizationUser findMany
   */
  export type OrganizationUserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationUser
     */
    select?: OrganizationUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationUserInclude<ExtArgs> | null
    /**
     * Filter, which OrganizationUsers to fetch.
     */
    where?: OrganizationUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrganizationUsers to fetch.
     */
    orderBy?: OrganizationUserOrderByWithRelationInput | OrganizationUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrganizationUsers.
     */
    cursor?: OrganizationUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrganizationUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrganizationUsers.
     */
    skip?: number
    distinct?: OrganizationUserScalarFieldEnum | OrganizationUserScalarFieldEnum[]
  }

  /**
   * OrganizationUser create
   */
  export type OrganizationUserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationUser
     */
    select?: OrganizationUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationUserInclude<ExtArgs> | null
    /**
     * The data needed to create a OrganizationUser.
     */
    data: XOR<OrganizationUserCreateInput, OrganizationUserUncheckedCreateInput>
  }

  /**
   * OrganizationUser createMany
   */
  export type OrganizationUserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrganizationUsers.
     */
    data: OrganizationUserCreateManyInput | OrganizationUserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrganizationUser createManyAndReturn
   */
  export type OrganizationUserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationUser
     */
    select?: OrganizationUserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many OrganizationUsers.
     */
    data: OrganizationUserCreateManyInput | OrganizationUserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationUserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrganizationUser update
   */
  export type OrganizationUserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationUser
     */
    select?: OrganizationUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationUserInclude<ExtArgs> | null
    /**
     * The data needed to update a OrganizationUser.
     */
    data: XOR<OrganizationUserUpdateInput, OrganizationUserUncheckedUpdateInput>
    /**
     * Choose, which OrganizationUser to update.
     */
    where: OrganizationUserWhereUniqueInput
  }

  /**
   * OrganizationUser updateMany
   */
  export type OrganizationUserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrganizationUsers.
     */
    data: XOR<OrganizationUserUpdateManyMutationInput, OrganizationUserUncheckedUpdateManyInput>
    /**
     * Filter which OrganizationUsers to update
     */
    where?: OrganizationUserWhereInput
  }

  /**
   * OrganizationUser upsert
   */
  export type OrganizationUserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationUser
     */
    select?: OrganizationUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationUserInclude<ExtArgs> | null
    /**
     * The filter to search for the OrganizationUser to update in case it exists.
     */
    where: OrganizationUserWhereUniqueInput
    /**
     * In case the OrganizationUser found by the `where` argument doesn't exist, create a new OrganizationUser with this data.
     */
    create: XOR<OrganizationUserCreateInput, OrganizationUserUncheckedCreateInput>
    /**
     * In case the OrganizationUser was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrganizationUserUpdateInput, OrganizationUserUncheckedUpdateInput>
  }

  /**
   * OrganizationUser delete
   */
  export type OrganizationUserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationUser
     */
    select?: OrganizationUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationUserInclude<ExtArgs> | null
    /**
     * Filter which OrganizationUser to delete.
     */
    where: OrganizationUserWhereUniqueInput
  }

  /**
   * OrganizationUser deleteMany
   */
  export type OrganizationUserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrganizationUsers to delete
     */
    where?: OrganizationUserWhereInput
  }

  /**
   * OrganizationUser without action
   */
  export type OrganizationUserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationUser
     */
    select?: OrganizationUserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationUserInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const OrganizationScalarFieldEnum: {
    id: 'id',
    name: 'name',
    slug: 'slug',
    description: 'description',
    billingEmail: 'billingEmail',
    taxId: 'taxId',
    country: 'country',
    complianceStatus: 'complianceStatus',
    kycVerifiedAt: 'kycVerifiedAt',
    settings: 'settings',
    features: 'features',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    ownerId: 'ownerId'
  };

  export type OrganizationScalarFieldEnum = (typeof OrganizationScalarFieldEnum)[keyof typeof OrganizationScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    name: 'name',
    avatarUrl: 'avatarUrl',
    authProvider: 'authProvider',
    authProviderId: 'authProviderId',
    emailVerified: 'emailVerified',
    primaryWalletId: 'primaryWalletId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    lastLoginAt: 'lastLoginAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const CustomerScalarFieldEnum: {
    id: 'id',
    organizationId: 'organizationId',
    email: 'email',
    name: 'name',
    phone: 'phone',
    billingAddress: 'billingAddress',
    shippingAddress: 'shippingAddress',
    walletAddress: 'walletAddress',
    preferredChainId: 'preferredChainId',
    isActive: 'isActive',
    emailVerified: 'emailVerified',
    metadata: 'metadata',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CustomerScalarFieldEnum = (typeof CustomerScalarFieldEnum)[keyof typeof CustomerScalarFieldEnum]


  export const CustomerPaymentMethodScalarFieldEnum: {
    id: 'id',
    customerId: 'customerId',
    type: 'type',
    provider: 'provider',
    externalId: 'externalId',
    last4: 'last4',
    brand: 'brand',
    expiryMonth: 'expiryMonth',
    expiryYear: 'expiryYear',
    bankName: 'bankName',
    accountLast4: 'accountLast4',
    walletAddress: 'walletAddress',
    chainId: 'chainId',
    isDefault: 'isDefault',
    isActive: 'isActive',
    metadata: 'metadata',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CustomerPaymentMethodScalarFieldEnum = (typeof CustomerPaymentMethodScalarFieldEnum)[keyof typeof CustomerPaymentMethodScalarFieldEnum]


  export const SubscriptionScalarFieldEnum: {
    id: 'id',
    customerId: 'customerId',
    organizationId: 'organizationId',
    status: 'status',
    currentPeriodStart: 'currentPeriodStart',
    currentPeriodEnd: 'currentPeriodEnd',
    cancelAt: 'cancelAt',
    canceledAt: 'canceledAt',
    endedAt: 'endedAt',
    trialStart: 'trialStart',
    trialEnd: 'trialEnd',
    metadata: 'metadata',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SubscriptionScalarFieldEnum = (typeof SubscriptionScalarFieldEnum)[keyof typeof SubscriptionScalarFieldEnum]


  export const SubscriptionItemScalarFieldEnum: {
    id: 'id',
    subscriptionId: 'subscriptionId',
    priceId: 'priceId',
    quantity: 'quantity',
    metadata: 'metadata',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SubscriptionItemScalarFieldEnum = (typeof SubscriptionItemScalarFieldEnum)[keyof typeof SubscriptionItemScalarFieldEnum]


  export const WalletScalarFieldEnum: {
    id: 'id',
    address: 'address',
    chainId: 'chainId',
    type: 'type',
    userId: 'userId',
    organizationId: 'organizationId',
    smartWalletFactory: 'smartWalletFactory',
    smartWalletConfig: 'smartWalletConfig',
    isActive: 'isActive',
    allowlist: 'allowlist',
    blocklist: 'blocklist',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type WalletScalarFieldEnum = (typeof WalletScalarFieldEnum)[keyof typeof WalletScalarFieldEnum]


  export const BlockchainTransactionScalarFieldEnum: {
    id: 'id',
    hash: 'hash',
    chainId: 'chainId',
    fromAddress: 'fromAddress',
    toAddress: 'toAddress',
    value: 'value',
    data: 'data',
    gasLimit: 'gasLimit',
    gasPrice: 'gasPrice',
    nonce: 'nonce',
    status: 'status',
    blockNumber: 'blockNumber',
    confirmations: 'confirmations',
    isSponsored: 'isSponsored',
    sponsorshipId: 'sponsorshipId',
    walletId: 'walletId',
    paymentOrderId: 'paymentOrderId',
    createdAt: 'createdAt',
    minedAt: 'minedAt'
  };

  export type BlockchainTransactionScalarFieldEnum = (typeof BlockchainTransactionScalarFieldEnum)[keyof typeof BlockchainTransactionScalarFieldEnum]


  export const GasSponsorshipScalarFieldEnum: {
    id: 'id',
    sponsorWalletId: 'sponsorWalletId',
    maxGasAmount: 'maxGasAmount',
    usedGasAmount: 'usedGasAmount',
    maxTransactions: 'maxTransactions',
    usedTransactions: 'usedTransactions',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type GasSponsorshipScalarFieldEnum = (typeof GasSponsorshipScalarFieldEnum)[keyof typeof GasSponsorshipScalarFieldEnum]


  export const ProductScalarFieldEnum: {
    id: 'id',
    organizationId: 'organizationId',
    name: 'name',
    description: 'description',
    type: 'type',
    isActive: 'isActive',
    metadata: 'metadata',
    images: 'images',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProductScalarFieldEnum = (typeof ProductScalarFieldEnum)[keyof typeof ProductScalarFieldEnum]


  export const PriceScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    amount: 'amount',
    currency: 'currency',
    type: 'type',
    interval: 'interval',
    intervalCount: 'intervalCount',
    trialPeriodDays: 'trialPeriodDays',
    isActive: 'isActive',
    metadata: 'metadata',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PriceScalarFieldEnum = (typeof PriceScalarFieldEnum)[keyof typeof PriceScalarFieldEnum]


  export const PaymentLinkScalarFieldEnum: {
    id: 'id',
    organizationId: 'organizationId',
    createdById: 'createdById',
    executingAgentId: 'executingAgentId',
    title: 'title',
    description: 'description',
    referenceId: 'referenceId',
    shortCode: 'shortCode',
    qrCode: 'qrCode',
    priceId: 'priceId',
    amount: 'amount',
    currency: 'currency',
    targetAmount: 'targetAmount',
    targetCurrency: 'targetCurrency',
    smartContractAddress: 'smartContractAddress',
    smartContractChainId: 'smartContractChainId',
    tokenAddress: 'tokenAddress',
    status: 'status',
    allowMultiplePayments: 'allowMultiplePayments',
    requiresKyc: 'requiresKyc',
    expiresAt: 'expiresAt',
    redirectUrls: 'redirectUrls',
    metadata: 'metadata',
    theme: 'theme',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PaymentLinkScalarFieldEnum = (typeof PaymentLinkScalarFieldEnum)[keyof typeof PaymentLinkScalarFieldEnum]


  export const PaymentOrderScalarFieldEnum: {
    id: 'id',
    organizationId: 'organizationId',
    paymentLinkId: 'paymentLinkId',
    customerId: 'customerId',
    orderNumber: 'orderNumber',
    status: 'status',
    requestedAmount: 'requestedAmount',
    requestedCurrency: 'requestedCurrency',
    settledAmount: 'settledAmount',
    settledCurrency: 'settledCurrency',
    exchangeRate: 'exchangeRate',
    exchangeRateLockedAt: 'exchangeRateLockedAt',
    exchangeRateSource: 'exchangeRateSource',
    platformFee: 'platformFee',
    providerFee: 'providerFee',
    networkFee: 'networkFee',
    totalFee: 'totalFee',
    customerEmail: 'customerEmail',
    customerName: 'customerName',
    customerWallet: 'customerWallet',
    customerIp: 'customerIp',
    customerCountry: 'customerCountry',
    riskScore: 'riskScore',
    riskFactors: 'riskFactors',
    kycStatus: 'kycStatus',
    kycVerifiedAt: 'kycVerifiedAt',
    selectedRoute: 'selectedRoute',
    failureReason: 'failureReason',
    failureCode: 'failureCode',
    retryCount: 'retryCount',
    createdAt: 'createdAt',
    startedAt: 'startedAt',
    completedAt: 'completedAt',
    updatedAt: 'updatedAt'
  };

  export type PaymentOrderScalarFieldEnum = (typeof PaymentOrderScalarFieldEnum)[keyof typeof PaymentOrderScalarFieldEnum]


  export const ProviderScalarFieldEnum: {
    id: 'id',
    code: 'code',
    name: 'name',
    type: 'type',
    supportedCountries: 'supportedCountries',
    supportedCurrencies: 'supportedCurrencies',
    paymentMethods: 'paymentMethods',
    features: 'features',
    isActive: 'isActive',
    healthStatus: 'healthStatus',
    lastHealthCheck: 'lastHealthCheck',
    avgResponseTime: 'avgResponseTime',
    successRate: 'successRate'
  };

  export type ProviderScalarFieldEnum = (typeof ProviderScalarFieldEnum)[keyof typeof ProviderScalarFieldEnum]


  export const ProviderConfigScalarFieldEnum: {
    id: 'id',
    organizationId: 'organizationId',
    providerId: 'providerId',
    environment: 'environment',
    credentials: 'credentials',
    webhookSecret: 'webhookSecret',
    settings: 'settings',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProviderConfigScalarFieldEnum = (typeof ProviderConfigScalarFieldEnum)[keyof typeof ProviderConfigScalarFieldEnum]


  export const ProviderRouteScalarFieldEnum: {
    id: 'id',
    providerId: 'providerId',
    name: 'name',
    fromCountry: 'fromCountry',
    toCountry: 'toCountry',
    fromCurrency: 'fromCurrency',
    toCurrency: 'toCurrency',
    paymentMethod: 'paymentMethod',
    fixedFee: 'fixedFee',
    percentageFee: 'percentageFee',
    minAmount: 'minAmount',
    maxAmount: 'maxAmount',
    estimatedTime: 'estimatedTime',
    cutoffTime: 'cutoffTime',
    workingDays: 'workingDays',
    isActive: 'isActive',
    priority: 'priority'
  };

  export type ProviderRouteScalarFieldEnum = (typeof ProviderRouteScalarFieldEnum)[keyof typeof ProviderRouteScalarFieldEnum]


  export const ProviderTransactionScalarFieldEnum: {
    id: 'id',
    paymentOrderId: 'paymentOrderId',
    providerId: 'providerId',
    type: 'type',
    externalId: 'externalId',
    status: 'status',
    request: 'request',
    response: 'response',
    errorCode: 'errorCode',
    errorMessage: 'errorMessage',
    isRetryable: 'isRetryable',
    createdAt: 'createdAt',
    completedAt: 'completedAt'
  };

  export type ProviderTransactionScalarFieldEnum = (typeof ProviderTransactionScalarFieldEnum)[keyof typeof ProviderTransactionScalarFieldEnum]


  export const AgentScalarFieldEnum: {
    id: 'id',
    organizationId: 'organizationId',
    name: 'name',
    type: 'type',
    version: 'version',
    model: 'model',
    agentWalletId: 'agentWalletId',
    graphDefinition: 'graphDefinition',
    tools: 'tools',
    systemPrompt: 'systemPrompt',
    supportedProviders: 'supportedProviders',
    supportedChains: 'supportedChains',
    capabilities: 'capabilities',
    isActive: 'isActive',
    totalExecutions: 'totalExecutions',
    avgExecutionTime: 'avgExecutionTime',
    successRate: 'successRate',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AgentScalarFieldEnum = (typeof AgentScalarFieldEnum)[keyof typeof AgentScalarFieldEnum]


  export const AgentDecisionScalarFieldEnum: {
    id: 'id',
    agentId: 'agentId',
    paymentOrderId: 'paymentOrderId',
    decisionType: 'decisionType',
    input: 'input',
    reasoning: 'reasoning',
    decision: 'decision',
    confidence: 'confidence',
    executionTime: 'executionTime',
    tokensUsed: 'tokensUsed',
    wasOverridden: 'wasOverridden',
    overriddenBy: 'overriddenBy',
    overrideReason: 'overrideReason',
    createdAt: 'createdAt'
  };

  export type AgentDecisionScalarFieldEnum = (typeof AgentDecisionScalarFieldEnum)[keyof typeof AgentDecisionScalarFieldEnum]


  export const AgentCheckpointScalarFieldEnum: {
    id: 'id',
    agentId: 'agentId',
    threadId: 'threadId',
    checkpointId: 'checkpointId',
    state: 'state',
    metadata: 'metadata',
    createdAt: 'createdAt'
  };

  export type AgentCheckpointScalarFieldEnum = (typeof AgentCheckpointScalarFieldEnum)[keyof typeof AgentCheckpointScalarFieldEnum]


  export const AgentInteractionScalarFieldEnum: {
    id: 'id',
    agentDecisionId: 'agentDecisionId',
    userId: 'userId',
    type: 'type',
    message: 'message',
    action: 'action',
    result: 'result',
    createdAt: 'createdAt'
  };

  export type AgentInteractionScalarFieldEnum = (typeof AgentInteractionScalarFieldEnum)[keyof typeof AgentInteractionScalarFieldEnum]


  export const WebhookScalarFieldEnum: {
    id: 'id',
    organizationId: 'organizationId',
    url: 'url',
    events: 'events',
    secret: 'secret',
    isActive: 'isActive',
    failureCount: 'failureCount',
    lastFailureAt: 'lastFailureAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type WebhookScalarFieldEnum = (typeof WebhookScalarFieldEnum)[keyof typeof WebhookScalarFieldEnum]


  export const WebhookDeliveryScalarFieldEnum: {
    id: 'id',
    webhookId: 'webhookId',
    eventType: 'eventType',
    eventId: 'eventId',
    payload: 'payload',
    statusCode: 'statusCode',
    response: 'response',
    error: 'error',
    attempts: 'attempts',
    nextRetryAt: 'nextRetryAt',
    createdAt: 'createdAt',
    deliveredAt: 'deliveredAt'
  };

  export type WebhookDeliveryScalarFieldEnum = (typeof WebhookDeliveryScalarFieldEnum)[keyof typeof WebhookDeliveryScalarFieldEnum]


  export const ManualProcessStepScalarFieldEnum: {
    id: 'id',
    paymentOrderId: 'paymentOrderId',
    type: 'type',
    reason: 'reason',
    instructions: 'instructions',
    assignedTo: 'assignedTo',
    assignedTeam: 'assignedTeam',
    priority: 'priority',
    status: 'status',
    resolution: 'resolution',
    createdAt: 'createdAt',
    startedAt: 'startedAt',
    completedAt: 'completedAt',
    dueAt: 'dueAt'
  };

  export type ManualProcessStepScalarFieldEnum = (typeof ManualProcessStepScalarFieldEnum)[keyof typeof ManualProcessStepScalarFieldEnum]


  export const PaymentEventScalarFieldEnum: {
    id: 'id',
    paymentOrderId: 'paymentOrderId',
    sequenceNumber: 'sequenceNumber',
    eventType: 'eventType',
    eventVersion: 'eventVersion',
    data: 'data',
    metadata: 'metadata',
    kafkaTopic: 'kafkaTopic',
    kafkaPartition: 'kafkaPartition',
    kafkaOffset: 'kafkaOffset',
    occurredAt: 'occurredAt'
  };

  export type PaymentEventScalarFieldEnum = (typeof PaymentEventScalarFieldEnum)[keyof typeof PaymentEventScalarFieldEnum]


  export const AuditLogScalarFieldEnum: {
    id: 'id',
    organizationId: 'organizationId',
    userId: 'userId',
    action: 'action',
    entityType: 'entityType',
    entityId: 'entityId',
    changes: 'changes',
    metadata: 'metadata',
    ipAddress: 'ipAddress',
    userAgent: 'userAgent',
    requestId: 'requestId',
    createdAt: 'createdAt'
  };

  export type AuditLogScalarFieldEnum = (typeof AuditLogScalarFieldEnum)[keyof typeof AuditLogScalarFieldEnum]


  export const ApiKeyScalarFieldEnum: {
    id: 'id',
    organizationId: 'organizationId',
    name: 'name',
    keyHash: 'keyHash',
    prefix: 'prefix',
    scopes: 'scopes',
    rateLimit: 'rateLimit',
    isActive: 'isActive',
    expiresAt: 'expiresAt',
    lastUsedAt: 'lastUsedAt',
    createdAt: 'createdAt',
    revokedAt: 'revokedAt'
  };

  export type ApiKeyScalarFieldEnum = (typeof ApiKeyScalarFieldEnum)[keyof typeof ApiKeyScalarFieldEnum]


  export const OrganizationUserScalarFieldEnum: {
    id: 'id',
    organizationId: 'organizationId',
    userId: 'userId',
    role: 'role',
    permissions: 'permissions',
    invitedBy: 'invitedBy',
    invitedAt: 'invitedAt',
    acceptedAt: 'acceptedAt',
    isActive: 'isActive'
  };

  export type OrganizationUserScalarFieldEnum = (typeof OrganizationUserScalarFieldEnum)[keyof typeof OrganizationUserScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'ComplianceStatus'
   */
  export type EnumComplianceStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ComplianceStatus'>
    


  /**
   * Reference to a field of type 'ComplianceStatus[]'
   */
  export type ListEnumComplianceStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ComplianceStatus[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'AuthProvider'
   */
  export type EnumAuthProviderFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AuthProvider'>
    


  /**
   * Reference to a field of type 'AuthProvider[]'
   */
  export type ListEnumAuthProviderFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AuthProvider[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'PaymentMethodType'
   */
  export type EnumPaymentMethodTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentMethodType'>
    


  /**
   * Reference to a field of type 'PaymentMethodType[]'
   */
  export type ListEnumPaymentMethodTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentMethodType[]'>
    


  /**
   * Reference to a field of type 'SubscriptionStatus'
   */
  export type EnumSubscriptionStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SubscriptionStatus'>
    


  /**
   * Reference to a field of type 'SubscriptionStatus[]'
   */
  export type ListEnumSubscriptionStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SubscriptionStatus[]'>
    


  /**
   * Reference to a field of type 'WalletType'
   */
  export type EnumWalletTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'WalletType'>
    


  /**
   * Reference to a field of type 'WalletType[]'
   */
  export type ListEnumWalletTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'WalletType[]'>
    


  /**
   * Reference to a field of type 'BlockchainTxStatus'
   */
  export type EnumBlockchainTxStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BlockchainTxStatus'>
    


  /**
   * Reference to a field of type 'BlockchainTxStatus[]'
   */
  export type ListEnumBlockchainTxStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BlockchainTxStatus[]'>
    


  /**
   * Reference to a field of type 'ProductType'
   */
  export type EnumProductTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProductType'>
    


  /**
   * Reference to a field of type 'ProductType[]'
   */
  export type ListEnumProductTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProductType[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'PriceType'
   */
  export type EnumPriceTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PriceType'>
    


  /**
   * Reference to a field of type 'PriceType[]'
   */
  export type ListEnumPriceTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PriceType[]'>
    


  /**
   * Reference to a field of type 'BillingInterval'
   */
  export type EnumBillingIntervalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BillingInterval'>
    


  /**
   * Reference to a field of type 'BillingInterval[]'
   */
  export type ListEnumBillingIntervalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BillingInterval[]'>
    


  /**
   * Reference to a field of type 'PaymentLinkStatus'
   */
  export type EnumPaymentLinkStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentLinkStatus'>
    


  /**
   * Reference to a field of type 'PaymentLinkStatus[]'
   */
  export type ListEnumPaymentLinkStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentLinkStatus[]'>
    


  /**
   * Reference to a field of type 'PaymentOrderStatus'
   */
  export type EnumPaymentOrderStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentOrderStatus'>
    


  /**
   * Reference to a field of type 'PaymentOrderStatus[]'
   */
  export type ListEnumPaymentOrderStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentOrderStatus[]'>
    


  /**
   * Reference to a field of type 'KycStatus'
   */
  export type EnumKycStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'KycStatus'>
    


  /**
   * Reference to a field of type 'KycStatus[]'
   */
  export type ListEnumKycStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'KycStatus[]'>
    


  /**
   * Reference to a field of type 'ProviderType'
   */
  export type EnumProviderTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProviderType'>
    


  /**
   * Reference to a field of type 'ProviderType[]'
   */
  export type ListEnumProviderTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProviderType[]'>
    


  /**
   * Reference to a field of type 'ProviderHealth'
   */
  export type EnumProviderHealthFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProviderHealth'>
    


  /**
   * Reference to a field of type 'ProviderHealth[]'
   */
  export type ListEnumProviderHealthFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProviderHealth[]'>
    


  /**
   * Reference to a field of type 'Environment'
   */
  export type EnumEnvironmentFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Environment'>
    


  /**
   * Reference to a field of type 'Environment[]'
   */
  export type ListEnumEnvironmentFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Environment[]'>
    


  /**
   * Reference to a field of type 'ProviderTxType'
   */
  export type EnumProviderTxTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProviderTxType'>
    


  /**
   * Reference to a field of type 'ProviderTxType[]'
   */
  export type ListEnumProviderTxTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProviderTxType[]'>
    


  /**
   * Reference to a field of type 'AgentType'
   */
  export type EnumAgentTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AgentType'>
    


  /**
   * Reference to a field of type 'AgentType[]'
   */
  export type ListEnumAgentTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AgentType[]'>
    


  /**
   * Reference to a field of type 'InteractionType'
   */
  export type EnumInteractionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'InteractionType'>
    


  /**
   * Reference to a field of type 'InteractionType[]'
   */
  export type ListEnumInteractionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'InteractionType[]'>
    


  /**
   * Reference to a field of type 'ManualStepType'
   */
  export type EnumManualStepTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ManualStepType'>
    


  /**
   * Reference to a field of type 'ManualStepType[]'
   */
  export type ListEnumManualStepTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ManualStepType[]'>
    


  /**
   * Reference to a field of type 'Priority'
   */
  export type EnumPriorityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Priority'>
    


  /**
   * Reference to a field of type 'Priority[]'
   */
  export type ListEnumPriorityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Priority[]'>
    


  /**
   * Reference to a field of type 'ManualStepStatus'
   */
  export type EnumManualStepStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ManualStepStatus'>
    


  /**
   * Reference to a field of type 'ManualStepStatus[]'
   */
  export type ListEnumManualStepStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ManualStepStatus[]'>
    


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'BigInt[]'
   */
  export type ListBigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt[]'>
    


  /**
   * Reference to a field of type 'UserRole'
   */
  export type EnumUserRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserRole'>
    


  /**
   * Reference to a field of type 'UserRole[]'
   */
  export type ListEnumUserRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserRole[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type OrganizationWhereInput = {
    AND?: OrganizationWhereInput | OrganizationWhereInput[]
    OR?: OrganizationWhereInput[]
    NOT?: OrganizationWhereInput | OrganizationWhereInput[]
    id?: StringFilter<"Organization"> | string
    name?: StringFilter<"Organization"> | string
    slug?: StringFilter<"Organization"> | string
    description?: StringNullableFilter<"Organization"> | string | null
    billingEmail?: StringFilter<"Organization"> | string
    taxId?: StringNullableFilter<"Organization"> | string | null
    country?: StringFilter<"Organization"> | string
    complianceStatus?: EnumComplianceStatusFilter<"Organization"> | $Enums.ComplianceStatus
    kycVerifiedAt?: DateTimeNullableFilter<"Organization"> | Date | string | null
    settings?: JsonFilter<"Organization">
    features?: JsonFilter<"Organization">
    createdAt?: DateTimeFilter<"Organization"> | Date | string
    updatedAt?: DateTimeFilter<"Organization"> | Date | string
    ownerId?: StringFilter<"Organization"> | string
    users?: OrganizationUserListRelationFilter
    customers?: CustomerListRelationFilter
    products?: ProductListRelationFilter
    wallets?: WalletListRelationFilter
    paymentLinks?: PaymentLinkListRelationFilter
    paymentOrders?: PaymentOrderListRelationFilter
    providers?: ProviderConfigListRelationFilter
    apiKeys?: ApiKeyListRelationFilter
    webhooks?: WebhookListRelationFilter
    auditLogs?: AuditLogListRelationFilter
    agents?: AgentListRelationFilter
  }

  export type OrganizationOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    billingEmail?: SortOrder
    taxId?: SortOrderInput | SortOrder
    country?: SortOrder
    complianceStatus?: SortOrder
    kycVerifiedAt?: SortOrderInput | SortOrder
    settings?: SortOrder
    features?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    ownerId?: SortOrder
    users?: OrganizationUserOrderByRelationAggregateInput
    customers?: CustomerOrderByRelationAggregateInput
    products?: ProductOrderByRelationAggregateInput
    wallets?: WalletOrderByRelationAggregateInput
    paymentLinks?: PaymentLinkOrderByRelationAggregateInput
    paymentOrders?: PaymentOrderOrderByRelationAggregateInput
    providers?: ProviderConfigOrderByRelationAggregateInput
    apiKeys?: ApiKeyOrderByRelationAggregateInput
    webhooks?: WebhookOrderByRelationAggregateInput
    auditLogs?: AuditLogOrderByRelationAggregateInput
    agents?: AgentOrderByRelationAggregateInput
  }

  export type OrganizationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    slug?: string
    AND?: OrganizationWhereInput | OrganizationWhereInput[]
    OR?: OrganizationWhereInput[]
    NOT?: OrganizationWhereInput | OrganizationWhereInput[]
    name?: StringFilter<"Organization"> | string
    description?: StringNullableFilter<"Organization"> | string | null
    billingEmail?: StringFilter<"Organization"> | string
    taxId?: StringNullableFilter<"Organization"> | string | null
    country?: StringFilter<"Organization"> | string
    complianceStatus?: EnumComplianceStatusFilter<"Organization"> | $Enums.ComplianceStatus
    kycVerifiedAt?: DateTimeNullableFilter<"Organization"> | Date | string | null
    settings?: JsonFilter<"Organization">
    features?: JsonFilter<"Organization">
    createdAt?: DateTimeFilter<"Organization"> | Date | string
    updatedAt?: DateTimeFilter<"Organization"> | Date | string
    ownerId?: StringFilter<"Organization"> | string
    users?: OrganizationUserListRelationFilter
    customers?: CustomerListRelationFilter
    products?: ProductListRelationFilter
    wallets?: WalletListRelationFilter
    paymentLinks?: PaymentLinkListRelationFilter
    paymentOrders?: PaymentOrderListRelationFilter
    providers?: ProviderConfigListRelationFilter
    apiKeys?: ApiKeyListRelationFilter
    webhooks?: WebhookListRelationFilter
    auditLogs?: AuditLogListRelationFilter
    agents?: AgentListRelationFilter
  }, "id" | "slug">

  export type OrganizationOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    billingEmail?: SortOrder
    taxId?: SortOrderInput | SortOrder
    country?: SortOrder
    complianceStatus?: SortOrder
    kycVerifiedAt?: SortOrderInput | SortOrder
    settings?: SortOrder
    features?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    ownerId?: SortOrder
    _count?: OrganizationCountOrderByAggregateInput
    _max?: OrganizationMaxOrderByAggregateInput
    _min?: OrganizationMinOrderByAggregateInput
  }

  export type OrganizationScalarWhereWithAggregatesInput = {
    AND?: OrganizationScalarWhereWithAggregatesInput | OrganizationScalarWhereWithAggregatesInput[]
    OR?: OrganizationScalarWhereWithAggregatesInput[]
    NOT?: OrganizationScalarWhereWithAggregatesInput | OrganizationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Organization"> | string
    name?: StringWithAggregatesFilter<"Organization"> | string
    slug?: StringWithAggregatesFilter<"Organization"> | string
    description?: StringNullableWithAggregatesFilter<"Organization"> | string | null
    billingEmail?: StringWithAggregatesFilter<"Organization"> | string
    taxId?: StringNullableWithAggregatesFilter<"Organization"> | string | null
    country?: StringWithAggregatesFilter<"Organization"> | string
    complianceStatus?: EnumComplianceStatusWithAggregatesFilter<"Organization"> | $Enums.ComplianceStatus
    kycVerifiedAt?: DateTimeNullableWithAggregatesFilter<"Organization"> | Date | string | null
    settings?: JsonWithAggregatesFilter<"Organization">
    features?: JsonWithAggregatesFilter<"Organization">
    createdAt?: DateTimeWithAggregatesFilter<"Organization"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Organization"> | Date | string
    ownerId?: StringWithAggregatesFilter<"Organization"> | string
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    name?: StringNullableFilter<"User"> | string | null
    avatarUrl?: StringNullableFilter<"User"> | string | null
    authProvider?: EnumAuthProviderFilter<"User"> | $Enums.AuthProvider
    authProviderId?: StringNullableFilter<"User"> | string | null
    emailVerified?: BoolFilter<"User"> | boolean
    primaryWalletId?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    lastLoginAt?: DateTimeNullableFilter<"User"> | Date | string | null
    primaryWallet?: XOR<WalletNullableRelationFilter, WalletWhereInput> | null
    organizations?: OrganizationUserListRelationFilter
    ownedWallets?: WalletListRelationFilter
    paymentLinks?: PaymentLinkListRelationFilter
    auditLogs?: AuditLogListRelationFilter
    agentInteractions?: AgentInteractionListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrderInput | SortOrder
    avatarUrl?: SortOrderInput | SortOrder
    authProvider?: SortOrder
    authProviderId?: SortOrderInput | SortOrder
    emailVerified?: SortOrder
    primaryWalletId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastLoginAt?: SortOrderInput | SortOrder
    primaryWallet?: WalletOrderByWithRelationInput
    organizations?: OrganizationUserOrderByRelationAggregateInput
    ownedWallets?: WalletOrderByRelationAggregateInput
    paymentLinks?: PaymentLinkOrderByRelationAggregateInput
    auditLogs?: AuditLogOrderByRelationAggregateInput
    agentInteractions?: AgentInteractionOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    authProvider_authProviderId?: UserAuthProviderAuthProviderIdCompoundUniqueInput
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    name?: StringNullableFilter<"User"> | string | null
    avatarUrl?: StringNullableFilter<"User"> | string | null
    authProvider?: EnumAuthProviderFilter<"User"> | $Enums.AuthProvider
    authProviderId?: StringNullableFilter<"User"> | string | null
    emailVerified?: BoolFilter<"User"> | boolean
    primaryWalletId?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    lastLoginAt?: DateTimeNullableFilter<"User"> | Date | string | null
    primaryWallet?: XOR<WalletNullableRelationFilter, WalletWhereInput> | null
    organizations?: OrganizationUserListRelationFilter
    ownedWallets?: WalletListRelationFilter
    paymentLinks?: PaymentLinkListRelationFilter
    auditLogs?: AuditLogListRelationFilter
    agentInteractions?: AgentInteractionListRelationFilter
  }, "id" | "email" | "authProvider_authProviderId">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrderInput | SortOrder
    avatarUrl?: SortOrderInput | SortOrder
    authProvider?: SortOrder
    authProviderId?: SortOrderInput | SortOrder
    emailVerified?: SortOrder
    primaryWalletId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastLoginAt?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    name?: StringNullableWithAggregatesFilter<"User"> | string | null
    avatarUrl?: StringNullableWithAggregatesFilter<"User"> | string | null
    authProvider?: EnumAuthProviderWithAggregatesFilter<"User"> | $Enums.AuthProvider
    authProviderId?: StringNullableWithAggregatesFilter<"User"> | string | null
    emailVerified?: BoolWithAggregatesFilter<"User"> | boolean
    primaryWalletId?: StringNullableWithAggregatesFilter<"User"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    lastLoginAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
  }

  export type CustomerWhereInput = {
    AND?: CustomerWhereInput | CustomerWhereInput[]
    OR?: CustomerWhereInput[]
    NOT?: CustomerWhereInput | CustomerWhereInput[]
    id?: StringFilter<"Customer"> | string
    organizationId?: StringFilter<"Customer"> | string
    email?: StringFilter<"Customer"> | string
    name?: StringNullableFilter<"Customer"> | string | null
    phone?: StringNullableFilter<"Customer"> | string | null
    billingAddress?: JsonNullableFilter<"Customer">
    shippingAddress?: JsonNullableFilter<"Customer">
    walletAddress?: StringNullableFilter<"Customer"> | string | null
    preferredChainId?: IntNullableFilter<"Customer"> | number | null
    isActive?: BoolFilter<"Customer"> | boolean
    emailVerified?: BoolFilter<"Customer"> | boolean
    metadata?: JsonNullableFilter<"Customer">
    createdAt?: DateTimeFilter<"Customer"> | Date | string
    updatedAt?: DateTimeFilter<"Customer"> | Date | string
    organization?: XOR<OrganizationRelationFilter, OrganizationWhereInput>
    paymentOrders?: PaymentOrderListRelationFilter
    paymentMethods?: CustomerPaymentMethodListRelationFilter
    subscriptions?: SubscriptionListRelationFilter
  }

  export type CustomerOrderByWithRelationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    email?: SortOrder
    name?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    billingAddress?: SortOrderInput | SortOrder
    shippingAddress?: SortOrderInput | SortOrder
    walletAddress?: SortOrderInput | SortOrder
    preferredChainId?: SortOrderInput | SortOrder
    isActive?: SortOrder
    emailVerified?: SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    organization?: OrganizationOrderByWithRelationInput
    paymentOrders?: PaymentOrderOrderByRelationAggregateInput
    paymentMethods?: CustomerPaymentMethodOrderByRelationAggregateInput
    subscriptions?: SubscriptionOrderByRelationAggregateInput
  }

  export type CustomerWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    organizationId_email?: CustomerOrganizationIdEmailCompoundUniqueInput
    AND?: CustomerWhereInput | CustomerWhereInput[]
    OR?: CustomerWhereInput[]
    NOT?: CustomerWhereInput | CustomerWhereInput[]
    organizationId?: StringFilter<"Customer"> | string
    email?: StringFilter<"Customer"> | string
    name?: StringNullableFilter<"Customer"> | string | null
    phone?: StringNullableFilter<"Customer"> | string | null
    billingAddress?: JsonNullableFilter<"Customer">
    shippingAddress?: JsonNullableFilter<"Customer">
    walletAddress?: StringNullableFilter<"Customer"> | string | null
    preferredChainId?: IntNullableFilter<"Customer"> | number | null
    isActive?: BoolFilter<"Customer"> | boolean
    emailVerified?: BoolFilter<"Customer"> | boolean
    metadata?: JsonNullableFilter<"Customer">
    createdAt?: DateTimeFilter<"Customer"> | Date | string
    updatedAt?: DateTimeFilter<"Customer"> | Date | string
    organization?: XOR<OrganizationRelationFilter, OrganizationWhereInput>
    paymentOrders?: PaymentOrderListRelationFilter
    paymentMethods?: CustomerPaymentMethodListRelationFilter
    subscriptions?: SubscriptionListRelationFilter
  }, "id" | "organizationId_email">

  export type CustomerOrderByWithAggregationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    email?: SortOrder
    name?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    billingAddress?: SortOrderInput | SortOrder
    shippingAddress?: SortOrderInput | SortOrder
    walletAddress?: SortOrderInput | SortOrder
    preferredChainId?: SortOrderInput | SortOrder
    isActive?: SortOrder
    emailVerified?: SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CustomerCountOrderByAggregateInput
    _avg?: CustomerAvgOrderByAggregateInput
    _max?: CustomerMaxOrderByAggregateInput
    _min?: CustomerMinOrderByAggregateInput
    _sum?: CustomerSumOrderByAggregateInput
  }

  export type CustomerScalarWhereWithAggregatesInput = {
    AND?: CustomerScalarWhereWithAggregatesInput | CustomerScalarWhereWithAggregatesInput[]
    OR?: CustomerScalarWhereWithAggregatesInput[]
    NOT?: CustomerScalarWhereWithAggregatesInput | CustomerScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Customer"> | string
    organizationId?: StringWithAggregatesFilter<"Customer"> | string
    email?: StringWithAggregatesFilter<"Customer"> | string
    name?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    phone?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    billingAddress?: JsonNullableWithAggregatesFilter<"Customer">
    shippingAddress?: JsonNullableWithAggregatesFilter<"Customer">
    walletAddress?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    preferredChainId?: IntNullableWithAggregatesFilter<"Customer"> | number | null
    isActive?: BoolWithAggregatesFilter<"Customer"> | boolean
    emailVerified?: BoolWithAggregatesFilter<"Customer"> | boolean
    metadata?: JsonNullableWithAggregatesFilter<"Customer">
    createdAt?: DateTimeWithAggregatesFilter<"Customer"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Customer"> | Date | string
  }

  export type CustomerPaymentMethodWhereInput = {
    AND?: CustomerPaymentMethodWhereInput | CustomerPaymentMethodWhereInput[]
    OR?: CustomerPaymentMethodWhereInput[]
    NOT?: CustomerPaymentMethodWhereInput | CustomerPaymentMethodWhereInput[]
    id?: StringFilter<"CustomerPaymentMethod"> | string
    customerId?: StringFilter<"CustomerPaymentMethod"> | string
    type?: EnumPaymentMethodTypeFilter<"CustomerPaymentMethod"> | $Enums.PaymentMethodType
    provider?: StringFilter<"CustomerPaymentMethod"> | string
    externalId?: StringNullableFilter<"CustomerPaymentMethod"> | string | null
    last4?: StringNullableFilter<"CustomerPaymentMethod"> | string | null
    brand?: StringNullableFilter<"CustomerPaymentMethod"> | string | null
    expiryMonth?: IntNullableFilter<"CustomerPaymentMethod"> | number | null
    expiryYear?: IntNullableFilter<"CustomerPaymentMethod"> | number | null
    bankName?: StringNullableFilter<"CustomerPaymentMethod"> | string | null
    accountLast4?: StringNullableFilter<"CustomerPaymentMethod"> | string | null
    walletAddress?: StringNullableFilter<"CustomerPaymentMethod"> | string | null
    chainId?: IntNullableFilter<"CustomerPaymentMethod"> | number | null
    isDefault?: BoolFilter<"CustomerPaymentMethod"> | boolean
    isActive?: BoolFilter<"CustomerPaymentMethod"> | boolean
    metadata?: JsonNullableFilter<"CustomerPaymentMethod">
    createdAt?: DateTimeFilter<"CustomerPaymentMethod"> | Date | string
    updatedAt?: DateTimeFilter<"CustomerPaymentMethod"> | Date | string
    customer?: XOR<CustomerRelationFilter, CustomerWhereInput>
  }

  export type CustomerPaymentMethodOrderByWithRelationInput = {
    id?: SortOrder
    customerId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    externalId?: SortOrderInput | SortOrder
    last4?: SortOrderInput | SortOrder
    brand?: SortOrderInput | SortOrder
    expiryMonth?: SortOrderInput | SortOrder
    expiryYear?: SortOrderInput | SortOrder
    bankName?: SortOrderInput | SortOrder
    accountLast4?: SortOrderInput | SortOrder
    walletAddress?: SortOrderInput | SortOrder
    chainId?: SortOrderInput | SortOrder
    isDefault?: SortOrder
    isActive?: SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    customer?: CustomerOrderByWithRelationInput
  }

  export type CustomerPaymentMethodWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CustomerPaymentMethodWhereInput | CustomerPaymentMethodWhereInput[]
    OR?: CustomerPaymentMethodWhereInput[]
    NOT?: CustomerPaymentMethodWhereInput | CustomerPaymentMethodWhereInput[]
    customerId?: StringFilter<"CustomerPaymentMethod"> | string
    type?: EnumPaymentMethodTypeFilter<"CustomerPaymentMethod"> | $Enums.PaymentMethodType
    provider?: StringFilter<"CustomerPaymentMethod"> | string
    externalId?: StringNullableFilter<"CustomerPaymentMethod"> | string | null
    last4?: StringNullableFilter<"CustomerPaymentMethod"> | string | null
    brand?: StringNullableFilter<"CustomerPaymentMethod"> | string | null
    expiryMonth?: IntNullableFilter<"CustomerPaymentMethod"> | number | null
    expiryYear?: IntNullableFilter<"CustomerPaymentMethod"> | number | null
    bankName?: StringNullableFilter<"CustomerPaymentMethod"> | string | null
    accountLast4?: StringNullableFilter<"CustomerPaymentMethod"> | string | null
    walletAddress?: StringNullableFilter<"CustomerPaymentMethod"> | string | null
    chainId?: IntNullableFilter<"CustomerPaymentMethod"> | number | null
    isDefault?: BoolFilter<"CustomerPaymentMethod"> | boolean
    isActive?: BoolFilter<"CustomerPaymentMethod"> | boolean
    metadata?: JsonNullableFilter<"CustomerPaymentMethod">
    createdAt?: DateTimeFilter<"CustomerPaymentMethod"> | Date | string
    updatedAt?: DateTimeFilter<"CustomerPaymentMethod"> | Date | string
    customer?: XOR<CustomerRelationFilter, CustomerWhereInput>
  }, "id">

  export type CustomerPaymentMethodOrderByWithAggregationInput = {
    id?: SortOrder
    customerId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    externalId?: SortOrderInput | SortOrder
    last4?: SortOrderInput | SortOrder
    brand?: SortOrderInput | SortOrder
    expiryMonth?: SortOrderInput | SortOrder
    expiryYear?: SortOrderInput | SortOrder
    bankName?: SortOrderInput | SortOrder
    accountLast4?: SortOrderInput | SortOrder
    walletAddress?: SortOrderInput | SortOrder
    chainId?: SortOrderInput | SortOrder
    isDefault?: SortOrder
    isActive?: SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CustomerPaymentMethodCountOrderByAggregateInput
    _avg?: CustomerPaymentMethodAvgOrderByAggregateInput
    _max?: CustomerPaymentMethodMaxOrderByAggregateInput
    _min?: CustomerPaymentMethodMinOrderByAggregateInput
    _sum?: CustomerPaymentMethodSumOrderByAggregateInput
  }

  export type CustomerPaymentMethodScalarWhereWithAggregatesInput = {
    AND?: CustomerPaymentMethodScalarWhereWithAggregatesInput | CustomerPaymentMethodScalarWhereWithAggregatesInput[]
    OR?: CustomerPaymentMethodScalarWhereWithAggregatesInput[]
    NOT?: CustomerPaymentMethodScalarWhereWithAggregatesInput | CustomerPaymentMethodScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CustomerPaymentMethod"> | string
    customerId?: StringWithAggregatesFilter<"CustomerPaymentMethod"> | string
    type?: EnumPaymentMethodTypeWithAggregatesFilter<"CustomerPaymentMethod"> | $Enums.PaymentMethodType
    provider?: StringWithAggregatesFilter<"CustomerPaymentMethod"> | string
    externalId?: StringNullableWithAggregatesFilter<"CustomerPaymentMethod"> | string | null
    last4?: StringNullableWithAggregatesFilter<"CustomerPaymentMethod"> | string | null
    brand?: StringNullableWithAggregatesFilter<"CustomerPaymentMethod"> | string | null
    expiryMonth?: IntNullableWithAggregatesFilter<"CustomerPaymentMethod"> | number | null
    expiryYear?: IntNullableWithAggregatesFilter<"CustomerPaymentMethod"> | number | null
    bankName?: StringNullableWithAggregatesFilter<"CustomerPaymentMethod"> | string | null
    accountLast4?: StringNullableWithAggregatesFilter<"CustomerPaymentMethod"> | string | null
    walletAddress?: StringNullableWithAggregatesFilter<"CustomerPaymentMethod"> | string | null
    chainId?: IntNullableWithAggregatesFilter<"CustomerPaymentMethod"> | number | null
    isDefault?: BoolWithAggregatesFilter<"CustomerPaymentMethod"> | boolean
    isActive?: BoolWithAggregatesFilter<"CustomerPaymentMethod"> | boolean
    metadata?: JsonNullableWithAggregatesFilter<"CustomerPaymentMethod">
    createdAt?: DateTimeWithAggregatesFilter<"CustomerPaymentMethod"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CustomerPaymentMethod"> | Date | string
  }

  export type SubscriptionWhereInput = {
    AND?: SubscriptionWhereInput | SubscriptionWhereInput[]
    OR?: SubscriptionWhereInput[]
    NOT?: SubscriptionWhereInput | SubscriptionWhereInput[]
    id?: StringFilter<"Subscription"> | string
    customerId?: StringFilter<"Subscription"> | string
    organizationId?: StringFilter<"Subscription"> | string
    status?: EnumSubscriptionStatusFilter<"Subscription"> | $Enums.SubscriptionStatus
    currentPeriodStart?: DateTimeFilter<"Subscription"> | Date | string
    currentPeriodEnd?: DateTimeFilter<"Subscription"> | Date | string
    cancelAt?: DateTimeNullableFilter<"Subscription"> | Date | string | null
    canceledAt?: DateTimeNullableFilter<"Subscription"> | Date | string | null
    endedAt?: DateTimeNullableFilter<"Subscription"> | Date | string | null
    trialStart?: DateTimeNullableFilter<"Subscription"> | Date | string | null
    trialEnd?: DateTimeNullableFilter<"Subscription"> | Date | string | null
    metadata?: JsonNullableFilter<"Subscription">
    createdAt?: DateTimeFilter<"Subscription"> | Date | string
    updatedAt?: DateTimeFilter<"Subscription"> | Date | string
    customer?: XOR<CustomerRelationFilter, CustomerWhereInput>
    items?: SubscriptionItemListRelationFilter
  }

  export type SubscriptionOrderByWithRelationInput = {
    id?: SortOrder
    customerId?: SortOrder
    organizationId?: SortOrder
    status?: SortOrder
    currentPeriodStart?: SortOrder
    currentPeriodEnd?: SortOrder
    cancelAt?: SortOrderInput | SortOrder
    canceledAt?: SortOrderInput | SortOrder
    endedAt?: SortOrderInput | SortOrder
    trialStart?: SortOrderInput | SortOrder
    trialEnd?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    customer?: CustomerOrderByWithRelationInput
    items?: SubscriptionItemOrderByRelationAggregateInput
  }

  export type SubscriptionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SubscriptionWhereInput | SubscriptionWhereInput[]
    OR?: SubscriptionWhereInput[]
    NOT?: SubscriptionWhereInput | SubscriptionWhereInput[]
    customerId?: StringFilter<"Subscription"> | string
    organizationId?: StringFilter<"Subscription"> | string
    status?: EnumSubscriptionStatusFilter<"Subscription"> | $Enums.SubscriptionStatus
    currentPeriodStart?: DateTimeFilter<"Subscription"> | Date | string
    currentPeriodEnd?: DateTimeFilter<"Subscription"> | Date | string
    cancelAt?: DateTimeNullableFilter<"Subscription"> | Date | string | null
    canceledAt?: DateTimeNullableFilter<"Subscription"> | Date | string | null
    endedAt?: DateTimeNullableFilter<"Subscription"> | Date | string | null
    trialStart?: DateTimeNullableFilter<"Subscription"> | Date | string | null
    trialEnd?: DateTimeNullableFilter<"Subscription"> | Date | string | null
    metadata?: JsonNullableFilter<"Subscription">
    createdAt?: DateTimeFilter<"Subscription"> | Date | string
    updatedAt?: DateTimeFilter<"Subscription"> | Date | string
    customer?: XOR<CustomerRelationFilter, CustomerWhereInput>
    items?: SubscriptionItemListRelationFilter
  }, "id">

  export type SubscriptionOrderByWithAggregationInput = {
    id?: SortOrder
    customerId?: SortOrder
    organizationId?: SortOrder
    status?: SortOrder
    currentPeriodStart?: SortOrder
    currentPeriodEnd?: SortOrder
    cancelAt?: SortOrderInput | SortOrder
    canceledAt?: SortOrderInput | SortOrder
    endedAt?: SortOrderInput | SortOrder
    trialStart?: SortOrderInput | SortOrder
    trialEnd?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SubscriptionCountOrderByAggregateInput
    _max?: SubscriptionMaxOrderByAggregateInput
    _min?: SubscriptionMinOrderByAggregateInput
  }

  export type SubscriptionScalarWhereWithAggregatesInput = {
    AND?: SubscriptionScalarWhereWithAggregatesInput | SubscriptionScalarWhereWithAggregatesInput[]
    OR?: SubscriptionScalarWhereWithAggregatesInput[]
    NOT?: SubscriptionScalarWhereWithAggregatesInput | SubscriptionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Subscription"> | string
    customerId?: StringWithAggregatesFilter<"Subscription"> | string
    organizationId?: StringWithAggregatesFilter<"Subscription"> | string
    status?: EnumSubscriptionStatusWithAggregatesFilter<"Subscription"> | $Enums.SubscriptionStatus
    currentPeriodStart?: DateTimeWithAggregatesFilter<"Subscription"> | Date | string
    currentPeriodEnd?: DateTimeWithAggregatesFilter<"Subscription"> | Date | string
    cancelAt?: DateTimeNullableWithAggregatesFilter<"Subscription"> | Date | string | null
    canceledAt?: DateTimeNullableWithAggregatesFilter<"Subscription"> | Date | string | null
    endedAt?: DateTimeNullableWithAggregatesFilter<"Subscription"> | Date | string | null
    trialStart?: DateTimeNullableWithAggregatesFilter<"Subscription"> | Date | string | null
    trialEnd?: DateTimeNullableWithAggregatesFilter<"Subscription"> | Date | string | null
    metadata?: JsonNullableWithAggregatesFilter<"Subscription">
    createdAt?: DateTimeWithAggregatesFilter<"Subscription"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Subscription"> | Date | string
  }

  export type SubscriptionItemWhereInput = {
    AND?: SubscriptionItemWhereInput | SubscriptionItemWhereInput[]
    OR?: SubscriptionItemWhereInput[]
    NOT?: SubscriptionItemWhereInput | SubscriptionItemWhereInput[]
    id?: StringFilter<"SubscriptionItem"> | string
    subscriptionId?: StringFilter<"SubscriptionItem"> | string
    priceId?: StringFilter<"SubscriptionItem"> | string
    quantity?: IntFilter<"SubscriptionItem"> | number
    metadata?: JsonNullableFilter<"SubscriptionItem">
    createdAt?: DateTimeFilter<"SubscriptionItem"> | Date | string
    updatedAt?: DateTimeFilter<"SubscriptionItem"> | Date | string
    subscription?: XOR<SubscriptionRelationFilter, SubscriptionWhereInput>
    price?: XOR<PriceRelationFilter, PriceWhereInput>
  }

  export type SubscriptionItemOrderByWithRelationInput = {
    id?: SortOrder
    subscriptionId?: SortOrder
    priceId?: SortOrder
    quantity?: SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    subscription?: SubscriptionOrderByWithRelationInput
    price?: PriceOrderByWithRelationInput
  }

  export type SubscriptionItemWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SubscriptionItemWhereInput | SubscriptionItemWhereInput[]
    OR?: SubscriptionItemWhereInput[]
    NOT?: SubscriptionItemWhereInput | SubscriptionItemWhereInput[]
    subscriptionId?: StringFilter<"SubscriptionItem"> | string
    priceId?: StringFilter<"SubscriptionItem"> | string
    quantity?: IntFilter<"SubscriptionItem"> | number
    metadata?: JsonNullableFilter<"SubscriptionItem">
    createdAt?: DateTimeFilter<"SubscriptionItem"> | Date | string
    updatedAt?: DateTimeFilter<"SubscriptionItem"> | Date | string
    subscription?: XOR<SubscriptionRelationFilter, SubscriptionWhereInput>
    price?: XOR<PriceRelationFilter, PriceWhereInput>
  }, "id">

  export type SubscriptionItemOrderByWithAggregationInput = {
    id?: SortOrder
    subscriptionId?: SortOrder
    priceId?: SortOrder
    quantity?: SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SubscriptionItemCountOrderByAggregateInput
    _avg?: SubscriptionItemAvgOrderByAggregateInput
    _max?: SubscriptionItemMaxOrderByAggregateInput
    _min?: SubscriptionItemMinOrderByAggregateInput
    _sum?: SubscriptionItemSumOrderByAggregateInput
  }

  export type SubscriptionItemScalarWhereWithAggregatesInput = {
    AND?: SubscriptionItemScalarWhereWithAggregatesInput | SubscriptionItemScalarWhereWithAggregatesInput[]
    OR?: SubscriptionItemScalarWhereWithAggregatesInput[]
    NOT?: SubscriptionItemScalarWhereWithAggregatesInput | SubscriptionItemScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SubscriptionItem"> | string
    subscriptionId?: StringWithAggregatesFilter<"SubscriptionItem"> | string
    priceId?: StringWithAggregatesFilter<"SubscriptionItem"> | string
    quantity?: IntWithAggregatesFilter<"SubscriptionItem"> | number
    metadata?: JsonNullableWithAggregatesFilter<"SubscriptionItem">
    createdAt?: DateTimeWithAggregatesFilter<"SubscriptionItem"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"SubscriptionItem"> | Date | string
  }

  export type WalletWhereInput = {
    AND?: WalletWhereInput | WalletWhereInput[]
    OR?: WalletWhereInput[]
    NOT?: WalletWhereInput | WalletWhereInput[]
    id?: StringFilter<"Wallet"> | string
    address?: StringFilter<"Wallet"> | string
    chainId?: IntFilter<"Wallet"> | number
    type?: EnumWalletTypeFilter<"Wallet"> | $Enums.WalletType
    userId?: StringNullableFilter<"Wallet"> | string | null
    organizationId?: StringNullableFilter<"Wallet"> | string | null
    smartWalletFactory?: StringNullableFilter<"Wallet"> | string | null
    smartWalletConfig?: JsonNullableFilter<"Wallet">
    isActive?: BoolFilter<"Wallet"> | boolean
    allowlist?: BoolFilter<"Wallet"> | boolean
    blocklist?: BoolFilter<"Wallet"> | boolean
    createdAt?: DateTimeFilter<"Wallet"> | Date | string
    updatedAt?: DateTimeFilter<"Wallet"> | Date | string
    user?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    organization?: XOR<OrganizationNullableRelationFilter, OrganizationWhereInput> | null
    primaryForUsers?: UserListRelationFilter
    agent?: XOR<AgentNullableRelationFilter, AgentWhereInput> | null
    transactions?: BlockchainTransactionListRelationFilter
    gasSponsorship?: GasSponsorshipListRelationFilter
  }

  export type WalletOrderByWithRelationInput = {
    id?: SortOrder
    address?: SortOrder
    chainId?: SortOrder
    type?: SortOrder
    userId?: SortOrderInput | SortOrder
    organizationId?: SortOrderInput | SortOrder
    smartWalletFactory?: SortOrderInput | SortOrder
    smartWalletConfig?: SortOrderInput | SortOrder
    isActive?: SortOrder
    allowlist?: SortOrder
    blocklist?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    organization?: OrganizationOrderByWithRelationInput
    primaryForUsers?: UserOrderByRelationAggregateInput
    agent?: AgentOrderByWithRelationInput
    transactions?: BlockchainTransactionOrderByRelationAggregateInput
    gasSponsorship?: GasSponsorshipOrderByRelationAggregateInput
  }

  export type WalletWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    address?: string
    AND?: WalletWhereInput | WalletWhereInput[]
    OR?: WalletWhereInput[]
    NOT?: WalletWhereInput | WalletWhereInput[]
    chainId?: IntFilter<"Wallet"> | number
    type?: EnumWalletTypeFilter<"Wallet"> | $Enums.WalletType
    userId?: StringNullableFilter<"Wallet"> | string | null
    organizationId?: StringNullableFilter<"Wallet"> | string | null
    smartWalletFactory?: StringNullableFilter<"Wallet"> | string | null
    smartWalletConfig?: JsonNullableFilter<"Wallet">
    isActive?: BoolFilter<"Wallet"> | boolean
    allowlist?: BoolFilter<"Wallet"> | boolean
    blocklist?: BoolFilter<"Wallet"> | boolean
    createdAt?: DateTimeFilter<"Wallet"> | Date | string
    updatedAt?: DateTimeFilter<"Wallet"> | Date | string
    user?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    organization?: XOR<OrganizationNullableRelationFilter, OrganizationWhereInput> | null
    primaryForUsers?: UserListRelationFilter
    agent?: XOR<AgentNullableRelationFilter, AgentWhereInput> | null
    transactions?: BlockchainTransactionListRelationFilter
    gasSponsorship?: GasSponsorshipListRelationFilter
  }, "id" | "address">

  export type WalletOrderByWithAggregationInput = {
    id?: SortOrder
    address?: SortOrder
    chainId?: SortOrder
    type?: SortOrder
    userId?: SortOrderInput | SortOrder
    organizationId?: SortOrderInput | SortOrder
    smartWalletFactory?: SortOrderInput | SortOrder
    smartWalletConfig?: SortOrderInput | SortOrder
    isActive?: SortOrder
    allowlist?: SortOrder
    blocklist?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: WalletCountOrderByAggregateInput
    _avg?: WalletAvgOrderByAggregateInput
    _max?: WalletMaxOrderByAggregateInput
    _min?: WalletMinOrderByAggregateInput
    _sum?: WalletSumOrderByAggregateInput
  }

  export type WalletScalarWhereWithAggregatesInput = {
    AND?: WalletScalarWhereWithAggregatesInput | WalletScalarWhereWithAggregatesInput[]
    OR?: WalletScalarWhereWithAggregatesInput[]
    NOT?: WalletScalarWhereWithAggregatesInput | WalletScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Wallet"> | string
    address?: StringWithAggregatesFilter<"Wallet"> | string
    chainId?: IntWithAggregatesFilter<"Wallet"> | number
    type?: EnumWalletTypeWithAggregatesFilter<"Wallet"> | $Enums.WalletType
    userId?: StringNullableWithAggregatesFilter<"Wallet"> | string | null
    organizationId?: StringNullableWithAggregatesFilter<"Wallet"> | string | null
    smartWalletFactory?: StringNullableWithAggregatesFilter<"Wallet"> | string | null
    smartWalletConfig?: JsonNullableWithAggregatesFilter<"Wallet">
    isActive?: BoolWithAggregatesFilter<"Wallet"> | boolean
    allowlist?: BoolWithAggregatesFilter<"Wallet"> | boolean
    blocklist?: BoolWithAggregatesFilter<"Wallet"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Wallet"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Wallet"> | Date | string
  }

  export type BlockchainTransactionWhereInput = {
    AND?: BlockchainTransactionWhereInput | BlockchainTransactionWhereInput[]
    OR?: BlockchainTransactionWhereInput[]
    NOT?: BlockchainTransactionWhereInput | BlockchainTransactionWhereInput[]
    id?: StringFilter<"BlockchainTransaction"> | string
    hash?: StringFilter<"BlockchainTransaction"> | string
    chainId?: IntFilter<"BlockchainTransaction"> | number
    fromAddress?: StringFilter<"BlockchainTransaction"> | string
    toAddress?: StringNullableFilter<"BlockchainTransaction"> | string | null
    value?: StringFilter<"BlockchainTransaction"> | string
    data?: StringNullableFilter<"BlockchainTransaction"> | string | null
    gasLimit?: StringNullableFilter<"BlockchainTransaction"> | string | null
    gasPrice?: StringNullableFilter<"BlockchainTransaction"> | string | null
    nonce?: IntNullableFilter<"BlockchainTransaction"> | number | null
    status?: EnumBlockchainTxStatusFilter<"BlockchainTransaction"> | $Enums.BlockchainTxStatus
    blockNumber?: IntNullableFilter<"BlockchainTransaction"> | number | null
    confirmations?: IntFilter<"BlockchainTransaction"> | number
    isSponsored?: BoolFilter<"BlockchainTransaction"> | boolean
    sponsorshipId?: StringNullableFilter<"BlockchainTransaction"> | string | null
    walletId?: StringFilter<"BlockchainTransaction"> | string
    paymentOrderId?: StringNullableFilter<"BlockchainTransaction"> | string | null
    createdAt?: DateTimeFilter<"BlockchainTransaction"> | Date | string
    minedAt?: DateTimeNullableFilter<"BlockchainTransaction"> | Date | string | null
    gasSponsorship?: XOR<GasSponsorshipNullableRelationFilter, GasSponsorshipWhereInput> | null
    wallet?: XOR<WalletRelationFilter, WalletWhereInput>
    paymentOrder?: XOR<PaymentOrderNullableRelationFilter, PaymentOrderWhereInput> | null
  }

  export type BlockchainTransactionOrderByWithRelationInput = {
    id?: SortOrder
    hash?: SortOrder
    chainId?: SortOrder
    fromAddress?: SortOrder
    toAddress?: SortOrderInput | SortOrder
    value?: SortOrder
    data?: SortOrderInput | SortOrder
    gasLimit?: SortOrderInput | SortOrder
    gasPrice?: SortOrderInput | SortOrder
    nonce?: SortOrderInput | SortOrder
    status?: SortOrder
    blockNumber?: SortOrderInput | SortOrder
    confirmations?: SortOrder
    isSponsored?: SortOrder
    sponsorshipId?: SortOrderInput | SortOrder
    walletId?: SortOrder
    paymentOrderId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    minedAt?: SortOrderInput | SortOrder
    gasSponsorship?: GasSponsorshipOrderByWithRelationInput
    wallet?: WalletOrderByWithRelationInput
    paymentOrder?: PaymentOrderOrderByWithRelationInput
  }

  export type BlockchainTransactionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    hash?: string
    AND?: BlockchainTransactionWhereInput | BlockchainTransactionWhereInput[]
    OR?: BlockchainTransactionWhereInput[]
    NOT?: BlockchainTransactionWhereInput | BlockchainTransactionWhereInput[]
    chainId?: IntFilter<"BlockchainTransaction"> | number
    fromAddress?: StringFilter<"BlockchainTransaction"> | string
    toAddress?: StringNullableFilter<"BlockchainTransaction"> | string | null
    value?: StringFilter<"BlockchainTransaction"> | string
    data?: StringNullableFilter<"BlockchainTransaction"> | string | null
    gasLimit?: StringNullableFilter<"BlockchainTransaction"> | string | null
    gasPrice?: StringNullableFilter<"BlockchainTransaction"> | string | null
    nonce?: IntNullableFilter<"BlockchainTransaction"> | number | null
    status?: EnumBlockchainTxStatusFilter<"BlockchainTransaction"> | $Enums.BlockchainTxStatus
    blockNumber?: IntNullableFilter<"BlockchainTransaction"> | number | null
    confirmations?: IntFilter<"BlockchainTransaction"> | number
    isSponsored?: BoolFilter<"BlockchainTransaction"> | boolean
    sponsorshipId?: StringNullableFilter<"BlockchainTransaction"> | string | null
    walletId?: StringFilter<"BlockchainTransaction"> | string
    paymentOrderId?: StringNullableFilter<"BlockchainTransaction"> | string | null
    createdAt?: DateTimeFilter<"BlockchainTransaction"> | Date | string
    minedAt?: DateTimeNullableFilter<"BlockchainTransaction"> | Date | string | null
    gasSponsorship?: XOR<GasSponsorshipNullableRelationFilter, GasSponsorshipWhereInput> | null
    wallet?: XOR<WalletRelationFilter, WalletWhereInput>
    paymentOrder?: XOR<PaymentOrderNullableRelationFilter, PaymentOrderWhereInput> | null
  }, "id" | "hash">

  export type BlockchainTransactionOrderByWithAggregationInput = {
    id?: SortOrder
    hash?: SortOrder
    chainId?: SortOrder
    fromAddress?: SortOrder
    toAddress?: SortOrderInput | SortOrder
    value?: SortOrder
    data?: SortOrderInput | SortOrder
    gasLimit?: SortOrderInput | SortOrder
    gasPrice?: SortOrderInput | SortOrder
    nonce?: SortOrderInput | SortOrder
    status?: SortOrder
    blockNumber?: SortOrderInput | SortOrder
    confirmations?: SortOrder
    isSponsored?: SortOrder
    sponsorshipId?: SortOrderInput | SortOrder
    walletId?: SortOrder
    paymentOrderId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    minedAt?: SortOrderInput | SortOrder
    _count?: BlockchainTransactionCountOrderByAggregateInput
    _avg?: BlockchainTransactionAvgOrderByAggregateInput
    _max?: BlockchainTransactionMaxOrderByAggregateInput
    _min?: BlockchainTransactionMinOrderByAggregateInput
    _sum?: BlockchainTransactionSumOrderByAggregateInput
  }

  export type BlockchainTransactionScalarWhereWithAggregatesInput = {
    AND?: BlockchainTransactionScalarWhereWithAggregatesInput | BlockchainTransactionScalarWhereWithAggregatesInput[]
    OR?: BlockchainTransactionScalarWhereWithAggregatesInput[]
    NOT?: BlockchainTransactionScalarWhereWithAggregatesInput | BlockchainTransactionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BlockchainTransaction"> | string
    hash?: StringWithAggregatesFilter<"BlockchainTransaction"> | string
    chainId?: IntWithAggregatesFilter<"BlockchainTransaction"> | number
    fromAddress?: StringWithAggregatesFilter<"BlockchainTransaction"> | string
    toAddress?: StringNullableWithAggregatesFilter<"BlockchainTransaction"> | string | null
    value?: StringWithAggregatesFilter<"BlockchainTransaction"> | string
    data?: StringNullableWithAggregatesFilter<"BlockchainTransaction"> | string | null
    gasLimit?: StringNullableWithAggregatesFilter<"BlockchainTransaction"> | string | null
    gasPrice?: StringNullableWithAggregatesFilter<"BlockchainTransaction"> | string | null
    nonce?: IntNullableWithAggregatesFilter<"BlockchainTransaction"> | number | null
    status?: EnumBlockchainTxStatusWithAggregatesFilter<"BlockchainTransaction"> | $Enums.BlockchainTxStatus
    blockNumber?: IntNullableWithAggregatesFilter<"BlockchainTransaction"> | number | null
    confirmations?: IntWithAggregatesFilter<"BlockchainTransaction"> | number
    isSponsored?: BoolWithAggregatesFilter<"BlockchainTransaction"> | boolean
    sponsorshipId?: StringNullableWithAggregatesFilter<"BlockchainTransaction"> | string | null
    walletId?: StringWithAggregatesFilter<"BlockchainTransaction"> | string
    paymentOrderId?: StringNullableWithAggregatesFilter<"BlockchainTransaction"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"BlockchainTransaction"> | Date | string
    minedAt?: DateTimeNullableWithAggregatesFilter<"BlockchainTransaction"> | Date | string | null
  }

  export type GasSponsorshipWhereInput = {
    AND?: GasSponsorshipWhereInput | GasSponsorshipWhereInput[]
    OR?: GasSponsorshipWhereInput[]
    NOT?: GasSponsorshipWhereInput | GasSponsorshipWhereInput[]
    id?: StringFilter<"GasSponsorship"> | string
    sponsorWalletId?: StringFilter<"GasSponsorship"> | string
    maxGasAmount?: StringFilter<"GasSponsorship"> | string
    usedGasAmount?: StringFilter<"GasSponsorship"> | string
    maxTransactions?: IntNullableFilter<"GasSponsorship"> | number | null
    usedTransactions?: IntFilter<"GasSponsorship"> | number
    expiresAt?: DateTimeNullableFilter<"GasSponsorship"> | Date | string | null
    createdAt?: DateTimeFilter<"GasSponsorship"> | Date | string
    updatedAt?: DateTimeFilter<"GasSponsorship"> | Date | string
    sponsorWallet?: XOR<WalletRelationFilter, WalletWhereInput>
    transactions?: BlockchainTransactionListRelationFilter
  }

  export type GasSponsorshipOrderByWithRelationInput = {
    id?: SortOrder
    sponsorWalletId?: SortOrder
    maxGasAmount?: SortOrder
    usedGasAmount?: SortOrder
    maxTransactions?: SortOrderInput | SortOrder
    usedTransactions?: SortOrder
    expiresAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    sponsorWallet?: WalletOrderByWithRelationInput
    transactions?: BlockchainTransactionOrderByRelationAggregateInput
  }

  export type GasSponsorshipWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: GasSponsorshipWhereInput | GasSponsorshipWhereInput[]
    OR?: GasSponsorshipWhereInput[]
    NOT?: GasSponsorshipWhereInput | GasSponsorshipWhereInput[]
    sponsorWalletId?: StringFilter<"GasSponsorship"> | string
    maxGasAmount?: StringFilter<"GasSponsorship"> | string
    usedGasAmount?: StringFilter<"GasSponsorship"> | string
    maxTransactions?: IntNullableFilter<"GasSponsorship"> | number | null
    usedTransactions?: IntFilter<"GasSponsorship"> | number
    expiresAt?: DateTimeNullableFilter<"GasSponsorship"> | Date | string | null
    createdAt?: DateTimeFilter<"GasSponsorship"> | Date | string
    updatedAt?: DateTimeFilter<"GasSponsorship"> | Date | string
    sponsorWallet?: XOR<WalletRelationFilter, WalletWhereInput>
    transactions?: BlockchainTransactionListRelationFilter
  }, "id">

  export type GasSponsorshipOrderByWithAggregationInput = {
    id?: SortOrder
    sponsorWalletId?: SortOrder
    maxGasAmount?: SortOrder
    usedGasAmount?: SortOrder
    maxTransactions?: SortOrderInput | SortOrder
    usedTransactions?: SortOrder
    expiresAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: GasSponsorshipCountOrderByAggregateInput
    _avg?: GasSponsorshipAvgOrderByAggregateInput
    _max?: GasSponsorshipMaxOrderByAggregateInput
    _min?: GasSponsorshipMinOrderByAggregateInput
    _sum?: GasSponsorshipSumOrderByAggregateInput
  }

  export type GasSponsorshipScalarWhereWithAggregatesInput = {
    AND?: GasSponsorshipScalarWhereWithAggregatesInput | GasSponsorshipScalarWhereWithAggregatesInput[]
    OR?: GasSponsorshipScalarWhereWithAggregatesInput[]
    NOT?: GasSponsorshipScalarWhereWithAggregatesInput | GasSponsorshipScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"GasSponsorship"> | string
    sponsorWalletId?: StringWithAggregatesFilter<"GasSponsorship"> | string
    maxGasAmount?: StringWithAggregatesFilter<"GasSponsorship"> | string
    usedGasAmount?: StringWithAggregatesFilter<"GasSponsorship"> | string
    maxTransactions?: IntNullableWithAggregatesFilter<"GasSponsorship"> | number | null
    usedTransactions?: IntWithAggregatesFilter<"GasSponsorship"> | number
    expiresAt?: DateTimeNullableWithAggregatesFilter<"GasSponsorship"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"GasSponsorship"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"GasSponsorship"> | Date | string
  }

  export type ProductWhereInput = {
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    id?: StringFilter<"Product"> | string
    organizationId?: StringFilter<"Product"> | string
    name?: StringFilter<"Product"> | string
    description?: StringNullableFilter<"Product"> | string | null
    type?: EnumProductTypeFilter<"Product"> | $Enums.ProductType
    isActive?: BoolFilter<"Product"> | boolean
    metadata?: JsonNullableFilter<"Product">
    images?: StringNullableListFilter<"Product">
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    organization?: XOR<OrganizationRelationFilter, OrganizationWhereInput>
    prices?: PriceListRelationFilter
  }

  export type ProductOrderByWithRelationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    type?: SortOrder
    isActive?: SortOrder
    metadata?: SortOrderInput | SortOrder
    images?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    organization?: OrganizationOrderByWithRelationInput
    prices?: PriceOrderByRelationAggregateInput
  }

  export type ProductWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    organizationId?: StringFilter<"Product"> | string
    name?: StringFilter<"Product"> | string
    description?: StringNullableFilter<"Product"> | string | null
    type?: EnumProductTypeFilter<"Product"> | $Enums.ProductType
    isActive?: BoolFilter<"Product"> | boolean
    metadata?: JsonNullableFilter<"Product">
    images?: StringNullableListFilter<"Product">
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    organization?: XOR<OrganizationRelationFilter, OrganizationWhereInput>
    prices?: PriceListRelationFilter
  }, "id">

  export type ProductOrderByWithAggregationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    type?: SortOrder
    isActive?: SortOrder
    metadata?: SortOrderInput | SortOrder
    images?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ProductCountOrderByAggregateInput
    _max?: ProductMaxOrderByAggregateInput
    _min?: ProductMinOrderByAggregateInput
  }

  export type ProductScalarWhereWithAggregatesInput = {
    AND?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    OR?: ProductScalarWhereWithAggregatesInput[]
    NOT?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Product"> | string
    organizationId?: StringWithAggregatesFilter<"Product"> | string
    name?: StringWithAggregatesFilter<"Product"> | string
    description?: StringNullableWithAggregatesFilter<"Product"> | string | null
    type?: EnumProductTypeWithAggregatesFilter<"Product"> | $Enums.ProductType
    isActive?: BoolWithAggregatesFilter<"Product"> | boolean
    metadata?: JsonNullableWithAggregatesFilter<"Product">
    images?: StringNullableListFilter<"Product">
    createdAt?: DateTimeWithAggregatesFilter<"Product"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Product"> | Date | string
  }

  export type PriceWhereInput = {
    AND?: PriceWhereInput | PriceWhereInput[]
    OR?: PriceWhereInput[]
    NOT?: PriceWhereInput | PriceWhereInput[]
    id?: StringFilter<"Price"> | string
    productId?: StringFilter<"Price"> | string
    amount?: DecimalFilter<"Price"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"Price"> | string
    type?: EnumPriceTypeFilter<"Price"> | $Enums.PriceType
    interval?: EnumBillingIntervalNullableFilter<"Price"> | $Enums.BillingInterval | null
    intervalCount?: IntFilter<"Price"> | number
    trialPeriodDays?: IntNullableFilter<"Price"> | number | null
    isActive?: BoolFilter<"Price"> | boolean
    metadata?: JsonNullableFilter<"Price">
    createdAt?: DateTimeFilter<"Price"> | Date | string
    updatedAt?: DateTimeFilter<"Price"> | Date | string
    product?: XOR<ProductRelationFilter, ProductWhereInput>
    subscriptionItems?: SubscriptionItemListRelationFilter
    paymentLinks?: PaymentLinkListRelationFilter
  }

  export type PriceOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    type?: SortOrder
    interval?: SortOrderInput | SortOrder
    intervalCount?: SortOrder
    trialPeriodDays?: SortOrderInput | SortOrder
    isActive?: SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    product?: ProductOrderByWithRelationInput
    subscriptionItems?: SubscriptionItemOrderByRelationAggregateInput
    paymentLinks?: PaymentLinkOrderByRelationAggregateInput
  }

  export type PriceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PriceWhereInput | PriceWhereInput[]
    OR?: PriceWhereInput[]
    NOT?: PriceWhereInput | PriceWhereInput[]
    productId?: StringFilter<"Price"> | string
    amount?: DecimalFilter<"Price"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"Price"> | string
    type?: EnumPriceTypeFilter<"Price"> | $Enums.PriceType
    interval?: EnumBillingIntervalNullableFilter<"Price"> | $Enums.BillingInterval | null
    intervalCount?: IntFilter<"Price"> | number
    trialPeriodDays?: IntNullableFilter<"Price"> | number | null
    isActive?: BoolFilter<"Price"> | boolean
    metadata?: JsonNullableFilter<"Price">
    createdAt?: DateTimeFilter<"Price"> | Date | string
    updatedAt?: DateTimeFilter<"Price"> | Date | string
    product?: XOR<ProductRelationFilter, ProductWhereInput>
    subscriptionItems?: SubscriptionItemListRelationFilter
    paymentLinks?: PaymentLinkListRelationFilter
  }, "id">

  export type PriceOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    type?: SortOrder
    interval?: SortOrderInput | SortOrder
    intervalCount?: SortOrder
    trialPeriodDays?: SortOrderInput | SortOrder
    isActive?: SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: PriceCountOrderByAggregateInput
    _avg?: PriceAvgOrderByAggregateInput
    _max?: PriceMaxOrderByAggregateInput
    _min?: PriceMinOrderByAggregateInput
    _sum?: PriceSumOrderByAggregateInput
  }

  export type PriceScalarWhereWithAggregatesInput = {
    AND?: PriceScalarWhereWithAggregatesInput | PriceScalarWhereWithAggregatesInput[]
    OR?: PriceScalarWhereWithAggregatesInput[]
    NOT?: PriceScalarWhereWithAggregatesInput | PriceScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Price"> | string
    productId?: StringWithAggregatesFilter<"Price"> | string
    amount?: DecimalWithAggregatesFilter<"Price"> | Decimal | DecimalJsLike | number | string
    currency?: StringWithAggregatesFilter<"Price"> | string
    type?: EnumPriceTypeWithAggregatesFilter<"Price"> | $Enums.PriceType
    interval?: EnumBillingIntervalNullableWithAggregatesFilter<"Price"> | $Enums.BillingInterval | null
    intervalCount?: IntWithAggregatesFilter<"Price"> | number
    trialPeriodDays?: IntNullableWithAggregatesFilter<"Price"> | number | null
    isActive?: BoolWithAggregatesFilter<"Price"> | boolean
    metadata?: JsonNullableWithAggregatesFilter<"Price">
    createdAt?: DateTimeWithAggregatesFilter<"Price"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Price"> | Date | string
  }

  export type PaymentLinkWhereInput = {
    AND?: PaymentLinkWhereInput | PaymentLinkWhereInput[]
    OR?: PaymentLinkWhereInput[]
    NOT?: PaymentLinkWhereInput | PaymentLinkWhereInput[]
    id?: StringFilter<"PaymentLink"> | string
    organizationId?: StringFilter<"PaymentLink"> | string
    createdById?: StringFilter<"PaymentLink"> | string
    executingAgentId?: StringFilter<"PaymentLink"> | string
    title?: StringFilter<"PaymentLink"> | string
    description?: StringNullableFilter<"PaymentLink"> | string | null
    referenceId?: StringNullableFilter<"PaymentLink"> | string | null
    shortCode?: StringFilter<"PaymentLink"> | string
    qrCode?: StringNullableFilter<"PaymentLink"> | string | null
    priceId?: StringNullableFilter<"PaymentLink"> | string | null
    amount?: DecimalFilter<"PaymentLink"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"PaymentLink"> | string
    targetAmount?: DecimalNullableFilter<"PaymentLink"> | Decimal | DecimalJsLike | number | string | null
    targetCurrency?: StringNullableFilter<"PaymentLink"> | string | null
    smartContractAddress?: StringNullableFilter<"PaymentLink"> | string | null
    smartContractChainId?: IntNullableFilter<"PaymentLink"> | number | null
    tokenAddress?: StringNullableFilter<"PaymentLink"> | string | null
    status?: EnumPaymentLinkStatusFilter<"PaymentLink"> | $Enums.PaymentLinkStatus
    allowMultiplePayments?: BoolFilter<"PaymentLink"> | boolean
    requiresKyc?: BoolFilter<"PaymentLink"> | boolean
    expiresAt?: DateTimeNullableFilter<"PaymentLink"> | Date | string | null
    redirectUrls?: JsonNullableFilter<"PaymentLink">
    metadata?: JsonNullableFilter<"PaymentLink">
    theme?: JsonNullableFilter<"PaymentLink">
    createdAt?: DateTimeFilter<"PaymentLink"> | Date | string
    updatedAt?: DateTimeFilter<"PaymentLink"> | Date | string
    organization?: XOR<OrganizationRelationFilter, OrganizationWhereInput>
    createdBy?: XOR<UserRelationFilter, UserWhereInput>
    executingAgent?: XOR<AgentRelationFilter, AgentWhereInput>
    price?: XOR<PriceNullableRelationFilter, PriceWhereInput> | null
    paymentOrders?: PaymentOrderListRelationFilter
  }

  export type PaymentLinkOrderByWithRelationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    createdById?: SortOrder
    executingAgentId?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    referenceId?: SortOrderInput | SortOrder
    shortCode?: SortOrder
    qrCode?: SortOrderInput | SortOrder
    priceId?: SortOrderInput | SortOrder
    amount?: SortOrder
    currency?: SortOrder
    targetAmount?: SortOrderInput | SortOrder
    targetCurrency?: SortOrderInput | SortOrder
    smartContractAddress?: SortOrderInput | SortOrder
    smartContractChainId?: SortOrderInput | SortOrder
    tokenAddress?: SortOrderInput | SortOrder
    status?: SortOrder
    allowMultiplePayments?: SortOrder
    requiresKyc?: SortOrder
    expiresAt?: SortOrderInput | SortOrder
    redirectUrls?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    theme?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    organization?: OrganizationOrderByWithRelationInput
    createdBy?: UserOrderByWithRelationInput
    executingAgent?: AgentOrderByWithRelationInput
    price?: PriceOrderByWithRelationInput
    paymentOrders?: PaymentOrderOrderByRelationAggregateInput
  }

  export type PaymentLinkWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    shortCode?: string
    AND?: PaymentLinkWhereInput | PaymentLinkWhereInput[]
    OR?: PaymentLinkWhereInput[]
    NOT?: PaymentLinkWhereInput | PaymentLinkWhereInput[]
    organizationId?: StringFilter<"PaymentLink"> | string
    createdById?: StringFilter<"PaymentLink"> | string
    executingAgentId?: StringFilter<"PaymentLink"> | string
    title?: StringFilter<"PaymentLink"> | string
    description?: StringNullableFilter<"PaymentLink"> | string | null
    referenceId?: StringNullableFilter<"PaymentLink"> | string | null
    qrCode?: StringNullableFilter<"PaymentLink"> | string | null
    priceId?: StringNullableFilter<"PaymentLink"> | string | null
    amount?: DecimalFilter<"PaymentLink"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"PaymentLink"> | string
    targetAmount?: DecimalNullableFilter<"PaymentLink"> | Decimal | DecimalJsLike | number | string | null
    targetCurrency?: StringNullableFilter<"PaymentLink"> | string | null
    smartContractAddress?: StringNullableFilter<"PaymentLink"> | string | null
    smartContractChainId?: IntNullableFilter<"PaymentLink"> | number | null
    tokenAddress?: StringNullableFilter<"PaymentLink"> | string | null
    status?: EnumPaymentLinkStatusFilter<"PaymentLink"> | $Enums.PaymentLinkStatus
    allowMultiplePayments?: BoolFilter<"PaymentLink"> | boolean
    requiresKyc?: BoolFilter<"PaymentLink"> | boolean
    expiresAt?: DateTimeNullableFilter<"PaymentLink"> | Date | string | null
    redirectUrls?: JsonNullableFilter<"PaymentLink">
    metadata?: JsonNullableFilter<"PaymentLink">
    theme?: JsonNullableFilter<"PaymentLink">
    createdAt?: DateTimeFilter<"PaymentLink"> | Date | string
    updatedAt?: DateTimeFilter<"PaymentLink"> | Date | string
    organization?: XOR<OrganizationRelationFilter, OrganizationWhereInput>
    createdBy?: XOR<UserRelationFilter, UserWhereInput>
    executingAgent?: XOR<AgentRelationFilter, AgentWhereInput>
    price?: XOR<PriceNullableRelationFilter, PriceWhereInput> | null
    paymentOrders?: PaymentOrderListRelationFilter
  }, "id" | "shortCode">

  export type PaymentLinkOrderByWithAggregationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    createdById?: SortOrder
    executingAgentId?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    referenceId?: SortOrderInput | SortOrder
    shortCode?: SortOrder
    qrCode?: SortOrderInput | SortOrder
    priceId?: SortOrderInput | SortOrder
    amount?: SortOrder
    currency?: SortOrder
    targetAmount?: SortOrderInput | SortOrder
    targetCurrency?: SortOrderInput | SortOrder
    smartContractAddress?: SortOrderInput | SortOrder
    smartContractChainId?: SortOrderInput | SortOrder
    tokenAddress?: SortOrderInput | SortOrder
    status?: SortOrder
    allowMultiplePayments?: SortOrder
    requiresKyc?: SortOrder
    expiresAt?: SortOrderInput | SortOrder
    redirectUrls?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    theme?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: PaymentLinkCountOrderByAggregateInput
    _avg?: PaymentLinkAvgOrderByAggregateInput
    _max?: PaymentLinkMaxOrderByAggregateInput
    _min?: PaymentLinkMinOrderByAggregateInput
    _sum?: PaymentLinkSumOrderByAggregateInput
  }

  export type PaymentLinkScalarWhereWithAggregatesInput = {
    AND?: PaymentLinkScalarWhereWithAggregatesInput | PaymentLinkScalarWhereWithAggregatesInput[]
    OR?: PaymentLinkScalarWhereWithAggregatesInput[]
    NOT?: PaymentLinkScalarWhereWithAggregatesInput | PaymentLinkScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PaymentLink"> | string
    organizationId?: StringWithAggregatesFilter<"PaymentLink"> | string
    createdById?: StringWithAggregatesFilter<"PaymentLink"> | string
    executingAgentId?: StringWithAggregatesFilter<"PaymentLink"> | string
    title?: StringWithAggregatesFilter<"PaymentLink"> | string
    description?: StringNullableWithAggregatesFilter<"PaymentLink"> | string | null
    referenceId?: StringNullableWithAggregatesFilter<"PaymentLink"> | string | null
    shortCode?: StringWithAggregatesFilter<"PaymentLink"> | string
    qrCode?: StringNullableWithAggregatesFilter<"PaymentLink"> | string | null
    priceId?: StringNullableWithAggregatesFilter<"PaymentLink"> | string | null
    amount?: DecimalWithAggregatesFilter<"PaymentLink"> | Decimal | DecimalJsLike | number | string
    currency?: StringWithAggregatesFilter<"PaymentLink"> | string
    targetAmount?: DecimalNullableWithAggregatesFilter<"PaymentLink"> | Decimal | DecimalJsLike | number | string | null
    targetCurrency?: StringNullableWithAggregatesFilter<"PaymentLink"> | string | null
    smartContractAddress?: StringNullableWithAggregatesFilter<"PaymentLink"> | string | null
    smartContractChainId?: IntNullableWithAggregatesFilter<"PaymentLink"> | number | null
    tokenAddress?: StringNullableWithAggregatesFilter<"PaymentLink"> | string | null
    status?: EnumPaymentLinkStatusWithAggregatesFilter<"PaymentLink"> | $Enums.PaymentLinkStatus
    allowMultiplePayments?: BoolWithAggregatesFilter<"PaymentLink"> | boolean
    requiresKyc?: BoolWithAggregatesFilter<"PaymentLink"> | boolean
    expiresAt?: DateTimeNullableWithAggregatesFilter<"PaymentLink"> | Date | string | null
    redirectUrls?: JsonNullableWithAggregatesFilter<"PaymentLink">
    metadata?: JsonNullableWithAggregatesFilter<"PaymentLink">
    theme?: JsonNullableWithAggregatesFilter<"PaymentLink">
    createdAt?: DateTimeWithAggregatesFilter<"PaymentLink"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PaymentLink"> | Date | string
  }

  export type PaymentOrderWhereInput = {
    AND?: PaymentOrderWhereInput | PaymentOrderWhereInput[]
    OR?: PaymentOrderWhereInput[]
    NOT?: PaymentOrderWhereInput | PaymentOrderWhereInput[]
    id?: StringFilter<"PaymentOrder"> | string
    organizationId?: StringFilter<"PaymentOrder"> | string
    paymentLinkId?: StringFilter<"PaymentOrder"> | string
    customerId?: StringNullableFilter<"PaymentOrder"> | string | null
    orderNumber?: StringFilter<"PaymentOrder"> | string
    status?: EnumPaymentOrderStatusFilter<"PaymentOrder"> | $Enums.PaymentOrderStatus
    requestedAmount?: DecimalFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string
    requestedCurrency?: StringFilter<"PaymentOrder"> | string
    settledAmount?: DecimalNullableFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string | null
    settledCurrency?: StringNullableFilter<"PaymentOrder"> | string | null
    exchangeRate?: DecimalNullableFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: DateTimeNullableFilter<"PaymentOrder"> | Date | string | null
    exchangeRateSource?: StringNullableFilter<"PaymentOrder"> | string | null
    platformFee?: DecimalFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string
    providerFee?: DecimalFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string
    networkFee?: DecimalFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string
    totalFee?: DecimalFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string
    customerEmail?: StringNullableFilter<"PaymentOrder"> | string | null
    customerName?: StringNullableFilter<"PaymentOrder"> | string | null
    customerWallet?: StringNullableFilter<"PaymentOrder"> | string | null
    customerIp?: StringNullableFilter<"PaymentOrder"> | string | null
    customerCountry?: StringNullableFilter<"PaymentOrder"> | string | null
    riskScore?: IntNullableFilter<"PaymentOrder"> | number | null
    riskFactors?: JsonNullableFilter<"PaymentOrder">
    kycStatus?: EnumKycStatusFilter<"PaymentOrder"> | $Enums.KycStatus
    kycVerifiedAt?: DateTimeNullableFilter<"PaymentOrder"> | Date | string | null
    selectedRoute?: JsonNullableFilter<"PaymentOrder">
    failureReason?: StringNullableFilter<"PaymentOrder"> | string | null
    failureCode?: StringNullableFilter<"PaymentOrder"> | string | null
    retryCount?: IntFilter<"PaymentOrder"> | number
    createdAt?: DateTimeFilter<"PaymentOrder"> | Date | string
    startedAt?: DateTimeNullableFilter<"PaymentOrder"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"PaymentOrder"> | Date | string | null
    updatedAt?: DateTimeFilter<"PaymentOrder"> | Date | string
    organization?: XOR<OrganizationRelationFilter, OrganizationWhereInput>
    paymentLink?: XOR<PaymentLinkRelationFilter, PaymentLinkWhereInput>
    customer?: XOR<CustomerNullableRelationFilter, CustomerWhereInput> | null
    providerTransactions?: ProviderTransactionListRelationFilter
    blockchainTxs?: BlockchainTransactionListRelationFilter
    events?: PaymentEventListRelationFilter
    agentDecisions?: AgentDecisionListRelationFilter
    manualSteps?: ManualProcessStepListRelationFilter
  }

  export type PaymentOrderOrderByWithRelationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    paymentLinkId?: SortOrder
    customerId?: SortOrderInput | SortOrder
    orderNumber?: SortOrder
    status?: SortOrder
    requestedAmount?: SortOrder
    requestedCurrency?: SortOrder
    settledAmount?: SortOrderInput | SortOrder
    settledCurrency?: SortOrderInput | SortOrder
    exchangeRate?: SortOrderInput | SortOrder
    exchangeRateLockedAt?: SortOrderInput | SortOrder
    exchangeRateSource?: SortOrderInput | SortOrder
    platformFee?: SortOrder
    providerFee?: SortOrder
    networkFee?: SortOrder
    totalFee?: SortOrder
    customerEmail?: SortOrderInput | SortOrder
    customerName?: SortOrderInput | SortOrder
    customerWallet?: SortOrderInput | SortOrder
    customerIp?: SortOrderInput | SortOrder
    customerCountry?: SortOrderInput | SortOrder
    riskScore?: SortOrderInput | SortOrder
    riskFactors?: SortOrderInput | SortOrder
    kycStatus?: SortOrder
    kycVerifiedAt?: SortOrderInput | SortOrder
    selectedRoute?: SortOrderInput | SortOrder
    failureReason?: SortOrderInput | SortOrder
    failureCode?: SortOrderInput | SortOrder
    retryCount?: SortOrder
    createdAt?: SortOrder
    startedAt?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    organization?: OrganizationOrderByWithRelationInput
    paymentLink?: PaymentLinkOrderByWithRelationInput
    customer?: CustomerOrderByWithRelationInput
    providerTransactions?: ProviderTransactionOrderByRelationAggregateInput
    blockchainTxs?: BlockchainTransactionOrderByRelationAggregateInput
    events?: PaymentEventOrderByRelationAggregateInput
    agentDecisions?: AgentDecisionOrderByRelationAggregateInput
    manualSteps?: ManualProcessStepOrderByRelationAggregateInput
  }

  export type PaymentOrderWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    orderNumber?: string
    AND?: PaymentOrderWhereInput | PaymentOrderWhereInput[]
    OR?: PaymentOrderWhereInput[]
    NOT?: PaymentOrderWhereInput | PaymentOrderWhereInput[]
    organizationId?: StringFilter<"PaymentOrder"> | string
    paymentLinkId?: StringFilter<"PaymentOrder"> | string
    customerId?: StringNullableFilter<"PaymentOrder"> | string | null
    status?: EnumPaymentOrderStatusFilter<"PaymentOrder"> | $Enums.PaymentOrderStatus
    requestedAmount?: DecimalFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string
    requestedCurrency?: StringFilter<"PaymentOrder"> | string
    settledAmount?: DecimalNullableFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string | null
    settledCurrency?: StringNullableFilter<"PaymentOrder"> | string | null
    exchangeRate?: DecimalNullableFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: DateTimeNullableFilter<"PaymentOrder"> | Date | string | null
    exchangeRateSource?: StringNullableFilter<"PaymentOrder"> | string | null
    platformFee?: DecimalFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string
    providerFee?: DecimalFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string
    networkFee?: DecimalFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string
    totalFee?: DecimalFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string
    customerEmail?: StringNullableFilter<"PaymentOrder"> | string | null
    customerName?: StringNullableFilter<"PaymentOrder"> | string | null
    customerWallet?: StringNullableFilter<"PaymentOrder"> | string | null
    customerIp?: StringNullableFilter<"PaymentOrder"> | string | null
    customerCountry?: StringNullableFilter<"PaymentOrder"> | string | null
    riskScore?: IntNullableFilter<"PaymentOrder"> | number | null
    riskFactors?: JsonNullableFilter<"PaymentOrder">
    kycStatus?: EnumKycStatusFilter<"PaymentOrder"> | $Enums.KycStatus
    kycVerifiedAt?: DateTimeNullableFilter<"PaymentOrder"> | Date | string | null
    selectedRoute?: JsonNullableFilter<"PaymentOrder">
    failureReason?: StringNullableFilter<"PaymentOrder"> | string | null
    failureCode?: StringNullableFilter<"PaymentOrder"> | string | null
    retryCount?: IntFilter<"PaymentOrder"> | number
    createdAt?: DateTimeFilter<"PaymentOrder"> | Date | string
    startedAt?: DateTimeNullableFilter<"PaymentOrder"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"PaymentOrder"> | Date | string | null
    updatedAt?: DateTimeFilter<"PaymentOrder"> | Date | string
    organization?: XOR<OrganizationRelationFilter, OrganizationWhereInput>
    paymentLink?: XOR<PaymentLinkRelationFilter, PaymentLinkWhereInput>
    customer?: XOR<CustomerNullableRelationFilter, CustomerWhereInput> | null
    providerTransactions?: ProviderTransactionListRelationFilter
    blockchainTxs?: BlockchainTransactionListRelationFilter
    events?: PaymentEventListRelationFilter
    agentDecisions?: AgentDecisionListRelationFilter
    manualSteps?: ManualProcessStepListRelationFilter
  }, "id" | "orderNumber">

  export type PaymentOrderOrderByWithAggregationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    paymentLinkId?: SortOrder
    customerId?: SortOrderInput | SortOrder
    orderNumber?: SortOrder
    status?: SortOrder
    requestedAmount?: SortOrder
    requestedCurrency?: SortOrder
    settledAmount?: SortOrderInput | SortOrder
    settledCurrency?: SortOrderInput | SortOrder
    exchangeRate?: SortOrderInput | SortOrder
    exchangeRateLockedAt?: SortOrderInput | SortOrder
    exchangeRateSource?: SortOrderInput | SortOrder
    platformFee?: SortOrder
    providerFee?: SortOrder
    networkFee?: SortOrder
    totalFee?: SortOrder
    customerEmail?: SortOrderInput | SortOrder
    customerName?: SortOrderInput | SortOrder
    customerWallet?: SortOrderInput | SortOrder
    customerIp?: SortOrderInput | SortOrder
    customerCountry?: SortOrderInput | SortOrder
    riskScore?: SortOrderInput | SortOrder
    riskFactors?: SortOrderInput | SortOrder
    kycStatus?: SortOrder
    kycVerifiedAt?: SortOrderInput | SortOrder
    selectedRoute?: SortOrderInput | SortOrder
    failureReason?: SortOrderInput | SortOrder
    failureCode?: SortOrderInput | SortOrder
    retryCount?: SortOrder
    createdAt?: SortOrder
    startedAt?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    _count?: PaymentOrderCountOrderByAggregateInput
    _avg?: PaymentOrderAvgOrderByAggregateInput
    _max?: PaymentOrderMaxOrderByAggregateInput
    _min?: PaymentOrderMinOrderByAggregateInput
    _sum?: PaymentOrderSumOrderByAggregateInput
  }

  export type PaymentOrderScalarWhereWithAggregatesInput = {
    AND?: PaymentOrderScalarWhereWithAggregatesInput | PaymentOrderScalarWhereWithAggregatesInput[]
    OR?: PaymentOrderScalarWhereWithAggregatesInput[]
    NOT?: PaymentOrderScalarWhereWithAggregatesInput | PaymentOrderScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PaymentOrder"> | string
    organizationId?: StringWithAggregatesFilter<"PaymentOrder"> | string
    paymentLinkId?: StringWithAggregatesFilter<"PaymentOrder"> | string
    customerId?: StringNullableWithAggregatesFilter<"PaymentOrder"> | string | null
    orderNumber?: StringWithAggregatesFilter<"PaymentOrder"> | string
    status?: EnumPaymentOrderStatusWithAggregatesFilter<"PaymentOrder"> | $Enums.PaymentOrderStatus
    requestedAmount?: DecimalWithAggregatesFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string
    requestedCurrency?: StringWithAggregatesFilter<"PaymentOrder"> | string
    settledAmount?: DecimalNullableWithAggregatesFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string | null
    settledCurrency?: StringNullableWithAggregatesFilter<"PaymentOrder"> | string | null
    exchangeRate?: DecimalNullableWithAggregatesFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: DateTimeNullableWithAggregatesFilter<"PaymentOrder"> | Date | string | null
    exchangeRateSource?: StringNullableWithAggregatesFilter<"PaymentOrder"> | string | null
    platformFee?: DecimalWithAggregatesFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string
    providerFee?: DecimalWithAggregatesFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string
    networkFee?: DecimalWithAggregatesFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string
    totalFee?: DecimalWithAggregatesFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string
    customerEmail?: StringNullableWithAggregatesFilter<"PaymentOrder"> | string | null
    customerName?: StringNullableWithAggregatesFilter<"PaymentOrder"> | string | null
    customerWallet?: StringNullableWithAggregatesFilter<"PaymentOrder"> | string | null
    customerIp?: StringNullableWithAggregatesFilter<"PaymentOrder"> | string | null
    customerCountry?: StringNullableWithAggregatesFilter<"PaymentOrder"> | string | null
    riskScore?: IntNullableWithAggregatesFilter<"PaymentOrder"> | number | null
    riskFactors?: JsonNullableWithAggregatesFilter<"PaymentOrder">
    kycStatus?: EnumKycStatusWithAggregatesFilter<"PaymentOrder"> | $Enums.KycStatus
    kycVerifiedAt?: DateTimeNullableWithAggregatesFilter<"PaymentOrder"> | Date | string | null
    selectedRoute?: JsonNullableWithAggregatesFilter<"PaymentOrder">
    failureReason?: StringNullableWithAggregatesFilter<"PaymentOrder"> | string | null
    failureCode?: StringNullableWithAggregatesFilter<"PaymentOrder"> | string | null
    retryCount?: IntWithAggregatesFilter<"PaymentOrder"> | number
    createdAt?: DateTimeWithAggregatesFilter<"PaymentOrder"> | Date | string
    startedAt?: DateTimeNullableWithAggregatesFilter<"PaymentOrder"> | Date | string | null
    completedAt?: DateTimeNullableWithAggregatesFilter<"PaymentOrder"> | Date | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"PaymentOrder"> | Date | string
  }

  export type ProviderWhereInput = {
    AND?: ProviderWhereInput | ProviderWhereInput[]
    OR?: ProviderWhereInput[]
    NOT?: ProviderWhereInput | ProviderWhereInput[]
    id?: StringFilter<"Provider"> | string
    code?: StringFilter<"Provider"> | string
    name?: StringFilter<"Provider"> | string
    type?: EnumProviderTypeFilter<"Provider"> | $Enums.ProviderType
    supportedCountries?: StringNullableListFilter<"Provider">
    supportedCurrencies?: StringNullableListFilter<"Provider">
    paymentMethods?: StringNullableListFilter<"Provider">
    features?: JsonFilter<"Provider">
    isActive?: BoolFilter<"Provider"> | boolean
    healthStatus?: EnumProviderHealthFilter<"Provider"> | $Enums.ProviderHealth
    lastHealthCheck?: DateTimeFilter<"Provider"> | Date | string
    avgResponseTime?: IntNullableFilter<"Provider"> | number | null
    successRate?: DecimalNullableFilter<"Provider"> | Decimal | DecimalJsLike | number | string | null
    configs?: ProviderConfigListRelationFilter
    routes?: ProviderRouteListRelationFilter
    transactions?: ProviderTransactionListRelationFilter
  }

  export type ProviderOrderByWithRelationInput = {
    id?: SortOrder
    code?: SortOrder
    name?: SortOrder
    type?: SortOrder
    supportedCountries?: SortOrder
    supportedCurrencies?: SortOrder
    paymentMethods?: SortOrder
    features?: SortOrder
    isActive?: SortOrder
    healthStatus?: SortOrder
    lastHealthCheck?: SortOrder
    avgResponseTime?: SortOrderInput | SortOrder
    successRate?: SortOrderInput | SortOrder
    configs?: ProviderConfigOrderByRelationAggregateInput
    routes?: ProviderRouteOrderByRelationAggregateInput
    transactions?: ProviderTransactionOrderByRelationAggregateInput
  }

  export type ProviderWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    code?: string
    AND?: ProviderWhereInput | ProviderWhereInput[]
    OR?: ProviderWhereInput[]
    NOT?: ProviderWhereInput | ProviderWhereInput[]
    name?: StringFilter<"Provider"> | string
    type?: EnumProviderTypeFilter<"Provider"> | $Enums.ProviderType
    supportedCountries?: StringNullableListFilter<"Provider">
    supportedCurrencies?: StringNullableListFilter<"Provider">
    paymentMethods?: StringNullableListFilter<"Provider">
    features?: JsonFilter<"Provider">
    isActive?: BoolFilter<"Provider"> | boolean
    healthStatus?: EnumProviderHealthFilter<"Provider"> | $Enums.ProviderHealth
    lastHealthCheck?: DateTimeFilter<"Provider"> | Date | string
    avgResponseTime?: IntNullableFilter<"Provider"> | number | null
    successRate?: DecimalNullableFilter<"Provider"> | Decimal | DecimalJsLike | number | string | null
    configs?: ProviderConfigListRelationFilter
    routes?: ProviderRouteListRelationFilter
    transactions?: ProviderTransactionListRelationFilter
  }, "id" | "code">

  export type ProviderOrderByWithAggregationInput = {
    id?: SortOrder
    code?: SortOrder
    name?: SortOrder
    type?: SortOrder
    supportedCountries?: SortOrder
    supportedCurrencies?: SortOrder
    paymentMethods?: SortOrder
    features?: SortOrder
    isActive?: SortOrder
    healthStatus?: SortOrder
    lastHealthCheck?: SortOrder
    avgResponseTime?: SortOrderInput | SortOrder
    successRate?: SortOrderInput | SortOrder
    _count?: ProviderCountOrderByAggregateInput
    _avg?: ProviderAvgOrderByAggregateInput
    _max?: ProviderMaxOrderByAggregateInput
    _min?: ProviderMinOrderByAggregateInput
    _sum?: ProviderSumOrderByAggregateInput
  }

  export type ProviderScalarWhereWithAggregatesInput = {
    AND?: ProviderScalarWhereWithAggregatesInput | ProviderScalarWhereWithAggregatesInput[]
    OR?: ProviderScalarWhereWithAggregatesInput[]
    NOT?: ProviderScalarWhereWithAggregatesInput | ProviderScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Provider"> | string
    code?: StringWithAggregatesFilter<"Provider"> | string
    name?: StringWithAggregatesFilter<"Provider"> | string
    type?: EnumProviderTypeWithAggregatesFilter<"Provider"> | $Enums.ProviderType
    supportedCountries?: StringNullableListFilter<"Provider">
    supportedCurrencies?: StringNullableListFilter<"Provider">
    paymentMethods?: StringNullableListFilter<"Provider">
    features?: JsonWithAggregatesFilter<"Provider">
    isActive?: BoolWithAggregatesFilter<"Provider"> | boolean
    healthStatus?: EnumProviderHealthWithAggregatesFilter<"Provider"> | $Enums.ProviderHealth
    lastHealthCheck?: DateTimeWithAggregatesFilter<"Provider"> | Date | string
    avgResponseTime?: IntNullableWithAggregatesFilter<"Provider"> | number | null
    successRate?: DecimalNullableWithAggregatesFilter<"Provider"> | Decimal | DecimalJsLike | number | string | null
  }

  export type ProviderConfigWhereInput = {
    AND?: ProviderConfigWhereInput | ProviderConfigWhereInput[]
    OR?: ProviderConfigWhereInput[]
    NOT?: ProviderConfigWhereInput | ProviderConfigWhereInput[]
    id?: StringFilter<"ProviderConfig"> | string
    organizationId?: StringFilter<"ProviderConfig"> | string
    providerId?: StringFilter<"ProviderConfig"> | string
    environment?: EnumEnvironmentFilter<"ProviderConfig"> | $Enums.Environment
    credentials?: JsonFilter<"ProviderConfig">
    webhookSecret?: StringNullableFilter<"ProviderConfig"> | string | null
    settings?: JsonFilter<"ProviderConfig">
    isActive?: BoolFilter<"ProviderConfig"> | boolean
    createdAt?: DateTimeFilter<"ProviderConfig"> | Date | string
    updatedAt?: DateTimeFilter<"ProviderConfig"> | Date | string
    organization?: XOR<OrganizationRelationFilter, OrganizationWhereInput>
    provider?: XOR<ProviderRelationFilter, ProviderWhereInput>
  }

  export type ProviderConfigOrderByWithRelationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    providerId?: SortOrder
    environment?: SortOrder
    credentials?: SortOrder
    webhookSecret?: SortOrderInput | SortOrder
    settings?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    organization?: OrganizationOrderByWithRelationInput
    provider?: ProviderOrderByWithRelationInput
  }

  export type ProviderConfigWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    organizationId_providerId_environment?: ProviderConfigOrganizationIdProviderIdEnvironmentCompoundUniqueInput
    AND?: ProviderConfigWhereInput | ProviderConfigWhereInput[]
    OR?: ProviderConfigWhereInput[]
    NOT?: ProviderConfigWhereInput | ProviderConfigWhereInput[]
    organizationId?: StringFilter<"ProviderConfig"> | string
    providerId?: StringFilter<"ProviderConfig"> | string
    environment?: EnumEnvironmentFilter<"ProviderConfig"> | $Enums.Environment
    credentials?: JsonFilter<"ProviderConfig">
    webhookSecret?: StringNullableFilter<"ProviderConfig"> | string | null
    settings?: JsonFilter<"ProviderConfig">
    isActive?: BoolFilter<"ProviderConfig"> | boolean
    createdAt?: DateTimeFilter<"ProviderConfig"> | Date | string
    updatedAt?: DateTimeFilter<"ProviderConfig"> | Date | string
    organization?: XOR<OrganizationRelationFilter, OrganizationWhereInput>
    provider?: XOR<ProviderRelationFilter, ProviderWhereInput>
  }, "id" | "organizationId_providerId_environment">

  export type ProviderConfigOrderByWithAggregationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    providerId?: SortOrder
    environment?: SortOrder
    credentials?: SortOrder
    webhookSecret?: SortOrderInput | SortOrder
    settings?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ProviderConfigCountOrderByAggregateInput
    _max?: ProviderConfigMaxOrderByAggregateInput
    _min?: ProviderConfigMinOrderByAggregateInput
  }

  export type ProviderConfigScalarWhereWithAggregatesInput = {
    AND?: ProviderConfigScalarWhereWithAggregatesInput | ProviderConfigScalarWhereWithAggregatesInput[]
    OR?: ProviderConfigScalarWhereWithAggregatesInput[]
    NOT?: ProviderConfigScalarWhereWithAggregatesInput | ProviderConfigScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProviderConfig"> | string
    organizationId?: StringWithAggregatesFilter<"ProviderConfig"> | string
    providerId?: StringWithAggregatesFilter<"ProviderConfig"> | string
    environment?: EnumEnvironmentWithAggregatesFilter<"ProviderConfig"> | $Enums.Environment
    credentials?: JsonWithAggregatesFilter<"ProviderConfig">
    webhookSecret?: StringNullableWithAggregatesFilter<"ProviderConfig"> | string | null
    settings?: JsonWithAggregatesFilter<"ProviderConfig">
    isActive?: BoolWithAggregatesFilter<"ProviderConfig"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"ProviderConfig"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ProviderConfig"> | Date | string
  }

  export type ProviderRouteWhereInput = {
    AND?: ProviderRouteWhereInput | ProviderRouteWhereInput[]
    OR?: ProviderRouteWhereInput[]
    NOT?: ProviderRouteWhereInput | ProviderRouteWhereInput[]
    id?: StringFilter<"ProviderRoute"> | string
    providerId?: StringFilter<"ProviderRoute"> | string
    name?: StringFilter<"ProviderRoute"> | string
    fromCountry?: StringFilter<"ProviderRoute"> | string
    toCountry?: StringFilter<"ProviderRoute"> | string
    fromCurrency?: StringFilter<"ProviderRoute"> | string
    toCurrency?: StringFilter<"ProviderRoute"> | string
    paymentMethod?: StringFilter<"ProviderRoute"> | string
    fixedFee?: DecimalFilter<"ProviderRoute"> | Decimal | DecimalJsLike | number | string
    percentageFee?: DecimalFilter<"ProviderRoute"> | Decimal | DecimalJsLike | number | string
    minAmount?: DecimalFilter<"ProviderRoute"> | Decimal | DecimalJsLike | number | string
    maxAmount?: DecimalFilter<"ProviderRoute"> | Decimal | DecimalJsLike | number | string
    estimatedTime?: IntFilter<"ProviderRoute"> | number
    cutoffTime?: StringNullableFilter<"ProviderRoute"> | string | null
    workingDays?: StringNullableListFilter<"ProviderRoute">
    isActive?: BoolFilter<"ProviderRoute"> | boolean
    priority?: IntFilter<"ProviderRoute"> | number
    provider?: XOR<ProviderRelationFilter, ProviderWhereInput>
  }

  export type ProviderRouteOrderByWithRelationInput = {
    id?: SortOrder
    providerId?: SortOrder
    name?: SortOrder
    fromCountry?: SortOrder
    toCountry?: SortOrder
    fromCurrency?: SortOrder
    toCurrency?: SortOrder
    paymentMethod?: SortOrder
    fixedFee?: SortOrder
    percentageFee?: SortOrder
    minAmount?: SortOrder
    maxAmount?: SortOrder
    estimatedTime?: SortOrder
    cutoffTime?: SortOrderInput | SortOrder
    workingDays?: SortOrder
    isActive?: SortOrder
    priority?: SortOrder
    provider?: ProviderOrderByWithRelationInput
  }

  export type ProviderRouteWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProviderRouteWhereInput | ProviderRouteWhereInput[]
    OR?: ProviderRouteWhereInput[]
    NOT?: ProviderRouteWhereInput | ProviderRouteWhereInput[]
    providerId?: StringFilter<"ProviderRoute"> | string
    name?: StringFilter<"ProviderRoute"> | string
    fromCountry?: StringFilter<"ProviderRoute"> | string
    toCountry?: StringFilter<"ProviderRoute"> | string
    fromCurrency?: StringFilter<"ProviderRoute"> | string
    toCurrency?: StringFilter<"ProviderRoute"> | string
    paymentMethod?: StringFilter<"ProviderRoute"> | string
    fixedFee?: DecimalFilter<"ProviderRoute"> | Decimal | DecimalJsLike | number | string
    percentageFee?: DecimalFilter<"ProviderRoute"> | Decimal | DecimalJsLike | number | string
    minAmount?: DecimalFilter<"ProviderRoute"> | Decimal | DecimalJsLike | number | string
    maxAmount?: DecimalFilter<"ProviderRoute"> | Decimal | DecimalJsLike | number | string
    estimatedTime?: IntFilter<"ProviderRoute"> | number
    cutoffTime?: StringNullableFilter<"ProviderRoute"> | string | null
    workingDays?: StringNullableListFilter<"ProviderRoute">
    isActive?: BoolFilter<"ProviderRoute"> | boolean
    priority?: IntFilter<"ProviderRoute"> | number
    provider?: XOR<ProviderRelationFilter, ProviderWhereInput>
  }, "id">

  export type ProviderRouteOrderByWithAggregationInput = {
    id?: SortOrder
    providerId?: SortOrder
    name?: SortOrder
    fromCountry?: SortOrder
    toCountry?: SortOrder
    fromCurrency?: SortOrder
    toCurrency?: SortOrder
    paymentMethod?: SortOrder
    fixedFee?: SortOrder
    percentageFee?: SortOrder
    minAmount?: SortOrder
    maxAmount?: SortOrder
    estimatedTime?: SortOrder
    cutoffTime?: SortOrderInput | SortOrder
    workingDays?: SortOrder
    isActive?: SortOrder
    priority?: SortOrder
    _count?: ProviderRouteCountOrderByAggregateInput
    _avg?: ProviderRouteAvgOrderByAggregateInput
    _max?: ProviderRouteMaxOrderByAggregateInput
    _min?: ProviderRouteMinOrderByAggregateInput
    _sum?: ProviderRouteSumOrderByAggregateInput
  }

  export type ProviderRouteScalarWhereWithAggregatesInput = {
    AND?: ProviderRouteScalarWhereWithAggregatesInput | ProviderRouteScalarWhereWithAggregatesInput[]
    OR?: ProviderRouteScalarWhereWithAggregatesInput[]
    NOT?: ProviderRouteScalarWhereWithAggregatesInput | ProviderRouteScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProviderRoute"> | string
    providerId?: StringWithAggregatesFilter<"ProviderRoute"> | string
    name?: StringWithAggregatesFilter<"ProviderRoute"> | string
    fromCountry?: StringWithAggregatesFilter<"ProviderRoute"> | string
    toCountry?: StringWithAggregatesFilter<"ProviderRoute"> | string
    fromCurrency?: StringWithAggregatesFilter<"ProviderRoute"> | string
    toCurrency?: StringWithAggregatesFilter<"ProviderRoute"> | string
    paymentMethod?: StringWithAggregatesFilter<"ProviderRoute"> | string
    fixedFee?: DecimalWithAggregatesFilter<"ProviderRoute"> | Decimal | DecimalJsLike | number | string
    percentageFee?: DecimalWithAggregatesFilter<"ProviderRoute"> | Decimal | DecimalJsLike | number | string
    minAmount?: DecimalWithAggregatesFilter<"ProviderRoute"> | Decimal | DecimalJsLike | number | string
    maxAmount?: DecimalWithAggregatesFilter<"ProviderRoute"> | Decimal | DecimalJsLike | number | string
    estimatedTime?: IntWithAggregatesFilter<"ProviderRoute"> | number
    cutoffTime?: StringNullableWithAggregatesFilter<"ProviderRoute"> | string | null
    workingDays?: StringNullableListFilter<"ProviderRoute">
    isActive?: BoolWithAggregatesFilter<"ProviderRoute"> | boolean
    priority?: IntWithAggregatesFilter<"ProviderRoute"> | number
  }

  export type ProviderTransactionWhereInput = {
    AND?: ProviderTransactionWhereInput | ProviderTransactionWhereInput[]
    OR?: ProviderTransactionWhereInput[]
    NOT?: ProviderTransactionWhereInput | ProviderTransactionWhereInput[]
    id?: StringFilter<"ProviderTransaction"> | string
    paymentOrderId?: StringFilter<"ProviderTransaction"> | string
    providerId?: StringFilter<"ProviderTransaction"> | string
    type?: EnumProviderTxTypeFilter<"ProviderTransaction"> | $Enums.ProviderTxType
    externalId?: StringNullableFilter<"ProviderTransaction"> | string | null
    status?: StringFilter<"ProviderTransaction"> | string
    request?: JsonFilter<"ProviderTransaction">
    response?: JsonNullableFilter<"ProviderTransaction">
    errorCode?: StringNullableFilter<"ProviderTransaction"> | string | null
    errorMessage?: StringNullableFilter<"ProviderTransaction"> | string | null
    isRetryable?: BoolFilter<"ProviderTransaction"> | boolean
    createdAt?: DateTimeFilter<"ProviderTransaction"> | Date | string
    completedAt?: DateTimeNullableFilter<"ProviderTransaction"> | Date | string | null
    paymentOrder?: XOR<PaymentOrderRelationFilter, PaymentOrderWhereInput>
    provider?: XOR<ProviderRelationFilter, ProviderWhereInput>
  }

  export type ProviderTransactionOrderByWithRelationInput = {
    id?: SortOrder
    paymentOrderId?: SortOrder
    providerId?: SortOrder
    type?: SortOrder
    externalId?: SortOrderInput | SortOrder
    status?: SortOrder
    request?: SortOrder
    response?: SortOrderInput | SortOrder
    errorCode?: SortOrderInput | SortOrder
    errorMessage?: SortOrderInput | SortOrder
    isRetryable?: SortOrder
    createdAt?: SortOrder
    completedAt?: SortOrderInput | SortOrder
    paymentOrder?: PaymentOrderOrderByWithRelationInput
    provider?: ProviderOrderByWithRelationInput
  }

  export type ProviderTransactionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProviderTransactionWhereInput | ProviderTransactionWhereInput[]
    OR?: ProviderTransactionWhereInput[]
    NOT?: ProviderTransactionWhereInput | ProviderTransactionWhereInput[]
    paymentOrderId?: StringFilter<"ProviderTransaction"> | string
    providerId?: StringFilter<"ProviderTransaction"> | string
    type?: EnumProviderTxTypeFilter<"ProviderTransaction"> | $Enums.ProviderTxType
    externalId?: StringNullableFilter<"ProviderTransaction"> | string | null
    status?: StringFilter<"ProviderTransaction"> | string
    request?: JsonFilter<"ProviderTransaction">
    response?: JsonNullableFilter<"ProviderTransaction">
    errorCode?: StringNullableFilter<"ProviderTransaction"> | string | null
    errorMessage?: StringNullableFilter<"ProviderTransaction"> | string | null
    isRetryable?: BoolFilter<"ProviderTransaction"> | boolean
    createdAt?: DateTimeFilter<"ProviderTransaction"> | Date | string
    completedAt?: DateTimeNullableFilter<"ProviderTransaction"> | Date | string | null
    paymentOrder?: XOR<PaymentOrderRelationFilter, PaymentOrderWhereInput>
    provider?: XOR<ProviderRelationFilter, ProviderWhereInput>
  }, "id">

  export type ProviderTransactionOrderByWithAggregationInput = {
    id?: SortOrder
    paymentOrderId?: SortOrder
    providerId?: SortOrder
    type?: SortOrder
    externalId?: SortOrderInput | SortOrder
    status?: SortOrder
    request?: SortOrder
    response?: SortOrderInput | SortOrder
    errorCode?: SortOrderInput | SortOrder
    errorMessage?: SortOrderInput | SortOrder
    isRetryable?: SortOrder
    createdAt?: SortOrder
    completedAt?: SortOrderInput | SortOrder
    _count?: ProviderTransactionCountOrderByAggregateInput
    _max?: ProviderTransactionMaxOrderByAggregateInput
    _min?: ProviderTransactionMinOrderByAggregateInput
  }

  export type ProviderTransactionScalarWhereWithAggregatesInput = {
    AND?: ProviderTransactionScalarWhereWithAggregatesInput | ProviderTransactionScalarWhereWithAggregatesInput[]
    OR?: ProviderTransactionScalarWhereWithAggregatesInput[]
    NOT?: ProviderTransactionScalarWhereWithAggregatesInput | ProviderTransactionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProviderTransaction"> | string
    paymentOrderId?: StringWithAggregatesFilter<"ProviderTransaction"> | string
    providerId?: StringWithAggregatesFilter<"ProviderTransaction"> | string
    type?: EnumProviderTxTypeWithAggregatesFilter<"ProviderTransaction"> | $Enums.ProviderTxType
    externalId?: StringNullableWithAggregatesFilter<"ProviderTransaction"> | string | null
    status?: StringWithAggregatesFilter<"ProviderTransaction"> | string
    request?: JsonWithAggregatesFilter<"ProviderTransaction">
    response?: JsonNullableWithAggregatesFilter<"ProviderTransaction">
    errorCode?: StringNullableWithAggregatesFilter<"ProviderTransaction"> | string | null
    errorMessage?: StringNullableWithAggregatesFilter<"ProviderTransaction"> | string | null
    isRetryable?: BoolWithAggregatesFilter<"ProviderTransaction"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"ProviderTransaction"> | Date | string
    completedAt?: DateTimeNullableWithAggregatesFilter<"ProviderTransaction"> | Date | string | null
  }

  export type AgentWhereInput = {
    AND?: AgentWhereInput | AgentWhereInput[]
    OR?: AgentWhereInput[]
    NOT?: AgentWhereInput | AgentWhereInput[]
    id?: StringFilter<"Agent"> | string
    organizationId?: StringFilter<"Agent"> | string
    name?: StringFilter<"Agent"> | string
    type?: EnumAgentTypeFilter<"Agent"> | $Enums.AgentType
    version?: StringFilter<"Agent"> | string
    model?: StringFilter<"Agent"> | string
    agentWalletId?: StringNullableFilter<"Agent"> | string | null
    graphDefinition?: JsonFilter<"Agent">
    tools?: StringNullableListFilter<"Agent">
    systemPrompt?: StringNullableFilter<"Agent"> | string | null
    supportedProviders?: StringNullableListFilter<"Agent">
    supportedChains?: IntNullableListFilter<"Agent">
    capabilities?: JsonNullableFilter<"Agent">
    isActive?: BoolFilter<"Agent"> | boolean
    totalExecutions?: IntFilter<"Agent"> | number
    avgExecutionTime?: IntNullableFilter<"Agent"> | number | null
    successRate?: DecimalNullableFilter<"Agent"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFilter<"Agent"> | Date | string
    updatedAt?: DateTimeFilter<"Agent"> | Date | string
    organization?: XOR<OrganizationRelationFilter, OrganizationWhereInput>
    agentWallet?: XOR<WalletNullableRelationFilter, WalletWhereInput> | null
    paymentLinks?: PaymentLinkListRelationFilter
    decisions?: AgentDecisionListRelationFilter
    checkpoints?: AgentCheckpointListRelationFilter
  }

  export type AgentOrderByWithRelationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    name?: SortOrder
    type?: SortOrder
    version?: SortOrder
    model?: SortOrder
    agentWalletId?: SortOrderInput | SortOrder
    graphDefinition?: SortOrder
    tools?: SortOrder
    systemPrompt?: SortOrderInput | SortOrder
    supportedProviders?: SortOrder
    supportedChains?: SortOrder
    capabilities?: SortOrderInput | SortOrder
    isActive?: SortOrder
    totalExecutions?: SortOrder
    avgExecutionTime?: SortOrderInput | SortOrder
    successRate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    organization?: OrganizationOrderByWithRelationInput
    agentWallet?: WalletOrderByWithRelationInput
    paymentLinks?: PaymentLinkOrderByRelationAggregateInput
    decisions?: AgentDecisionOrderByRelationAggregateInput
    checkpoints?: AgentCheckpointOrderByRelationAggregateInput
  }

  export type AgentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    agentWalletId?: string
    AND?: AgentWhereInput | AgentWhereInput[]
    OR?: AgentWhereInput[]
    NOT?: AgentWhereInput | AgentWhereInput[]
    organizationId?: StringFilter<"Agent"> | string
    name?: StringFilter<"Agent"> | string
    type?: EnumAgentTypeFilter<"Agent"> | $Enums.AgentType
    version?: StringFilter<"Agent"> | string
    model?: StringFilter<"Agent"> | string
    graphDefinition?: JsonFilter<"Agent">
    tools?: StringNullableListFilter<"Agent">
    systemPrompt?: StringNullableFilter<"Agent"> | string | null
    supportedProviders?: StringNullableListFilter<"Agent">
    supportedChains?: IntNullableListFilter<"Agent">
    capabilities?: JsonNullableFilter<"Agent">
    isActive?: BoolFilter<"Agent"> | boolean
    totalExecutions?: IntFilter<"Agent"> | number
    avgExecutionTime?: IntNullableFilter<"Agent"> | number | null
    successRate?: DecimalNullableFilter<"Agent"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFilter<"Agent"> | Date | string
    updatedAt?: DateTimeFilter<"Agent"> | Date | string
    organization?: XOR<OrganizationRelationFilter, OrganizationWhereInput>
    agentWallet?: XOR<WalletNullableRelationFilter, WalletWhereInput> | null
    paymentLinks?: PaymentLinkListRelationFilter
    decisions?: AgentDecisionListRelationFilter
    checkpoints?: AgentCheckpointListRelationFilter
  }, "id" | "agentWalletId">

  export type AgentOrderByWithAggregationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    name?: SortOrder
    type?: SortOrder
    version?: SortOrder
    model?: SortOrder
    agentWalletId?: SortOrderInput | SortOrder
    graphDefinition?: SortOrder
    tools?: SortOrder
    systemPrompt?: SortOrderInput | SortOrder
    supportedProviders?: SortOrder
    supportedChains?: SortOrder
    capabilities?: SortOrderInput | SortOrder
    isActive?: SortOrder
    totalExecutions?: SortOrder
    avgExecutionTime?: SortOrderInput | SortOrder
    successRate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AgentCountOrderByAggregateInput
    _avg?: AgentAvgOrderByAggregateInput
    _max?: AgentMaxOrderByAggregateInput
    _min?: AgentMinOrderByAggregateInput
    _sum?: AgentSumOrderByAggregateInput
  }

  export type AgentScalarWhereWithAggregatesInput = {
    AND?: AgentScalarWhereWithAggregatesInput | AgentScalarWhereWithAggregatesInput[]
    OR?: AgentScalarWhereWithAggregatesInput[]
    NOT?: AgentScalarWhereWithAggregatesInput | AgentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Agent"> | string
    organizationId?: StringWithAggregatesFilter<"Agent"> | string
    name?: StringWithAggregatesFilter<"Agent"> | string
    type?: EnumAgentTypeWithAggregatesFilter<"Agent"> | $Enums.AgentType
    version?: StringWithAggregatesFilter<"Agent"> | string
    model?: StringWithAggregatesFilter<"Agent"> | string
    agentWalletId?: StringNullableWithAggregatesFilter<"Agent"> | string | null
    graphDefinition?: JsonWithAggregatesFilter<"Agent">
    tools?: StringNullableListFilter<"Agent">
    systemPrompt?: StringNullableWithAggregatesFilter<"Agent"> | string | null
    supportedProviders?: StringNullableListFilter<"Agent">
    supportedChains?: IntNullableListFilter<"Agent">
    capabilities?: JsonNullableWithAggregatesFilter<"Agent">
    isActive?: BoolWithAggregatesFilter<"Agent"> | boolean
    totalExecutions?: IntWithAggregatesFilter<"Agent"> | number
    avgExecutionTime?: IntNullableWithAggregatesFilter<"Agent"> | number | null
    successRate?: DecimalNullableWithAggregatesFilter<"Agent"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Agent"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Agent"> | Date | string
  }

  export type AgentDecisionWhereInput = {
    AND?: AgentDecisionWhereInput | AgentDecisionWhereInput[]
    OR?: AgentDecisionWhereInput[]
    NOT?: AgentDecisionWhereInput | AgentDecisionWhereInput[]
    id?: StringFilter<"AgentDecision"> | string
    agentId?: StringFilter<"AgentDecision"> | string
    paymentOrderId?: StringNullableFilter<"AgentDecision"> | string | null
    decisionType?: StringFilter<"AgentDecision"> | string
    input?: JsonFilter<"AgentDecision">
    reasoning?: JsonFilter<"AgentDecision">
    decision?: JsonFilter<"AgentDecision">
    confidence?: DecimalFilter<"AgentDecision"> | Decimal | DecimalJsLike | number | string
    executionTime?: IntFilter<"AgentDecision"> | number
    tokensUsed?: IntNullableFilter<"AgentDecision"> | number | null
    wasOverridden?: BoolFilter<"AgentDecision"> | boolean
    overriddenBy?: StringNullableFilter<"AgentDecision"> | string | null
    overrideReason?: StringNullableFilter<"AgentDecision"> | string | null
    createdAt?: DateTimeFilter<"AgentDecision"> | Date | string
    agent?: XOR<AgentRelationFilter, AgentWhereInput>
    paymentOrder?: XOR<PaymentOrderNullableRelationFilter, PaymentOrderWhereInput> | null
    interactions?: AgentInteractionListRelationFilter
  }

  export type AgentDecisionOrderByWithRelationInput = {
    id?: SortOrder
    agentId?: SortOrder
    paymentOrderId?: SortOrderInput | SortOrder
    decisionType?: SortOrder
    input?: SortOrder
    reasoning?: SortOrder
    decision?: SortOrder
    confidence?: SortOrder
    executionTime?: SortOrder
    tokensUsed?: SortOrderInput | SortOrder
    wasOverridden?: SortOrder
    overriddenBy?: SortOrderInput | SortOrder
    overrideReason?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    agent?: AgentOrderByWithRelationInput
    paymentOrder?: PaymentOrderOrderByWithRelationInput
    interactions?: AgentInteractionOrderByRelationAggregateInput
  }

  export type AgentDecisionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AgentDecisionWhereInput | AgentDecisionWhereInput[]
    OR?: AgentDecisionWhereInput[]
    NOT?: AgentDecisionWhereInput | AgentDecisionWhereInput[]
    agentId?: StringFilter<"AgentDecision"> | string
    paymentOrderId?: StringNullableFilter<"AgentDecision"> | string | null
    decisionType?: StringFilter<"AgentDecision"> | string
    input?: JsonFilter<"AgentDecision">
    reasoning?: JsonFilter<"AgentDecision">
    decision?: JsonFilter<"AgentDecision">
    confidence?: DecimalFilter<"AgentDecision"> | Decimal | DecimalJsLike | number | string
    executionTime?: IntFilter<"AgentDecision"> | number
    tokensUsed?: IntNullableFilter<"AgentDecision"> | number | null
    wasOverridden?: BoolFilter<"AgentDecision"> | boolean
    overriddenBy?: StringNullableFilter<"AgentDecision"> | string | null
    overrideReason?: StringNullableFilter<"AgentDecision"> | string | null
    createdAt?: DateTimeFilter<"AgentDecision"> | Date | string
    agent?: XOR<AgentRelationFilter, AgentWhereInput>
    paymentOrder?: XOR<PaymentOrderNullableRelationFilter, PaymentOrderWhereInput> | null
    interactions?: AgentInteractionListRelationFilter
  }, "id">

  export type AgentDecisionOrderByWithAggregationInput = {
    id?: SortOrder
    agentId?: SortOrder
    paymentOrderId?: SortOrderInput | SortOrder
    decisionType?: SortOrder
    input?: SortOrder
    reasoning?: SortOrder
    decision?: SortOrder
    confidence?: SortOrder
    executionTime?: SortOrder
    tokensUsed?: SortOrderInput | SortOrder
    wasOverridden?: SortOrder
    overriddenBy?: SortOrderInput | SortOrder
    overrideReason?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: AgentDecisionCountOrderByAggregateInput
    _avg?: AgentDecisionAvgOrderByAggregateInput
    _max?: AgentDecisionMaxOrderByAggregateInput
    _min?: AgentDecisionMinOrderByAggregateInput
    _sum?: AgentDecisionSumOrderByAggregateInput
  }

  export type AgentDecisionScalarWhereWithAggregatesInput = {
    AND?: AgentDecisionScalarWhereWithAggregatesInput | AgentDecisionScalarWhereWithAggregatesInput[]
    OR?: AgentDecisionScalarWhereWithAggregatesInput[]
    NOT?: AgentDecisionScalarWhereWithAggregatesInput | AgentDecisionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AgentDecision"> | string
    agentId?: StringWithAggregatesFilter<"AgentDecision"> | string
    paymentOrderId?: StringNullableWithAggregatesFilter<"AgentDecision"> | string | null
    decisionType?: StringWithAggregatesFilter<"AgentDecision"> | string
    input?: JsonWithAggregatesFilter<"AgentDecision">
    reasoning?: JsonWithAggregatesFilter<"AgentDecision">
    decision?: JsonWithAggregatesFilter<"AgentDecision">
    confidence?: DecimalWithAggregatesFilter<"AgentDecision"> | Decimal | DecimalJsLike | number | string
    executionTime?: IntWithAggregatesFilter<"AgentDecision"> | number
    tokensUsed?: IntNullableWithAggregatesFilter<"AgentDecision"> | number | null
    wasOverridden?: BoolWithAggregatesFilter<"AgentDecision"> | boolean
    overriddenBy?: StringNullableWithAggregatesFilter<"AgentDecision"> | string | null
    overrideReason?: StringNullableWithAggregatesFilter<"AgentDecision"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"AgentDecision"> | Date | string
  }

  export type AgentCheckpointWhereInput = {
    AND?: AgentCheckpointWhereInput | AgentCheckpointWhereInput[]
    OR?: AgentCheckpointWhereInput[]
    NOT?: AgentCheckpointWhereInput | AgentCheckpointWhereInput[]
    id?: StringFilter<"AgentCheckpoint"> | string
    agentId?: StringFilter<"AgentCheckpoint"> | string
    threadId?: StringFilter<"AgentCheckpoint"> | string
    checkpointId?: StringFilter<"AgentCheckpoint"> | string
    state?: JsonFilter<"AgentCheckpoint">
    metadata?: JsonNullableFilter<"AgentCheckpoint">
    createdAt?: DateTimeFilter<"AgentCheckpoint"> | Date | string
    agent?: XOR<AgentRelationFilter, AgentWhereInput>
  }

  export type AgentCheckpointOrderByWithRelationInput = {
    id?: SortOrder
    agentId?: SortOrder
    threadId?: SortOrder
    checkpointId?: SortOrder
    state?: SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    agent?: AgentOrderByWithRelationInput
  }

  export type AgentCheckpointWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    agentId_threadId_checkpointId?: AgentCheckpointAgentIdThreadIdCheckpointIdCompoundUniqueInput
    AND?: AgentCheckpointWhereInput | AgentCheckpointWhereInput[]
    OR?: AgentCheckpointWhereInput[]
    NOT?: AgentCheckpointWhereInput | AgentCheckpointWhereInput[]
    agentId?: StringFilter<"AgentCheckpoint"> | string
    threadId?: StringFilter<"AgentCheckpoint"> | string
    checkpointId?: StringFilter<"AgentCheckpoint"> | string
    state?: JsonFilter<"AgentCheckpoint">
    metadata?: JsonNullableFilter<"AgentCheckpoint">
    createdAt?: DateTimeFilter<"AgentCheckpoint"> | Date | string
    agent?: XOR<AgentRelationFilter, AgentWhereInput>
  }, "id" | "agentId_threadId_checkpointId">

  export type AgentCheckpointOrderByWithAggregationInput = {
    id?: SortOrder
    agentId?: SortOrder
    threadId?: SortOrder
    checkpointId?: SortOrder
    state?: SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: AgentCheckpointCountOrderByAggregateInput
    _max?: AgentCheckpointMaxOrderByAggregateInput
    _min?: AgentCheckpointMinOrderByAggregateInput
  }

  export type AgentCheckpointScalarWhereWithAggregatesInput = {
    AND?: AgentCheckpointScalarWhereWithAggregatesInput | AgentCheckpointScalarWhereWithAggregatesInput[]
    OR?: AgentCheckpointScalarWhereWithAggregatesInput[]
    NOT?: AgentCheckpointScalarWhereWithAggregatesInput | AgentCheckpointScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AgentCheckpoint"> | string
    agentId?: StringWithAggregatesFilter<"AgentCheckpoint"> | string
    threadId?: StringWithAggregatesFilter<"AgentCheckpoint"> | string
    checkpointId?: StringWithAggregatesFilter<"AgentCheckpoint"> | string
    state?: JsonWithAggregatesFilter<"AgentCheckpoint">
    metadata?: JsonNullableWithAggregatesFilter<"AgentCheckpoint">
    createdAt?: DateTimeWithAggregatesFilter<"AgentCheckpoint"> | Date | string
  }

  export type AgentInteractionWhereInput = {
    AND?: AgentInteractionWhereInput | AgentInteractionWhereInput[]
    OR?: AgentInteractionWhereInput[]
    NOT?: AgentInteractionWhereInput | AgentInteractionWhereInput[]
    id?: StringFilter<"AgentInteraction"> | string
    agentDecisionId?: StringFilter<"AgentInteraction"> | string
    userId?: StringFilter<"AgentInteraction"> | string
    type?: EnumInteractionTypeFilter<"AgentInteraction"> | $Enums.InteractionType
    message?: StringNullableFilter<"AgentInteraction"> | string | null
    action?: StringNullableFilter<"AgentInteraction"> | string | null
    result?: JsonNullableFilter<"AgentInteraction">
    createdAt?: DateTimeFilter<"AgentInteraction"> | Date | string
    agentDecision?: XOR<AgentDecisionRelationFilter, AgentDecisionWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type AgentInteractionOrderByWithRelationInput = {
    id?: SortOrder
    agentDecisionId?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    message?: SortOrderInput | SortOrder
    action?: SortOrderInput | SortOrder
    result?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    agentDecision?: AgentDecisionOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type AgentInteractionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AgentInteractionWhereInput | AgentInteractionWhereInput[]
    OR?: AgentInteractionWhereInput[]
    NOT?: AgentInteractionWhereInput | AgentInteractionWhereInput[]
    agentDecisionId?: StringFilter<"AgentInteraction"> | string
    userId?: StringFilter<"AgentInteraction"> | string
    type?: EnumInteractionTypeFilter<"AgentInteraction"> | $Enums.InteractionType
    message?: StringNullableFilter<"AgentInteraction"> | string | null
    action?: StringNullableFilter<"AgentInteraction"> | string | null
    result?: JsonNullableFilter<"AgentInteraction">
    createdAt?: DateTimeFilter<"AgentInteraction"> | Date | string
    agentDecision?: XOR<AgentDecisionRelationFilter, AgentDecisionWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type AgentInteractionOrderByWithAggregationInput = {
    id?: SortOrder
    agentDecisionId?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    message?: SortOrderInput | SortOrder
    action?: SortOrderInput | SortOrder
    result?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: AgentInteractionCountOrderByAggregateInput
    _max?: AgentInteractionMaxOrderByAggregateInput
    _min?: AgentInteractionMinOrderByAggregateInput
  }

  export type AgentInteractionScalarWhereWithAggregatesInput = {
    AND?: AgentInteractionScalarWhereWithAggregatesInput | AgentInteractionScalarWhereWithAggregatesInput[]
    OR?: AgentInteractionScalarWhereWithAggregatesInput[]
    NOT?: AgentInteractionScalarWhereWithAggregatesInput | AgentInteractionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AgentInteraction"> | string
    agentDecisionId?: StringWithAggregatesFilter<"AgentInteraction"> | string
    userId?: StringWithAggregatesFilter<"AgentInteraction"> | string
    type?: EnumInteractionTypeWithAggregatesFilter<"AgentInteraction"> | $Enums.InteractionType
    message?: StringNullableWithAggregatesFilter<"AgentInteraction"> | string | null
    action?: StringNullableWithAggregatesFilter<"AgentInteraction"> | string | null
    result?: JsonNullableWithAggregatesFilter<"AgentInteraction">
    createdAt?: DateTimeWithAggregatesFilter<"AgentInteraction"> | Date | string
  }

  export type WebhookWhereInput = {
    AND?: WebhookWhereInput | WebhookWhereInput[]
    OR?: WebhookWhereInput[]
    NOT?: WebhookWhereInput | WebhookWhereInput[]
    id?: StringFilter<"Webhook"> | string
    organizationId?: StringFilter<"Webhook"> | string
    url?: StringFilter<"Webhook"> | string
    events?: StringNullableListFilter<"Webhook">
    secret?: StringFilter<"Webhook"> | string
    isActive?: BoolFilter<"Webhook"> | boolean
    failureCount?: IntFilter<"Webhook"> | number
    lastFailureAt?: DateTimeNullableFilter<"Webhook"> | Date | string | null
    createdAt?: DateTimeFilter<"Webhook"> | Date | string
    updatedAt?: DateTimeFilter<"Webhook"> | Date | string
    organization?: XOR<OrganizationRelationFilter, OrganizationWhereInput>
    deliveries?: WebhookDeliveryListRelationFilter
  }

  export type WebhookOrderByWithRelationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    url?: SortOrder
    events?: SortOrder
    secret?: SortOrder
    isActive?: SortOrder
    failureCount?: SortOrder
    lastFailureAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    organization?: OrganizationOrderByWithRelationInput
    deliveries?: WebhookDeliveryOrderByRelationAggregateInput
  }

  export type WebhookWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: WebhookWhereInput | WebhookWhereInput[]
    OR?: WebhookWhereInput[]
    NOT?: WebhookWhereInput | WebhookWhereInput[]
    organizationId?: StringFilter<"Webhook"> | string
    url?: StringFilter<"Webhook"> | string
    events?: StringNullableListFilter<"Webhook">
    secret?: StringFilter<"Webhook"> | string
    isActive?: BoolFilter<"Webhook"> | boolean
    failureCount?: IntFilter<"Webhook"> | number
    lastFailureAt?: DateTimeNullableFilter<"Webhook"> | Date | string | null
    createdAt?: DateTimeFilter<"Webhook"> | Date | string
    updatedAt?: DateTimeFilter<"Webhook"> | Date | string
    organization?: XOR<OrganizationRelationFilter, OrganizationWhereInput>
    deliveries?: WebhookDeliveryListRelationFilter
  }, "id">

  export type WebhookOrderByWithAggregationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    url?: SortOrder
    events?: SortOrder
    secret?: SortOrder
    isActive?: SortOrder
    failureCount?: SortOrder
    lastFailureAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: WebhookCountOrderByAggregateInput
    _avg?: WebhookAvgOrderByAggregateInput
    _max?: WebhookMaxOrderByAggregateInput
    _min?: WebhookMinOrderByAggregateInput
    _sum?: WebhookSumOrderByAggregateInput
  }

  export type WebhookScalarWhereWithAggregatesInput = {
    AND?: WebhookScalarWhereWithAggregatesInput | WebhookScalarWhereWithAggregatesInput[]
    OR?: WebhookScalarWhereWithAggregatesInput[]
    NOT?: WebhookScalarWhereWithAggregatesInput | WebhookScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Webhook"> | string
    organizationId?: StringWithAggregatesFilter<"Webhook"> | string
    url?: StringWithAggregatesFilter<"Webhook"> | string
    events?: StringNullableListFilter<"Webhook">
    secret?: StringWithAggregatesFilter<"Webhook"> | string
    isActive?: BoolWithAggregatesFilter<"Webhook"> | boolean
    failureCount?: IntWithAggregatesFilter<"Webhook"> | number
    lastFailureAt?: DateTimeNullableWithAggregatesFilter<"Webhook"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Webhook"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Webhook"> | Date | string
  }

  export type WebhookDeliveryWhereInput = {
    AND?: WebhookDeliveryWhereInput | WebhookDeliveryWhereInput[]
    OR?: WebhookDeliveryWhereInput[]
    NOT?: WebhookDeliveryWhereInput | WebhookDeliveryWhereInput[]
    id?: StringFilter<"WebhookDelivery"> | string
    webhookId?: StringFilter<"WebhookDelivery"> | string
    eventType?: StringFilter<"WebhookDelivery"> | string
    eventId?: StringFilter<"WebhookDelivery"> | string
    payload?: JsonFilter<"WebhookDelivery">
    statusCode?: IntNullableFilter<"WebhookDelivery"> | number | null
    response?: StringNullableFilter<"WebhookDelivery"> | string | null
    error?: StringNullableFilter<"WebhookDelivery"> | string | null
    attempts?: IntFilter<"WebhookDelivery"> | number
    nextRetryAt?: DateTimeNullableFilter<"WebhookDelivery"> | Date | string | null
    createdAt?: DateTimeFilter<"WebhookDelivery"> | Date | string
    deliveredAt?: DateTimeNullableFilter<"WebhookDelivery"> | Date | string | null
    webhook?: XOR<WebhookRelationFilter, WebhookWhereInput>
  }

  export type WebhookDeliveryOrderByWithRelationInput = {
    id?: SortOrder
    webhookId?: SortOrder
    eventType?: SortOrder
    eventId?: SortOrder
    payload?: SortOrder
    statusCode?: SortOrderInput | SortOrder
    response?: SortOrderInput | SortOrder
    error?: SortOrderInput | SortOrder
    attempts?: SortOrder
    nextRetryAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    deliveredAt?: SortOrderInput | SortOrder
    webhook?: WebhookOrderByWithRelationInput
  }

  export type WebhookDeliveryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: WebhookDeliveryWhereInput | WebhookDeliveryWhereInput[]
    OR?: WebhookDeliveryWhereInput[]
    NOT?: WebhookDeliveryWhereInput | WebhookDeliveryWhereInput[]
    webhookId?: StringFilter<"WebhookDelivery"> | string
    eventType?: StringFilter<"WebhookDelivery"> | string
    eventId?: StringFilter<"WebhookDelivery"> | string
    payload?: JsonFilter<"WebhookDelivery">
    statusCode?: IntNullableFilter<"WebhookDelivery"> | number | null
    response?: StringNullableFilter<"WebhookDelivery"> | string | null
    error?: StringNullableFilter<"WebhookDelivery"> | string | null
    attempts?: IntFilter<"WebhookDelivery"> | number
    nextRetryAt?: DateTimeNullableFilter<"WebhookDelivery"> | Date | string | null
    createdAt?: DateTimeFilter<"WebhookDelivery"> | Date | string
    deliveredAt?: DateTimeNullableFilter<"WebhookDelivery"> | Date | string | null
    webhook?: XOR<WebhookRelationFilter, WebhookWhereInput>
  }, "id">

  export type WebhookDeliveryOrderByWithAggregationInput = {
    id?: SortOrder
    webhookId?: SortOrder
    eventType?: SortOrder
    eventId?: SortOrder
    payload?: SortOrder
    statusCode?: SortOrderInput | SortOrder
    response?: SortOrderInput | SortOrder
    error?: SortOrderInput | SortOrder
    attempts?: SortOrder
    nextRetryAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    deliveredAt?: SortOrderInput | SortOrder
    _count?: WebhookDeliveryCountOrderByAggregateInput
    _avg?: WebhookDeliveryAvgOrderByAggregateInput
    _max?: WebhookDeliveryMaxOrderByAggregateInput
    _min?: WebhookDeliveryMinOrderByAggregateInput
    _sum?: WebhookDeliverySumOrderByAggregateInput
  }

  export type WebhookDeliveryScalarWhereWithAggregatesInput = {
    AND?: WebhookDeliveryScalarWhereWithAggregatesInput | WebhookDeliveryScalarWhereWithAggregatesInput[]
    OR?: WebhookDeliveryScalarWhereWithAggregatesInput[]
    NOT?: WebhookDeliveryScalarWhereWithAggregatesInput | WebhookDeliveryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"WebhookDelivery"> | string
    webhookId?: StringWithAggregatesFilter<"WebhookDelivery"> | string
    eventType?: StringWithAggregatesFilter<"WebhookDelivery"> | string
    eventId?: StringWithAggregatesFilter<"WebhookDelivery"> | string
    payload?: JsonWithAggregatesFilter<"WebhookDelivery">
    statusCode?: IntNullableWithAggregatesFilter<"WebhookDelivery"> | number | null
    response?: StringNullableWithAggregatesFilter<"WebhookDelivery"> | string | null
    error?: StringNullableWithAggregatesFilter<"WebhookDelivery"> | string | null
    attempts?: IntWithAggregatesFilter<"WebhookDelivery"> | number
    nextRetryAt?: DateTimeNullableWithAggregatesFilter<"WebhookDelivery"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"WebhookDelivery"> | Date | string
    deliveredAt?: DateTimeNullableWithAggregatesFilter<"WebhookDelivery"> | Date | string | null
  }

  export type ManualProcessStepWhereInput = {
    AND?: ManualProcessStepWhereInput | ManualProcessStepWhereInput[]
    OR?: ManualProcessStepWhereInput[]
    NOT?: ManualProcessStepWhereInput | ManualProcessStepWhereInput[]
    id?: StringFilter<"ManualProcessStep"> | string
    paymentOrderId?: StringFilter<"ManualProcessStep"> | string
    type?: EnumManualStepTypeFilter<"ManualProcessStep"> | $Enums.ManualStepType
    reason?: StringFilter<"ManualProcessStep"> | string
    instructions?: StringNullableFilter<"ManualProcessStep"> | string | null
    assignedTo?: StringNullableFilter<"ManualProcessStep"> | string | null
    assignedTeam?: StringNullableFilter<"ManualProcessStep"> | string | null
    priority?: EnumPriorityFilter<"ManualProcessStep"> | $Enums.Priority
    status?: EnumManualStepStatusFilter<"ManualProcessStep"> | $Enums.ManualStepStatus
    resolution?: StringNullableFilter<"ManualProcessStep"> | string | null
    createdAt?: DateTimeFilter<"ManualProcessStep"> | Date | string
    startedAt?: DateTimeNullableFilter<"ManualProcessStep"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"ManualProcessStep"> | Date | string | null
    dueAt?: DateTimeNullableFilter<"ManualProcessStep"> | Date | string | null
    paymentOrder?: XOR<PaymentOrderRelationFilter, PaymentOrderWhereInput>
  }

  export type ManualProcessStepOrderByWithRelationInput = {
    id?: SortOrder
    paymentOrderId?: SortOrder
    type?: SortOrder
    reason?: SortOrder
    instructions?: SortOrderInput | SortOrder
    assignedTo?: SortOrderInput | SortOrder
    assignedTeam?: SortOrderInput | SortOrder
    priority?: SortOrder
    status?: SortOrder
    resolution?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    startedAt?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    dueAt?: SortOrderInput | SortOrder
    paymentOrder?: PaymentOrderOrderByWithRelationInput
  }

  export type ManualProcessStepWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ManualProcessStepWhereInput | ManualProcessStepWhereInput[]
    OR?: ManualProcessStepWhereInput[]
    NOT?: ManualProcessStepWhereInput | ManualProcessStepWhereInput[]
    paymentOrderId?: StringFilter<"ManualProcessStep"> | string
    type?: EnumManualStepTypeFilter<"ManualProcessStep"> | $Enums.ManualStepType
    reason?: StringFilter<"ManualProcessStep"> | string
    instructions?: StringNullableFilter<"ManualProcessStep"> | string | null
    assignedTo?: StringNullableFilter<"ManualProcessStep"> | string | null
    assignedTeam?: StringNullableFilter<"ManualProcessStep"> | string | null
    priority?: EnumPriorityFilter<"ManualProcessStep"> | $Enums.Priority
    status?: EnumManualStepStatusFilter<"ManualProcessStep"> | $Enums.ManualStepStatus
    resolution?: StringNullableFilter<"ManualProcessStep"> | string | null
    createdAt?: DateTimeFilter<"ManualProcessStep"> | Date | string
    startedAt?: DateTimeNullableFilter<"ManualProcessStep"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"ManualProcessStep"> | Date | string | null
    dueAt?: DateTimeNullableFilter<"ManualProcessStep"> | Date | string | null
    paymentOrder?: XOR<PaymentOrderRelationFilter, PaymentOrderWhereInput>
  }, "id">

  export type ManualProcessStepOrderByWithAggregationInput = {
    id?: SortOrder
    paymentOrderId?: SortOrder
    type?: SortOrder
    reason?: SortOrder
    instructions?: SortOrderInput | SortOrder
    assignedTo?: SortOrderInput | SortOrder
    assignedTeam?: SortOrderInput | SortOrder
    priority?: SortOrder
    status?: SortOrder
    resolution?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    startedAt?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    dueAt?: SortOrderInput | SortOrder
    _count?: ManualProcessStepCountOrderByAggregateInput
    _max?: ManualProcessStepMaxOrderByAggregateInput
    _min?: ManualProcessStepMinOrderByAggregateInput
  }

  export type ManualProcessStepScalarWhereWithAggregatesInput = {
    AND?: ManualProcessStepScalarWhereWithAggregatesInput | ManualProcessStepScalarWhereWithAggregatesInput[]
    OR?: ManualProcessStepScalarWhereWithAggregatesInput[]
    NOT?: ManualProcessStepScalarWhereWithAggregatesInput | ManualProcessStepScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ManualProcessStep"> | string
    paymentOrderId?: StringWithAggregatesFilter<"ManualProcessStep"> | string
    type?: EnumManualStepTypeWithAggregatesFilter<"ManualProcessStep"> | $Enums.ManualStepType
    reason?: StringWithAggregatesFilter<"ManualProcessStep"> | string
    instructions?: StringNullableWithAggregatesFilter<"ManualProcessStep"> | string | null
    assignedTo?: StringNullableWithAggregatesFilter<"ManualProcessStep"> | string | null
    assignedTeam?: StringNullableWithAggregatesFilter<"ManualProcessStep"> | string | null
    priority?: EnumPriorityWithAggregatesFilter<"ManualProcessStep"> | $Enums.Priority
    status?: EnumManualStepStatusWithAggregatesFilter<"ManualProcessStep"> | $Enums.ManualStepStatus
    resolution?: StringNullableWithAggregatesFilter<"ManualProcessStep"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ManualProcessStep"> | Date | string
    startedAt?: DateTimeNullableWithAggregatesFilter<"ManualProcessStep"> | Date | string | null
    completedAt?: DateTimeNullableWithAggregatesFilter<"ManualProcessStep"> | Date | string | null
    dueAt?: DateTimeNullableWithAggregatesFilter<"ManualProcessStep"> | Date | string | null
  }

  export type PaymentEventWhereInput = {
    AND?: PaymentEventWhereInput | PaymentEventWhereInput[]
    OR?: PaymentEventWhereInput[]
    NOT?: PaymentEventWhereInput | PaymentEventWhereInput[]
    id?: StringFilter<"PaymentEvent"> | string
    paymentOrderId?: StringFilter<"PaymentEvent"> | string
    sequenceNumber?: IntFilter<"PaymentEvent"> | number
    eventType?: StringFilter<"PaymentEvent"> | string
    eventVersion?: StringFilter<"PaymentEvent"> | string
    data?: JsonFilter<"PaymentEvent">
    metadata?: JsonNullableFilter<"PaymentEvent">
    kafkaTopic?: StringNullableFilter<"PaymentEvent"> | string | null
    kafkaPartition?: IntNullableFilter<"PaymentEvent"> | number | null
    kafkaOffset?: BigIntNullableFilter<"PaymentEvent"> | bigint | number | null
    occurredAt?: DateTimeFilter<"PaymentEvent"> | Date | string
    paymentOrder?: XOR<PaymentOrderRelationFilter, PaymentOrderWhereInput>
  }

  export type PaymentEventOrderByWithRelationInput = {
    id?: SortOrder
    paymentOrderId?: SortOrder
    sequenceNumber?: SortOrder
    eventType?: SortOrder
    eventVersion?: SortOrder
    data?: SortOrder
    metadata?: SortOrderInput | SortOrder
    kafkaTopic?: SortOrderInput | SortOrder
    kafkaPartition?: SortOrderInput | SortOrder
    kafkaOffset?: SortOrderInput | SortOrder
    occurredAt?: SortOrder
    paymentOrder?: PaymentOrderOrderByWithRelationInput
  }

  export type PaymentEventWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    paymentOrderId_sequenceNumber?: PaymentEventPaymentOrderIdSequenceNumberCompoundUniqueInput
    AND?: PaymentEventWhereInput | PaymentEventWhereInput[]
    OR?: PaymentEventWhereInput[]
    NOT?: PaymentEventWhereInput | PaymentEventWhereInput[]
    paymentOrderId?: StringFilter<"PaymentEvent"> | string
    sequenceNumber?: IntFilter<"PaymentEvent"> | number
    eventType?: StringFilter<"PaymentEvent"> | string
    eventVersion?: StringFilter<"PaymentEvent"> | string
    data?: JsonFilter<"PaymentEvent">
    metadata?: JsonNullableFilter<"PaymentEvent">
    kafkaTopic?: StringNullableFilter<"PaymentEvent"> | string | null
    kafkaPartition?: IntNullableFilter<"PaymentEvent"> | number | null
    kafkaOffset?: BigIntNullableFilter<"PaymentEvent"> | bigint | number | null
    occurredAt?: DateTimeFilter<"PaymentEvent"> | Date | string
    paymentOrder?: XOR<PaymentOrderRelationFilter, PaymentOrderWhereInput>
  }, "id" | "paymentOrderId_sequenceNumber">

  export type PaymentEventOrderByWithAggregationInput = {
    id?: SortOrder
    paymentOrderId?: SortOrder
    sequenceNumber?: SortOrder
    eventType?: SortOrder
    eventVersion?: SortOrder
    data?: SortOrder
    metadata?: SortOrderInput | SortOrder
    kafkaTopic?: SortOrderInput | SortOrder
    kafkaPartition?: SortOrderInput | SortOrder
    kafkaOffset?: SortOrderInput | SortOrder
    occurredAt?: SortOrder
    _count?: PaymentEventCountOrderByAggregateInput
    _avg?: PaymentEventAvgOrderByAggregateInput
    _max?: PaymentEventMaxOrderByAggregateInput
    _min?: PaymentEventMinOrderByAggregateInput
    _sum?: PaymentEventSumOrderByAggregateInput
  }

  export type PaymentEventScalarWhereWithAggregatesInput = {
    AND?: PaymentEventScalarWhereWithAggregatesInput | PaymentEventScalarWhereWithAggregatesInput[]
    OR?: PaymentEventScalarWhereWithAggregatesInput[]
    NOT?: PaymentEventScalarWhereWithAggregatesInput | PaymentEventScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PaymentEvent"> | string
    paymentOrderId?: StringWithAggregatesFilter<"PaymentEvent"> | string
    sequenceNumber?: IntWithAggregatesFilter<"PaymentEvent"> | number
    eventType?: StringWithAggregatesFilter<"PaymentEvent"> | string
    eventVersion?: StringWithAggregatesFilter<"PaymentEvent"> | string
    data?: JsonWithAggregatesFilter<"PaymentEvent">
    metadata?: JsonNullableWithAggregatesFilter<"PaymentEvent">
    kafkaTopic?: StringNullableWithAggregatesFilter<"PaymentEvent"> | string | null
    kafkaPartition?: IntNullableWithAggregatesFilter<"PaymentEvent"> | number | null
    kafkaOffset?: BigIntNullableWithAggregatesFilter<"PaymentEvent"> | bigint | number | null
    occurredAt?: DateTimeWithAggregatesFilter<"PaymentEvent"> | Date | string
  }

  export type AuditLogWhereInput = {
    AND?: AuditLogWhereInput | AuditLogWhereInput[]
    OR?: AuditLogWhereInput[]
    NOT?: AuditLogWhereInput | AuditLogWhereInput[]
    id?: StringFilter<"AuditLog"> | string
    organizationId?: StringFilter<"AuditLog"> | string
    userId?: StringNullableFilter<"AuditLog"> | string | null
    action?: StringFilter<"AuditLog"> | string
    entityType?: StringNullableFilter<"AuditLog"> | string | null
    entityId?: StringNullableFilter<"AuditLog"> | string | null
    changes?: JsonNullableFilter<"AuditLog">
    metadata?: JsonNullableFilter<"AuditLog">
    ipAddress?: StringNullableFilter<"AuditLog"> | string | null
    userAgent?: StringNullableFilter<"AuditLog"> | string | null
    requestId?: StringNullableFilter<"AuditLog"> | string | null
    createdAt?: DateTimeFilter<"AuditLog"> | Date | string
    organization?: XOR<OrganizationRelationFilter, OrganizationWhereInput>
    user?: XOR<UserNullableRelationFilter, UserWhereInput> | null
  }

  export type AuditLogOrderByWithRelationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrderInput | SortOrder
    action?: SortOrder
    entityType?: SortOrderInput | SortOrder
    entityId?: SortOrderInput | SortOrder
    changes?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    requestId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    organization?: OrganizationOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type AuditLogWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AuditLogWhereInput | AuditLogWhereInput[]
    OR?: AuditLogWhereInput[]
    NOT?: AuditLogWhereInput | AuditLogWhereInput[]
    organizationId?: StringFilter<"AuditLog"> | string
    userId?: StringNullableFilter<"AuditLog"> | string | null
    action?: StringFilter<"AuditLog"> | string
    entityType?: StringNullableFilter<"AuditLog"> | string | null
    entityId?: StringNullableFilter<"AuditLog"> | string | null
    changes?: JsonNullableFilter<"AuditLog">
    metadata?: JsonNullableFilter<"AuditLog">
    ipAddress?: StringNullableFilter<"AuditLog"> | string | null
    userAgent?: StringNullableFilter<"AuditLog"> | string | null
    requestId?: StringNullableFilter<"AuditLog"> | string | null
    createdAt?: DateTimeFilter<"AuditLog"> | Date | string
    organization?: XOR<OrganizationRelationFilter, OrganizationWhereInput>
    user?: XOR<UserNullableRelationFilter, UserWhereInput> | null
  }, "id">

  export type AuditLogOrderByWithAggregationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrderInput | SortOrder
    action?: SortOrder
    entityType?: SortOrderInput | SortOrder
    entityId?: SortOrderInput | SortOrder
    changes?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    requestId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: AuditLogCountOrderByAggregateInput
    _max?: AuditLogMaxOrderByAggregateInput
    _min?: AuditLogMinOrderByAggregateInput
  }

  export type AuditLogScalarWhereWithAggregatesInput = {
    AND?: AuditLogScalarWhereWithAggregatesInput | AuditLogScalarWhereWithAggregatesInput[]
    OR?: AuditLogScalarWhereWithAggregatesInput[]
    NOT?: AuditLogScalarWhereWithAggregatesInput | AuditLogScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AuditLog"> | string
    organizationId?: StringWithAggregatesFilter<"AuditLog"> | string
    userId?: StringNullableWithAggregatesFilter<"AuditLog"> | string | null
    action?: StringWithAggregatesFilter<"AuditLog"> | string
    entityType?: StringNullableWithAggregatesFilter<"AuditLog"> | string | null
    entityId?: StringNullableWithAggregatesFilter<"AuditLog"> | string | null
    changes?: JsonNullableWithAggregatesFilter<"AuditLog">
    metadata?: JsonNullableWithAggregatesFilter<"AuditLog">
    ipAddress?: StringNullableWithAggregatesFilter<"AuditLog"> | string | null
    userAgent?: StringNullableWithAggregatesFilter<"AuditLog"> | string | null
    requestId?: StringNullableWithAggregatesFilter<"AuditLog"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"AuditLog"> | Date | string
  }

  export type ApiKeyWhereInput = {
    AND?: ApiKeyWhereInput | ApiKeyWhereInput[]
    OR?: ApiKeyWhereInput[]
    NOT?: ApiKeyWhereInput | ApiKeyWhereInput[]
    id?: StringFilter<"ApiKey"> | string
    organizationId?: StringFilter<"ApiKey"> | string
    name?: StringFilter<"ApiKey"> | string
    keyHash?: StringFilter<"ApiKey"> | string
    prefix?: StringFilter<"ApiKey"> | string
    scopes?: StringNullableListFilter<"ApiKey">
    rateLimit?: IntNullableFilter<"ApiKey"> | number | null
    isActive?: BoolFilter<"ApiKey"> | boolean
    expiresAt?: DateTimeNullableFilter<"ApiKey"> | Date | string | null
    lastUsedAt?: DateTimeNullableFilter<"ApiKey"> | Date | string | null
    createdAt?: DateTimeFilter<"ApiKey"> | Date | string
    revokedAt?: DateTimeNullableFilter<"ApiKey"> | Date | string | null
    organization?: XOR<OrganizationRelationFilter, OrganizationWhereInput>
  }

  export type ApiKeyOrderByWithRelationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    name?: SortOrder
    keyHash?: SortOrder
    prefix?: SortOrder
    scopes?: SortOrder
    rateLimit?: SortOrderInput | SortOrder
    isActive?: SortOrder
    expiresAt?: SortOrderInput | SortOrder
    lastUsedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    revokedAt?: SortOrderInput | SortOrder
    organization?: OrganizationOrderByWithRelationInput
  }

  export type ApiKeyWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    keyHash?: string
    AND?: ApiKeyWhereInput | ApiKeyWhereInput[]
    OR?: ApiKeyWhereInput[]
    NOT?: ApiKeyWhereInput | ApiKeyWhereInput[]
    organizationId?: StringFilter<"ApiKey"> | string
    name?: StringFilter<"ApiKey"> | string
    prefix?: StringFilter<"ApiKey"> | string
    scopes?: StringNullableListFilter<"ApiKey">
    rateLimit?: IntNullableFilter<"ApiKey"> | number | null
    isActive?: BoolFilter<"ApiKey"> | boolean
    expiresAt?: DateTimeNullableFilter<"ApiKey"> | Date | string | null
    lastUsedAt?: DateTimeNullableFilter<"ApiKey"> | Date | string | null
    createdAt?: DateTimeFilter<"ApiKey"> | Date | string
    revokedAt?: DateTimeNullableFilter<"ApiKey"> | Date | string | null
    organization?: XOR<OrganizationRelationFilter, OrganizationWhereInput>
  }, "id" | "keyHash">

  export type ApiKeyOrderByWithAggregationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    name?: SortOrder
    keyHash?: SortOrder
    prefix?: SortOrder
    scopes?: SortOrder
    rateLimit?: SortOrderInput | SortOrder
    isActive?: SortOrder
    expiresAt?: SortOrderInput | SortOrder
    lastUsedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    revokedAt?: SortOrderInput | SortOrder
    _count?: ApiKeyCountOrderByAggregateInput
    _avg?: ApiKeyAvgOrderByAggregateInput
    _max?: ApiKeyMaxOrderByAggregateInput
    _min?: ApiKeyMinOrderByAggregateInput
    _sum?: ApiKeySumOrderByAggregateInput
  }

  export type ApiKeyScalarWhereWithAggregatesInput = {
    AND?: ApiKeyScalarWhereWithAggregatesInput | ApiKeyScalarWhereWithAggregatesInput[]
    OR?: ApiKeyScalarWhereWithAggregatesInput[]
    NOT?: ApiKeyScalarWhereWithAggregatesInput | ApiKeyScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ApiKey"> | string
    organizationId?: StringWithAggregatesFilter<"ApiKey"> | string
    name?: StringWithAggregatesFilter<"ApiKey"> | string
    keyHash?: StringWithAggregatesFilter<"ApiKey"> | string
    prefix?: StringWithAggregatesFilter<"ApiKey"> | string
    scopes?: StringNullableListFilter<"ApiKey">
    rateLimit?: IntNullableWithAggregatesFilter<"ApiKey"> | number | null
    isActive?: BoolWithAggregatesFilter<"ApiKey"> | boolean
    expiresAt?: DateTimeNullableWithAggregatesFilter<"ApiKey"> | Date | string | null
    lastUsedAt?: DateTimeNullableWithAggregatesFilter<"ApiKey"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ApiKey"> | Date | string
    revokedAt?: DateTimeNullableWithAggregatesFilter<"ApiKey"> | Date | string | null
  }

  export type OrganizationUserWhereInput = {
    AND?: OrganizationUserWhereInput | OrganizationUserWhereInput[]
    OR?: OrganizationUserWhereInput[]
    NOT?: OrganizationUserWhereInput | OrganizationUserWhereInput[]
    id?: StringFilter<"OrganizationUser"> | string
    organizationId?: StringFilter<"OrganizationUser"> | string
    userId?: StringFilter<"OrganizationUser"> | string
    role?: EnumUserRoleFilter<"OrganizationUser"> | $Enums.UserRole
    permissions?: StringNullableListFilter<"OrganizationUser">
    invitedBy?: StringNullableFilter<"OrganizationUser"> | string | null
    invitedAt?: DateTimeFilter<"OrganizationUser"> | Date | string
    acceptedAt?: DateTimeNullableFilter<"OrganizationUser"> | Date | string | null
    isActive?: BoolFilter<"OrganizationUser"> | boolean
    organization?: XOR<OrganizationRelationFilter, OrganizationWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type OrganizationUserOrderByWithRelationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    permissions?: SortOrder
    invitedBy?: SortOrderInput | SortOrder
    invitedAt?: SortOrder
    acceptedAt?: SortOrderInput | SortOrder
    isActive?: SortOrder
    organization?: OrganizationOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type OrganizationUserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    organizationId_userId?: OrganizationUserOrganizationIdUserIdCompoundUniqueInput
    AND?: OrganizationUserWhereInput | OrganizationUserWhereInput[]
    OR?: OrganizationUserWhereInput[]
    NOT?: OrganizationUserWhereInput | OrganizationUserWhereInput[]
    organizationId?: StringFilter<"OrganizationUser"> | string
    userId?: StringFilter<"OrganizationUser"> | string
    role?: EnumUserRoleFilter<"OrganizationUser"> | $Enums.UserRole
    permissions?: StringNullableListFilter<"OrganizationUser">
    invitedBy?: StringNullableFilter<"OrganizationUser"> | string | null
    invitedAt?: DateTimeFilter<"OrganizationUser"> | Date | string
    acceptedAt?: DateTimeNullableFilter<"OrganizationUser"> | Date | string | null
    isActive?: BoolFilter<"OrganizationUser"> | boolean
    organization?: XOR<OrganizationRelationFilter, OrganizationWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "organizationId_userId">

  export type OrganizationUserOrderByWithAggregationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    permissions?: SortOrder
    invitedBy?: SortOrderInput | SortOrder
    invitedAt?: SortOrder
    acceptedAt?: SortOrderInput | SortOrder
    isActive?: SortOrder
    _count?: OrganizationUserCountOrderByAggregateInput
    _max?: OrganizationUserMaxOrderByAggregateInput
    _min?: OrganizationUserMinOrderByAggregateInput
  }

  export type OrganizationUserScalarWhereWithAggregatesInput = {
    AND?: OrganizationUserScalarWhereWithAggregatesInput | OrganizationUserScalarWhereWithAggregatesInput[]
    OR?: OrganizationUserScalarWhereWithAggregatesInput[]
    NOT?: OrganizationUserScalarWhereWithAggregatesInput | OrganizationUserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"OrganizationUser"> | string
    organizationId?: StringWithAggregatesFilter<"OrganizationUser"> | string
    userId?: StringWithAggregatesFilter<"OrganizationUser"> | string
    role?: EnumUserRoleWithAggregatesFilter<"OrganizationUser"> | $Enums.UserRole
    permissions?: StringNullableListFilter<"OrganizationUser">
    invitedBy?: StringNullableWithAggregatesFilter<"OrganizationUser"> | string | null
    invitedAt?: DateTimeWithAggregatesFilter<"OrganizationUser"> | Date | string
    acceptedAt?: DateTimeNullableWithAggregatesFilter<"OrganizationUser"> | Date | string | null
    isActive?: BoolWithAggregatesFilter<"OrganizationUser"> | boolean
  }

  export type OrganizationCreateInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    billingEmail: string
    taxId?: string | null
    country: string
    complianceStatus?: $Enums.ComplianceStatus
    kycVerifiedAt?: Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    ownerId: string
    users?: OrganizationUserCreateNestedManyWithoutOrganizationInput
    customers?: CustomerCreateNestedManyWithoutOrganizationInput
    products?: ProductCreateNestedManyWithoutOrganizationInput
    wallets?: WalletCreateNestedManyWithoutOrganizationInput
    paymentLinks?: PaymentLinkCreateNestedManyWithoutOrganizationInput
    paymentOrders?: PaymentOrderCreateNestedManyWithoutOrganizationInput
    providers?: ProviderConfigCreateNestedManyWithoutOrganizationInput
    apiKeys?: ApiKeyCreateNestedManyWithoutOrganizationInput
    webhooks?: WebhookCreateNestedManyWithoutOrganizationInput
    auditLogs?: AuditLogCreateNestedManyWithoutOrganizationInput
    agents?: AgentCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    billingEmail: string
    taxId?: string | null
    country: string
    complianceStatus?: $Enums.ComplianceStatus
    kycVerifiedAt?: Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    ownerId: string
    users?: OrganizationUserUncheckedCreateNestedManyWithoutOrganizationInput
    customers?: CustomerUncheckedCreateNestedManyWithoutOrganizationInput
    products?: ProductUncheckedCreateNestedManyWithoutOrganizationInput
    wallets?: WalletUncheckedCreateNestedManyWithoutOrganizationInput
    paymentLinks?: PaymentLinkUncheckedCreateNestedManyWithoutOrganizationInput
    paymentOrders?: PaymentOrderUncheckedCreateNestedManyWithoutOrganizationInput
    providers?: ProviderConfigUncheckedCreateNestedManyWithoutOrganizationInput
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutOrganizationInput
    webhooks?: WebhookUncheckedCreateNestedManyWithoutOrganizationInput
    auditLogs?: AuditLogUncheckedCreateNestedManyWithoutOrganizationInput
    agents?: AgentUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    billingEmail?: StringFieldUpdateOperationsInput | string
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: StringFieldUpdateOperationsInput | string
    users?: OrganizationUserUpdateManyWithoutOrganizationNestedInput
    customers?: CustomerUpdateManyWithoutOrganizationNestedInput
    products?: ProductUpdateManyWithoutOrganizationNestedInput
    wallets?: WalletUpdateManyWithoutOrganizationNestedInput
    paymentLinks?: PaymentLinkUpdateManyWithoutOrganizationNestedInput
    paymentOrders?: PaymentOrderUpdateManyWithoutOrganizationNestedInput
    providers?: ProviderConfigUpdateManyWithoutOrganizationNestedInput
    apiKeys?: ApiKeyUpdateManyWithoutOrganizationNestedInput
    webhooks?: WebhookUpdateManyWithoutOrganizationNestedInput
    auditLogs?: AuditLogUpdateManyWithoutOrganizationNestedInput
    agents?: AgentUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    billingEmail?: StringFieldUpdateOperationsInput | string
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: StringFieldUpdateOperationsInput | string
    users?: OrganizationUserUncheckedUpdateManyWithoutOrganizationNestedInput
    customers?: CustomerUncheckedUpdateManyWithoutOrganizationNestedInput
    products?: ProductUncheckedUpdateManyWithoutOrganizationNestedInput
    wallets?: WalletUncheckedUpdateManyWithoutOrganizationNestedInput
    paymentLinks?: PaymentLinkUncheckedUpdateManyWithoutOrganizationNestedInput
    paymentOrders?: PaymentOrderUncheckedUpdateManyWithoutOrganizationNestedInput
    providers?: ProviderConfigUncheckedUpdateManyWithoutOrganizationNestedInput
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutOrganizationNestedInput
    webhooks?: WebhookUncheckedUpdateManyWithoutOrganizationNestedInput
    auditLogs?: AuditLogUncheckedUpdateManyWithoutOrganizationNestedInput
    agents?: AgentUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationCreateManyInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    billingEmail: string
    taxId?: string | null
    country: string
    complianceStatus?: $Enums.ComplianceStatus
    kycVerifiedAt?: Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    ownerId: string
  }

  export type OrganizationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    billingEmail?: StringFieldUpdateOperationsInput | string
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: StringFieldUpdateOperationsInput | string
  }

  export type OrganizationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    billingEmail?: StringFieldUpdateOperationsInput | string
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: StringFieldUpdateOperationsInput | string
  }

  export type UserCreateInput = {
    id?: string
    email: string
    name?: string | null
    avatarUrl?: string | null
    authProvider?: $Enums.AuthProvider
    authProviderId?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    primaryWallet?: WalletCreateNestedOneWithoutPrimaryForUsersInput
    organizations?: OrganizationUserCreateNestedManyWithoutUserInput
    ownedWallets?: WalletCreateNestedManyWithoutUserInput
    paymentLinks?: PaymentLinkCreateNestedManyWithoutCreatedByInput
    auditLogs?: AuditLogCreateNestedManyWithoutUserInput
    agentInteractions?: AgentInteractionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    email: string
    name?: string | null
    avatarUrl?: string | null
    authProvider?: $Enums.AuthProvider
    authProviderId?: string | null
    emailVerified?: boolean
    primaryWalletId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    organizations?: OrganizationUserUncheckedCreateNestedManyWithoutUserInput
    ownedWallets?: WalletUncheckedCreateNestedManyWithoutUserInput
    paymentLinks?: PaymentLinkUncheckedCreateNestedManyWithoutCreatedByInput
    auditLogs?: AuditLogUncheckedCreateNestedManyWithoutUserInput
    agentInteractions?: AgentInteractionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    authProvider?: EnumAuthProviderFieldUpdateOperationsInput | $Enums.AuthProvider
    authProviderId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    primaryWallet?: WalletUpdateOneWithoutPrimaryForUsersNestedInput
    organizations?: OrganizationUserUpdateManyWithoutUserNestedInput
    ownedWallets?: WalletUpdateManyWithoutUserNestedInput
    paymentLinks?: PaymentLinkUpdateManyWithoutCreatedByNestedInput
    auditLogs?: AuditLogUpdateManyWithoutUserNestedInput
    agentInteractions?: AgentInteractionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    authProvider?: EnumAuthProviderFieldUpdateOperationsInput | $Enums.AuthProvider
    authProviderId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    primaryWalletId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organizations?: OrganizationUserUncheckedUpdateManyWithoutUserNestedInput
    ownedWallets?: WalletUncheckedUpdateManyWithoutUserNestedInput
    paymentLinks?: PaymentLinkUncheckedUpdateManyWithoutCreatedByNestedInput
    auditLogs?: AuditLogUncheckedUpdateManyWithoutUserNestedInput
    agentInteractions?: AgentInteractionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    email: string
    name?: string | null
    avatarUrl?: string | null
    authProvider?: $Enums.AuthProvider
    authProviderId?: string | null
    emailVerified?: boolean
    primaryWalletId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    authProvider?: EnumAuthProviderFieldUpdateOperationsInput | $Enums.AuthProvider
    authProviderId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    authProvider?: EnumAuthProviderFieldUpdateOperationsInput | $Enums.AuthProvider
    authProviderId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    primaryWalletId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CustomerCreateInput = {
    id?: string
    email: string
    name?: string | null
    phone?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    walletAddress?: string | null
    preferredChainId?: number | null
    isActive?: boolean
    emailVerified?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutCustomersInput
    paymentOrders?: PaymentOrderCreateNestedManyWithoutCustomerInput
    paymentMethods?: CustomerPaymentMethodCreateNestedManyWithoutCustomerInput
    subscriptions?: SubscriptionCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateInput = {
    id?: string
    organizationId: string
    email: string
    name?: string | null
    phone?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    walletAddress?: string | null
    preferredChainId?: number | null
    isActive?: boolean
    emailVerified?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    paymentOrders?: PaymentOrderUncheckedCreateNestedManyWithoutCustomerInput
    paymentMethods?: CustomerPaymentMethodUncheckedCreateNestedManyWithoutCustomerInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    preferredChainId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutCustomersNestedInput
    paymentOrders?: PaymentOrderUpdateManyWithoutCustomerNestedInput
    paymentMethods?: CustomerPaymentMethodUpdateManyWithoutCustomerNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    preferredChainId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentOrders?: PaymentOrderUncheckedUpdateManyWithoutCustomerNestedInput
    paymentMethods?: CustomerPaymentMethodUncheckedUpdateManyWithoutCustomerNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerCreateManyInput = {
    id?: string
    organizationId: string
    email: string
    name?: string | null
    phone?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    walletAddress?: string | null
    preferredChainId?: number | null
    isActive?: boolean
    emailVerified?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CustomerUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    preferredChainId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomerUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    preferredChainId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomerPaymentMethodCreateInput = {
    id?: string
    type: $Enums.PaymentMethodType
    provider: string
    externalId?: string | null
    last4?: string | null
    brand?: string | null
    expiryMonth?: number | null
    expiryYear?: number | null
    bankName?: string | null
    accountLast4?: string | null
    walletAddress?: string | null
    chainId?: number | null
    isDefault?: boolean
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    customer: CustomerCreateNestedOneWithoutPaymentMethodsInput
  }

  export type CustomerPaymentMethodUncheckedCreateInput = {
    id?: string
    customerId: string
    type: $Enums.PaymentMethodType
    provider: string
    externalId?: string | null
    last4?: string | null
    brand?: string | null
    expiryMonth?: number | null
    expiryYear?: number | null
    bankName?: string | null
    accountLast4?: string | null
    walletAddress?: string | null
    chainId?: number | null
    isDefault?: boolean
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CustomerPaymentMethodUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPaymentMethodTypeFieldUpdateOperationsInput | $Enums.PaymentMethodType
    provider?: StringFieldUpdateOperationsInput | string
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    last4?: NullableStringFieldUpdateOperationsInput | string | null
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    expiryMonth?: NullableIntFieldUpdateOperationsInput | number | null
    expiryYear?: NullableIntFieldUpdateOperationsInput | number | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountLast4?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    chainId?: NullableIntFieldUpdateOperationsInput | number | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    customer?: CustomerUpdateOneRequiredWithoutPaymentMethodsNestedInput
  }

  export type CustomerPaymentMethodUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    type?: EnumPaymentMethodTypeFieldUpdateOperationsInput | $Enums.PaymentMethodType
    provider?: StringFieldUpdateOperationsInput | string
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    last4?: NullableStringFieldUpdateOperationsInput | string | null
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    expiryMonth?: NullableIntFieldUpdateOperationsInput | number | null
    expiryYear?: NullableIntFieldUpdateOperationsInput | number | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountLast4?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    chainId?: NullableIntFieldUpdateOperationsInput | number | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomerPaymentMethodCreateManyInput = {
    id?: string
    customerId: string
    type: $Enums.PaymentMethodType
    provider: string
    externalId?: string | null
    last4?: string | null
    brand?: string | null
    expiryMonth?: number | null
    expiryYear?: number | null
    bankName?: string | null
    accountLast4?: string | null
    walletAddress?: string | null
    chainId?: number | null
    isDefault?: boolean
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CustomerPaymentMethodUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPaymentMethodTypeFieldUpdateOperationsInput | $Enums.PaymentMethodType
    provider?: StringFieldUpdateOperationsInput | string
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    last4?: NullableStringFieldUpdateOperationsInput | string | null
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    expiryMonth?: NullableIntFieldUpdateOperationsInput | number | null
    expiryYear?: NullableIntFieldUpdateOperationsInput | number | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountLast4?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    chainId?: NullableIntFieldUpdateOperationsInput | number | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomerPaymentMethodUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    type?: EnumPaymentMethodTypeFieldUpdateOperationsInput | $Enums.PaymentMethodType
    provider?: StringFieldUpdateOperationsInput | string
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    last4?: NullableStringFieldUpdateOperationsInput | string | null
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    expiryMonth?: NullableIntFieldUpdateOperationsInput | number | null
    expiryYear?: NullableIntFieldUpdateOperationsInput | number | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountLast4?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    chainId?: NullableIntFieldUpdateOperationsInput | number | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionCreateInput = {
    id?: string
    organizationId: string
    status?: $Enums.SubscriptionStatus
    currentPeriodStart: Date | string
    currentPeriodEnd: Date | string
    cancelAt?: Date | string | null
    canceledAt?: Date | string | null
    endedAt?: Date | string | null
    trialStart?: Date | string | null
    trialEnd?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    customer: CustomerCreateNestedOneWithoutSubscriptionsInput
    items?: SubscriptionItemCreateNestedManyWithoutSubscriptionInput
  }

  export type SubscriptionUncheckedCreateInput = {
    id?: string
    customerId: string
    organizationId: string
    status?: $Enums.SubscriptionStatus
    currentPeriodStart: Date | string
    currentPeriodEnd: Date | string
    cancelAt?: Date | string | null
    canceledAt?: Date | string | null
    endedAt?: Date | string | null
    trialStart?: Date | string | null
    trialEnd?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    items?: SubscriptionItemUncheckedCreateNestedManyWithoutSubscriptionInput
  }

  export type SubscriptionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    currentPeriodStart?: DateTimeFieldUpdateOperationsInput | Date | string
    currentPeriodEnd?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    customer?: CustomerUpdateOneRequiredWithoutSubscriptionsNestedInput
    items?: SubscriptionItemUpdateManyWithoutSubscriptionNestedInput
  }

  export type SubscriptionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    currentPeriodStart?: DateTimeFieldUpdateOperationsInput | Date | string
    currentPeriodEnd?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: SubscriptionItemUncheckedUpdateManyWithoutSubscriptionNestedInput
  }

  export type SubscriptionCreateManyInput = {
    id?: string
    customerId: string
    organizationId: string
    status?: $Enums.SubscriptionStatus
    currentPeriodStart: Date | string
    currentPeriodEnd: Date | string
    cancelAt?: Date | string | null
    canceledAt?: Date | string | null
    endedAt?: Date | string | null
    trialStart?: Date | string | null
    trialEnd?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscriptionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    currentPeriodStart?: DateTimeFieldUpdateOperationsInput | Date | string
    currentPeriodEnd?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    currentPeriodStart?: DateTimeFieldUpdateOperationsInput | Date | string
    currentPeriodEnd?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionItemCreateInput = {
    id?: string
    quantity?: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    subscription: SubscriptionCreateNestedOneWithoutItemsInput
    price: PriceCreateNestedOneWithoutSubscriptionItemsInput
  }

  export type SubscriptionItemUncheckedCreateInput = {
    id?: string
    subscriptionId: string
    priceId: string
    quantity?: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscriptionItemUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    subscription?: SubscriptionUpdateOneRequiredWithoutItemsNestedInput
    price?: PriceUpdateOneRequiredWithoutSubscriptionItemsNestedInput
  }

  export type SubscriptionItemUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    subscriptionId?: StringFieldUpdateOperationsInput | string
    priceId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionItemCreateManyInput = {
    id?: string
    subscriptionId: string
    priceId: string
    quantity?: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscriptionItemUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionItemUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    subscriptionId?: StringFieldUpdateOperationsInput | string
    priceId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WalletCreateInput = {
    id?: string
    address: string
    chainId: number
    type?: $Enums.WalletType
    smartWalletFactory?: string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    allowlist?: boolean
    blocklist?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user?: UserCreateNestedOneWithoutOwnedWalletsInput
    organization?: OrganizationCreateNestedOneWithoutWalletsInput
    primaryForUsers?: UserCreateNestedManyWithoutPrimaryWalletInput
    agent?: AgentCreateNestedOneWithoutAgentWalletInput
    transactions?: BlockchainTransactionCreateNestedManyWithoutWalletInput
    gasSponsorship?: GasSponsorshipCreateNestedManyWithoutSponsorWalletInput
  }

  export type WalletUncheckedCreateInput = {
    id?: string
    address: string
    chainId: number
    type?: $Enums.WalletType
    userId?: string | null
    organizationId?: string | null
    smartWalletFactory?: string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    allowlist?: boolean
    blocklist?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    primaryForUsers?: UserUncheckedCreateNestedManyWithoutPrimaryWalletInput
    agent?: AgentUncheckedCreateNestedOneWithoutAgentWalletInput
    transactions?: BlockchainTransactionUncheckedCreateNestedManyWithoutWalletInput
    gasSponsorship?: GasSponsorshipUncheckedCreateNestedManyWithoutSponsorWalletInput
  }

  export type WalletUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    type?: EnumWalletTypeFieldUpdateOperationsInput | $Enums.WalletType
    smartWalletFactory?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    allowlist?: BoolFieldUpdateOperationsInput | boolean
    blocklist?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneWithoutOwnedWalletsNestedInput
    organization?: OrganizationUpdateOneWithoutWalletsNestedInput
    primaryForUsers?: UserUpdateManyWithoutPrimaryWalletNestedInput
    agent?: AgentUpdateOneWithoutAgentWalletNestedInput
    transactions?: BlockchainTransactionUpdateManyWithoutWalletNestedInput
    gasSponsorship?: GasSponsorshipUpdateManyWithoutSponsorWalletNestedInput
  }

  export type WalletUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    type?: EnumWalletTypeFieldUpdateOperationsInput | $Enums.WalletType
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletFactory?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    allowlist?: BoolFieldUpdateOperationsInput | boolean
    blocklist?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    primaryForUsers?: UserUncheckedUpdateManyWithoutPrimaryWalletNestedInput
    agent?: AgentUncheckedUpdateOneWithoutAgentWalletNestedInput
    transactions?: BlockchainTransactionUncheckedUpdateManyWithoutWalletNestedInput
    gasSponsorship?: GasSponsorshipUncheckedUpdateManyWithoutSponsorWalletNestedInput
  }

  export type WalletCreateManyInput = {
    id?: string
    address: string
    chainId: number
    type?: $Enums.WalletType
    userId?: string | null
    organizationId?: string | null
    smartWalletFactory?: string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    allowlist?: boolean
    blocklist?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type WalletUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    type?: EnumWalletTypeFieldUpdateOperationsInput | $Enums.WalletType
    smartWalletFactory?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    allowlist?: BoolFieldUpdateOperationsInput | boolean
    blocklist?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WalletUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    type?: EnumWalletTypeFieldUpdateOperationsInput | $Enums.WalletType
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletFactory?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    allowlist?: BoolFieldUpdateOperationsInput | boolean
    blocklist?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BlockchainTransactionCreateInput = {
    id?: string
    hash: string
    chainId: number
    fromAddress: string
    toAddress?: string | null
    value: string
    data?: string | null
    gasLimit?: string | null
    gasPrice?: string | null
    nonce?: number | null
    status?: $Enums.BlockchainTxStatus
    blockNumber?: number | null
    confirmations?: number
    isSponsored?: boolean
    createdAt?: Date | string
    minedAt?: Date | string | null
    gasSponsorship?: GasSponsorshipCreateNestedOneWithoutTransactionsInput
    wallet: WalletCreateNestedOneWithoutTransactionsInput
    paymentOrder?: PaymentOrderCreateNestedOneWithoutBlockchainTxsInput
  }

  export type BlockchainTransactionUncheckedCreateInput = {
    id?: string
    hash: string
    chainId: number
    fromAddress: string
    toAddress?: string | null
    value: string
    data?: string | null
    gasLimit?: string | null
    gasPrice?: string | null
    nonce?: number | null
    status?: $Enums.BlockchainTxStatus
    blockNumber?: number | null
    confirmations?: number
    isSponsored?: boolean
    sponsorshipId?: string | null
    walletId: string
    paymentOrderId?: string | null
    createdAt?: Date | string
    minedAt?: Date | string | null
  }

  export type BlockchainTransactionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    fromAddress?: StringFieldUpdateOperationsInput | string
    toAddress?: NullableStringFieldUpdateOperationsInput | string | null
    value?: StringFieldUpdateOperationsInput | string
    data?: NullableStringFieldUpdateOperationsInput | string | null
    gasLimit?: NullableStringFieldUpdateOperationsInput | string | null
    gasPrice?: NullableStringFieldUpdateOperationsInput | string | null
    nonce?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumBlockchainTxStatusFieldUpdateOperationsInput | $Enums.BlockchainTxStatus
    blockNumber?: NullableIntFieldUpdateOperationsInput | number | null
    confirmations?: IntFieldUpdateOperationsInput | number
    isSponsored?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    minedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gasSponsorship?: GasSponsorshipUpdateOneWithoutTransactionsNestedInput
    wallet?: WalletUpdateOneRequiredWithoutTransactionsNestedInput
    paymentOrder?: PaymentOrderUpdateOneWithoutBlockchainTxsNestedInput
  }

  export type BlockchainTransactionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    fromAddress?: StringFieldUpdateOperationsInput | string
    toAddress?: NullableStringFieldUpdateOperationsInput | string | null
    value?: StringFieldUpdateOperationsInput | string
    data?: NullableStringFieldUpdateOperationsInput | string | null
    gasLimit?: NullableStringFieldUpdateOperationsInput | string | null
    gasPrice?: NullableStringFieldUpdateOperationsInput | string | null
    nonce?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumBlockchainTxStatusFieldUpdateOperationsInput | $Enums.BlockchainTxStatus
    blockNumber?: NullableIntFieldUpdateOperationsInput | number | null
    confirmations?: IntFieldUpdateOperationsInput | number
    isSponsored?: BoolFieldUpdateOperationsInput | boolean
    sponsorshipId?: NullableStringFieldUpdateOperationsInput | string | null
    walletId?: StringFieldUpdateOperationsInput | string
    paymentOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    minedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BlockchainTransactionCreateManyInput = {
    id?: string
    hash: string
    chainId: number
    fromAddress: string
    toAddress?: string | null
    value: string
    data?: string | null
    gasLimit?: string | null
    gasPrice?: string | null
    nonce?: number | null
    status?: $Enums.BlockchainTxStatus
    blockNumber?: number | null
    confirmations?: number
    isSponsored?: boolean
    sponsorshipId?: string | null
    walletId: string
    paymentOrderId?: string | null
    createdAt?: Date | string
    minedAt?: Date | string | null
  }

  export type BlockchainTransactionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    fromAddress?: StringFieldUpdateOperationsInput | string
    toAddress?: NullableStringFieldUpdateOperationsInput | string | null
    value?: StringFieldUpdateOperationsInput | string
    data?: NullableStringFieldUpdateOperationsInput | string | null
    gasLimit?: NullableStringFieldUpdateOperationsInput | string | null
    gasPrice?: NullableStringFieldUpdateOperationsInput | string | null
    nonce?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumBlockchainTxStatusFieldUpdateOperationsInput | $Enums.BlockchainTxStatus
    blockNumber?: NullableIntFieldUpdateOperationsInput | number | null
    confirmations?: IntFieldUpdateOperationsInput | number
    isSponsored?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    minedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BlockchainTransactionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    fromAddress?: StringFieldUpdateOperationsInput | string
    toAddress?: NullableStringFieldUpdateOperationsInput | string | null
    value?: StringFieldUpdateOperationsInput | string
    data?: NullableStringFieldUpdateOperationsInput | string | null
    gasLimit?: NullableStringFieldUpdateOperationsInput | string | null
    gasPrice?: NullableStringFieldUpdateOperationsInput | string | null
    nonce?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumBlockchainTxStatusFieldUpdateOperationsInput | $Enums.BlockchainTxStatus
    blockNumber?: NullableIntFieldUpdateOperationsInput | number | null
    confirmations?: IntFieldUpdateOperationsInput | number
    isSponsored?: BoolFieldUpdateOperationsInput | boolean
    sponsorshipId?: NullableStringFieldUpdateOperationsInput | string | null
    walletId?: StringFieldUpdateOperationsInput | string
    paymentOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    minedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type GasSponsorshipCreateInput = {
    id?: string
    maxGasAmount: string
    usedGasAmount?: string
    maxTransactions?: number | null
    usedTransactions?: number
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    sponsorWallet: WalletCreateNestedOneWithoutGasSponsorshipInput
    transactions?: BlockchainTransactionCreateNestedManyWithoutGasSponsorshipInput
  }

  export type GasSponsorshipUncheckedCreateInput = {
    id?: string
    sponsorWalletId: string
    maxGasAmount: string
    usedGasAmount?: string
    maxTransactions?: number | null
    usedTransactions?: number
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    transactions?: BlockchainTransactionUncheckedCreateNestedManyWithoutGasSponsorshipInput
  }

  export type GasSponsorshipUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    maxGasAmount?: StringFieldUpdateOperationsInput | string
    usedGasAmount?: StringFieldUpdateOperationsInput | string
    maxTransactions?: NullableIntFieldUpdateOperationsInput | number | null
    usedTransactions?: IntFieldUpdateOperationsInput | number
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sponsorWallet?: WalletUpdateOneRequiredWithoutGasSponsorshipNestedInput
    transactions?: BlockchainTransactionUpdateManyWithoutGasSponsorshipNestedInput
  }

  export type GasSponsorshipUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sponsorWalletId?: StringFieldUpdateOperationsInput | string
    maxGasAmount?: StringFieldUpdateOperationsInput | string
    usedGasAmount?: StringFieldUpdateOperationsInput | string
    maxTransactions?: NullableIntFieldUpdateOperationsInput | number | null
    usedTransactions?: IntFieldUpdateOperationsInput | number
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    transactions?: BlockchainTransactionUncheckedUpdateManyWithoutGasSponsorshipNestedInput
  }

  export type GasSponsorshipCreateManyInput = {
    id?: string
    sponsorWalletId: string
    maxGasAmount: string
    usedGasAmount?: string
    maxTransactions?: number | null
    usedTransactions?: number
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GasSponsorshipUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    maxGasAmount?: StringFieldUpdateOperationsInput | string
    usedGasAmount?: StringFieldUpdateOperationsInput | string
    maxTransactions?: NullableIntFieldUpdateOperationsInput | number | null
    usedTransactions?: IntFieldUpdateOperationsInput | number
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GasSponsorshipUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sponsorWalletId?: StringFieldUpdateOperationsInput | string
    maxGasAmount?: StringFieldUpdateOperationsInput | string
    usedGasAmount?: StringFieldUpdateOperationsInput | string
    maxTransactions?: NullableIntFieldUpdateOperationsInput | number | null
    usedTransactions?: IntFieldUpdateOperationsInput | number
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductCreateInput = {
    id?: string
    name: string
    description?: string | null
    type?: $Enums.ProductType
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    images?: ProductCreateimagesInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutProductsInput
    prices?: PriceCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateInput = {
    id?: string
    organizationId: string
    name: string
    description?: string | null
    type?: $Enums.ProductType
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    images?: ProductCreateimagesInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    prices?: PriceUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    images?: ProductUpdateimagesInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutProductsNestedInput
    prices?: PriceUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    images?: ProductUpdateimagesInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    prices?: PriceUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductCreateManyInput = {
    id?: string
    organizationId: string
    name: string
    description?: string | null
    type?: $Enums.ProductType
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    images?: ProductCreateimagesInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    images?: ProductUpdateimagesInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    images?: ProductUpdateimagesInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PriceCreateInput = {
    id?: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    type?: $Enums.PriceType
    interval?: $Enums.BillingInterval | null
    intervalCount?: number
    trialPeriodDays?: number | null
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutPricesInput
    subscriptionItems?: SubscriptionItemCreateNestedManyWithoutPriceInput
    paymentLinks?: PaymentLinkCreateNestedManyWithoutPriceInput
  }

  export type PriceUncheckedCreateInput = {
    id?: string
    productId: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    type?: $Enums.PriceType
    interval?: $Enums.BillingInterval | null
    intervalCount?: number
    trialPeriodDays?: number | null
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    subscriptionItems?: SubscriptionItemUncheckedCreateNestedManyWithoutPriceInput
    paymentLinks?: PaymentLinkUncheckedCreateNestedManyWithoutPriceInput
  }

  export type PriceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    type?: EnumPriceTypeFieldUpdateOperationsInput | $Enums.PriceType
    interval?: NullableEnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval | null
    intervalCount?: IntFieldUpdateOperationsInput | number
    trialPeriodDays?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutPricesNestedInput
    subscriptionItems?: SubscriptionItemUpdateManyWithoutPriceNestedInput
    paymentLinks?: PaymentLinkUpdateManyWithoutPriceNestedInput
  }

  export type PriceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    type?: EnumPriceTypeFieldUpdateOperationsInput | $Enums.PriceType
    interval?: NullableEnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval | null
    intervalCount?: IntFieldUpdateOperationsInput | number
    trialPeriodDays?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    subscriptionItems?: SubscriptionItemUncheckedUpdateManyWithoutPriceNestedInput
    paymentLinks?: PaymentLinkUncheckedUpdateManyWithoutPriceNestedInput
  }

  export type PriceCreateManyInput = {
    id?: string
    productId: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    type?: $Enums.PriceType
    interval?: $Enums.BillingInterval | null
    intervalCount?: number
    trialPeriodDays?: number | null
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PriceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    type?: EnumPriceTypeFieldUpdateOperationsInput | $Enums.PriceType
    interval?: NullableEnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval | null
    intervalCount?: IntFieldUpdateOperationsInput | number
    trialPeriodDays?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PriceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    type?: EnumPriceTypeFieldUpdateOperationsInput | $Enums.PriceType
    interval?: NullableEnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval | null
    intervalCount?: IntFieldUpdateOperationsInput | number
    trialPeriodDays?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentLinkCreateInput = {
    id?: string
    title: string
    description?: string | null
    referenceId?: string | null
    shortCode: string
    qrCode?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    targetAmount?: Decimal | DecimalJsLike | number | string | null
    targetCurrency?: string | null
    smartContractAddress?: string | null
    smartContractChainId?: number | null
    tokenAddress?: string | null
    status?: $Enums.PaymentLinkStatus
    allowMultiplePayments?: boolean
    requiresKyc?: boolean
    expiresAt?: Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutPaymentLinksInput
    createdBy: UserCreateNestedOneWithoutPaymentLinksInput
    executingAgent: AgentCreateNestedOneWithoutPaymentLinksInput
    price?: PriceCreateNestedOneWithoutPaymentLinksInput
    paymentOrders?: PaymentOrderCreateNestedManyWithoutPaymentLinkInput
  }

  export type PaymentLinkUncheckedCreateInput = {
    id?: string
    organizationId: string
    createdById: string
    executingAgentId: string
    title: string
    description?: string | null
    referenceId?: string | null
    shortCode: string
    qrCode?: string | null
    priceId?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    targetAmount?: Decimal | DecimalJsLike | number | string | null
    targetCurrency?: string | null
    smartContractAddress?: string | null
    smartContractChainId?: number | null
    tokenAddress?: string | null
    status?: $Enums.PaymentLinkStatus
    allowMultiplePayments?: boolean
    requiresKyc?: boolean
    expiresAt?: Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    paymentOrders?: PaymentOrderUncheckedCreateNestedManyWithoutPaymentLinkInput
  }

  export type PaymentLinkUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    shortCode?: StringFieldUpdateOperationsInput | string
    qrCode?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    targetAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    targetCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractChainId?: NullableIntFieldUpdateOperationsInput | number | null
    tokenAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentLinkStatusFieldUpdateOperationsInput | $Enums.PaymentLinkStatus
    allowMultiplePayments?: BoolFieldUpdateOperationsInput | boolean
    requiresKyc?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutPaymentLinksNestedInput
    createdBy?: UserUpdateOneRequiredWithoutPaymentLinksNestedInput
    executingAgent?: AgentUpdateOneRequiredWithoutPaymentLinksNestedInput
    price?: PriceUpdateOneWithoutPaymentLinksNestedInput
    paymentOrders?: PaymentOrderUpdateManyWithoutPaymentLinkNestedInput
  }

  export type PaymentLinkUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    executingAgentId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    shortCode?: StringFieldUpdateOperationsInput | string
    qrCode?: NullableStringFieldUpdateOperationsInput | string | null
    priceId?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    targetAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    targetCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractChainId?: NullableIntFieldUpdateOperationsInput | number | null
    tokenAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentLinkStatusFieldUpdateOperationsInput | $Enums.PaymentLinkStatus
    allowMultiplePayments?: BoolFieldUpdateOperationsInput | boolean
    requiresKyc?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentOrders?: PaymentOrderUncheckedUpdateManyWithoutPaymentLinkNestedInput
  }

  export type PaymentLinkCreateManyInput = {
    id?: string
    organizationId: string
    createdById: string
    executingAgentId: string
    title: string
    description?: string | null
    referenceId?: string | null
    shortCode: string
    qrCode?: string | null
    priceId?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    targetAmount?: Decimal | DecimalJsLike | number | string | null
    targetCurrency?: string | null
    smartContractAddress?: string | null
    smartContractChainId?: number | null
    tokenAddress?: string | null
    status?: $Enums.PaymentLinkStatus
    allowMultiplePayments?: boolean
    requiresKyc?: boolean
    expiresAt?: Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentLinkUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    shortCode?: StringFieldUpdateOperationsInput | string
    qrCode?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    targetAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    targetCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractChainId?: NullableIntFieldUpdateOperationsInput | number | null
    tokenAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentLinkStatusFieldUpdateOperationsInput | $Enums.PaymentLinkStatus
    allowMultiplePayments?: BoolFieldUpdateOperationsInput | boolean
    requiresKyc?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentLinkUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    executingAgentId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    shortCode?: StringFieldUpdateOperationsInput | string
    qrCode?: NullableStringFieldUpdateOperationsInput | string | null
    priceId?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    targetAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    targetCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractChainId?: NullableIntFieldUpdateOperationsInput | number | null
    tokenAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentLinkStatusFieldUpdateOperationsInput | $Enums.PaymentLinkStatus
    allowMultiplePayments?: BoolFieldUpdateOperationsInput | boolean
    requiresKyc?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentOrderCreateInput = {
    id?: string
    orderNumber: string
    status?: $Enums.PaymentOrderStatus
    requestedAmount: Decimal | DecimalJsLike | number | string
    requestedCurrency: string
    settledAmount?: Decimal | DecimalJsLike | number | string | null
    settledCurrency?: string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: Date | string | null
    exchangeRateSource?: string | null
    platformFee?: Decimal | DecimalJsLike | number | string
    providerFee?: Decimal | DecimalJsLike | number | string
    networkFee?: Decimal | DecimalJsLike | number | string
    totalFee?: Decimal | DecimalJsLike | number | string
    customerEmail?: string | null
    customerName?: string | null
    customerWallet?: string | null
    customerIp?: string | null
    customerCountry?: string | null
    riskScore?: number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: $Enums.KycStatus
    kycVerifiedAt?: Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    failureCode?: string | null
    retryCount?: number
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutPaymentOrdersInput
    paymentLink: PaymentLinkCreateNestedOneWithoutPaymentOrdersInput
    customer?: CustomerCreateNestedOneWithoutPaymentOrdersInput
    providerTransactions?: ProviderTransactionCreateNestedManyWithoutPaymentOrderInput
    blockchainTxs?: BlockchainTransactionCreateNestedManyWithoutPaymentOrderInput
    events?: PaymentEventCreateNestedManyWithoutPaymentOrderInput
    agentDecisions?: AgentDecisionCreateNestedManyWithoutPaymentOrderInput
    manualSteps?: ManualProcessStepCreateNestedManyWithoutPaymentOrderInput
  }

  export type PaymentOrderUncheckedCreateInput = {
    id?: string
    organizationId: string
    paymentLinkId: string
    customerId?: string | null
    orderNumber: string
    status?: $Enums.PaymentOrderStatus
    requestedAmount: Decimal | DecimalJsLike | number | string
    requestedCurrency: string
    settledAmount?: Decimal | DecimalJsLike | number | string | null
    settledCurrency?: string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: Date | string | null
    exchangeRateSource?: string | null
    platformFee?: Decimal | DecimalJsLike | number | string
    providerFee?: Decimal | DecimalJsLike | number | string
    networkFee?: Decimal | DecimalJsLike | number | string
    totalFee?: Decimal | DecimalJsLike | number | string
    customerEmail?: string | null
    customerName?: string | null
    customerWallet?: string | null
    customerIp?: string | null
    customerCountry?: string | null
    riskScore?: number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: $Enums.KycStatus
    kycVerifiedAt?: Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    failureCode?: string | null
    retryCount?: number
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    updatedAt?: Date | string
    providerTransactions?: ProviderTransactionUncheckedCreateNestedManyWithoutPaymentOrderInput
    blockchainTxs?: BlockchainTransactionUncheckedCreateNestedManyWithoutPaymentOrderInput
    events?: PaymentEventUncheckedCreateNestedManyWithoutPaymentOrderInput
    agentDecisions?: AgentDecisionUncheckedCreateNestedManyWithoutPaymentOrderInput
    manualSteps?: ManualProcessStepUncheckedCreateNestedManyWithoutPaymentOrderInput
  }

  export type PaymentOrderUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentOrderStatusFieldUpdateOperationsInput | $Enums.PaymentOrderStatus
    requestedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    requestedCurrency?: StringFieldUpdateOperationsInput | string
    settledAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    settledCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exchangeRateSource?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    providerFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    networkFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    customerIp?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    riskScore?: NullableIntFieldUpdateOperationsInput | number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    failureCode?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutPaymentOrdersNestedInput
    paymentLink?: PaymentLinkUpdateOneRequiredWithoutPaymentOrdersNestedInput
    customer?: CustomerUpdateOneWithoutPaymentOrdersNestedInput
    providerTransactions?: ProviderTransactionUpdateManyWithoutPaymentOrderNestedInput
    blockchainTxs?: BlockchainTransactionUpdateManyWithoutPaymentOrderNestedInput
    events?: PaymentEventUpdateManyWithoutPaymentOrderNestedInput
    agentDecisions?: AgentDecisionUpdateManyWithoutPaymentOrderNestedInput
    manualSteps?: ManualProcessStepUpdateManyWithoutPaymentOrderNestedInput
  }

  export type PaymentOrderUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    paymentLinkId?: StringFieldUpdateOperationsInput | string
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentOrderStatusFieldUpdateOperationsInput | $Enums.PaymentOrderStatus
    requestedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    requestedCurrency?: StringFieldUpdateOperationsInput | string
    settledAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    settledCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exchangeRateSource?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    providerFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    networkFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    customerIp?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    riskScore?: NullableIntFieldUpdateOperationsInput | number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    failureCode?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    providerTransactions?: ProviderTransactionUncheckedUpdateManyWithoutPaymentOrderNestedInput
    blockchainTxs?: BlockchainTransactionUncheckedUpdateManyWithoutPaymentOrderNestedInput
    events?: PaymentEventUncheckedUpdateManyWithoutPaymentOrderNestedInput
    agentDecisions?: AgentDecisionUncheckedUpdateManyWithoutPaymentOrderNestedInput
    manualSteps?: ManualProcessStepUncheckedUpdateManyWithoutPaymentOrderNestedInput
  }

  export type PaymentOrderCreateManyInput = {
    id?: string
    organizationId: string
    paymentLinkId: string
    customerId?: string | null
    orderNumber: string
    status?: $Enums.PaymentOrderStatus
    requestedAmount: Decimal | DecimalJsLike | number | string
    requestedCurrency: string
    settledAmount?: Decimal | DecimalJsLike | number | string | null
    settledCurrency?: string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: Date | string | null
    exchangeRateSource?: string | null
    platformFee?: Decimal | DecimalJsLike | number | string
    providerFee?: Decimal | DecimalJsLike | number | string
    networkFee?: Decimal | DecimalJsLike | number | string
    totalFee?: Decimal | DecimalJsLike | number | string
    customerEmail?: string | null
    customerName?: string | null
    customerWallet?: string | null
    customerIp?: string | null
    customerCountry?: string | null
    riskScore?: number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: $Enums.KycStatus
    kycVerifiedAt?: Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    failureCode?: string | null
    retryCount?: number
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type PaymentOrderUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentOrderStatusFieldUpdateOperationsInput | $Enums.PaymentOrderStatus
    requestedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    requestedCurrency?: StringFieldUpdateOperationsInput | string
    settledAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    settledCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exchangeRateSource?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    providerFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    networkFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    customerIp?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    riskScore?: NullableIntFieldUpdateOperationsInput | number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    failureCode?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentOrderUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    paymentLinkId?: StringFieldUpdateOperationsInput | string
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentOrderStatusFieldUpdateOperationsInput | $Enums.PaymentOrderStatus
    requestedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    requestedCurrency?: StringFieldUpdateOperationsInput | string
    settledAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    settledCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exchangeRateSource?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    providerFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    networkFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    customerIp?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    riskScore?: NullableIntFieldUpdateOperationsInput | number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    failureCode?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProviderCreateInput = {
    id?: string
    code: string
    name: string
    type: $Enums.ProviderType
    supportedCountries?: ProviderCreatesupportedCountriesInput | string[]
    supportedCurrencies?: ProviderCreatesupportedCurrenciesInput | string[]
    paymentMethods?: ProviderCreatepaymentMethodsInput | string[]
    features: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    healthStatus?: $Enums.ProviderHealth
    lastHealthCheck?: Date | string
    avgResponseTime?: number | null
    successRate?: Decimal | DecimalJsLike | number | string | null
    configs?: ProviderConfigCreateNestedManyWithoutProviderInput
    routes?: ProviderRouteCreateNestedManyWithoutProviderInput
    transactions?: ProviderTransactionCreateNestedManyWithoutProviderInput
  }

  export type ProviderUncheckedCreateInput = {
    id?: string
    code: string
    name: string
    type: $Enums.ProviderType
    supportedCountries?: ProviderCreatesupportedCountriesInput | string[]
    supportedCurrencies?: ProviderCreatesupportedCurrenciesInput | string[]
    paymentMethods?: ProviderCreatepaymentMethodsInput | string[]
    features: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    healthStatus?: $Enums.ProviderHealth
    lastHealthCheck?: Date | string
    avgResponseTime?: number | null
    successRate?: Decimal | DecimalJsLike | number | string | null
    configs?: ProviderConfigUncheckedCreateNestedManyWithoutProviderInput
    routes?: ProviderRouteUncheckedCreateNestedManyWithoutProviderInput
    transactions?: ProviderTransactionUncheckedCreateNestedManyWithoutProviderInput
  }

  export type ProviderUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumProviderTypeFieldUpdateOperationsInput | $Enums.ProviderType
    supportedCountries?: ProviderUpdatesupportedCountriesInput | string[]
    supportedCurrencies?: ProviderUpdatesupportedCurrenciesInput | string[]
    paymentMethods?: ProviderUpdatepaymentMethodsInput | string[]
    features?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    healthStatus?: EnumProviderHealthFieldUpdateOperationsInput | $Enums.ProviderHealth
    lastHealthCheck?: DateTimeFieldUpdateOperationsInput | Date | string
    avgResponseTime?: NullableIntFieldUpdateOperationsInput | number | null
    successRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    configs?: ProviderConfigUpdateManyWithoutProviderNestedInput
    routes?: ProviderRouteUpdateManyWithoutProviderNestedInput
    transactions?: ProviderTransactionUpdateManyWithoutProviderNestedInput
  }

  export type ProviderUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumProviderTypeFieldUpdateOperationsInput | $Enums.ProviderType
    supportedCountries?: ProviderUpdatesupportedCountriesInput | string[]
    supportedCurrencies?: ProviderUpdatesupportedCurrenciesInput | string[]
    paymentMethods?: ProviderUpdatepaymentMethodsInput | string[]
    features?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    healthStatus?: EnumProviderHealthFieldUpdateOperationsInput | $Enums.ProviderHealth
    lastHealthCheck?: DateTimeFieldUpdateOperationsInput | Date | string
    avgResponseTime?: NullableIntFieldUpdateOperationsInput | number | null
    successRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    configs?: ProviderConfigUncheckedUpdateManyWithoutProviderNestedInput
    routes?: ProviderRouteUncheckedUpdateManyWithoutProviderNestedInput
    transactions?: ProviderTransactionUncheckedUpdateManyWithoutProviderNestedInput
  }

  export type ProviderCreateManyInput = {
    id?: string
    code: string
    name: string
    type: $Enums.ProviderType
    supportedCountries?: ProviderCreatesupportedCountriesInput | string[]
    supportedCurrencies?: ProviderCreatesupportedCurrenciesInput | string[]
    paymentMethods?: ProviderCreatepaymentMethodsInput | string[]
    features: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    healthStatus?: $Enums.ProviderHealth
    lastHealthCheck?: Date | string
    avgResponseTime?: number | null
    successRate?: Decimal | DecimalJsLike | number | string | null
  }

  export type ProviderUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumProviderTypeFieldUpdateOperationsInput | $Enums.ProviderType
    supportedCountries?: ProviderUpdatesupportedCountriesInput | string[]
    supportedCurrencies?: ProviderUpdatesupportedCurrenciesInput | string[]
    paymentMethods?: ProviderUpdatepaymentMethodsInput | string[]
    features?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    healthStatus?: EnumProviderHealthFieldUpdateOperationsInput | $Enums.ProviderHealth
    lastHealthCheck?: DateTimeFieldUpdateOperationsInput | Date | string
    avgResponseTime?: NullableIntFieldUpdateOperationsInput | number | null
    successRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type ProviderUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumProviderTypeFieldUpdateOperationsInput | $Enums.ProviderType
    supportedCountries?: ProviderUpdatesupportedCountriesInput | string[]
    supportedCurrencies?: ProviderUpdatesupportedCurrenciesInput | string[]
    paymentMethods?: ProviderUpdatepaymentMethodsInput | string[]
    features?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    healthStatus?: EnumProviderHealthFieldUpdateOperationsInput | $Enums.ProviderHealth
    lastHealthCheck?: DateTimeFieldUpdateOperationsInput | Date | string
    avgResponseTime?: NullableIntFieldUpdateOperationsInput | number | null
    successRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type ProviderConfigCreateInput = {
    id?: string
    environment?: $Enums.Environment
    credentials: JsonNullValueInput | InputJsonValue
    webhookSecret?: string | null
    settings?: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutProvidersInput
    provider: ProviderCreateNestedOneWithoutConfigsInput
  }

  export type ProviderConfigUncheckedCreateInput = {
    id?: string
    organizationId: string
    providerId: string
    environment?: $Enums.Environment
    credentials: JsonNullValueInput | InputJsonValue
    webhookSecret?: string | null
    settings?: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProviderConfigUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    environment?: EnumEnvironmentFieldUpdateOperationsInput | $Enums.Environment
    credentials?: JsonNullValueInput | InputJsonValue
    webhookSecret?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutProvidersNestedInput
    provider?: ProviderUpdateOneRequiredWithoutConfigsNestedInput
  }

  export type ProviderConfigUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    environment?: EnumEnvironmentFieldUpdateOperationsInput | $Enums.Environment
    credentials?: JsonNullValueInput | InputJsonValue
    webhookSecret?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProviderConfigCreateManyInput = {
    id?: string
    organizationId: string
    providerId: string
    environment?: $Enums.Environment
    credentials: JsonNullValueInput | InputJsonValue
    webhookSecret?: string | null
    settings?: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProviderConfigUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    environment?: EnumEnvironmentFieldUpdateOperationsInput | $Enums.Environment
    credentials?: JsonNullValueInput | InputJsonValue
    webhookSecret?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProviderConfigUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    environment?: EnumEnvironmentFieldUpdateOperationsInput | $Enums.Environment
    credentials?: JsonNullValueInput | InputJsonValue
    webhookSecret?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProviderRouteCreateInput = {
    id?: string
    name: string
    fromCountry: string
    toCountry: string
    fromCurrency: string
    toCurrency: string
    paymentMethod: string
    fixedFee: Decimal | DecimalJsLike | number | string
    percentageFee: Decimal | DecimalJsLike | number | string
    minAmount: Decimal | DecimalJsLike | number | string
    maxAmount: Decimal | DecimalJsLike | number | string
    estimatedTime: number
    cutoffTime?: string | null
    workingDays?: ProviderRouteCreateworkingDaysInput | string[]
    isActive?: boolean
    priority?: number
    provider: ProviderCreateNestedOneWithoutRoutesInput
  }

  export type ProviderRouteUncheckedCreateInput = {
    id?: string
    providerId: string
    name: string
    fromCountry: string
    toCountry: string
    fromCurrency: string
    toCurrency: string
    paymentMethod: string
    fixedFee: Decimal | DecimalJsLike | number | string
    percentageFee: Decimal | DecimalJsLike | number | string
    minAmount: Decimal | DecimalJsLike | number | string
    maxAmount: Decimal | DecimalJsLike | number | string
    estimatedTime: number
    cutoffTime?: string | null
    workingDays?: ProviderRouteCreateworkingDaysInput | string[]
    isActive?: boolean
    priority?: number
  }

  export type ProviderRouteUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    fromCountry?: StringFieldUpdateOperationsInput | string
    toCountry?: StringFieldUpdateOperationsInput | string
    fromCurrency?: StringFieldUpdateOperationsInput | string
    toCurrency?: StringFieldUpdateOperationsInput | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    fixedFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentageFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estimatedTime?: IntFieldUpdateOperationsInput | number
    cutoffTime?: NullableStringFieldUpdateOperationsInput | string | null
    workingDays?: ProviderRouteUpdateworkingDaysInput | string[]
    isActive?: BoolFieldUpdateOperationsInput | boolean
    priority?: IntFieldUpdateOperationsInput | number
    provider?: ProviderUpdateOneRequiredWithoutRoutesNestedInput
  }

  export type ProviderRouteUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    fromCountry?: StringFieldUpdateOperationsInput | string
    toCountry?: StringFieldUpdateOperationsInput | string
    fromCurrency?: StringFieldUpdateOperationsInput | string
    toCurrency?: StringFieldUpdateOperationsInput | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    fixedFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentageFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estimatedTime?: IntFieldUpdateOperationsInput | number
    cutoffTime?: NullableStringFieldUpdateOperationsInput | string | null
    workingDays?: ProviderRouteUpdateworkingDaysInput | string[]
    isActive?: BoolFieldUpdateOperationsInput | boolean
    priority?: IntFieldUpdateOperationsInput | number
  }

  export type ProviderRouteCreateManyInput = {
    id?: string
    providerId: string
    name: string
    fromCountry: string
    toCountry: string
    fromCurrency: string
    toCurrency: string
    paymentMethod: string
    fixedFee: Decimal | DecimalJsLike | number | string
    percentageFee: Decimal | DecimalJsLike | number | string
    minAmount: Decimal | DecimalJsLike | number | string
    maxAmount: Decimal | DecimalJsLike | number | string
    estimatedTime: number
    cutoffTime?: string | null
    workingDays?: ProviderRouteCreateworkingDaysInput | string[]
    isActive?: boolean
    priority?: number
  }

  export type ProviderRouteUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    fromCountry?: StringFieldUpdateOperationsInput | string
    toCountry?: StringFieldUpdateOperationsInput | string
    fromCurrency?: StringFieldUpdateOperationsInput | string
    toCurrency?: StringFieldUpdateOperationsInput | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    fixedFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentageFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estimatedTime?: IntFieldUpdateOperationsInput | number
    cutoffTime?: NullableStringFieldUpdateOperationsInput | string | null
    workingDays?: ProviderRouteUpdateworkingDaysInput | string[]
    isActive?: BoolFieldUpdateOperationsInput | boolean
    priority?: IntFieldUpdateOperationsInput | number
  }

  export type ProviderRouteUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    fromCountry?: StringFieldUpdateOperationsInput | string
    toCountry?: StringFieldUpdateOperationsInput | string
    fromCurrency?: StringFieldUpdateOperationsInput | string
    toCurrency?: StringFieldUpdateOperationsInput | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    fixedFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentageFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estimatedTime?: IntFieldUpdateOperationsInput | number
    cutoffTime?: NullableStringFieldUpdateOperationsInput | string | null
    workingDays?: ProviderRouteUpdateworkingDaysInput | string[]
    isActive?: BoolFieldUpdateOperationsInput | boolean
    priority?: IntFieldUpdateOperationsInput | number
  }

  export type ProviderTransactionCreateInput = {
    id?: string
    type: $Enums.ProviderTxType
    externalId?: string | null
    status: string
    request: JsonNullValueInput | InputJsonValue
    response?: NullableJsonNullValueInput | InputJsonValue
    errorCode?: string | null
    errorMessage?: string | null
    isRetryable?: boolean
    createdAt?: Date | string
    completedAt?: Date | string | null
    paymentOrder: PaymentOrderCreateNestedOneWithoutProviderTransactionsInput
    provider: ProviderCreateNestedOneWithoutTransactionsInput
  }

  export type ProviderTransactionUncheckedCreateInput = {
    id?: string
    paymentOrderId: string
    providerId: string
    type: $Enums.ProviderTxType
    externalId?: string | null
    status: string
    request: JsonNullValueInput | InputJsonValue
    response?: NullableJsonNullValueInput | InputJsonValue
    errorCode?: string | null
    errorMessage?: string | null
    isRetryable?: boolean
    createdAt?: Date | string
    completedAt?: Date | string | null
  }

  export type ProviderTransactionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumProviderTxTypeFieldUpdateOperationsInput | $Enums.ProviderTxType
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    request?: JsonNullValueInput | InputJsonValue
    response?: NullableJsonNullValueInput | InputJsonValue
    errorCode?: NullableStringFieldUpdateOperationsInput | string | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    isRetryable?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentOrder?: PaymentOrderUpdateOneRequiredWithoutProviderTransactionsNestedInput
    provider?: ProviderUpdateOneRequiredWithoutTransactionsNestedInput
  }

  export type ProviderTransactionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentOrderId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    type?: EnumProviderTxTypeFieldUpdateOperationsInput | $Enums.ProviderTxType
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    request?: JsonNullValueInput | InputJsonValue
    response?: NullableJsonNullValueInput | InputJsonValue
    errorCode?: NullableStringFieldUpdateOperationsInput | string | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    isRetryable?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProviderTransactionCreateManyInput = {
    id?: string
    paymentOrderId: string
    providerId: string
    type: $Enums.ProviderTxType
    externalId?: string | null
    status: string
    request: JsonNullValueInput | InputJsonValue
    response?: NullableJsonNullValueInput | InputJsonValue
    errorCode?: string | null
    errorMessage?: string | null
    isRetryable?: boolean
    createdAt?: Date | string
    completedAt?: Date | string | null
  }

  export type ProviderTransactionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumProviderTxTypeFieldUpdateOperationsInput | $Enums.ProviderTxType
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    request?: JsonNullValueInput | InputJsonValue
    response?: NullableJsonNullValueInput | InputJsonValue
    errorCode?: NullableStringFieldUpdateOperationsInput | string | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    isRetryable?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProviderTransactionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentOrderId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    type?: EnumProviderTxTypeFieldUpdateOperationsInput | $Enums.ProviderTxType
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    request?: JsonNullValueInput | InputJsonValue
    response?: NullableJsonNullValueInput | InputJsonValue
    errorCode?: NullableStringFieldUpdateOperationsInput | string | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    isRetryable?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AgentCreateInput = {
    id?: string
    name: string
    type: $Enums.AgentType
    version: string
    model: string
    graphDefinition: JsonNullValueInput | InputJsonValue
    tools?: AgentCreatetoolsInput | string[]
    systemPrompt?: string | null
    supportedProviders?: AgentCreatesupportedProvidersInput | string[]
    supportedChains?: AgentCreatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    totalExecutions?: number
    avgExecutionTime?: number | null
    successRate?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutAgentsInput
    agentWallet?: WalletCreateNestedOneWithoutAgentInput
    paymentLinks?: PaymentLinkCreateNestedManyWithoutExecutingAgentInput
    decisions?: AgentDecisionCreateNestedManyWithoutAgentInput
    checkpoints?: AgentCheckpointCreateNestedManyWithoutAgentInput
  }

  export type AgentUncheckedCreateInput = {
    id?: string
    organizationId: string
    name: string
    type: $Enums.AgentType
    version: string
    model: string
    agentWalletId?: string | null
    graphDefinition: JsonNullValueInput | InputJsonValue
    tools?: AgentCreatetoolsInput | string[]
    systemPrompt?: string | null
    supportedProviders?: AgentCreatesupportedProvidersInput | string[]
    supportedChains?: AgentCreatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    totalExecutions?: number
    avgExecutionTime?: number | null
    successRate?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paymentLinks?: PaymentLinkUncheckedCreateNestedManyWithoutExecutingAgentInput
    decisions?: AgentDecisionUncheckedCreateNestedManyWithoutAgentInput
    checkpoints?: AgentCheckpointUncheckedCreateNestedManyWithoutAgentInput
  }

  export type AgentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumAgentTypeFieldUpdateOperationsInput | $Enums.AgentType
    version?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    graphDefinition?: JsonNullValueInput | InputJsonValue
    tools?: AgentUpdatetoolsInput | string[]
    systemPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    supportedProviders?: AgentUpdatesupportedProvidersInput | string[]
    supportedChains?: AgentUpdatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    totalExecutions?: IntFieldUpdateOperationsInput | number
    avgExecutionTime?: NullableIntFieldUpdateOperationsInput | number | null
    successRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutAgentsNestedInput
    agentWallet?: WalletUpdateOneWithoutAgentNestedInput
    paymentLinks?: PaymentLinkUpdateManyWithoutExecutingAgentNestedInput
    decisions?: AgentDecisionUpdateManyWithoutAgentNestedInput
    checkpoints?: AgentCheckpointUpdateManyWithoutAgentNestedInput
  }

  export type AgentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumAgentTypeFieldUpdateOperationsInput | $Enums.AgentType
    version?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    agentWalletId?: NullableStringFieldUpdateOperationsInput | string | null
    graphDefinition?: JsonNullValueInput | InputJsonValue
    tools?: AgentUpdatetoolsInput | string[]
    systemPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    supportedProviders?: AgentUpdatesupportedProvidersInput | string[]
    supportedChains?: AgentUpdatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    totalExecutions?: IntFieldUpdateOperationsInput | number
    avgExecutionTime?: NullableIntFieldUpdateOperationsInput | number | null
    successRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentLinks?: PaymentLinkUncheckedUpdateManyWithoutExecutingAgentNestedInput
    decisions?: AgentDecisionUncheckedUpdateManyWithoutAgentNestedInput
    checkpoints?: AgentCheckpointUncheckedUpdateManyWithoutAgentNestedInput
  }

  export type AgentCreateManyInput = {
    id?: string
    organizationId: string
    name: string
    type: $Enums.AgentType
    version: string
    model: string
    agentWalletId?: string | null
    graphDefinition: JsonNullValueInput | InputJsonValue
    tools?: AgentCreatetoolsInput | string[]
    systemPrompt?: string | null
    supportedProviders?: AgentCreatesupportedProvidersInput | string[]
    supportedChains?: AgentCreatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    totalExecutions?: number
    avgExecutionTime?: number | null
    successRate?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AgentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumAgentTypeFieldUpdateOperationsInput | $Enums.AgentType
    version?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    graphDefinition?: JsonNullValueInput | InputJsonValue
    tools?: AgentUpdatetoolsInput | string[]
    systemPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    supportedProviders?: AgentUpdatesupportedProvidersInput | string[]
    supportedChains?: AgentUpdatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    totalExecutions?: IntFieldUpdateOperationsInput | number
    avgExecutionTime?: NullableIntFieldUpdateOperationsInput | number | null
    successRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumAgentTypeFieldUpdateOperationsInput | $Enums.AgentType
    version?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    agentWalletId?: NullableStringFieldUpdateOperationsInput | string | null
    graphDefinition?: JsonNullValueInput | InputJsonValue
    tools?: AgentUpdatetoolsInput | string[]
    systemPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    supportedProviders?: AgentUpdatesupportedProvidersInput | string[]
    supportedChains?: AgentUpdatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    totalExecutions?: IntFieldUpdateOperationsInput | number
    avgExecutionTime?: NullableIntFieldUpdateOperationsInput | number | null
    successRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgentDecisionCreateInput = {
    id?: string
    decisionType: string
    input: JsonNullValueInput | InputJsonValue
    reasoning: JsonNullValueInput | InputJsonValue
    decision: JsonNullValueInput | InputJsonValue
    confidence: Decimal | DecimalJsLike | number | string
    executionTime: number
    tokensUsed?: number | null
    wasOverridden?: boolean
    overriddenBy?: string | null
    overrideReason?: string | null
    createdAt?: Date | string
    agent: AgentCreateNestedOneWithoutDecisionsInput
    paymentOrder?: PaymentOrderCreateNestedOneWithoutAgentDecisionsInput
    interactions?: AgentInteractionCreateNestedManyWithoutAgentDecisionInput
  }

  export type AgentDecisionUncheckedCreateInput = {
    id?: string
    agentId: string
    paymentOrderId?: string | null
    decisionType: string
    input: JsonNullValueInput | InputJsonValue
    reasoning: JsonNullValueInput | InputJsonValue
    decision: JsonNullValueInput | InputJsonValue
    confidence: Decimal | DecimalJsLike | number | string
    executionTime: number
    tokensUsed?: number | null
    wasOverridden?: boolean
    overriddenBy?: string | null
    overrideReason?: string | null
    createdAt?: Date | string
    interactions?: AgentInteractionUncheckedCreateNestedManyWithoutAgentDecisionInput
  }

  export type AgentDecisionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    decisionType?: StringFieldUpdateOperationsInput | string
    input?: JsonNullValueInput | InputJsonValue
    reasoning?: JsonNullValueInput | InputJsonValue
    decision?: JsonNullValueInput | InputJsonValue
    confidence?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    executionTime?: IntFieldUpdateOperationsInput | number
    tokensUsed?: NullableIntFieldUpdateOperationsInput | number | null
    wasOverridden?: BoolFieldUpdateOperationsInput | boolean
    overriddenBy?: NullableStringFieldUpdateOperationsInput | string | null
    overrideReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agent?: AgentUpdateOneRequiredWithoutDecisionsNestedInput
    paymentOrder?: PaymentOrderUpdateOneWithoutAgentDecisionsNestedInput
    interactions?: AgentInteractionUpdateManyWithoutAgentDecisionNestedInput
  }

  export type AgentDecisionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    agentId?: StringFieldUpdateOperationsInput | string
    paymentOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    decisionType?: StringFieldUpdateOperationsInput | string
    input?: JsonNullValueInput | InputJsonValue
    reasoning?: JsonNullValueInput | InputJsonValue
    decision?: JsonNullValueInput | InputJsonValue
    confidence?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    executionTime?: IntFieldUpdateOperationsInput | number
    tokensUsed?: NullableIntFieldUpdateOperationsInput | number | null
    wasOverridden?: BoolFieldUpdateOperationsInput | boolean
    overriddenBy?: NullableStringFieldUpdateOperationsInput | string | null
    overrideReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    interactions?: AgentInteractionUncheckedUpdateManyWithoutAgentDecisionNestedInput
  }

  export type AgentDecisionCreateManyInput = {
    id?: string
    agentId: string
    paymentOrderId?: string | null
    decisionType: string
    input: JsonNullValueInput | InputJsonValue
    reasoning: JsonNullValueInput | InputJsonValue
    decision: JsonNullValueInput | InputJsonValue
    confidence: Decimal | DecimalJsLike | number | string
    executionTime: number
    tokensUsed?: number | null
    wasOverridden?: boolean
    overriddenBy?: string | null
    overrideReason?: string | null
    createdAt?: Date | string
  }

  export type AgentDecisionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    decisionType?: StringFieldUpdateOperationsInput | string
    input?: JsonNullValueInput | InputJsonValue
    reasoning?: JsonNullValueInput | InputJsonValue
    decision?: JsonNullValueInput | InputJsonValue
    confidence?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    executionTime?: IntFieldUpdateOperationsInput | number
    tokensUsed?: NullableIntFieldUpdateOperationsInput | number | null
    wasOverridden?: BoolFieldUpdateOperationsInput | boolean
    overriddenBy?: NullableStringFieldUpdateOperationsInput | string | null
    overrideReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgentDecisionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    agentId?: StringFieldUpdateOperationsInput | string
    paymentOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    decisionType?: StringFieldUpdateOperationsInput | string
    input?: JsonNullValueInput | InputJsonValue
    reasoning?: JsonNullValueInput | InputJsonValue
    decision?: JsonNullValueInput | InputJsonValue
    confidence?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    executionTime?: IntFieldUpdateOperationsInput | number
    tokensUsed?: NullableIntFieldUpdateOperationsInput | number | null
    wasOverridden?: BoolFieldUpdateOperationsInput | boolean
    overriddenBy?: NullableStringFieldUpdateOperationsInput | string | null
    overrideReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgentCheckpointCreateInput = {
    id?: string
    threadId: string
    checkpointId: string
    state: JsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    agent: AgentCreateNestedOneWithoutCheckpointsInput
  }

  export type AgentCheckpointUncheckedCreateInput = {
    id?: string
    agentId: string
    threadId: string
    checkpointId: string
    state: JsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type AgentCheckpointUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    threadId?: StringFieldUpdateOperationsInput | string
    checkpointId?: StringFieldUpdateOperationsInput | string
    state?: JsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agent?: AgentUpdateOneRequiredWithoutCheckpointsNestedInput
  }

  export type AgentCheckpointUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    agentId?: StringFieldUpdateOperationsInput | string
    threadId?: StringFieldUpdateOperationsInput | string
    checkpointId?: StringFieldUpdateOperationsInput | string
    state?: JsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgentCheckpointCreateManyInput = {
    id?: string
    agentId: string
    threadId: string
    checkpointId: string
    state: JsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type AgentCheckpointUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    threadId?: StringFieldUpdateOperationsInput | string
    checkpointId?: StringFieldUpdateOperationsInput | string
    state?: JsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgentCheckpointUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    agentId?: StringFieldUpdateOperationsInput | string
    threadId?: StringFieldUpdateOperationsInput | string
    checkpointId?: StringFieldUpdateOperationsInput | string
    state?: JsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgentInteractionCreateInput = {
    id?: string
    type: $Enums.InteractionType
    message?: string | null
    action?: string | null
    result?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    agentDecision: AgentDecisionCreateNestedOneWithoutInteractionsInput
    user: UserCreateNestedOneWithoutAgentInteractionsInput
  }

  export type AgentInteractionUncheckedCreateInput = {
    id?: string
    agentDecisionId: string
    userId: string
    type: $Enums.InteractionType
    message?: string | null
    action?: string | null
    result?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type AgentInteractionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumInteractionTypeFieldUpdateOperationsInput | $Enums.InteractionType
    message?: NullableStringFieldUpdateOperationsInput | string | null
    action?: NullableStringFieldUpdateOperationsInput | string | null
    result?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agentDecision?: AgentDecisionUpdateOneRequiredWithoutInteractionsNestedInput
    user?: UserUpdateOneRequiredWithoutAgentInteractionsNestedInput
  }

  export type AgentInteractionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    agentDecisionId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: EnumInteractionTypeFieldUpdateOperationsInput | $Enums.InteractionType
    message?: NullableStringFieldUpdateOperationsInput | string | null
    action?: NullableStringFieldUpdateOperationsInput | string | null
    result?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgentInteractionCreateManyInput = {
    id?: string
    agentDecisionId: string
    userId: string
    type: $Enums.InteractionType
    message?: string | null
    action?: string | null
    result?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type AgentInteractionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumInteractionTypeFieldUpdateOperationsInput | $Enums.InteractionType
    message?: NullableStringFieldUpdateOperationsInput | string | null
    action?: NullableStringFieldUpdateOperationsInput | string | null
    result?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgentInteractionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    agentDecisionId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: EnumInteractionTypeFieldUpdateOperationsInput | $Enums.InteractionType
    message?: NullableStringFieldUpdateOperationsInput | string | null
    action?: NullableStringFieldUpdateOperationsInput | string | null
    result?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WebhookCreateInput = {
    id?: string
    url: string
    events?: WebhookCreateeventsInput | string[]
    secret: string
    isActive?: boolean
    failureCount?: number
    lastFailureAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutWebhooksInput
    deliveries?: WebhookDeliveryCreateNestedManyWithoutWebhookInput
  }

  export type WebhookUncheckedCreateInput = {
    id?: string
    organizationId: string
    url: string
    events?: WebhookCreateeventsInput | string[]
    secret: string
    isActive?: boolean
    failureCount?: number
    lastFailureAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveries?: WebhookDeliveryUncheckedCreateNestedManyWithoutWebhookInput
  }

  export type WebhookUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    events?: WebhookUpdateeventsInput | string[]
    secret?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    failureCount?: IntFieldUpdateOperationsInput | number
    lastFailureAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutWebhooksNestedInput
    deliveries?: WebhookDeliveryUpdateManyWithoutWebhookNestedInput
  }

  export type WebhookUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    events?: WebhookUpdateeventsInput | string[]
    secret?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    failureCount?: IntFieldUpdateOperationsInput | number
    lastFailureAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveries?: WebhookDeliveryUncheckedUpdateManyWithoutWebhookNestedInput
  }

  export type WebhookCreateManyInput = {
    id?: string
    organizationId: string
    url: string
    events?: WebhookCreateeventsInput | string[]
    secret: string
    isActive?: boolean
    failureCount?: number
    lastFailureAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type WebhookUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    events?: WebhookUpdateeventsInput | string[]
    secret?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    failureCount?: IntFieldUpdateOperationsInput | number
    lastFailureAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WebhookUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    events?: WebhookUpdateeventsInput | string[]
    secret?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    failureCount?: IntFieldUpdateOperationsInput | number
    lastFailureAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WebhookDeliveryCreateInput = {
    id?: string
    eventType: string
    eventId: string
    payload: JsonNullValueInput | InputJsonValue
    statusCode?: number | null
    response?: string | null
    error?: string | null
    attempts?: number
    nextRetryAt?: Date | string | null
    createdAt?: Date | string
    deliveredAt?: Date | string | null
    webhook: WebhookCreateNestedOneWithoutDeliveriesInput
  }

  export type WebhookDeliveryUncheckedCreateInput = {
    id?: string
    webhookId: string
    eventType: string
    eventId: string
    payload: JsonNullValueInput | InputJsonValue
    statusCode?: number | null
    response?: string | null
    error?: string | null
    attempts?: number
    nextRetryAt?: Date | string | null
    createdAt?: Date | string
    deliveredAt?: Date | string | null
  }

  export type WebhookDeliveryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    eventType?: StringFieldUpdateOperationsInput | string
    eventId?: StringFieldUpdateOperationsInput | string
    payload?: JsonNullValueInput | InputJsonValue
    statusCode?: NullableIntFieldUpdateOperationsInput | number | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    error?: NullableStringFieldUpdateOperationsInput | string | null
    attempts?: IntFieldUpdateOperationsInput | number
    nextRetryAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    webhook?: WebhookUpdateOneRequiredWithoutDeliveriesNestedInput
  }

  export type WebhookDeliveryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    webhookId?: StringFieldUpdateOperationsInput | string
    eventType?: StringFieldUpdateOperationsInput | string
    eventId?: StringFieldUpdateOperationsInput | string
    payload?: JsonNullValueInput | InputJsonValue
    statusCode?: NullableIntFieldUpdateOperationsInput | number | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    error?: NullableStringFieldUpdateOperationsInput | string | null
    attempts?: IntFieldUpdateOperationsInput | number
    nextRetryAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type WebhookDeliveryCreateManyInput = {
    id?: string
    webhookId: string
    eventType: string
    eventId: string
    payload: JsonNullValueInput | InputJsonValue
    statusCode?: number | null
    response?: string | null
    error?: string | null
    attempts?: number
    nextRetryAt?: Date | string | null
    createdAt?: Date | string
    deliveredAt?: Date | string | null
  }

  export type WebhookDeliveryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    eventType?: StringFieldUpdateOperationsInput | string
    eventId?: StringFieldUpdateOperationsInput | string
    payload?: JsonNullValueInput | InputJsonValue
    statusCode?: NullableIntFieldUpdateOperationsInput | number | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    error?: NullableStringFieldUpdateOperationsInput | string | null
    attempts?: IntFieldUpdateOperationsInput | number
    nextRetryAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type WebhookDeliveryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    webhookId?: StringFieldUpdateOperationsInput | string
    eventType?: StringFieldUpdateOperationsInput | string
    eventId?: StringFieldUpdateOperationsInput | string
    payload?: JsonNullValueInput | InputJsonValue
    statusCode?: NullableIntFieldUpdateOperationsInput | number | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    error?: NullableStringFieldUpdateOperationsInput | string | null
    attempts?: IntFieldUpdateOperationsInput | number
    nextRetryAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ManualProcessStepCreateInput = {
    id?: string
    type: $Enums.ManualStepType
    reason: string
    instructions?: string | null
    assignedTo?: string | null
    assignedTeam?: string | null
    priority?: $Enums.Priority
    status?: $Enums.ManualStepStatus
    resolution?: string | null
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    dueAt?: Date | string | null
    paymentOrder: PaymentOrderCreateNestedOneWithoutManualStepsInput
  }

  export type ManualProcessStepUncheckedCreateInput = {
    id?: string
    paymentOrderId: string
    type: $Enums.ManualStepType
    reason: string
    instructions?: string | null
    assignedTo?: string | null
    assignedTeam?: string | null
    priority?: $Enums.Priority
    status?: $Enums.ManualStepStatus
    resolution?: string | null
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    dueAt?: Date | string | null
  }

  export type ManualProcessStepUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumManualStepTypeFieldUpdateOperationsInput | $Enums.ManualStepType
    reason?: StringFieldUpdateOperationsInput | string
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTo?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTeam?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    status?: EnumManualStepStatusFieldUpdateOperationsInput | $Enums.ManualStepStatus
    resolution?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentOrder?: PaymentOrderUpdateOneRequiredWithoutManualStepsNestedInput
  }

  export type ManualProcessStepUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentOrderId?: StringFieldUpdateOperationsInput | string
    type?: EnumManualStepTypeFieldUpdateOperationsInput | $Enums.ManualStepType
    reason?: StringFieldUpdateOperationsInput | string
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTo?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTeam?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    status?: EnumManualStepStatusFieldUpdateOperationsInput | $Enums.ManualStepStatus
    resolution?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ManualProcessStepCreateManyInput = {
    id?: string
    paymentOrderId: string
    type: $Enums.ManualStepType
    reason: string
    instructions?: string | null
    assignedTo?: string | null
    assignedTeam?: string | null
    priority?: $Enums.Priority
    status?: $Enums.ManualStepStatus
    resolution?: string | null
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    dueAt?: Date | string | null
  }

  export type ManualProcessStepUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumManualStepTypeFieldUpdateOperationsInput | $Enums.ManualStepType
    reason?: StringFieldUpdateOperationsInput | string
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTo?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTeam?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    status?: EnumManualStepStatusFieldUpdateOperationsInput | $Enums.ManualStepStatus
    resolution?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ManualProcessStepUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentOrderId?: StringFieldUpdateOperationsInput | string
    type?: EnumManualStepTypeFieldUpdateOperationsInput | $Enums.ManualStepType
    reason?: StringFieldUpdateOperationsInput | string
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTo?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTeam?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    status?: EnumManualStepStatusFieldUpdateOperationsInput | $Enums.ManualStepStatus
    resolution?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PaymentEventCreateInput = {
    id?: string
    sequenceNumber: number
    eventType: string
    eventVersion?: string
    data: JsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    kafkaTopic?: string | null
    kafkaPartition?: number | null
    kafkaOffset?: bigint | number | null
    occurredAt?: Date | string
    paymentOrder: PaymentOrderCreateNestedOneWithoutEventsInput
  }

  export type PaymentEventUncheckedCreateInput = {
    id?: string
    paymentOrderId: string
    sequenceNumber: number
    eventType: string
    eventVersion?: string
    data: JsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    kafkaTopic?: string | null
    kafkaPartition?: number | null
    kafkaOffset?: bigint | number | null
    occurredAt?: Date | string
  }

  export type PaymentEventUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sequenceNumber?: IntFieldUpdateOperationsInput | number
    eventType?: StringFieldUpdateOperationsInput | string
    eventVersion?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    kafkaTopic?: NullableStringFieldUpdateOperationsInput | string | null
    kafkaPartition?: NullableIntFieldUpdateOperationsInput | number | null
    kafkaOffset?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentOrder?: PaymentOrderUpdateOneRequiredWithoutEventsNestedInput
  }

  export type PaymentEventUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentOrderId?: StringFieldUpdateOperationsInput | string
    sequenceNumber?: IntFieldUpdateOperationsInput | number
    eventType?: StringFieldUpdateOperationsInput | string
    eventVersion?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    kafkaTopic?: NullableStringFieldUpdateOperationsInput | string | null
    kafkaPartition?: NullableIntFieldUpdateOperationsInput | number | null
    kafkaOffset?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentEventCreateManyInput = {
    id?: string
    paymentOrderId: string
    sequenceNumber: number
    eventType: string
    eventVersion?: string
    data: JsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    kafkaTopic?: string | null
    kafkaPartition?: number | null
    kafkaOffset?: bigint | number | null
    occurredAt?: Date | string
  }

  export type PaymentEventUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    sequenceNumber?: IntFieldUpdateOperationsInput | number
    eventType?: StringFieldUpdateOperationsInput | string
    eventVersion?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    kafkaTopic?: NullableStringFieldUpdateOperationsInput | string | null
    kafkaPartition?: NullableIntFieldUpdateOperationsInput | number | null
    kafkaOffset?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentEventUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentOrderId?: StringFieldUpdateOperationsInput | string
    sequenceNumber?: IntFieldUpdateOperationsInput | number
    eventType?: StringFieldUpdateOperationsInput | string
    eventVersion?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    kafkaTopic?: NullableStringFieldUpdateOperationsInput | string | null
    kafkaPartition?: NullableIntFieldUpdateOperationsInput | number | null
    kafkaOffset?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditLogCreateInput = {
    id?: string
    action: string
    entityType?: string | null
    entityId?: string | null
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: string | null
    userAgent?: string | null
    requestId?: string | null
    createdAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutAuditLogsInput
    user?: UserCreateNestedOneWithoutAuditLogsInput
  }

  export type AuditLogUncheckedCreateInput = {
    id?: string
    organizationId: string
    userId?: string | null
    action: string
    entityType?: string | null
    entityId?: string | null
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: string | null
    userAgent?: string | null
    requestId?: string | null
    createdAt?: Date | string
  }

  export type AuditLogUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    entityId?: NullableStringFieldUpdateOperationsInput | string | null
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutAuditLogsNestedInput
    user?: UserUpdateOneWithoutAuditLogsNestedInput
  }

  export type AuditLogUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    action?: StringFieldUpdateOperationsInput | string
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    entityId?: NullableStringFieldUpdateOperationsInput | string | null
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditLogCreateManyInput = {
    id?: string
    organizationId: string
    userId?: string | null
    action: string
    entityType?: string | null
    entityId?: string | null
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: string | null
    userAgent?: string | null
    requestId?: string | null
    createdAt?: Date | string
  }

  export type AuditLogUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    entityId?: NullableStringFieldUpdateOperationsInput | string | null
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditLogUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    action?: StringFieldUpdateOperationsInput | string
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    entityId?: NullableStringFieldUpdateOperationsInput | string | null
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApiKeyCreateInput = {
    id?: string
    name: string
    keyHash: string
    prefix: string
    scopes?: ApiKeyCreatescopesInput | string[]
    rateLimit?: number | null
    isActive?: boolean
    expiresAt?: Date | string | null
    lastUsedAt?: Date | string | null
    createdAt?: Date | string
    revokedAt?: Date | string | null
    organization: OrganizationCreateNestedOneWithoutApiKeysInput
  }

  export type ApiKeyUncheckedCreateInput = {
    id?: string
    organizationId: string
    name: string
    keyHash: string
    prefix: string
    scopes?: ApiKeyCreatescopesInput | string[]
    rateLimit?: number | null
    isActive?: boolean
    expiresAt?: Date | string | null
    lastUsedAt?: Date | string | null
    createdAt?: Date | string
    revokedAt?: Date | string | null
  }

  export type ApiKeyUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    keyHash?: StringFieldUpdateOperationsInput | string
    prefix?: StringFieldUpdateOperationsInput | string
    scopes?: ApiKeyUpdatescopesInput | string[]
    rateLimit?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastUsedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organization?: OrganizationUpdateOneRequiredWithoutApiKeysNestedInput
  }

  export type ApiKeyUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    keyHash?: StringFieldUpdateOperationsInput | string
    prefix?: StringFieldUpdateOperationsInput | string
    scopes?: ApiKeyUpdatescopesInput | string[]
    rateLimit?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastUsedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ApiKeyCreateManyInput = {
    id?: string
    organizationId: string
    name: string
    keyHash: string
    prefix: string
    scopes?: ApiKeyCreatescopesInput | string[]
    rateLimit?: number | null
    isActive?: boolean
    expiresAt?: Date | string | null
    lastUsedAt?: Date | string | null
    createdAt?: Date | string
    revokedAt?: Date | string | null
  }

  export type ApiKeyUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    keyHash?: StringFieldUpdateOperationsInput | string
    prefix?: StringFieldUpdateOperationsInput | string
    scopes?: ApiKeyUpdatescopesInput | string[]
    rateLimit?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastUsedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ApiKeyUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    keyHash?: StringFieldUpdateOperationsInput | string
    prefix?: StringFieldUpdateOperationsInput | string
    scopes?: ApiKeyUpdatescopesInput | string[]
    rateLimit?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastUsedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OrganizationUserCreateInput = {
    id?: string
    role: $Enums.UserRole
    permissions?: OrganizationUserCreatepermissionsInput | string[]
    invitedBy?: string | null
    invitedAt?: Date | string
    acceptedAt?: Date | string | null
    isActive?: boolean
    organization: OrganizationCreateNestedOneWithoutUsersInput
    user: UserCreateNestedOneWithoutOrganizationsInput
  }

  export type OrganizationUserUncheckedCreateInput = {
    id?: string
    organizationId: string
    userId: string
    role: $Enums.UserRole
    permissions?: OrganizationUserCreatepermissionsInput | string[]
    invitedBy?: string | null
    invitedAt?: Date | string
    acceptedAt?: Date | string | null
    isActive?: boolean
  }

  export type OrganizationUserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    permissions?: OrganizationUserUpdatepermissionsInput | string[]
    invitedBy?: NullableStringFieldUpdateOperationsInput | string | null
    invitedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    organization?: OrganizationUpdateOneRequiredWithoutUsersNestedInput
    user?: UserUpdateOneRequiredWithoutOrganizationsNestedInput
  }

  export type OrganizationUserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    permissions?: OrganizationUserUpdatepermissionsInput | string[]
    invitedBy?: NullableStringFieldUpdateOperationsInput | string | null
    invitedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type OrganizationUserCreateManyInput = {
    id?: string
    organizationId: string
    userId: string
    role: $Enums.UserRole
    permissions?: OrganizationUserCreatepermissionsInput | string[]
    invitedBy?: string | null
    invitedAt?: Date | string
    acceptedAt?: Date | string | null
    isActive?: boolean
  }

  export type OrganizationUserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    permissions?: OrganizationUserUpdatepermissionsInput | string[]
    invitedBy?: NullableStringFieldUpdateOperationsInput | string | null
    invitedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type OrganizationUserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    permissions?: OrganizationUserUpdatepermissionsInput | string[]
    invitedBy?: NullableStringFieldUpdateOperationsInput | string | null
    invitedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type EnumComplianceStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ComplianceStatus | EnumComplianceStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ComplianceStatus[] | ListEnumComplianceStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ComplianceStatus[] | ListEnumComplianceStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumComplianceStatusFilter<$PrismaModel> | $Enums.ComplianceStatus
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }
  export type JsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type OrganizationUserListRelationFilter = {
    every?: OrganizationUserWhereInput
    some?: OrganizationUserWhereInput
    none?: OrganizationUserWhereInput
  }

  export type CustomerListRelationFilter = {
    every?: CustomerWhereInput
    some?: CustomerWhereInput
    none?: CustomerWhereInput
  }

  export type ProductListRelationFilter = {
    every?: ProductWhereInput
    some?: ProductWhereInput
    none?: ProductWhereInput
  }

  export type WalletListRelationFilter = {
    every?: WalletWhereInput
    some?: WalletWhereInput
    none?: WalletWhereInput
  }

  export type PaymentLinkListRelationFilter = {
    every?: PaymentLinkWhereInput
    some?: PaymentLinkWhereInput
    none?: PaymentLinkWhereInput
  }

  export type PaymentOrderListRelationFilter = {
    every?: PaymentOrderWhereInput
    some?: PaymentOrderWhereInput
    none?: PaymentOrderWhereInput
  }

  export type ProviderConfigListRelationFilter = {
    every?: ProviderConfigWhereInput
    some?: ProviderConfigWhereInput
    none?: ProviderConfigWhereInput
  }

  export type ApiKeyListRelationFilter = {
    every?: ApiKeyWhereInput
    some?: ApiKeyWhereInput
    none?: ApiKeyWhereInput
  }

  export type WebhookListRelationFilter = {
    every?: WebhookWhereInput
    some?: WebhookWhereInput
    none?: WebhookWhereInput
  }

  export type AuditLogListRelationFilter = {
    every?: AuditLogWhereInput
    some?: AuditLogWhereInput
    none?: AuditLogWhereInput
  }

  export type AgentListRelationFilter = {
    every?: AgentWhereInput
    some?: AgentWhereInput
    none?: AgentWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type OrganizationUserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CustomerOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type WalletOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PaymentLinkOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PaymentOrderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProviderConfigOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ApiKeyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type WebhookOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AuditLogOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AgentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrganizationCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    billingEmail?: SortOrder
    taxId?: SortOrder
    country?: SortOrder
    complianceStatus?: SortOrder
    kycVerifiedAt?: SortOrder
    settings?: SortOrder
    features?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    ownerId?: SortOrder
  }

  export type OrganizationMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    billingEmail?: SortOrder
    taxId?: SortOrder
    country?: SortOrder
    complianceStatus?: SortOrder
    kycVerifiedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    ownerId?: SortOrder
  }

  export type OrganizationMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    billingEmail?: SortOrder
    taxId?: SortOrder
    country?: SortOrder
    complianceStatus?: SortOrder
    kycVerifiedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    ownerId?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type EnumComplianceStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ComplianceStatus | EnumComplianceStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ComplianceStatus[] | ListEnumComplianceStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ComplianceStatus[] | ListEnumComplianceStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumComplianceStatusWithAggregatesFilter<$PrismaModel> | $Enums.ComplianceStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumComplianceStatusFilter<$PrismaModel>
    _max?: NestedEnumComplianceStatusFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EnumAuthProviderFilter<$PrismaModel = never> = {
    equals?: $Enums.AuthProvider | EnumAuthProviderFieldRefInput<$PrismaModel>
    in?: $Enums.AuthProvider[] | ListEnumAuthProviderFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuthProvider[] | ListEnumAuthProviderFieldRefInput<$PrismaModel>
    not?: NestedEnumAuthProviderFilter<$PrismaModel> | $Enums.AuthProvider
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type WalletNullableRelationFilter = {
    is?: WalletWhereInput | null
    isNot?: WalletWhereInput | null
  }

  export type AgentInteractionListRelationFilter = {
    every?: AgentInteractionWhereInput
    some?: AgentInteractionWhereInput
    none?: AgentInteractionWhereInput
  }

  export type AgentInteractionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserAuthProviderAuthProviderIdCompoundUniqueInput = {
    authProvider: $Enums.AuthProvider
    authProviderId: string
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    avatarUrl?: SortOrder
    authProvider?: SortOrder
    authProviderId?: SortOrder
    emailVerified?: SortOrder
    primaryWalletId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastLoginAt?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    avatarUrl?: SortOrder
    authProvider?: SortOrder
    authProviderId?: SortOrder
    emailVerified?: SortOrder
    primaryWalletId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastLoginAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    avatarUrl?: SortOrder
    authProvider?: SortOrder
    authProviderId?: SortOrder
    emailVerified?: SortOrder
    primaryWalletId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastLoginAt?: SortOrder
  }

  export type EnumAuthProviderWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AuthProvider | EnumAuthProviderFieldRefInput<$PrismaModel>
    in?: $Enums.AuthProvider[] | ListEnumAuthProviderFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuthProvider[] | ListEnumAuthProviderFieldRefInput<$PrismaModel>
    not?: NestedEnumAuthProviderWithAggregatesFilter<$PrismaModel> | $Enums.AuthProvider
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAuthProviderFilter<$PrismaModel>
    _max?: NestedEnumAuthProviderFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type OrganizationRelationFilter = {
    is?: OrganizationWhereInput
    isNot?: OrganizationWhereInput
  }

  export type CustomerPaymentMethodListRelationFilter = {
    every?: CustomerPaymentMethodWhereInput
    some?: CustomerPaymentMethodWhereInput
    none?: CustomerPaymentMethodWhereInput
  }

  export type SubscriptionListRelationFilter = {
    every?: SubscriptionWhereInput
    some?: SubscriptionWhereInput
    none?: SubscriptionWhereInput
  }

  export type CustomerPaymentMethodOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SubscriptionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CustomerOrganizationIdEmailCompoundUniqueInput = {
    organizationId: string
    email: string
  }

  export type CustomerCountOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    email?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    billingAddress?: SortOrder
    shippingAddress?: SortOrder
    walletAddress?: SortOrder
    preferredChainId?: SortOrder
    isActive?: SortOrder
    emailVerified?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CustomerAvgOrderByAggregateInput = {
    preferredChainId?: SortOrder
  }

  export type CustomerMaxOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    email?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    walletAddress?: SortOrder
    preferredChainId?: SortOrder
    isActive?: SortOrder
    emailVerified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CustomerMinOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    email?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    walletAddress?: SortOrder
    preferredChainId?: SortOrder
    isActive?: SortOrder
    emailVerified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CustomerSumOrderByAggregateInput = {
    preferredChainId?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type EnumPaymentMethodTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethodType | EnumPaymentMethodTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethodType[] | ListEnumPaymentMethodTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethodType[] | ListEnumPaymentMethodTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodTypeFilter<$PrismaModel> | $Enums.PaymentMethodType
  }

  export type CustomerRelationFilter = {
    is?: CustomerWhereInput
    isNot?: CustomerWhereInput
  }

  export type CustomerPaymentMethodCountOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    externalId?: SortOrder
    last4?: SortOrder
    brand?: SortOrder
    expiryMonth?: SortOrder
    expiryYear?: SortOrder
    bankName?: SortOrder
    accountLast4?: SortOrder
    walletAddress?: SortOrder
    chainId?: SortOrder
    isDefault?: SortOrder
    isActive?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CustomerPaymentMethodAvgOrderByAggregateInput = {
    expiryMonth?: SortOrder
    expiryYear?: SortOrder
    chainId?: SortOrder
  }

  export type CustomerPaymentMethodMaxOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    externalId?: SortOrder
    last4?: SortOrder
    brand?: SortOrder
    expiryMonth?: SortOrder
    expiryYear?: SortOrder
    bankName?: SortOrder
    accountLast4?: SortOrder
    walletAddress?: SortOrder
    chainId?: SortOrder
    isDefault?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CustomerPaymentMethodMinOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    externalId?: SortOrder
    last4?: SortOrder
    brand?: SortOrder
    expiryMonth?: SortOrder
    expiryYear?: SortOrder
    bankName?: SortOrder
    accountLast4?: SortOrder
    walletAddress?: SortOrder
    chainId?: SortOrder
    isDefault?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CustomerPaymentMethodSumOrderByAggregateInput = {
    expiryMonth?: SortOrder
    expiryYear?: SortOrder
    chainId?: SortOrder
  }

  export type EnumPaymentMethodTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethodType | EnumPaymentMethodTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethodType[] | ListEnumPaymentMethodTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethodType[] | ListEnumPaymentMethodTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodTypeWithAggregatesFilter<$PrismaModel> | $Enums.PaymentMethodType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentMethodTypeFilter<$PrismaModel>
    _max?: NestedEnumPaymentMethodTypeFilter<$PrismaModel>
  }

  export type EnumSubscriptionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionStatus | EnumSubscriptionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionStatus[] | ListEnumSubscriptionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SubscriptionStatus[] | ListEnumSubscriptionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSubscriptionStatusFilter<$PrismaModel> | $Enums.SubscriptionStatus
  }

  export type SubscriptionItemListRelationFilter = {
    every?: SubscriptionItemWhereInput
    some?: SubscriptionItemWhereInput
    none?: SubscriptionItemWhereInput
  }

  export type SubscriptionItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SubscriptionCountOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    organizationId?: SortOrder
    status?: SortOrder
    currentPeriodStart?: SortOrder
    currentPeriodEnd?: SortOrder
    cancelAt?: SortOrder
    canceledAt?: SortOrder
    endedAt?: SortOrder
    trialStart?: SortOrder
    trialEnd?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SubscriptionMaxOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    organizationId?: SortOrder
    status?: SortOrder
    currentPeriodStart?: SortOrder
    currentPeriodEnd?: SortOrder
    cancelAt?: SortOrder
    canceledAt?: SortOrder
    endedAt?: SortOrder
    trialStart?: SortOrder
    trialEnd?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SubscriptionMinOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    organizationId?: SortOrder
    status?: SortOrder
    currentPeriodStart?: SortOrder
    currentPeriodEnd?: SortOrder
    cancelAt?: SortOrder
    canceledAt?: SortOrder
    endedAt?: SortOrder
    trialStart?: SortOrder
    trialEnd?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumSubscriptionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionStatus | EnumSubscriptionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionStatus[] | ListEnumSubscriptionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SubscriptionStatus[] | ListEnumSubscriptionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSubscriptionStatusWithAggregatesFilter<$PrismaModel> | $Enums.SubscriptionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSubscriptionStatusFilter<$PrismaModel>
    _max?: NestedEnumSubscriptionStatusFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type SubscriptionRelationFilter = {
    is?: SubscriptionWhereInput
    isNot?: SubscriptionWhereInput
  }

  export type PriceRelationFilter = {
    is?: PriceWhereInput
    isNot?: PriceWhereInput
  }

  export type SubscriptionItemCountOrderByAggregateInput = {
    id?: SortOrder
    subscriptionId?: SortOrder
    priceId?: SortOrder
    quantity?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SubscriptionItemAvgOrderByAggregateInput = {
    quantity?: SortOrder
  }

  export type SubscriptionItemMaxOrderByAggregateInput = {
    id?: SortOrder
    subscriptionId?: SortOrder
    priceId?: SortOrder
    quantity?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SubscriptionItemMinOrderByAggregateInput = {
    id?: SortOrder
    subscriptionId?: SortOrder
    priceId?: SortOrder
    quantity?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SubscriptionItemSumOrderByAggregateInput = {
    quantity?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type EnumWalletTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.WalletType | EnumWalletTypeFieldRefInput<$PrismaModel>
    in?: $Enums.WalletType[] | ListEnumWalletTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.WalletType[] | ListEnumWalletTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumWalletTypeFilter<$PrismaModel> | $Enums.WalletType
  }

  export type UserNullableRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type OrganizationNullableRelationFilter = {
    is?: OrganizationWhereInput | null
    isNot?: OrganizationWhereInput | null
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type AgentNullableRelationFilter = {
    is?: AgentWhereInput | null
    isNot?: AgentWhereInput | null
  }

  export type BlockchainTransactionListRelationFilter = {
    every?: BlockchainTransactionWhereInput
    some?: BlockchainTransactionWhereInput
    none?: BlockchainTransactionWhereInput
  }

  export type GasSponsorshipListRelationFilter = {
    every?: GasSponsorshipWhereInput
    some?: GasSponsorshipWhereInput
    none?: GasSponsorshipWhereInput
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BlockchainTransactionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type GasSponsorshipOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type WalletCountOrderByAggregateInput = {
    id?: SortOrder
    address?: SortOrder
    chainId?: SortOrder
    type?: SortOrder
    userId?: SortOrder
    organizationId?: SortOrder
    smartWalletFactory?: SortOrder
    smartWalletConfig?: SortOrder
    isActive?: SortOrder
    allowlist?: SortOrder
    blocklist?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type WalletAvgOrderByAggregateInput = {
    chainId?: SortOrder
  }

  export type WalletMaxOrderByAggregateInput = {
    id?: SortOrder
    address?: SortOrder
    chainId?: SortOrder
    type?: SortOrder
    userId?: SortOrder
    organizationId?: SortOrder
    smartWalletFactory?: SortOrder
    isActive?: SortOrder
    allowlist?: SortOrder
    blocklist?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type WalletMinOrderByAggregateInput = {
    id?: SortOrder
    address?: SortOrder
    chainId?: SortOrder
    type?: SortOrder
    userId?: SortOrder
    organizationId?: SortOrder
    smartWalletFactory?: SortOrder
    isActive?: SortOrder
    allowlist?: SortOrder
    blocklist?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type WalletSumOrderByAggregateInput = {
    chainId?: SortOrder
  }

  export type EnumWalletTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.WalletType | EnumWalletTypeFieldRefInput<$PrismaModel>
    in?: $Enums.WalletType[] | ListEnumWalletTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.WalletType[] | ListEnumWalletTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumWalletTypeWithAggregatesFilter<$PrismaModel> | $Enums.WalletType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumWalletTypeFilter<$PrismaModel>
    _max?: NestedEnumWalletTypeFilter<$PrismaModel>
  }

  export type EnumBlockchainTxStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.BlockchainTxStatus | EnumBlockchainTxStatusFieldRefInput<$PrismaModel>
    in?: $Enums.BlockchainTxStatus[] | ListEnumBlockchainTxStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.BlockchainTxStatus[] | ListEnumBlockchainTxStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumBlockchainTxStatusFilter<$PrismaModel> | $Enums.BlockchainTxStatus
  }

  export type GasSponsorshipNullableRelationFilter = {
    is?: GasSponsorshipWhereInput | null
    isNot?: GasSponsorshipWhereInput | null
  }

  export type WalletRelationFilter = {
    is?: WalletWhereInput
    isNot?: WalletWhereInput
  }

  export type PaymentOrderNullableRelationFilter = {
    is?: PaymentOrderWhereInput | null
    isNot?: PaymentOrderWhereInput | null
  }

  export type BlockchainTransactionCountOrderByAggregateInput = {
    id?: SortOrder
    hash?: SortOrder
    chainId?: SortOrder
    fromAddress?: SortOrder
    toAddress?: SortOrder
    value?: SortOrder
    data?: SortOrder
    gasLimit?: SortOrder
    gasPrice?: SortOrder
    nonce?: SortOrder
    status?: SortOrder
    blockNumber?: SortOrder
    confirmations?: SortOrder
    isSponsored?: SortOrder
    sponsorshipId?: SortOrder
    walletId?: SortOrder
    paymentOrderId?: SortOrder
    createdAt?: SortOrder
    minedAt?: SortOrder
  }

  export type BlockchainTransactionAvgOrderByAggregateInput = {
    chainId?: SortOrder
    nonce?: SortOrder
    blockNumber?: SortOrder
    confirmations?: SortOrder
  }

  export type BlockchainTransactionMaxOrderByAggregateInput = {
    id?: SortOrder
    hash?: SortOrder
    chainId?: SortOrder
    fromAddress?: SortOrder
    toAddress?: SortOrder
    value?: SortOrder
    data?: SortOrder
    gasLimit?: SortOrder
    gasPrice?: SortOrder
    nonce?: SortOrder
    status?: SortOrder
    blockNumber?: SortOrder
    confirmations?: SortOrder
    isSponsored?: SortOrder
    sponsorshipId?: SortOrder
    walletId?: SortOrder
    paymentOrderId?: SortOrder
    createdAt?: SortOrder
    minedAt?: SortOrder
  }

  export type BlockchainTransactionMinOrderByAggregateInput = {
    id?: SortOrder
    hash?: SortOrder
    chainId?: SortOrder
    fromAddress?: SortOrder
    toAddress?: SortOrder
    value?: SortOrder
    data?: SortOrder
    gasLimit?: SortOrder
    gasPrice?: SortOrder
    nonce?: SortOrder
    status?: SortOrder
    blockNumber?: SortOrder
    confirmations?: SortOrder
    isSponsored?: SortOrder
    sponsorshipId?: SortOrder
    walletId?: SortOrder
    paymentOrderId?: SortOrder
    createdAt?: SortOrder
    minedAt?: SortOrder
  }

  export type BlockchainTransactionSumOrderByAggregateInput = {
    chainId?: SortOrder
    nonce?: SortOrder
    blockNumber?: SortOrder
    confirmations?: SortOrder
  }

  export type EnumBlockchainTxStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BlockchainTxStatus | EnumBlockchainTxStatusFieldRefInput<$PrismaModel>
    in?: $Enums.BlockchainTxStatus[] | ListEnumBlockchainTxStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.BlockchainTxStatus[] | ListEnumBlockchainTxStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumBlockchainTxStatusWithAggregatesFilter<$PrismaModel> | $Enums.BlockchainTxStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBlockchainTxStatusFilter<$PrismaModel>
    _max?: NestedEnumBlockchainTxStatusFilter<$PrismaModel>
  }

  export type GasSponsorshipCountOrderByAggregateInput = {
    id?: SortOrder
    sponsorWalletId?: SortOrder
    maxGasAmount?: SortOrder
    usedGasAmount?: SortOrder
    maxTransactions?: SortOrder
    usedTransactions?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type GasSponsorshipAvgOrderByAggregateInput = {
    maxTransactions?: SortOrder
    usedTransactions?: SortOrder
  }

  export type GasSponsorshipMaxOrderByAggregateInput = {
    id?: SortOrder
    sponsorWalletId?: SortOrder
    maxGasAmount?: SortOrder
    usedGasAmount?: SortOrder
    maxTransactions?: SortOrder
    usedTransactions?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type GasSponsorshipMinOrderByAggregateInput = {
    id?: SortOrder
    sponsorWalletId?: SortOrder
    maxGasAmount?: SortOrder
    usedGasAmount?: SortOrder
    maxTransactions?: SortOrder
    usedTransactions?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type GasSponsorshipSumOrderByAggregateInput = {
    maxTransactions?: SortOrder
    usedTransactions?: SortOrder
  }

  export type EnumProductTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductType | EnumProductTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProductType[] | ListEnumProductTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductType[] | ListEnumProductTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProductTypeFilter<$PrismaModel> | $Enums.ProductType
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type PriceListRelationFilter = {
    every?: PriceWhereInput
    some?: PriceWhereInput
    none?: PriceWhereInput
  }

  export type PriceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductCountOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    isActive?: SortOrder
    metadata?: SortOrder
    images?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductMaxOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductMinOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumProductTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductType | EnumProductTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProductType[] | ListEnumProductTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductType[] | ListEnumProductTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProductTypeWithAggregatesFilter<$PrismaModel> | $Enums.ProductType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProductTypeFilter<$PrismaModel>
    _max?: NestedEnumProductTypeFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type EnumPriceTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.PriceType | EnumPriceTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PriceType[] | ListEnumPriceTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PriceType[] | ListEnumPriceTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPriceTypeFilter<$PrismaModel> | $Enums.PriceType
  }

  export type EnumBillingIntervalNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.BillingInterval | EnumBillingIntervalFieldRefInput<$PrismaModel> | null
    in?: $Enums.BillingInterval[] | ListEnumBillingIntervalFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.BillingInterval[] | ListEnumBillingIntervalFieldRefInput<$PrismaModel> | null
    not?: NestedEnumBillingIntervalNullableFilter<$PrismaModel> | $Enums.BillingInterval | null
  }

  export type ProductRelationFilter = {
    is?: ProductWhereInput
    isNot?: ProductWhereInput
  }

  export type PriceCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    type?: SortOrder
    interval?: SortOrder
    intervalCount?: SortOrder
    trialPeriodDays?: SortOrder
    isActive?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PriceAvgOrderByAggregateInput = {
    amount?: SortOrder
    intervalCount?: SortOrder
    trialPeriodDays?: SortOrder
  }

  export type PriceMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    type?: SortOrder
    interval?: SortOrder
    intervalCount?: SortOrder
    trialPeriodDays?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PriceMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    type?: SortOrder
    interval?: SortOrder
    intervalCount?: SortOrder
    trialPeriodDays?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PriceSumOrderByAggregateInput = {
    amount?: SortOrder
    intervalCount?: SortOrder
    trialPeriodDays?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type EnumPriceTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PriceType | EnumPriceTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PriceType[] | ListEnumPriceTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PriceType[] | ListEnumPriceTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPriceTypeWithAggregatesFilter<$PrismaModel> | $Enums.PriceType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPriceTypeFilter<$PrismaModel>
    _max?: NestedEnumPriceTypeFilter<$PrismaModel>
  }

  export type EnumBillingIntervalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BillingInterval | EnumBillingIntervalFieldRefInput<$PrismaModel> | null
    in?: $Enums.BillingInterval[] | ListEnumBillingIntervalFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.BillingInterval[] | ListEnumBillingIntervalFieldRefInput<$PrismaModel> | null
    not?: NestedEnumBillingIntervalNullableWithAggregatesFilter<$PrismaModel> | $Enums.BillingInterval | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumBillingIntervalNullableFilter<$PrismaModel>
    _max?: NestedEnumBillingIntervalNullableFilter<$PrismaModel>
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type EnumPaymentLinkStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentLinkStatus | EnumPaymentLinkStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentLinkStatus[] | ListEnumPaymentLinkStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentLinkStatus[] | ListEnumPaymentLinkStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentLinkStatusFilter<$PrismaModel> | $Enums.PaymentLinkStatus
  }

  export type UserRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type AgentRelationFilter = {
    is?: AgentWhereInput
    isNot?: AgentWhereInput
  }

  export type PriceNullableRelationFilter = {
    is?: PriceWhereInput | null
    isNot?: PriceWhereInput | null
  }

  export type PaymentLinkCountOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    createdById?: SortOrder
    executingAgentId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    referenceId?: SortOrder
    shortCode?: SortOrder
    qrCode?: SortOrder
    priceId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    targetAmount?: SortOrder
    targetCurrency?: SortOrder
    smartContractAddress?: SortOrder
    smartContractChainId?: SortOrder
    tokenAddress?: SortOrder
    status?: SortOrder
    allowMultiplePayments?: SortOrder
    requiresKyc?: SortOrder
    expiresAt?: SortOrder
    redirectUrls?: SortOrder
    metadata?: SortOrder
    theme?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PaymentLinkAvgOrderByAggregateInput = {
    amount?: SortOrder
    targetAmount?: SortOrder
    smartContractChainId?: SortOrder
  }

  export type PaymentLinkMaxOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    createdById?: SortOrder
    executingAgentId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    referenceId?: SortOrder
    shortCode?: SortOrder
    qrCode?: SortOrder
    priceId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    targetAmount?: SortOrder
    targetCurrency?: SortOrder
    smartContractAddress?: SortOrder
    smartContractChainId?: SortOrder
    tokenAddress?: SortOrder
    status?: SortOrder
    allowMultiplePayments?: SortOrder
    requiresKyc?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PaymentLinkMinOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    createdById?: SortOrder
    executingAgentId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    referenceId?: SortOrder
    shortCode?: SortOrder
    qrCode?: SortOrder
    priceId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    targetAmount?: SortOrder
    targetCurrency?: SortOrder
    smartContractAddress?: SortOrder
    smartContractChainId?: SortOrder
    tokenAddress?: SortOrder
    status?: SortOrder
    allowMultiplePayments?: SortOrder
    requiresKyc?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PaymentLinkSumOrderByAggregateInput = {
    amount?: SortOrder
    targetAmount?: SortOrder
    smartContractChainId?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type EnumPaymentLinkStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentLinkStatus | EnumPaymentLinkStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentLinkStatus[] | ListEnumPaymentLinkStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentLinkStatus[] | ListEnumPaymentLinkStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentLinkStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentLinkStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentLinkStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentLinkStatusFilter<$PrismaModel>
  }

  export type EnumPaymentOrderStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentOrderStatus | EnumPaymentOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentOrderStatus[] | ListEnumPaymentOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentOrderStatus[] | ListEnumPaymentOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentOrderStatusFilter<$PrismaModel> | $Enums.PaymentOrderStatus
  }

  export type EnumKycStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.KycStatus | EnumKycStatusFieldRefInput<$PrismaModel>
    in?: $Enums.KycStatus[] | ListEnumKycStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.KycStatus[] | ListEnumKycStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumKycStatusFilter<$PrismaModel> | $Enums.KycStatus
  }

  export type PaymentLinkRelationFilter = {
    is?: PaymentLinkWhereInput
    isNot?: PaymentLinkWhereInput
  }

  export type CustomerNullableRelationFilter = {
    is?: CustomerWhereInput | null
    isNot?: CustomerWhereInput | null
  }

  export type ProviderTransactionListRelationFilter = {
    every?: ProviderTransactionWhereInput
    some?: ProviderTransactionWhereInput
    none?: ProviderTransactionWhereInput
  }

  export type PaymentEventListRelationFilter = {
    every?: PaymentEventWhereInput
    some?: PaymentEventWhereInput
    none?: PaymentEventWhereInput
  }

  export type AgentDecisionListRelationFilter = {
    every?: AgentDecisionWhereInput
    some?: AgentDecisionWhereInput
    none?: AgentDecisionWhereInput
  }

  export type ManualProcessStepListRelationFilter = {
    every?: ManualProcessStepWhereInput
    some?: ManualProcessStepWhereInput
    none?: ManualProcessStepWhereInput
  }

  export type ProviderTransactionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PaymentEventOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AgentDecisionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ManualProcessStepOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PaymentOrderCountOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    paymentLinkId?: SortOrder
    customerId?: SortOrder
    orderNumber?: SortOrder
    status?: SortOrder
    requestedAmount?: SortOrder
    requestedCurrency?: SortOrder
    settledAmount?: SortOrder
    settledCurrency?: SortOrder
    exchangeRate?: SortOrder
    exchangeRateLockedAt?: SortOrder
    exchangeRateSource?: SortOrder
    platformFee?: SortOrder
    providerFee?: SortOrder
    networkFee?: SortOrder
    totalFee?: SortOrder
    customerEmail?: SortOrder
    customerName?: SortOrder
    customerWallet?: SortOrder
    customerIp?: SortOrder
    customerCountry?: SortOrder
    riskScore?: SortOrder
    riskFactors?: SortOrder
    kycStatus?: SortOrder
    kycVerifiedAt?: SortOrder
    selectedRoute?: SortOrder
    failureReason?: SortOrder
    failureCode?: SortOrder
    retryCount?: SortOrder
    createdAt?: SortOrder
    startedAt?: SortOrder
    completedAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PaymentOrderAvgOrderByAggregateInput = {
    requestedAmount?: SortOrder
    settledAmount?: SortOrder
    exchangeRate?: SortOrder
    platformFee?: SortOrder
    providerFee?: SortOrder
    networkFee?: SortOrder
    totalFee?: SortOrder
    riskScore?: SortOrder
    retryCount?: SortOrder
  }

  export type PaymentOrderMaxOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    paymentLinkId?: SortOrder
    customerId?: SortOrder
    orderNumber?: SortOrder
    status?: SortOrder
    requestedAmount?: SortOrder
    requestedCurrency?: SortOrder
    settledAmount?: SortOrder
    settledCurrency?: SortOrder
    exchangeRate?: SortOrder
    exchangeRateLockedAt?: SortOrder
    exchangeRateSource?: SortOrder
    platformFee?: SortOrder
    providerFee?: SortOrder
    networkFee?: SortOrder
    totalFee?: SortOrder
    customerEmail?: SortOrder
    customerName?: SortOrder
    customerWallet?: SortOrder
    customerIp?: SortOrder
    customerCountry?: SortOrder
    riskScore?: SortOrder
    kycStatus?: SortOrder
    kycVerifiedAt?: SortOrder
    failureReason?: SortOrder
    failureCode?: SortOrder
    retryCount?: SortOrder
    createdAt?: SortOrder
    startedAt?: SortOrder
    completedAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PaymentOrderMinOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    paymentLinkId?: SortOrder
    customerId?: SortOrder
    orderNumber?: SortOrder
    status?: SortOrder
    requestedAmount?: SortOrder
    requestedCurrency?: SortOrder
    settledAmount?: SortOrder
    settledCurrency?: SortOrder
    exchangeRate?: SortOrder
    exchangeRateLockedAt?: SortOrder
    exchangeRateSource?: SortOrder
    platformFee?: SortOrder
    providerFee?: SortOrder
    networkFee?: SortOrder
    totalFee?: SortOrder
    customerEmail?: SortOrder
    customerName?: SortOrder
    customerWallet?: SortOrder
    customerIp?: SortOrder
    customerCountry?: SortOrder
    riskScore?: SortOrder
    kycStatus?: SortOrder
    kycVerifiedAt?: SortOrder
    failureReason?: SortOrder
    failureCode?: SortOrder
    retryCount?: SortOrder
    createdAt?: SortOrder
    startedAt?: SortOrder
    completedAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PaymentOrderSumOrderByAggregateInput = {
    requestedAmount?: SortOrder
    settledAmount?: SortOrder
    exchangeRate?: SortOrder
    platformFee?: SortOrder
    providerFee?: SortOrder
    networkFee?: SortOrder
    totalFee?: SortOrder
    riskScore?: SortOrder
    retryCount?: SortOrder
  }

  export type EnumPaymentOrderStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentOrderStatus | EnumPaymentOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentOrderStatus[] | ListEnumPaymentOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentOrderStatus[] | ListEnumPaymentOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentOrderStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentOrderStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentOrderStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentOrderStatusFilter<$PrismaModel>
  }

  export type EnumKycStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.KycStatus | EnumKycStatusFieldRefInput<$PrismaModel>
    in?: $Enums.KycStatus[] | ListEnumKycStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.KycStatus[] | ListEnumKycStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumKycStatusWithAggregatesFilter<$PrismaModel> | $Enums.KycStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumKycStatusFilter<$PrismaModel>
    _max?: NestedEnumKycStatusFilter<$PrismaModel>
  }

  export type EnumProviderTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ProviderType | EnumProviderTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProviderType[] | ListEnumProviderTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProviderType[] | ListEnumProviderTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProviderTypeFilter<$PrismaModel> | $Enums.ProviderType
  }

  export type EnumProviderHealthFilter<$PrismaModel = never> = {
    equals?: $Enums.ProviderHealth | EnumProviderHealthFieldRefInput<$PrismaModel>
    in?: $Enums.ProviderHealth[] | ListEnumProviderHealthFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProviderHealth[] | ListEnumProviderHealthFieldRefInput<$PrismaModel>
    not?: NestedEnumProviderHealthFilter<$PrismaModel> | $Enums.ProviderHealth
  }

  export type ProviderRouteListRelationFilter = {
    every?: ProviderRouteWhereInput
    some?: ProviderRouteWhereInput
    none?: ProviderRouteWhereInput
  }

  export type ProviderRouteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProviderCountOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    name?: SortOrder
    type?: SortOrder
    supportedCountries?: SortOrder
    supportedCurrencies?: SortOrder
    paymentMethods?: SortOrder
    features?: SortOrder
    isActive?: SortOrder
    healthStatus?: SortOrder
    lastHealthCheck?: SortOrder
    avgResponseTime?: SortOrder
    successRate?: SortOrder
  }

  export type ProviderAvgOrderByAggregateInput = {
    avgResponseTime?: SortOrder
    successRate?: SortOrder
  }

  export type ProviderMaxOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    name?: SortOrder
    type?: SortOrder
    isActive?: SortOrder
    healthStatus?: SortOrder
    lastHealthCheck?: SortOrder
    avgResponseTime?: SortOrder
    successRate?: SortOrder
  }

  export type ProviderMinOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    name?: SortOrder
    type?: SortOrder
    isActive?: SortOrder
    healthStatus?: SortOrder
    lastHealthCheck?: SortOrder
    avgResponseTime?: SortOrder
    successRate?: SortOrder
  }

  export type ProviderSumOrderByAggregateInput = {
    avgResponseTime?: SortOrder
    successRate?: SortOrder
  }

  export type EnumProviderTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProviderType | EnumProviderTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProviderType[] | ListEnumProviderTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProviderType[] | ListEnumProviderTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProviderTypeWithAggregatesFilter<$PrismaModel> | $Enums.ProviderType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProviderTypeFilter<$PrismaModel>
    _max?: NestedEnumProviderTypeFilter<$PrismaModel>
  }

  export type EnumProviderHealthWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProviderHealth | EnumProviderHealthFieldRefInput<$PrismaModel>
    in?: $Enums.ProviderHealth[] | ListEnumProviderHealthFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProviderHealth[] | ListEnumProviderHealthFieldRefInput<$PrismaModel>
    not?: NestedEnumProviderHealthWithAggregatesFilter<$PrismaModel> | $Enums.ProviderHealth
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProviderHealthFilter<$PrismaModel>
    _max?: NestedEnumProviderHealthFilter<$PrismaModel>
  }

  export type EnumEnvironmentFilter<$PrismaModel = never> = {
    equals?: $Enums.Environment | EnumEnvironmentFieldRefInput<$PrismaModel>
    in?: $Enums.Environment[] | ListEnumEnvironmentFieldRefInput<$PrismaModel>
    notIn?: $Enums.Environment[] | ListEnumEnvironmentFieldRefInput<$PrismaModel>
    not?: NestedEnumEnvironmentFilter<$PrismaModel> | $Enums.Environment
  }

  export type ProviderRelationFilter = {
    is?: ProviderWhereInput
    isNot?: ProviderWhereInput
  }

  export type ProviderConfigOrganizationIdProviderIdEnvironmentCompoundUniqueInput = {
    organizationId: string
    providerId: string
    environment: $Enums.Environment
  }

  export type ProviderConfigCountOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    providerId?: SortOrder
    environment?: SortOrder
    credentials?: SortOrder
    webhookSecret?: SortOrder
    settings?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProviderConfigMaxOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    providerId?: SortOrder
    environment?: SortOrder
    webhookSecret?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProviderConfigMinOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    providerId?: SortOrder
    environment?: SortOrder
    webhookSecret?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumEnvironmentWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Environment | EnumEnvironmentFieldRefInput<$PrismaModel>
    in?: $Enums.Environment[] | ListEnumEnvironmentFieldRefInput<$PrismaModel>
    notIn?: $Enums.Environment[] | ListEnumEnvironmentFieldRefInput<$PrismaModel>
    not?: NestedEnumEnvironmentWithAggregatesFilter<$PrismaModel> | $Enums.Environment
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEnvironmentFilter<$PrismaModel>
    _max?: NestedEnumEnvironmentFilter<$PrismaModel>
  }

  export type ProviderRouteCountOrderByAggregateInput = {
    id?: SortOrder
    providerId?: SortOrder
    name?: SortOrder
    fromCountry?: SortOrder
    toCountry?: SortOrder
    fromCurrency?: SortOrder
    toCurrency?: SortOrder
    paymentMethod?: SortOrder
    fixedFee?: SortOrder
    percentageFee?: SortOrder
    minAmount?: SortOrder
    maxAmount?: SortOrder
    estimatedTime?: SortOrder
    cutoffTime?: SortOrder
    workingDays?: SortOrder
    isActive?: SortOrder
    priority?: SortOrder
  }

  export type ProviderRouteAvgOrderByAggregateInput = {
    fixedFee?: SortOrder
    percentageFee?: SortOrder
    minAmount?: SortOrder
    maxAmount?: SortOrder
    estimatedTime?: SortOrder
    priority?: SortOrder
  }

  export type ProviderRouteMaxOrderByAggregateInput = {
    id?: SortOrder
    providerId?: SortOrder
    name?: SortOrder
    fromCountry?: SortOrder
    toCountry?: SortOrder
    fromCurrency?: SortOrder
    toCurrency?: SortOrder
    paymentMethod?: SortOrder
    fixedFee?: SortOrder
    percentageFee?: SortOrder
    minAmount?: SortOrder
    maxAmount?: SortOrder
    estimatedTime?: SortOrder
    cutoffTime?: SortOrder
    isActive?: SortOrder
    priority?: SortOrder
  }

  export type ProviderRouteMinOrderByAggregateInput = {
    id?: SortOrder
    providerId?: SortOrder
    name?: SortOrder
    fromCountry?: SortOrder
    toCountry?: SortOrder
    fromCurrency?: SortOrder
    toCurrency?: SortOrder
    paymentMethod?: SortOrder
    fixedFee?: SortOrder
    percentageFee?: SortOrder
    minAmount?: SortOrder
    maxAmount?: SortOrder
    estimatedTime?: SortOrder
    cutoffTime?: SortOrder
    isActive?: SortOrder
    priority?: SortOrder
  }

  export type ProviderRouteSumOrderByAggregateInput = {
    fixedFee?: SortOrder
    percentageFee?: SortOrder
    minAmount?: SortOrder
    maxAmount?: SortOrder
    estimatedTime?: SortOrder
    priority?: SortOrder
  }

  export type EnumProviderTxTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ProviderTxType | EnumProviderTxTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProviderTxType[] | ListEnumProviderTxTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProviderTxType[] | ListEnumProviderTxTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProviderTxTypeFilter<$PrismaModel> | $Enums.ProviderTxType
  }

  export type PaymentOrderRelationFilter = {
    is?: PaymentOrderWhereInput
    isNot?: PaymentOrderWhereInput
  }

  export type ProviderTransactionCountOrderByAggregateInput = {
    id?: SortOrder
    paymentOrderId?: SortOrder
    providerId?: SortOrder
    type?: SortOrder
    externalId?: SortOrder
    status?: SortOrder
    request?: SortOrder
    response?: SortOrder
    errorCode?: SortOrder
    errorMessage?: SortOrder
    isRetryable?: SortOrder
    createdAt?: SortOrder
    completedAt?: SortOrder
  }

  export type ProviderTransactionMaxOrderByAggregateInput = {
    id?: SortOrder
    paymentOrderId?: SortOrder
    providerId?: SortOrder
    type?: SortOrder
    externalId?: SortOrder
    status?: SortOrder
    errorCode?: SortOrder
    errorMessage?: SortOrder
    isRetryable?: SortOrder
    createdAt?: SortOrder
    completedAt?: SortOrder
  }

  export type ProviderTransactionMinOrderByAggregateInput = {
    id?: SortOrder
    paymentOrderId?: SortOrder
    providerId?: SortOrder
    type?: SortOrder
    externalId?: SortOrder
    status?: SortOrder
    errorCode?: SortOrder
    errorMessage?: SortOrder
    isRetryable?: SortOrder
    createdAt?: SortOrder
    completedAt?: SortOrder
  }

  export type EnumProviderTxTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProviderTxType | EnumProviderTxTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProviderTxType[] | ListEnumProviderTxTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProviderTxType[] | ListEnumProviderTxTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProviderTxTypeWithAggregatesFilter<$PrismaModel> | $Enums.ProviderTxType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProviderTxTypeFilter<$PrismaModel>
    _max?: NestedEnumProviderTxTypeFilter<$PrismaModel>
  }

  export type EnumAgentTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AgentType | EnumAgentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AgentType[] | ListEnumAgentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AgentType[] | ListEnumAgentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAgentTypeFilter<$PrismaModel> | $Enums.AgentType
  }

  export type IntNullableListFilter<$PrismaModel = never> = {
    equals?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    has?: number | IntFieldRefInput<$PrismaModel> | null
    hasEvery?: number[] | ListIntFieldRefInput<$PrismaModel>
    hasSome?: number[] | ListIntFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type AgentCheckpointListRelationFilter = {
    every?: AgentCheckpointWhereInput
    some?: AgentCheckpointWhereInput
    none?: AgentCheckpointWhereInput
  }

  export type AgentCheckpointOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AgentCountOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    name?: SortOrder
    type?: SortOrder
    version?: SortOrder
    model?: SortOrder
    agentWalletId?: SortOrder
    graphDefinition?: SortOrder
    tools?: SortOrder
    systemPrompt?: SortOrder
    supportedProviders?: SortOrder
    supportedChains?: SortOrder
    capabilities?: SortOrder
    isActive?: SortOrder
    totalExecutions?: SortOrder
    avgExecutionTime?: SortOrder
    successRate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AgentAvgOrderByAggregateInput = {
    supportedChains?: SortOrder
    totalExecutions?: SortOrder
    avgExecutionTime?: SortOrder
    successRate?: SortOrder
  }

  export type AgentMaxOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    name?: SortOrder
    type?: SortOrder
    version?: SortOrder
    model?: SortOrder
    agentWalletId?: SortOrder
    systemPrompt?: SortOrder
    isActive?: SortOrder
    totalExecutions?: SortOrder
    avgExecutionTime?: SortOrder
    successRate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AgentMinOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    name?: SortOrder
    type?: SortOrder
    version?: SortOrder
    model?: SortOrder
    agentWalletId?: SortOrder
    systemPrompt?: SortOrder
    isActive?: SortOrder
    totalExecutions?: SortOrder
    avgExecutionTime?: SortOrder
    successRate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AgentSumOrderByAggregateInput = {
    supportedChains?: SortOrder
    totalExecutions?: SortOrder
    avgExecutionTime?: SortOrder
    successRate?: SortOrder
  }

  export type EnumAgentTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AgentType | EnumAgentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AgentType[] | ListEnumAgentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AgentType[] | ListEnumAgentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAgentTypeWithAggregatesFilter<$PrismaModel> | $Enums.AgentType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAgentTypeFilter<$PrismaModel>
    _max?: NestedEnumAgentTypeFilter<$PrismaModel>
  }

  export type AgentDecisionCountOrderByAggregateInput = {
    id?: SortOrder
    agentId?: SortOrder
    paymentOrderId?: SortOrder
    decisionType?: SortOrder
    input?: SortOrder
    reasoning?: SortOrder
    decision?: SortOrder
    confidence?: SortOrder
    executionTime?: SortOrder
    tokensUsed?: SortOrder
    wasOverridden?: SortOrder
    overriddenBy?: SortOrder
    overrideReason?: SortOrder
    createdAt?: SortOrder
  }

  export type AgentDecisionAvgOrderByAggregateInput = {
    confidence?: SortOrder
    executionTime?: SortOrder
    tokensUsed?: SortOrder
  }

  export type AgentDecisionMaxOrderByAggregateInput = {
    id?: SortOrder
    agentId?: SortOrder
    paymentOrderId?: SortOrder
    decisionType?: SortOrder
    confidence?: SortOrder
    executionTime?: SortOrder
    tokensUsed?: SortOrder
    wasOverridden?: SortOrder
    overriddenBy?: SortOrder
    overrideReason?: SortOrder
    createdAt?: SortOrder
  }

  export type AgentDecisionMinOrderByAggregateInput = {
    id?: SortOrder
    agentId?: SortOrder
    paymentOrderId?: SortOrder
    decisionType?: SortOrder
    confidence?: SortOrder
    executionTime?: SortOrder
    tokensUsed?: SortOrder
    wasOverridden?: SortOrder
    overriddenBy?: SortOrder
    overrideReason?: SortOrder
    createdAt?: SortOrder
  }

  export type AgentDecisionSumOrderByAggregateInput = {
    confidence?: SortOrder
    executionTime?: SortOrder
    tokensUsed?: SortOrder
  }

  export type AgentCheckpointAgentIdThreadIdCheckpointIdCompoundUniqueInput = {
    agentId: string
    threadId: string
    checkpointId: string
  }

  export type AgentCheckpointCountOrderByAggregateInput = {
    id?: SortOrder
    agentId?: SortOrder
    threadId?: SortOrder
    checkpointId?: SortOrder
    state?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
  }

  export type AgentCheckpointMaxOrderByAggregateInput = {
    id?: SortOrder
    agentId?: SortOrder
    threadId?: SortOrder
    checkpointId?: SortOrder
    createdAt?: SortOrder
  }

  export type AgentCheckpointMinOrderByAggregateInput = {
    id?: SortOrder
    agentId?: SortOrder
    threadId?: SortOrder
    checkpointId?: SortOrder
    createdAt?: SortOrder
  }

  export type EnumInteractionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.InteractionType | EnumInteractionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.InteractionType[] | ListEnumInteractionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.InteractionType[] | ListEnumInteractionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumInteractionTypeFilter<$PrismaModel> | $Enums.InteractionType
  }

  export type AgentDecisionRelationFilter = {
    is?: AgentDecisionWhereInput
    isNot?: AgentDecisionWhereInput
  }

  export type AgentInteractionCountOrderByAggregateInput = {
    id?: SortOrder
    agentDecisionId?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    message?: SortOrder
    action?: SortOrder
    result?: SortOrder
    createdAt?: SortOrder
  }

  export type AgentInteractionMaxOrderByAggregateInput = {
    id?: SortOrder
    agentDecisionId?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    message?: SortOrder
    action?: SortOrder
    createdAt?: SortOrder
  }

  export type AgentInteractionMinOrderByAggregateInput = {
    id?: SortOrder
    agentDecisionId?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    message?: SortOrder
    action?: SortOrder
    createdAt?: SortOrder
  }

  export type EnumInteractionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.InteractionType | EnumInteractionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.InteractionType[] | ListEnumInteractionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.InteractionType[] | ListEnumInteractionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumInteractionTypeWithAggregatesFilter<$PrismaModel> | $Enums.InteractionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumInteractionTypeFilter<$PrismaModel>
    _max?: NestedEnumInteractionTypeFilter<$PrismaModel>
  }

  export type WebhookDeliveryListRelationFilter = {
    every?: WebhookDeliveryWhereInput
    some?: WebhookDeliveryWhereInput
    none?: WebhookDeliveryWhereInput
  }

  export type WebhookDeliveryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type WebhookCountOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    url?: SortOrder
    events?: SortOrder
    secret?: SortOrder
    isActive?: SortOrder
    failureCount?: SortOrder
    lastFailureAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type WebhookAvgOrderByAggregateInput = {
    failureCount?: SortOrder
  }

  export type WebhookMaxOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    url?: SortOrder
    secret?: SortOrder
    isActive?: SortOrder
    failureCount?: SortOrder
    lastFailureAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type WebhookMinOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    url?: SortOrder
    secret?: SortOrder
    isActive?: SortOrder
    failureCount?: SortOrder
    lastFailureAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type WebhookSumOrderByAggregateInput = {
    failureCount?: SortOrder
  }

  export type WebhookRelationFilter = {
    is?: WebhookWhereInput
    isNot?: WebhookWhereInput
  }

  export type WebhookDeliveryCountOrderByAggregateInput = {
    id?: SortOrder
    webhookId?: SortOrder
    eventType?: SortOrder
    eventId?: SortOrder
    payload?: SortOrder
    statusCode?: SortOrder
    response?: SortOrder
    error?: SortOrder
    attempts?: SortOrder
    nextRetryAt?: SortOrder
    createdAt?: SortOrder
    deliveredAt?: SortOrder
  }

  export type WebhookDeliveryAvgOrderByAggregateInput = {
    statusCode?: SortOrder
    attempts?: SortOrder
  }

  export type WebhookDeliveryMaxOrderByAggregateInput = {
    id?: SortOrder
    webhookId?: SortOrder
    eventType?: SortOrder
    eventId?: SortOrder
    statusCode?: SortOrder
    response?: SortOrder
    error?: SortOrder
    attempts?: SortOrder
    nextRetryAt?: SortOrder
    createdAt?: SortOrder
    deliveredAt?: SortOrder
  }

  export type WebhookDeliveryMinOrderByAggregateInput = {
    id?: SortOrder
    webhookId?: SortOrder
    eventType?: SortOrder
    eventId?: SortOrder
    statusCode?: SortOrder
    response?: SortOrder
    error?: SortOrder
    attempts?: SortOrder
    nextRetryAt?: SortOrder
    createdAt?: SortOrder
    deliveredAt?: SortOrder
  }

  export type WebhookDeliverySumOrderByAggregateInput = {
    statusCode?: SortOrder
    attempts?: SortOrder
  }

  export type EnumManualStepTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ManualStepType | EnumManualStepTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ManualStepType[] | ListEnumManualStepTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ManualStepType[] | ListEnumManualStepTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumManualStepTypeFilter<$PrismaModel> | $Enums.ManualStepType
  }

  export type EnumPriorityFilter<$PrismaModel = never> = {
    equals?: $Enums.Priority | EnumPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.Priority[] | ListEnumPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.Priority[] | ListEnumPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumPriorityFilter<$PrismaModel> | $Enums.Priority
  }

  export type EnumManualStepStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ManualStepStatus | EnumManualStepStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ManualStepStatus[] | ListEnumManualStepStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ManualStepStatus[] | ListEnumManualStepStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumManualStepStatusFilter<$PrismaModel> | $Enums.ManualStepStatus
  }

  export type ManualProcessStepCountOrderByAggregateInput = {
    id?: SortOrder
    paymentOrderId?: SortOrder
    type?: SortOrder
    reason?: SortOrder
    instructions?: SortOrder
    assignedTo?: SortOrder
    assignedTeam?: SortOrder
    priority?: SortOrder
    status?: SortOrder
    resolution?: SortOrder
    createdAt?: SortOrder
    startedAt?: SortOrder
    completedAt?: SortOrder
    dueAt?: SortOrder
  }

  export type ManualProcessStepMaxOrderByAggregateInput = {
    id?: SortOrder
    paymentOrderId?: SortOrder
    type?: SortOrder
    reason?: SortOrder
    instructions?: SortOrder
    assignedTo?: SortOrder
    assignedTeam?: SortOrder
    priority?: SortOrder
    status?: SortOrder
    resolution?: SortOrder
    createdAt?: SortOrder
    startedAt?: SortOrder
    completedAt?: SortOrder
    dueAt?: SortOrder
  }

  export type ManualProcessStepMinOrderByAggregateInput = {
    id?: SortOrder
    paymentOrderId?: SortOrder
    type?: SortOrder
    reason?: SortOrder
    instructions?: SortOrder
    assignedTo?: SortOrder
    assignedTeam?: SortOrder
    priority?: SortOrder
    status?: SortOrder
    resolution?: SortOrder
    createdAt?: SortOrder
    startedAt?: SortOrder
    completedAt?: SortOrder
    dueAt?: SortOrder
  }

  export type EnumManualStepTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ManualStepType | EnumManualStepTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ManualStepType[] | ListEnumManualStepTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ManualStepType[] | ListEnumManualStepTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumManualStepTypeWithAggregatesFilter<$PrismaModel> | $Enums.ManualStepType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumManualStepTypeFilter<$PrismaModel>
    _max?: NestedEnumManualStepTypeFilter<$PrismaModel>
  }

  export type EnumPriorityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Priority | EnumPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.Priority[] | ListEnumPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.Priority[] | ListEnumPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumPriorityWithAggregatesFilter<$PrismaModel> | $Enums.Priority
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPriorityFilter<$PrismaModel>
    _max?: NestedEnumPriorityFilter<$PrismaModel>
  }

  export type EnumManualStepStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ManualStepStatus | EnumManualStepStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ManualStepStatus[] | ListEnumManualStepStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ManualStepStatus[] | ListEnumManualStepStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumManualStepStatusWithAggregatesFilter<$PrismaModel> | $Enums.ManualStepStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumManualStepStatusFilter<$PrismaModel>
    _max?: NestedEnumManualStepStatusFilter<$PrismaModel>
  }

  export type BigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type PaymentEventPaymentOrderIdSequenceNumberCompoundUniqueInput = {
    paymentOrderId: string
    sequenceNumber: number
  }

  export type PaymentEventCountOrderByAggregateInput = {
    id?: SortOrder
    paymentOrderId?: SortOrder
    sequenceNumber?: SortOrder
    eventType?: SortOrder
    eventVersion?: SortOrder
    data?: SortOrder
    metadata?: SortOrder
    kafkaTopic?: SortOrder
    kafkaPartition?: SortOrder
    kafkaOffset?: SortOrder
    occurredAt?: SortOrder
  }

  export type PaymentEventAvgOrderByAggregateInput = {
    sequenceNumber?: SortOrder
    kafkaPartition?: SortOrder
    kafkaOffset?: SortOrder
  }

  export type PaymentEventMaxOrderByAggregateInput = {
    id?: SortOrder
    paymentOrderId?: SortOrder
    sequenceNumber?: SortOrder
    eventType?: SortOrder
    eventVersion?: SortOrder
    kafkaTopic?: SortOrder
    kafkaPartition?: SortOrder
    kafkaOffset?: SortOrder
    occurredAt?: SortOrder
  }

  export type PaymentEventMinOrderByAggregateInput = {
    id?: SortOrder
    paymentOrderId?: SortOrder
    sequenceNumber?: SortOrder
    eventType?: SortOrder
    eventVersion?: SortOrder
    kafkaTopic?: SortOrder
    kafkaPartition?: SortOrder
    kafkaOffset?: SortOrder
    occurredAt?: SortOrder
  }

  export type PaymentEventSumOrderByAggregateInput = {
    sequenceNumber?: SortOrder
    kafkaPartition?: SortOrder
    kafkaOffset?: SortOrder
  }

  export type BigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type AuditLogCountOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    entityType?: SortOrder
    entityId?: SortOrder
    changes?: SortOrder
    metadata?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    requestId?: SortOrder
    createdAt?: SortOrder
  }

  export type AuditLogMaxOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    entityType?: SortOrder
    entityId?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    requestId?: SortOrder
    createdAt?: SortOrder
  }

  export type AuditLogMinOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    entityType?: SortOrder
    entityId?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    requestId?: SortOrder
    createdAt?: SortOrder
  }

  export type ApiKeyCountOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    name?: SortOrder
    keyHash?: SortOrder
    prefix?: SortOrder
    scopes?: SortOrder
    rateLimit?: SortOrder
    isActive?: SortOrder
    expiresAt?: SortOrder
    lastUsedAt?: SortOrder
    createdAt?: SortOrder
    revokedAt?: SortOrder
  }

  export type ApiKeyAvgOrderByAggregateInput = {
    rateLimit?: SortOrder
  }

  export type ApiKeyMaxOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    name?: SortOrder
    keyHash?: SortOrder
    prefix?: SortOrder
    rateLimit?: SortOrder
    isActive?: SortOrder
    expiresAt?: SortOrder
    lastUsedAt?: SortOrder
    createdAt?: SortOrder
    revokedAt?: SortOrder
  }

  export type ApiKeyMinOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    name?: SortOrder
    keyHash?: SortOrder
    prefix?: SortOrder
    rateLimit?: SortOrder
    isActive?: SortOrder
    expiresAt?: SortOrder
    lastUsedAt?: SortOrder
    createdAt?: SortOrder
    revokedAt?: SortOrder
  }

  export type ApiKeySumOrderByAggregateInput = {
    rateLimit?: SortOrder
  }

  export type EnumUserRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleFilter<$PrismaModel> | $Enums.UserRole
  }

  export type OrganizationUserOrganizationIdUserIdCompoundUniqueInput = {
    organizationId: string
    userId: string
  }

  export type OrganizationUserCountOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    permissions?: SortOrder
    invitedBy?: SortOrder
    invitedAt?: SortOrder
    acceptedAt?: SortOrder
    isActive?: SortOrder
  }

  export type OrganizationUserMaxOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    invitedBy?: SortOrder
    invitedAt?: SortOrder
    acceptedAt?: SortOrder
    isActive?: SortOrder
  }

  export type OrganizationUserMinOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    invitedBy?: SortOrder
    invitedAt?: SortOrder
    acceptedAt?: SortOrder
    isActive?: SortOrder
  }

  export type EnumUserRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleWithAggregatesFilter<$PrismaModel> | $Enums.UserRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserRoleFilter<$PrismaModel>
    _max?: NestedEnumUserRoleFilter<$PrismaModel>
  }

  export type OrganizationUserCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<OrganizationUserCreateWithoutOrganizationInput, OrganizationUserUncheckedCreateWithoutOrganizationInput> | OrganizationUserCreateWithoutOrganizationInput[] | OrganizationUserUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: OrganizationUserCreateOrConnectWithoutOrganizationInput | OrganizationUserCreateOrConnectWithoutOrganizationInput[]
    createMany?: OrganizationUserCreateManyOrganizationInputEnvelope
    connect?: OrganizationUserWhereUniqueInput | OrganizationUserWhereUniqueInput[]
  }

  export type CustomerCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<CustomerCreateWithoutOrganizationInput, CustomerUncheckedCreateWithoutOrganizationInput> | CustomerCreateWithoutOrganizationInput[] | CustomerUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: CustomerCreateOrConnectWithoutOrganizationInput | CustomerCreateOrConnectWithoutOrganizationInput[]
    createMany?: CustomerCreateManyOrganizationInputEnvelope
    connect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<ProductCreateWithoutOrganizationInput, ProductUncheckedCreateWithoutOrganizationInput> | ProductCreateWithoutOrganizationInput[] | ProductUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutOrganizationInput | ProductCreateOrConnectWithoutOrganizationInput[]
    createMany?: ProductCreateManyOrganizationInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type WalletCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<WalletCreateWithoutOrganizationInput, WalletUncheckedCreateWithoutOrganizationInput> | WalletCreateWithoutOrganizationInput[] | WalletUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: WalletCreateOrConnectWithoutOrganizationInput | WalletCreateOrConnectWithoutOrganizationInput[]
    createMany?: WalletCreateManyOrganizationInputEnvelope
    connect?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
  }

  export type PaymentLinkCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<PaymentLinkCreateWithoutOrganizationInput, PaymentLinkUncheckedCreateWithoutOrganizationInput> | PaymentLinkCreateWithoutOrganizationInput[] | PaymentLinkUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: PaymentLinkCreateOrConnectWithoutOrganizationInput | PaymentLinkCreateOrConnectWithoutOrganizationInput[]
    createMany?: PaymentLinkCreateManyOrganizationInputEnvelope
    connect?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
  }

  export type PaymentOrderCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<PaymentOrderCreateWithoutOrganizationInput, PaymentOrderUncheckedCreateWithoutOrganizationInput> | PaymentOrderCreateWithoutOrganizationInput[] | PaymentOrderUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: PaymentOrderCreateOrConnectWithoutOrganizationInput | PaymentOrderCreateOrConnectWithoutOrganizationInput[]
    createMany?: PaymentOrderCreateManyOrganizationInputEnvelope
    connect?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
  }

  export type ProviderConfigCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<ProviderConfigCreateWithoutOrganizationInput, ProviderConfigUncheckedCreateWithoutOrganizationInput> | ProviderConfigCreateWithoutOrganizationInput[] | ProviderConfigUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ProviderConfigCreateOrConnectWithoutOrganizationInput | ProviderConfigCreateOrConnectWithoutOrganizationInput[]
    createMany?: ProviderConfigCreateManyOrganizationInputEnvelope
    connect?: ProviderConfigWhereUniqueInput | ProviderConfigWhereUniqueInput[]
  }

  export type ApiKeyCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<ApiKeyCreateWithoutOrganizationInput, ApiKeyUncheckedCreateWithoutOrganizationInput> | ApiKeyCreateWithoutOrganizationInput[] | ApiKeyUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ApiKeyCreateOrConnectWithoutOrganizationInput | ApiKeyCreateOrConnectWithoutOrganizationInput[]
    createMany?: ApiKeyCreateManyOrganizationInputEnvelope
    connect?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
  }

  export type WebhookCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<WebhookCreateWithoutOrganizationInput, WebhookUncheckedCreateWithoutOrganizationInput> | WebhookCreateWithoutOrganizationInput[] | WebhookUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: WebhookCreateOrConnectWithoutOrganizationInput | WebhookCreateOrConnectWithoutOrganizationInput[]
    createMany?: WebhookCreateManyOrganizationInputEnvelope
    connect?: WebhookWhereUniqueInput | WebhookWhereUniqueInput[]
  }

  export type AuditLogCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<AuditLogCreateWithoutOrganizationInput, AuditLogUncheckedCreateWithoutOrganizationInput> | AuditLogCreateWithoutOrganizationInput[] | AuditLogUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: AuditLogCreateOrConnectWithoutOrganizationInput | AuditLogCreateOrConnectWithoutOrganizationInput[]
    createMany?: AuditLogCreateManyOrganizationInputEnvelope
    connect?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
  }

  export type AgentCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<AgentCreateWithoutOrganizationInput, AgentUncheckedCreateWithoutOrganizationInput> | AgentCreateWithoutOrganizationInput[] | AgentUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: AgentCreateOrConnectWithoutOrganizationInput | AgentCreateOrConnectWithoutOrganizationInput[]
    createMany?: AgentCreateManyOrganizationInputEnvelope
    connect?: AgentWhereUniqueInput | AgentWhereUniqueInput[]
  }

  export type OrganizationUserUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<OrganizationUserCreateWithoutOrganizationInput, OrganizationUserUncheckedCreateWithoutOrganizationInput> | OrganizationUserCreateWithoutOrganizationInput[] | OrganizationUserUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: OrganizationUserCreateOrConnectWithoutOrganizationInput | OrganizationUserCreateOrConnectWithoutOrganizationInput[]
    createMany?: OrganizationUserCreateManyOrganizationInputEnvelope
    connect?: OrganizationUserWhereUniqueInput | OrganizationUserWhereUniqueInput[]
  }

  export type CustomerUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<CustomerCreateWithoutOrganizationInput, CustomerUncheckedCreateWithoutOrganizationInput> | CustomerCreateWithoutOrganizationInput[] | CustomerUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: CustomerCreateOrConnectWithoutOrganizationInput | CustomerCreateOrConnectWithoutOrganizationInput[]
    createMany?: CustomerCreateManyOrganizationInputEnvelope
    connect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<ProductCreateWithoutOrganizationInput, ProductUncheckedCreateWithoutOrganizationInput> | ProductCreateWithoutOrganizationInput[] | ProductUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutOrganizationInput | ProductCreateOrConnectWithoutOrganizationInput[]
    createMany?: ProductCreateManyOrganizationInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type WalletUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<WalletCreateWithoutOrganizationInput, WalletUncheckedCreateWithoutOrganizationInput> | WalletCreateWithoutOrganizationInput[] | WalletUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: WalletCreateOrConnectWithoutOrganizationInput | WalletCreateOrConnectWithoutOrganizationInput[]
    createMany?: WalletCreateManyOrganizationInputEnvelope
    connect?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
  }

  export type PaymentLinkUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<PaymentLinkCreateWithoutOrganizationInput, PaymentLinkUncheckedCreateWithoutOrganizationInput> | PaymentLinkCreateWithoutOrganizationInput[] | PaymentLinkUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: PaymentLinkCreateOrConnectWithoutOrganizationInput | PaymentLinkCreateOrConnectWithoutOrganizationInput[]
    createMany?: PaymentLinkCreateManyOrganizationInputEnvelope
    connect?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
  }

  export type PaymentOrderUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<PaymentOrderCreateWithoutOrganizationInput, PaymentOrderUncheckedCreateWithoutOrganizationInput> | PaymentOrderCreateWithoutOrganizationInput[] | PaymentOrderUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: PaymentOrderCreateOrConnectWithoutOrganizationInput | PaymentOrderCreateOrConnectWithoutOrganizationInput[]
    createMany?: PaymentOrderCreateManyOrganizationInputEnvelope
    connect?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
  }

  export type ProviderConfigUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<ProviderConfigCreateWithoutOrganizationInput, ProviderConfigUncheckedCreateWithoutOrganizationInput> | ProviderConfigCreateWithoutOrganizationInput[] | ProviderConfigUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ProviderConfigCreateOrConnectWithoutOrganizationInput | ProviderConfigCreateOrConnectWithoutOrganizationInput[]
    createMany?: ProviderConfigCreateManyOrganizationInputEnvelope
    connect?: ProviderConfigWhereUniqueInput | ProviderConfigWhereUniqueInput[]
  }

  export type ApiKeyUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<ApiKeyCreateWithoutOrganizationInput, ApiKeyUncheckedCreateWithoutOrganizationInput> | ApiKeyCreateWithoutOrganizationInput[] | ApiKeyUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ApiKeyCreateOrConnectWithoutOrganizationInput | ApiKeyCreateOrConnectWithoutOrganizationInput[]
    createMany?: ApiKeyCreateManyOrganizationInputEnvelope
    connect?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
  }

  export type WebhookUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<WebhookCreateWithoutOrganizationInput, WebhookUncheckedCreateWithoutOrganizationInput> | WebhookCreateWithoutOrganizationInput[] | WebhookUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: WebhookCreateOrConnectWithoutOrganizationInput | WebhookCreateOrConnectWithoutOrganizationInput[]
    createMany?: WebhookCreateManyOrganizationInputEnvelope
    connect?: WebhookWhereUniqueInput | WebhookWhereUniqueInput[]
  }

  export type AuditLogUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<AuditLogCreateWithoutOrganizationInput, AuditLogUncheckedCreateWithoutOrganizationInput> | AuditLogCreateWithoutOrganizationInput[] | AuditLogUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: AuditLogCreateOrConnectWithoutOrganizationInput | AuditLogCreateOrConnectWithoutOrganizationInput[]
    createMany?: AuditLogCreateManyOrganizationInputEnvelope
    connect?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
  }

  export type AgentUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<AgentCreateWithoutOrganizationInput, AgentUncheckedCreateWithoutOrganizationInput> | AgentCreateWithoutOrganizationInput[] | AgentUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: AgentCreateOrConnectWithoutOrganizationInput | AgentCreateOrConnectWithoutOrganizationInput[]
    createMany?: AgentCreateManyOrganizationInputEnvelope
    connect?: AgentWhereUniqueInput | AgentWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type EnumComplianceStatusFieldUpdateOperationsInput = {
    set?: $Enums.ComplianceStatus
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type OrganizationUserUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<OrganizationUserCreateWithoutOrganizationInput, OrganizationUserUncheckedCreateWithoutOrganizationInput> | OrganizationUserCreateWithoutOrganizationInput[] | OrganizationUserUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: OrganizationUserCreateOrConnectWithoutOrganizationInput | OrganizationUserCreateOrConnectWithoutOrganizationInput[]
    upsert?: OrganizationUserUpsertWithWhereUniqueWithoutOrganizationInput | OrganizationUserUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: OrganizationUserCreateManyOrganizationInputEnvelope
    set?: OrganizationUserWhereUniqueInput | OrganizationUserWhereUniqueInput[]
    disconnect?: OrganizationUserWhereUniqueInput | OrganizationUserWhereUniqueInput[]
    delete?: OrganizationUserWhereUniqueInput | OrganizationUserWhereUniqueInput[]
    connect?: OrganizationUserWhereUniqueInput | OrganizationUserWhereUniqueInput[]
    update?: OrganizationUserUpdateWithWhereUniqueWithoutOrganizationInput | OrganizationUserUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: OrganizationUserUpdateManyWithWhereWithoutOrganizationInput | OrganizationUserUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: OrganizationUserScalarWhereInput | OrganizationUserScalarWhereInput[]
  }

  export type CustomerUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<CustomerCreateWithoutOrganizationInput, CustomerUncheckedCreateWithoutOrganizationInput> | CustomerCreateWithoutOrganizationInput[] | CustomerUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: CustomerCreateOrConnectWithoutOrganizationInput | CustomerCreateOrConnectWithoutOrganizationInput[]
    upsert?: CustomerUpsertWithWhereUniqueWithoutOrganizationInput | CustomerUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: CustomerCreateManyOrganizationInputEnvelope
    set?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    disconnect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    delete?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    connect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    update?: CustomerUpdateWithWhereUniqueWithoutOrganizationInput | CustomerUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: CustomerUpdateManyWithWhereWithoutOrganizationInput | CustomerUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: CustomerScalarWhereInput | CustomerScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<ProductCreateWithoutOrganizationInput, ProductUncheckedCreateWithoutOrganizationInput> | ProductCreateWithoutOrganizationInput[] | ProductUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutOrganizationInput | ProductCreateOrConnectWithoutOrganizationInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutOrganizationInput | ProductUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: ProductCreateManyOrganizationInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutOrganizationInput | ProductUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutOrganizationInput | ProductUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type WalletUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<WalletCreateWithoutOrganizationInput, WalletUncheckedCreateWithoutOrganizationInput> | WalletCreateWithoutOrganizationInput[] | WalletUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: WalletCreateOrConnectWithoutOrganizationInput | WalletCreateOrConnectWithoutOrganizationInput[]
    upsert?: WalletUpsertWithWhereUniqueWithoutOrganizationInput | WalletUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: WalletCreateManyOrganizationInputEnvelope
    set?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
    disconnect?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
    delete?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
    connect?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
    update?: WalletUpdateWithWhereUniqueWithoutOrganizationInput | WalletUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: WalletUpdateManyWithWhereWithoutOrganizationInput | WalletUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: WalletScalarWhereInput | WalletScalarWhereInput[]
  }

  export type PaymentLinkUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<PaymentLinkCreateWithoutOrganizationInput, PaymentLinkUncheckedCreateWithoutOrganizationInput> | PaymentLinkCreateWithoutOrganizationInput[] | PaymentLinkUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: PaymentLinkCreateOrConnectWithoutOrganizationInput | PaymentLinkCreateOrConnectWithoutOrganizationInput[]
    upsert?: PaymentLinkUpsertWithWhereUniqueWithoutOrganizationInput | PaymentLinkUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: PaymentLinkCreateManyOrganizationInputEnvelope
    set?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    disconnect?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    delete?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    connect?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    update?: PaymentLinkUpdateWithWhereUniqueWithoutOrganizationInput | PaymentLinkUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: PaymentLinkUpdateManyWithWhereWithoutOrganizationInput | PaymentLinkUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: PaymentLinkScalarWhereInput | PaymentLinkScalarWhereInput[]
  }

  export type PaymentOrderUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<PaymentOrderCreateWithoutOrganizationInput, PaymentOrderUncheckedCreateWithoutOrganizationInput> | PaymentOrderCreateWithoutOrganizationInput[] | PaymentOrderUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: PaymentOrderCreateOrConnectWithoutOrganizationInput | PaymentOrderCreateOrConnectWithoutOrganizationInput[]
    upsert?: PaymentOrderUpsertWithWhereUniqueWithoutOrganizationInput | PaymentOrderUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: PaymentOrderCreateManyOrganizationInputEnvelope
    set?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
    disconnect?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
    delete?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
    connect?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
    update?: PaymentOrderUpdateWithWhereUniqueWithoutOrganizationInput | PaymentOrderUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: PaymentOrderUpdateManyWithWhereWithoutOrganizationInput | PaymentOrderUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: PaymentOrderScalarWhereInput | PaymentOrderScalarWhereInput[]
  }

  export type ProviderConfigUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<ProviderConfigCreateWithoutOrganizationInput, ProviderConfigUncheckedCreateWithoutOrganizationInput> | ProviderConfigCreateWithoutOrganizationInput[] | ProviderConfigUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ProviderConfigCreateOrConnectWithoutOrganizationInput | ProviderConfigCreateOrConnectWithoutOrganizationInput[]
    upsert?: ProviderConfigUpsertWithWhereUniqueWithoutOrganizationInput | ProviderConfigUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: ProviderConfigCreateManyOrganizationInputEnvelope
    set?: ProviderConfigWhereUniqueInput | ProviderConfigWhereUniqueInput[]
    disconnect?: ProviderConfigWhereUniqueInput | ProviderConfigWhereUniqueInput[]
    delete?: ProviderConfigWhereUniqueInput | ProviderConfigWhereUniqueInput[]
    connect?: ProviderConfigWhereUniqueInput | ProviderConfigWhereUniqueInput[]
    update?: ProviderConfigUpdateWithWhereUniqueWithoutOrganizationInput | ProviderConfigUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: ProviderConfigUpdateManyWithWhereWithoutOrganizationInput | ProviderConfigUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: ProviderConfigScalarWhereInput | ProviderConfigScalarWhereInput[]
  }

  export type ApiKeyUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<ApiKeyCreateWithoutOrganizationInput, ApiKeyUncheckedCreateWithoutOrganizationInput> | ApiKeyCreateWithoutOrganizationInput[] | ApiKeyUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ApiKeyCreateOrConnectWithoutOrganizationInput | ApiKeyCreateOrConnectWithoutOrganizationInput[]
    upsert?: ApiKeyUpsertWithWhereUniqueWithoutOrganizationInput | ApiKeyUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: ApiKeyCreateManyOrganizationInputEnvelope
    set?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
    disconnect?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
    delete?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
    connect?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
    update?: ApiKeyUpdateWithWhereUniqueWithoutOrganizationInput | ApiKeyUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: ApiKeyUpdateManyWithWhereWithoutOrganizationInput | ApiKeyUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: ApiKeyScalarWhereInput | ApiKeyScalarWhereInput[]
  }

  export type WebhookUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<WebhookCreateWithoutOrganizationInput, WebhookUncheckedCreateWithoutOrganizationInput> | WebhookCreateWithoutOrganizationInput[] | WebhookUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: WebhookCreateOrConnectWithoutOrganizationInput | WebhookCreateOrConnectWithoutOrganizationInput[]
    upsert?: WebhookUpsertWithWhereUniqueWithoutOrganizationInput | WebhookUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: WebhookCreateManyOrganizationInputEnvelope
    set?: WebhookWhereUniqueInput | WebhookWhereUniqueInput[]
    disconnect?: WebhookWhereUniqueInput | WebhookWhereUniqueInput[]
    delete?: WebhookWhereUniqueInput | WebhookWhereUniqueInput[]
    connect?: WebhookWhereUniqueInput | WebhookWhereUniqueInput[]
    update?: WebhookUpdateWithWhereUniqueWithoutOrganizationInput | WebhookUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: WebhookUpdateManyWithWhereWithoutOrganizationInput | WebhookUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: WebhookScalarWhereInput | WebhookScalarWhereInput[]
  }

  export type AuditLogUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<AuditLogCreateWithoutOrganizationInput, AuditLogUncheckedCreateWithoutOrganizationInput> | AuditLogCreateWithoutOrganizationInput[] | AuditLogUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: AuditLogCreateOrConnectWithoutOrganizationInput | AuditLogCreateOrConnectWithoutOrganizationInput[]
    upsert?: AuditLogUpsertWithWhereUniqueWithoutOrganizationInput | AuditLogUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: AuditLogCreateManyOrganizationInputEnvelope
    set?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    disconnect?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    delete?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    connect?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    update?: AuditLogUpdateWithWhereUniqueWithoutOrganizationInput | AuditLogUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: AuditLogUpdateManyWithWhereWithoutOrganizationInput | AuditLogUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: AuditLogScalarWhereInput | AuditLogScalarWhereInput[]
  }

  export type AgentUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<AgentCreateWithoutOrganizationInput, AgentUncheckedCreateWithoutOrganizationInput> | AgentCreateWithoutOrganizationInput[] | AgentUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: AgentCreateOrConnectWithoutOrganizationInput | AgentCreateOrConnectWithoutOrganizationInput[]
    upsert?: AgentUpsertWithWhereUniqueWithoutOrganizationInput | AgentUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: AgentCreateManyOrganizationInputEnvelope
    set?: AgentWhereUniqueInput | AgentWhereUniqueInput[]
    disconnect?: AgentWhereUniqueInput | AgentWhereUniqueInput[]
    delete?: AgentWhereUniqueInput | AgentWhereUniqueInput[]
    connect?: AgentWhereUniqueInput | AgentWhereUniqueInput[]
    update?: AgentUpdateWithWhereUniqueWithoutOrganizationInput | AgentUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: AgentUpdateManyWithWhereWithoutOrganizationInput | AgentUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: AgentScalarWhereInput | AgentScalarWhereInput[]
  }

  export type OrganizationUserUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<OrganizationUserCreateWithoutOrganizationInput, OrganizationUserUncheckedCreateWithoutOrganizationInput> | OrganizationUserCreateWithoutOrganizationInput[] | OrganizationUserUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: OrganizationUserCreateOrConnectWithoutOrganizationInput | OrganizationUserCreateOrConnectWithoutOrganizationInput[]
    upsert?: OrganizationUserUpsertWithWhereUniqueWithoutOrganizationInput | OrganizationUserUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: OrganizationUserCreateManyOrganizationInputEnvelope
    set?: OrganizationUserWhereUniqueInput | OrganizationUserWhereUniqueInput[]
    disconnect?: OrganizationUserWhereUniqueInput | OrganizationUserWhereUniqueInput[]
    delete?: OrganizationUserWhereUniqueInput | OrganizationUserWhereUniqueInput[]
    connect?: OrganizationUserWhereUniqueInput | OrganizationUserWhereUniqueInput[]
    update?: OrganizationUserUpdateWithWhereUniqueWithoutOrganizationInput | OrganizationUserUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: OrganizationUserUpdateManyWithWhereWithoutOrganizationInput | OrganizationUserUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: OrganizationUserScalarWhereInput | OrganizationUserScalarWhereInput[]
  }

  export type CustomerUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<CustomerCreateWithoutOrganizationInput, CustomerUncheckedCreateWithoutOrganizationInput> | CustomerCreateWithoutOrganizationInput[] | CustomerUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: CustomerCreateOrConnectWithoutOrganizationInput | CustomerCreateOrConnectWithoutOrganizationInput[]
    upsert?: CustomerUpsertWithWhereUniqueWithoutOrganizationInput | CustomerUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: CustomerCreateManyOrganizationInputEnvelope
    set?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    disconnect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    delete?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    connect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    update?: CustomerUpdateWithWhereUniqueWithoutOrganizationInput | CustomerUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: CustomerUpdateManyWithWhereWithoutOrganizationInput | CustomerUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: CustomerScalarWhereInput | CustomerScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<ProductCreateWithoutOrganizationInput, ProductUncheckedCreateWithoutOrganizationInput> | ProductCreateWithoutOrganizationInput[] | ProductUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutOrganizationInput | ProductCreateOrConnectWithoutOrganizationInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutOrganizationInput | ProductUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: ProductCreateManyOrganizationInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutOrganizationInput | ProductUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutOrganizationInput | ProductUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type WalletUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<WalletCreateWithoutOrganizationInput, WalletUncheckedCreateWithoutOrganizationInput> | WalletCreateWithoutOrganizationInput[] | WalletUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: WalletCreateOrConnectWithoutOrganizationInput | WalletCreateOrConnectWithoutOrganizationInput[]
    upsert?: WalletUpsertWithWhereUniqueWithoutOrganizationInput | WalletUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: WalletCreateManyOrganizationInputEnvelope
    set?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
    disconnect?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
    delete?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
    connect?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
    update?: WalletUpdateWithWhereUniqueWithoutOrganizationInput | WalletUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: WalletUpdateManyWithWhereWithoutOrganizationInput | WalletUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: WalletScalarWhereInput | WalletScalarWhereInput[]
  }

  export type PaymentLinkUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<PaymentLinkCreateWithoutOrganizationInput, PaymentLinkUncheckedCreateWithoutOrganizationInput> | PaymentLinkCreateWithoutOrganizationInput[] | PaymentLinkUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: PaymentLinkCreateOrConnectWithoutOrganizationInput | PaymentLinkCreateOrConnectWithoutOrganizationInput[]
    upsert?: PaymentLinkUpsertWithWhereUniqueWithoutOrganizationInput | PaymentLinkUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: PaymentLinkCreateManyOrganizationInputEnvelope
    set?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    disconnect?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    delete?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    connect?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    update?: PaymentLinkUpdateWithWhereUniqueWithoutOrganizationInput | PaymentLinkUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: PaymentLinkUpdateManyWithWhereWithoutOrganizationInput | PaymentLinkUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: PaymentLinkScalarWhereInput | PaymentLinkScalarWhereInput[]
  }

  export type PaymentOrderUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<PaymentOrderCreateWithoutOrganizationInput, PaymentOrderUncheckedCreateWithoutOrganizationInput> | PaymentOrderCreateWithoutOrganizationInput[] | PaymentOrderUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: PaymentOrderCreateOrConnectWithoutOrganizationInput | PaymentOrderCreateOrConnectWithoutOrganizationInput[]
    upsert?: PaymentOrderUpsertWithWhereUniqueWithoutOrganizationInput | PaymentOrderUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: PaymentOrderCreateManyOrganizationInputEnvelope
    set?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
    disconnect?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
    delete?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
    connect?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
    update?: PaymentOrderUpdateWithWhereUniqueWithoutOrganizationInput | PaymentOrderUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: PaymentOrderUpdateManyWithWhereWithoutOrganizationInput | PaymentOrderUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: PaymentOrderScalarWhereInput | PaymentOrderScalarWhereInput[]
  }

  export type ProviderConfigUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<ProviderConfigCreateWithoutOrganizationInput, ProviderConfigUncheckedCreateWithoutOrganizationInput> | ProviderConfigCreateWithoutOrganizationInput[] | ProviderConfigUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ProviderConfigCreateOrConnectWithoutOrganizationInput | ProviderConfigCreateOrConnectWithoutOrganizationInput[]
    upsert?: ProviderConfigUpsertWithWhereUniqueWithoutOrganizationInput | ProviderConfigUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: ProviderConfigCreateManyOrganizationInputEnvelope
    set?: ProviderConfigWhereUniqueInput | ProviderConfigWhereUniqueInput[]
    disconnect?: ProviderConfigWhereUniqueInput | ProviderConfigWhereUniqueInput[]
    delete?: ProviderConfigWhereUniqueInput | ProviderConfigWhereUniqueInput[]
    connect?: ProviderConfigWhereUniqueInput | ProviderConfigWhereUniqueInput[]
    update?: ProviderConfigUpdateWithWhereUniqueWithoutOrganizationInput | ProviderConfigUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: ProviderConfigUpdateManyWithWhereWithoutOrganizationInput | ProviderConfigUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: ProviderConfigScalarWhereInput | ProviderConfigScalarWhereInput[]
  }

  export type ApiKeyUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<ApiKeyCreateWithoutOrganizationInput, ApiKeyUncheckedCreateWithoutOrganizationInput> | ApiKeyCreateWithoutOrganizationInput[] | ApiKeyUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ApiKeyCreateOrConnectWithoutOrganizationInput | ApiKeyCreateOrConnectWithoutOrganizationInput[]
    upsert?: ApiKeyUpsertWithWhereUniqueWithoutOrganizationInput | ApiKeyUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: ApiKeyCreateManyOrganizationInputEnvelope
    set?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
    disconnect?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
    delete?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
    connect?: ApiKeyWhereUniqueInput | ApiKeyWhereUniqueInput[]
    update?: ApiKeyUpdateWithWhereUniqueWithoutOrganizationInput | ApiKeyUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: ApiKeyUpdateManyWithWhereWithoutOrganizationInput | ApiKeyUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: ApiKeyScalarWhereInput | ApiKeyScalarWhereInput[]
  }

  export type WebhookUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<WebhookCreateWithoutOrganizationInput, WebhookUncheckedCreateWithoutOrganizationInput> | WebhookCreateWithoutOrganizationInput[] | WebhookUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: WebhookCreateOrConnectWithoutOrganizationInput | WebhookCreateOrConnectWithoutOrganizationInput[]
    upsert?: WebhookUpsertWithWhereUniqueWithoutOrganizationInput | WebhookUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: WebhookCreateManyOrganizationInputEnvelope
    set?: WebhookWhereUniqueInput | WebhookWhereUniqueInput[]
    disconnect?: WebhookWhereUniqueInput | WebhookWhereUniqueInput[]
    delete?: WebhookWhereUniqueInput | WebhookWhereUniqueInput[]
    connect?: WebhookWhereUniqueInput | WebhookWhereUniqueInput[]
    update?: WebhookUpdateWithWhereUniqueWithoutOrganizationInput | WebhookUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: WebhookUpdateManyWithWhereWithoutOrganizationInput | WebhookUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: WebhookScalarWhereInput | WebhookScalarWhereInput[]
  }

  export type AuditLogUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<AuditLogCreateWithoutOrganizationInput, AuditLogUncheckedCreateWithoutOrganizationInput> | AuditLogCreateWithoutOrganizationInput[] | AuditLogUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: AuditLogCreateOrConnectWithoutOrganizationInput | AuditLogCreateOrConnectWithoutOrganizationInput[]
    upsert?: AuditLogUpsertWithWhereUniqueWithoutOrganizationInput | AuditLogUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: AuditLogCreateManyOrganizationInputEnvelope
    set?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    disconnect?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    delete?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    connect?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    update?: AuditLogUpdateWithWhereUniqueWithoutOrganizationInput | AuditLogUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: AuditLogUpdateManyWithWhereWithoutOrganizationInput | AuditLogUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: AuditLogScalarWhereInput | AuditLogScalarWhereInput[]
  }

  export type AgentUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<AgentCreateWithoutOrganizationInput, AgentUncheckedCreateWithoutOrganizationInput> | AgentCreateWithoutOrganizationInput[] | AgentUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: AgentCreateOrConnectWithoutOrganizationInput | AgentCreateOrConnectWithoutOrganizationInput[]
    upsert?: AgentUpsertWithWhereUniqueWithoutOrganizationInput | AgentUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: AgentCreateManyOrganizationInputEnvelope
    set?: AgentWhereUniqueInput | AgentWhereUniqueInput[]
    disconnect?: AgentWhereUniqueInput | AgentWhereUniqueInput[]
    delete?: AgentWhereUniqueInput | AgentWhereUniqueInput[]
    connect?: AgentWhereUniqueInput | AgentWhereUniqueInput[]
    update?: AgentUpdateWithWhereUniqueWithoutOrganizationInput | AgentUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: AgentUpdateManyWithWhereWithoutOrganizationInput | AgentUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: AgentScalarWhereInput | AgentScalarWhereInput[]
  }

  export type WalletCreateNestedOneWithoutPrimaryForUsersInput = {
    create?: XOR<WalletCreateWithoutPrimaryForUsersInput, WalletUncheckedCreateWithoutPrimaryForUsersInput>
    connectOrCreate?: WalletCreateOrConnectWithoutPrimaryForUsersInput
    connect?: WalletWhereUniqueInput
  }

  export type OrganizationUserCreateNestedManyWithoutUserInput = {
    create?: XOR<OrganizationUserCreateWithoutUserInput, OrganizationUserUncheckedCreateWithoutUserInput> | OrganizationUserCreateWithoutUserInput[] | OrganizationUserUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OrganizationUserCreateOrConnectWithoutUserInput | OrganizationUserCreateOrConnectWithoutUserInput[]
    createMany?: OrganizationUserCreateManyUserInputEnvelope
    connect?: OrganizationUserWhereUniqueInput | OrganizationUserWhereUniqueInput[]
  }

  export type WalletCreateNestedManyWithoutUserInput = {
    create?: XOR<WalletCreateWithoutUserInput, WalletUncheckedCreateWithoutUserInput> | WalletCreateWithoutUserInput[] | WalletUncheckedCreateWithoutUserInput[]
    connectOrCreate?: WalletCreateOrConnectWithoutUserInput | WalletCreateOrConnectWithoutUserInput[]
    createMany?: WalletCreateManyUserInputEnvelope
    connect?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
  }

  export type PaymentLinkCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<PaymentLinkCreateWithoutCreatedByInput, PaymentLinkUncheckedCreateWithoutCreatedByInput> | PaymentLinkCreateWithoutCreatedByInput[] | PaymentLinkUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: PaymentLinkCreateOrConnectWithoutCreatedByInput | PaymentLinkCreateOrConnectWithoutCreatedByInput[]
    createMany?: PaymentLinkCreateManyCreatedByInputEnvelope
    connect?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
  }

  export type AuditLogCreateNestedManyWithoutUserInput = {
    create?: XOR<AuditLogCreateWithoutUserInput, AuditLogUncheckedCreateWithoutUserInput> | AuditLogCreateWithoutUserInput[] | AuditLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AuditLogCreateOrConnectWithoutUserInput | AuditLogCreateOrConnectWithoutUserInput[]
    createMany?: AuditLogCreateManyUserInputEnvelope
    connect?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
  }

  export type AgentInteractionCreateNestedManyWithoutUserInput = {
    create?: XOR<AgentInteractionCreateWithoutUserInput, AgentInteractionUncheckedCreateWithoutUserInput> | AgentInteractionCreateWithoutUserInput[] | AgentInteractionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AgentInteractionCreateOrConnectWithoutUserInput | AgentInteractionCreateOrConnectWithoutUserInput[]
    createMany?: AgentInteractionCreateManyUserInputEnvelope
    connect?: AgentInteractionWhereUniqueInput | AgentInteractionWhereUniqueInput[]
  }

  export type OrganizationUserUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<OrganizationUserCreateWithoutUserInput, OrganizationUserUncheckedCreateWithoutUserInput> | OrganizationUserCreateWithoutUserInput[] | OrganizationUserUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OrganizationUserCreateOrConnectWithoutUserInput | OrganizationUserCreateOrConnectWithoutUserInput[]
    createMany?: OrganizationUserCreateManyUserInputEnvelope
    connect?: OrganizationUserWhereUniqueInput | OrganizationUserWhereUniqueInput[]
  }

  export type WalletUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<WalletCreateWithoutUserInput, WalletUncheckedCreateWithoutUserInput> | WalletCreateWithoutUserInput[] | WalletUncheckedCreateWithoutUserInput[]
    connectOrCreate?: WalletCreateOrConnectWithoutUserInput | WalletCreateOrConnectWithoutUserInput[]
    createMany?: WalletCreateManyUserInputEnvelope
    connect?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
  }

  export type PaymentLinkUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<PaymentLinkCreateWithoutCreatedByInput, PaymentLinkUncheckedCreateWithoutCreatedByInput> | PaymentLinkCreateWithoutCreatedByInput[] | PaymentLinkUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: PaymentLinkCreateOrConnectWithoutCreatedByInput | PaymentLinkCreateOrConnectWithoutCreatedByInput[]
    createMany?: PaymentLinkCreateManyCreatedByInputEnvelope
    connect?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
  }

  export type AuditLogUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AuditLogCreateWithoutUserInput, AuditLogUncheckedCreateWithoutUserInput> | AuditLogCreateWithoutUserInput[] | AuditLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AuditLogCreateOrConnectWithoutUserInput | AuditLogCreateOrConnectWithoutUserInput[]
    createMany?: AuditLogCreateManyUserInputEnvelope
    connect?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
  }

  export type AgentInteractionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AgentInteractionCreateWithoutUserInput, AgentInteractionUncheckedCreateWithoutUserInput> | AgentInteractionCreateWithoutUserInput[] | AgentInteractionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AgentInteractionCreateOrConnectWithoutUserInput | AgentInteractionCreateOrConnectWithoutUserInput[]
    createMany?: AgentInteractionCreateManyUserInputEnvelope
    connect?: AgentInteractionWhereUniqueInput | AgentInteractionWhereUniqueInput[]
  }

  export type EnumAuthProviderFieldUpdateOperationsInput = {
    set?: $Enums.AuthProvider
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type WalletUpdateOneWithoutPrimaryForUsersNestedInput = {
    create?: XOR<WalletCreateWithoutPrimaryForUsersInput, WalletUncheckedCreateWithoutPrimaryForUsersInput>
    connectOrCreate?: WalletCreateOrConnectWithoutPrimaryForUsersInput
    upsert?: WalletUpsertWithoutPrimaryForUsersInput
    disconnect?: WalletWhereInput | boolean
    delete?: WalletWhereInput | boolean
    connect?: WalletWhereUniqueInput
    update?: XOR<XOR<WalletUpdateToOneWithWhereWithoutPrimaryForUsersInput, WalletUpdateWithoutPrimaryForUsersInput>, WalletUncheckedUpdateWithoutPrimaryForUsersInput>
  }

  export type OrganizationUserUpdateManyWithoutUserNestedInput = {
    create?: XOR<OrganizationUserCreateWithoutUserInput, OrganizationUserUncheckedCreateWithoutUserInput> | OrganizationUserCreateWithoutUserInput[] | OrganizationUserUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OrganizationUserCreateOrConnectWithoutUserInput | OrganizationUserCreateOrConnectWithoutUserInput[]
    upsert?: OrganizationUserUpsertWithWhereUniqueWithoutUserInput | OrganizationUserUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: OrganizationUserCreateManyUserInputEnvelope
    set?: OrganizationUserWhereUniqueInput | OrganizationUserWhereUniqueInput[]
    disconnect?: OrganizationUserWhereUniqueInput | OrganizationUserWhereUniqueInput[]
    delete?: OrganizationUserWhereUniqueInput | OrganizationUserWhereUniqueInput[]
    connect?: OrganizationUserWhereUniqueInput | OrganizationUserWhereUniqueInput[]
    update?: OrganizationUserUpdateWithWhereUniqueWithoutUserInput | OrganizationUserUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: OrganizationUserUpdateManyWithWhereWithoutUserInput | OrganizationUserUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: OrganizationUserScalarWhereInput | OrganizationUserScalarWhereInput[]
  }

  export type WalletUpdateManyWithoutUserNestedInput = {
    create?: XOR<WalletCreateWithoutUserInput, WalletUncheckedCreateWithoutUserInput> | WalletCreateWithoutUserInput[] | WalletUncheckedCreateWithoutUserInput[]
    connectOrCreate?: WalletCreateOrConnectWithoutUserInput | WalletCreateOrConnectWithoutUserInput[]
    upsert?: WalletUpsertWithWhereUniqueWithoutUserInput | WalletUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: WalletCreateManyUserInputEnvelope
    set?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
    disconnect?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
    delete?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
    connect?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
    update?: WalletUpdateWithWhereUniqueWithoutUserInput | WalletUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: WalletUpdateManyWithWhereWithoutUserInput | WalletUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: WalletScalarWhereInput | WalletScalarWhereInput[]
  }

  export type PaymentLinkUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<PaymentLinkCreateWithoutCreatedByInput, PaymentLinkUncheckedCreateWithoutCreatedByInput> | PaymentLinkCreateWithoutCreatedByInput[] | PaymentLinkUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: PaymentLinkCreateOrConnectWithoutCreatedByInput | PaymentLinkCreateOrConnectWithoutCreatedByInput[]
    upsert?: PaymentLinkUpsertWithWhereUniqueWithoutCreatedByInput | PaymentLinkUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: PaymentLinkCreateManyCreatedByInputEnvelope
    set?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    disconnect?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    delete?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    connect?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    update?: PaymentLinkUpdateWithWhereUniqueWithoutCreatedByInput | PaymentLinkUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: PaymentLinkUpdateManyWithWhereWithoutCreatedByInput | PaymentLinkUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: PaymentLinkScalarWhereInput | PaymentLinkScalarWhereInput[]
  }

  export type AuditLogUpdateManyWithoutUserNestedInput = {
    create?: XOR<AuditLogCreateWithoutUserInput, AuditLogUncheckedCreateWithoutUserInput> | AuditLogCreateWithoutUserInput[] | AuditLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AuditLogCreateOrConnectWithoutUserInput | AuditLogCreateOrConnectWithoutUserInput[]
    upsert?: AuditLogUpsertWithWhereUniqueWithoutUserInput | AuditLogUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AuditLogCreateManyUserInputEnvelope
    set?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    disconnect?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    delete?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    connect?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    update?: AuditLogUpdateWithWhereUniqueWithoutUserInput | AuditLogUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AuditLogUpdateManyWithWhereWithoutUserInput | AuditLogUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AuditLogScalarWhereInput | AuditLogScalarWhereInput[]
  }

  export type AgentInteractionUpdateManyWithoutUserNestedInput = {
    create?: XOR<AgentInteractionCreateWithoutUserInput, AgentInteractionUncheckedCreateWithoutUserInput> | AgentInteractionCreateWithoutUserInput[] | AgentInteractionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AgentInteractionCreateOrConnectWithoutUserInput | AgentInteractionCreateOrConnectWithoutUserInput[]
    upsert?: AgentInteractionUpsertWithWhereUniqueWithoutUserInput | AgentInteractionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AgentInteractionCreateManyUserInputEnvelope
    set?: AgentInteractionWhereUniqueInput | AgentInteractionWhereUniqueInput[]
    disconnect?: AgentInteractionWhereUniqueInput | AgentInteractionWhereUniqueInput[]
    delete?: AgentInteractionWhereUniqueInput | AgentInteractionWhereUniqueInput[]
    connect?: AgentInteractionWhereUniqueInput | AgentInteractionWhereUniqueInput[]
    update?: AgentInteractionUpdateWithWhereUniqueWithoutUserInput | AgentInteractionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AgentInteractionUpdateManyWithWhereWithoutUserInput | AgentInteractionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AgentInteractionScalarWhereInput | AgentInteractionScalarWhereInput[]
  }

  export type OrganizationUserUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<OrganizationUserCreateWithoutUserInput, OrganizationUserUncheckedCreateWithoutUserInput> | OrganizationUserCreateWithoutUserInput[] | OrganizationUserUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OrganizationUserCreateOrConnectWithoutUserInput | OrganizationUserCreateOrConnectWithoutUserInput[]
    upsert?: OrganizationUserUpsertWithWhereUniqueWithoutUserInput | OrganizationUserUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: OrganizationUserCreateManyUserInputEnvelope
    set?: OrganizationUserWhereUniqueInput | OrganizationUserWhereUniqueInput[]
    disconnect?: OrganizationUserWhereUniqueInput | OrganizationUserWhereUniqueInput[]
    delete?: OrganizationUserWhereUniqueInput | OrganizationUserWhereUniqueInput[]
    connect?: OrganizationUserWhereUniqueInput | OrganizationUserWhereUniqueInput[]
    update?: OrganizationUserUpdateWithWhereUniqueWithoutUserInput | OrganizationUserUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: OrganizationUserUpdateManyWithWhereWithoutUserInput | OrganizationUserUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: OrganizationUserScalarWhereInput | OrganizationUserScalarWhereInput[]
  }

  export type WalletUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<WalletCreateWithoutUserInput, WalletUncheckedCreateWithoutUserInput> | WalletCreateWithoutUserInput[] | WalletUncheckedCreateWithoutUserInput[]
    connectOrCreate?: WalletCreateOrConnectWithoutUserInput | WalletCreateOrConnectWithoutUserInput[]
    upsert?: WalletUpsertWithWhereUniqueWithoutUserInput | WalletUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: WalletCreateManyUserInputEnvelope
    set?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
    disconnect?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
    delete?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
    connect?: WalletWhereUniqueInput | WalletWhereUniqueInput[]
    update?: WalletUpdateWithWhereUniqueWithoutUserInput | WalletUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: WalletUpdateManyWithWhereWithoutUserInput | WalletUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: WalletScalarWhereInput | WalletScalarWhereInput[]
  }

  export type PaymentLinkUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<PaymentLinkCreateWithoutCreatedByInput, PaymentLinkUncheckedCreateWithoutCreatedByInput> | PaymentLinkCreateWithoutCreatedByInput[] | PaymentLinkUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: PaymentLinkCreateOrConnectWithoutCreatedByInput | PaymentLinkCreateOrConnectWithoutCreatedByInput[]
    upsert?: PaymentLinkUpsertWithWhereUniqueWithoutCreatedByInput | PaymentLinkUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: PaymentLinkCreateManyCreatedByInputEnvelope
    set?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    disconnect?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    delete?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    connect?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    update?: PaymentLinkUpdateWithWhereUniqueWithoutCreatedByInput | PaymentLinkUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: PaymentLinkUpdateManyWithWhereWithoutCreatedByInput | PaymentLinkUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: PaymentLinkScalarWhereInput | PaymentLinkScalarWhereInput[]
  }

  export type AuditLogUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AuditLogCreateWithoutUserInput, AuditLogUncheckedCreateWithoutUserInput> | AuditLogCreateWithoutUserInput[] | AuditLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AuditLogCreateOrConnectWithoutUserInput | AuditLogCreateOrConnectWithoutUserInput[]
    upsert?: AuditLogUpsertWithWhereUniqueWithoutUserInput | AuditLogUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AuditLogCreateManyUserInputEnvelope
    set?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    disconnect?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    delete?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    connect?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    update?: AuditLogUpdateWithWhereUniqueWithoutUserInput | AuditLogUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AuditLogUpdateManyWithWhereWithoutUserInput | AuditLogUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AuditLogScalarWhereInput | AuditLogScalarWhereInput[]
  }

  export type AgentInteractionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AgentInteractionCreateWithoutUserInput, AgentInteractionUncheckedCreateWithoutUserInput> | AgentInteractionCreateWithoutUserInput[] | AgentInteractionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AgentInteractionCreateOrConnectWithoutUserInput | AgentInteractionCreateOrConnectWithoutUserInput[]
    upsert?: AgentInteractionUpsertWithWhereUniqueWithoutUserInput | AgentInteractionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AgentInteractionCreateManyUserInputEnvelope
    set?: AgentInteractionWhereUniqueInput | AgentInteractionWhereUniqueInput[]
    disconnect?: AgentInteractionWhereUniqueInput | AgentInteractionWhereUniqueInput[]
    delete?: AgentInteractionWhereUniqueInput | AgentInteractionWhereUniqueInput[]
    connect?: AgentInteractionWhereUniqueInput | AgentInteractionWhereUniqueInput[]
    update?: AgentInteractionUpdateWithWhereUniqueWithoutUserInput | AgentInteractionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AgentInteractionUpdateManyWithWhereWithoutUserInput | AgentInteractionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AgentInteractionScalarWhereInput | AgentInteractionScalarWhereInput[]
  }

  export type OrganizationCreateNestedOneWithoutCustomersInput = {
    create?: XOR<OrganizationCreateWithoutCustomersInput, OrganizationUncheckedCreateWithoutCustomersInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutCustomersInput
    connect?: OrganizationWhereUniqueInput
  }

  export type PaymentOrderCreateNestedManyWithoutCustomerInput = {
    create?: XOR<PaymentOrderCreateWithoutCustomerInput, PaymentOrderUncheckedCreateWithoutCustomerInput> | PaymentOrderCreateWithoutCustomerInput[] | PaymentOrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: PaymentOrderCreateOrConnectWithoutCustomerInput | PaymentOrderCreateOrConnectWithoutCustomerInput[]
    createMany?: PaymentOrderCreateManyCustomerInputEnvelope
    connect?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
  }

  export type CustomerPaymentMethodCreateNestedManyWithoutCustomerInput = {
    create?: XOR<CustomerPaymentMethodCreateWithoutCustomerInput, CustomerPaymentMethodUncheckedCreateWithoutCustomerInput> | CustomerPaymentMethodCreateWithoutCustomerInput[] | CustomerPaymentMethodUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: CustomerPaymentMethodCreateOrConnectWithoutCustomerInput | CustomerPaymentMethodCreateOrConnectWithoutCustomerInput[]
    createMany?: CustomerPaymentMethodCreateManyCustomerInputEnvelope
    connect?: CustomerPaymentMethodWhereUniqueInput | CustomerPaymentMethodWhereUniqueInput[]
  }

  export type SubscriptionCreateNestedManyWithoutCustomerInput = {
    create?: XOR<SubscriptionCreateWithoutCustomerInput, SubscriptionUncheckedCreateWithoutCustomerInput> | SubscriptionCreateWithoutCustomerInput[] | SubscriptionUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: SubscriptionCreateOrConnectWithoutCustomerInput | SubscriptionCreateOrConnectWithoutCustomerInput[]
    createMany?: SubscriptionCreateManyCustomerInputEnvelope
    connect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
  }

  export type PaymentOrderUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<PaymentOrderCreateWithoutCustomerInput, PaymentOrderUncheckedCreateWithoutCustomerInput> | PaymentOrderCreateWithoutCustomerInput[] | PaymentOrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: PaymentOrderCreateOrConnectWithoutCustomerInput | PaymentOrderCreateOrConnectWithoutCustomerInput[]
    createMany?: PaymentOrderCreateManyCustomerInputEnvelope
    connect?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
  }

  export type CustomerPaymentMethodUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<CustomerPaymentMethodCreateWithoutCustomerInput, CustomerPaymentMethodUncheckedCreateWithoutCustomerInput> | CustomerPaymentMethodCreateWithoutCustomerInput[] | CustomerPaymentMethodUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: CustomerPaymentMethodCreateOrConnectWithoutCustomerInput | CustomerPaymentMethodCreateOrConnectWithoutCustomerInput[]
    createMany?: CustomerPaymentMethodCreateManyCustomerInputEnvelope
    connect?: CustomerPaymentMethodWhereUniqueInput | CustomerPaymentMethodWhereUniqueInput[]
  }

  export type SubscriptionUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<SubscriptionCreateWithoutCustomerInput, SubscriptionUncheckedCreateWithoutCustomerInput> | SubscriptionCreateWithoutCustomerInput[] | SubscriptionUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: SubscriptionCreateOrConnectWithoutCustomerInput | SubscriptionCreateOrConnectWithoutCustomerInput[]
    createMany?: SubscriptionCreateManyCustomerInputEnvelope
    connect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type OrganizationUpdateOneRequiredWithoutCustomersNestedInput = {
    create?: XOR<OrganizationCreateWithoutCustomersInput, OrganizationUncheckedCreateWithoutCustomersInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutCustomersInput
    upsert?: OrganizationUpsertWithoutCustomersInput
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutCustomersInput, OrganizationUpdateWithoutCustomersInput>, OrganizationUncheckedUpdateWithoutCustomersInput>
  }

  export type PaymentOrderUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<PaymentOrderCreateWithoutCustomerInput, PaymentOrderUncheckedCreateWithoutCustomerInput> | PaymentOrderCreateWithoutCustomerInput[] | PaymentOrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: PaymentOrderCreateOrConnectWithoutCustomerInput | PaymentOrderCreateOrConnectWithoutCustomerInput[]
    upsert?: PaymentOrderUpsertWithWhereUniqueWithoutCustomerInput | PaymentOrderUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: PaymentOrderCreateManyCustomerInputEnvelope
    set?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
    disconnect?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
    delete?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
    connect?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
    update?: PaymentOrderUpdateWithWhereUniqueWithoutCustomerInput | PaymentOrderUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: PaymentOrderUpdateManyWithWhereWithoutCustomerInput | PaymentOrderUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: PaymentOrderScalarWhereInput | PaymentOrderScalarWhereInput[]
  }

  export type CustomerPaymentMethodUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<CustomerPaymentMethodCreateWithoutCustomerInput, CustomerPaymentMethodUncheckedCreateWithoutCustomerInput> | CustomerPaymentMethodCreateWithoutCustomerInput[] | CustomerPaymentMethodUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: CustomerPaymentMethodCreateOrConnectWithoutCustomerInput | CustomerPaymentMethodCreateOrConnectWithoutCustomerInput[]
    upsert?: CustomerPaymentMethodUpsertWithWhereUniqueWithoutCustomerInput | CustomerPaymentMethodUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: CustomerPaymentMethodCreateManyCustomerInputEnvelope
    set?: CustomerPaymentMethodWhereUniqueInput | CustomerPaymentMethodWhereUniqueInput[]
    disconnect?: CustomerPaymentMethodWhereUniqueInput | CustomerPaymentMethodWhereUniqueInput[]
    delete?: CustomerPaymentMethodWhereUniqueInput | CustomerPaymentMethodWhereUniqueInput[]
    connect?: CustomerPaymentMethodWhereUniqueInput | CustomerPaymentMethodWhereUniqueInput[]
    update?: CustomerPaymentMethodUpdateWithWhereUniqueWithoutCustomerInput | CustomerPaymentMethodUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: CustomerPaymentMethodUpdateManyWithWhereWithoutCustomerInput | CustomerPaymentMethodUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: CustomerPaymentMethodScalarWhereInput | CustomerPaymentMethodScalarWhereInput[]
  }

  export type SubscriptionUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<SubscriptionCreateWithoutCustomerInput, SubscriptionUncheckedCreateWithoutCustomerInput> | SubscriptionCreateWithoutCustomerInput[] | SubscriptionUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: SubscriptionCreateOrConnectWithoutCustomerInput | SubscriptionCreateOrConnectWithoutCustomerInput[]
    upsert?: SubscriptionUpsertWithWhereUniqueWithoutCustomerInput | SubscriptionUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: SubscriptionCreateManyCustomerInputEnvelope
    set?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    disconnect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    delete?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    connect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    update?: SubscriptionUpdateWithWhereUniqueWithoutCustomerInput | SubscriptionUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: SubscriptionUpdateManyWithWhereWithoutCustomerInput | SubscriptionUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: SubscriptionScalarWhereInput | SubscriptionScalarWhereInput[]
  }

  export type PaymentOrderUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<PaymentOrderCreateWithoutCustomerInput, PaymentOrderUncheckedCreateWithoutCustomerInput> | PaymentOrderCreateWithoutCustomerInput[] | PaymentOrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: PaymentOrderCreateOrConnectWithoutCustomerInput | PaymentOrderCreateOrConnectWithoutCustomerInput[]
    upsert?: PaymentOrderUpsertWithWhereUniqueWithoutCustomerInput | PaymentOrderUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: PaymentOrderCreateManyCustomerInputEnvelope
    set?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
    disconnect?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
    delete?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
    connect?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
    update?: PaymentOrderUpdateWithWhereUniqueWithoutCustomerInput | PaymentOrderUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: PaymentOrderUpdateManyWithWhereWithoutCustomerInput | PaymentOrderUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: PaymentOrderScalarWhereInput | PaymentOrderScalarWhereInput[]
  }

  export type CustomerPaymentMethodUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<CustomerPaymentMethodCreateWithoutCustomerInput, CustomerPaymentMethodUncheckedCreateWithoutCustomerInput> | CustomerPaymentMethodCreateWithoutCustomerInput[] | CustomerPaymentMethodUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: CustomerPaymentMethodCreateOrConnectWithoutCustomerInput | CustomerPaymentMethodCreateOrConnectWithoutCustomerInput[]
    upsert?: CustomerPaymentMethodUpsertWithWhereUniqueWithoutCustomerInput | CustomerPaymentMethodUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: CustomerPaymentMethodCreateManyCustomerInputEnvelope
    set?: CustomerPaymentMethodWhereUniqueInput | CustomerPaymentMethodWhereUniqueInput[]
    disconnect?: CustomerPaymentMethodWhereUniqueInput | CustomerPaymentMethodWhereUniqueInput[]
    delete?: CustomerPaymentMethodWhereUniqueInput | CustomerPaymentMethodWhereUniqueInput[]
    connect?: CustomerPaymentMethodWhereUniqueInput | CustomerPaymentMethodWhereUniqueInput[]
    update?: CustomerPaymentMethodUpdateWithWhereUniqueWithoutCustomerInput | CustomerPaymentMethodUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: CustomerPaymentMethodUpdateManyWithWhereWithoutCustomerInput | CustomerPaymentMethodUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: CustomerPaymentMethodScalarWhereInput | CustomerPaymentMethodScalarWhereInput[]
  }

  export type SubscriptionUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<SubscriptionCreateWithoutCustomerInput, SubscriptionUncheckedCreateWithoutCustomerInput> | SubscriptionCreateWithoutCustomerInput[] | SubscriptionUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: SubscriptionCreateOrConnectWithoutCustomerInput | SubscriptionCreateOrConnectWithoutCustomerInput[]
    upsert?: SubscriptionUpsertWithWhereUniqueWithoutCustomerInput | SubscriptionUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: SubscriptionCreateManyCustomerInputEnvelope
    set?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    disconnect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    delete?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    connect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    update?: SubscriptionUpdateWithWhereUniqueWithoutCustomerInput | SubscriptionUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: SubscriptionUpdateManyWithWhereWithoutCustomerInput | SubscriptionUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: SubscriptionScalarWhereInput | SubscriptionScalarWhereInput[]
  }

  export type CustomerCreateNestedOneWithoutPaymentMethodsInput = {
    create?: XOR<CustomerCreateWithoutPaymentMethodsInput, CustomerUncheckedCreateWithoutPaymentMethodsInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutPaymentMethodsInput
    connect?: CustomerWhereUniqueInput
  }

  export type EnumPaymentMethodTypeFieldUpdateOperationsInput = {
    set?: $Enums.PaymentMethodType
  }

  export type CustomerUpdateOneRequiredWithoutPaymentMethodsNestedInput = {
    create?: XOR<CustomerCreateWithoutPaymentMethodsInput, CustomerUncheckedCreateWithoutPaymentMethodsInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutPaymentMethodsInput
    upsert?: CustomerUpsertWithoutPaymentMethodsInput
    connect?: CustomerWhereUniqueInput
    update?: XOR<XOR<CustomerUpdateToOneWithWhereWithoutPaymentMethodsInput, CustomerUpdateWithoutPaymentMethodsInput>, CustomerUncheckedUpdateWithoutPaymentMethodsInput>
  }

  export type CustomerCreateNestedOneWithoutSubscriptionsInput = {
    create?: XOR<CustomerCreateWithoutSubscriptionsInput, CustomerUncheckedCreateWithoutSubscriptionsInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutSubscriptionsInput
    connect?: CustomerWhereUniqueInput
  }

  export type SubscriptionItemCreateNestedManyWithoutSubscriptionInput = {
    create?: XOR<SubscriptionItemCreateWithoutSubscriptionInput, SubscriptionItemUncheckedCreateWithoutSubscriptionInput> | SubscriptionItemCreateWithoutSubscriptionInput[] | SubscriptionItemUncheckedCreateWithoutSubscriptionInput[]
    connectOrCreate?: SubscriptionItemCreateOrConnectWithoutSubscriptionInput | SubscriptionItemCreateOrConnectWithoutSubscriptionInput[]
    createMany?: SubscriptionItemCreateManySubscriptionInputEnvelope
    connect?: SubscriptionItemWhereUniqueInput | SubscriptionItemWhereUniqueInput[]
  }

  export type SubscriptionItemUncheckedCreateNestedManyWithoutSubscriptionInput = {
    create?: XOR<SubscriptionItemCreateWithoutSubscriptionInput, SubscriptionItemUncheckedCreateWithoutSubscriptionInput> | SubscriptionItemCreateWithoutSubscriptionInput[] | SubscriptionItemUncheckedCreateWithoutSubscriptionInput[]
    connectOrCreate?: SubscriptionItemCreateOrConnectWithoutSubscriptionInput | SubscriptionItemCreateOrConnectWithoutSubscriptionInput[]
    createMany?: SubscriptionItemCreateManySubscriptionInputEnvelope
    connect?: SubscriptionItemWhereUniqueInput | SubscriptionItemWhereUniqueInput[]
  }

  export type EnumSubscriptionStatusFieldUpdateOperationsInput = {
    set?: $Enums.SubscriptionStatus
  }

  export type CustomerUpdateOneRequiredWithoutSubscriptionsNestedInput = {
    create?: XOR<CustomerCreateWithoutSubscriptionsInput, CustomerUncheckedCreateWithoutSubscriptionsInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutSubscriptionsInput
    upsert?: CustomerUpsertWithoutSubscriptionsInput
    connect?: CustomerWhereUniqueInput
    update?: XOR<XOR<CustomerUpdateToOneWithWhereWithoutSubscriptionsInput, CustomerUpdateWithoutSubscriptionsInput>, CustomerUncheckedUpdateWithoutSubscriptionsInput>
  }

  export type SubscriptionItemUpdateManyWithoutSubscriptionNestedInput = {
    create?: XOR<SubscriptionItemCreateWithoutSubscriptionInput, SubscriptionItemUncheckedCreateWithoutSubscriptionInput> | SubscriptionItemCreateWithoutSubscriptionInput[] | SubscriptionItemUncheckedCreateWithoutSubscriptionInput[]
    connectOrCreate?: SubscriptionItemCreateOrConnectWithoutSubscriptionInput | SubscriptionItemCreateOrConnectWithoutSubscriptionInput[]
    upsert?: SubscriptionItemUpsertWithWhereUniqueWithoutSubscriptionInput | SubscriptionItemUpsertWithWhereUniqueWithoutSubscriptionInput[]
    createMany?: SubscriptionItemCreateManySubscriptionInputEnvelope
    set?: SubscriptionItemWhereUniqueInput | SubscriptionItemWhereUniqueInput[]
    disconnect?: SubscriptionItemWhereUniqueInput | SubscriptionItemWhereUniqueInput[]
    delete?: SubscriptionItemWhereUniqueInput | SubscriptionItemWhereUniqueInput[]
    connect?: SubscriptionItemWhereUniqueInput | SubscriptionItemWhereUniqueInput[]
    update?: SubscriptionItemUpdateWithWhereUniqueWithoutSubscriptionInput | SubscriptionItemUpdateWithWhereUniqueWithoutSubscriptionInput[]
    updateMany?: SubscriptionItemUpdateManyWithWhereWithoutSubscriptionInput | SubscriptionItemUpdateManyWithWhereWithoutSubscriptionInput[]
    deleteMany?: SubscriptionItemScalarWhereInput | SubscriptionItemScalarWhereInput[]
  }

  export type SubscriptionItemUncheckedUpdateManyWithoutSubscriptionNestedInput = {
    create?: XOR<SubscriptionItemCreateWithoutSubscriptionInput, SubscriptionItemUncheckedCreateWithoutSubscriptionInput> | SubscriptionItemCreateWithoutSubscriptionInput[] | SubscriptionItemUncheckedCreateWithoutSubscriptionInput[]
    connectOrCreate?: SubscriptionItemCreateOrConnectWithoutSubscriptionInput | SubscriptionItemCreateOrConnectWithoutSubscriptionInput[]
    upsert?: SubscriptionItemUpsertWithWhereUniqueWithoutSubscriptionInput | SubscriptionItemUpsertWithWhereUniqueWithoutSubscriptionInput[]
    createMany?: SubscriptionItemCreateManySubscriptionInputEnvelope
    set?: SubscriptionItemWhereUniqueInput | SubscriptionItemWhereUniqueInput[]
    disconnect?: SubscriptionItemWhereUniqueInput | SubscriptionItemWhereUniqueInput[]
    delete?: SubscriptionItemWhereUniqueInput | SubscriptionItemWhereUniqueInput[]
    connect?: SubscriptionItemWhereUniqueInput | SubscriptionItemWhereUniqueInput[]
    update?: SubscriptionItemUpdateWithWhereUniqueWithoutSubscriptionInput | SubscriptionItemUpdateWithWhereUniqueWithoutSubscriptionInput[]
    updateMany?: SubscriptionItemUpdateManyWithWhereWithoutSubscriptionInput | SubscriptionItemUpdateManyWithWhereWithoutSubscriptionInput[]
    deleteMany?: SubscriptionItemScalarWhereInput | SubscriptionItemScalarWhereInput[]
  }

  export type SubscriptionCreateNestedOneWithoutItemsInput = {
    create?: XOR<SubscriptionCreateWithoutItemsInput, SubscriptionUncheckedCreateWithoutItemsInput>
    connectOrCreate?: SubscriptionCreateOrConnectWithoutItemsInput
    connect?: SubscriptionWhereUniqueInput
  }

  export type PriceCreateNestedOneWithoutSubscriptionItemsInput = {
    create?: XOR<PriceCreateWithoutSubscriptionItemsInput, PriceUncheckedCreateWithoutSubscriptionItemsInput>
    connectOrCreate?: PriceCreateOrConnectWithoutSubscriptionItemsInput
    connect?: PriceWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type SubscriptionUpdateOneRequiredWithoutItemsNestedInput = {
    create?: XOR<SubscriptionCreateWithoutItemsInput, SubscriptionUncheckedCreateWithoutItemsInput>
    connectOrCreate?: SubscriptionCreateOrConnectWithoutItemsInput
    upsert?: SubscriptionUpsertWithoutItemsInput
    connect?: SubscriptionWhereUniqueInput
    update?: XOR<XOR<SubscriptionUpdateToOneWithWhereWithoutItemsInput, SubscriptionUpdateWithoutItemsInput>, SubscriptionUncheckedUpdateWithoutItemsInput>
  }

  export type PriceUpdateOneRequiredWithoutSubscriptionItemsNestedInput = {
    create?: XOR<PriceCreateWithoutSubscriptionItemsInput, PriceUncheckedCreateWithoutSubscriptionItemsInput>
    connectOrCreate?: PriceCreateOrConnectWithoutSubscriptionItemsInput
    upsert?: PriceUpsertWithoutSubscriptionItemsInput
    connect?: PriceWhereUniqueInput
    update?: XOR<XOR<PriceUpdateToOneWithWhereWithoutSubscriptionItemsInput, PriceUpdateWithoutSubscriptionItemsInput>, PriceUncheckedUpdateWithoutSubscriptionItemsInput>
  }

  export type UserCreateNestedOneWithoutOwnedWalletsInput = {
    create?: XOR<UserCreateWithoutOwnedWalletsInput, UserUncheckedCreateWithoutOwnedWalletsInput>
    connectOrCreate?: UserCreateOrConnectWithoutOwnedWalletsInput
    connect?: UserWhereUniqueInput
  }

  export type OrganizationCreateNestedOneWithoutWalletsInput = {
    create?: XOR<OrganizationCreateWithoutWalletsInput, OrganizationUncheckedCreateWithoutWalletsInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutWalletsInput
    connect?: OrganizationWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutPrimaryWalletInput = {
    create?: XOR<UserCreateWithoutPrimaryWalletInput, UserUncheckedCreateWithoutPrimaryWalletInput> | UserCreateWithoutPrimaryWalletInput[] | UserUncheckedCreateWithoutPrimaryWalletInput[]
    connectOrCreate?: UserCreateOrConnectWithoutPrimaryWalletInput | UserCreateOrConnectWithoutPrimaryWalletInput[]
    createMany?: UserCreateManyPrimaryWalletInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type AgentCreateNestedOneWithoutAgentWalletInput = {
    create?: XOR<AgentCreateWithoutAgentWalletInput, AgentUncheckedCreateWithoutAgentWalletInput>
    connectOrCreate?: AgentCreateOrConnectWithoutAgentWalletInput
    connect?: AgentWhereUniqueInput
  }

  export type BlockchainTransactionCreateNestedManyWithoutWalletInput = {
    create?: XOR<BlockchainTransactionCreateWithoutWalletInput, BlockchainTransactionUncheckedCreateWithoutWalletInput> | BlockchainTransactionCreateWithoutWalletInput[] | BlockchainTransactionUncheckedCreateWithoutWalletInput[]
    connectOrCreate?: BlockchainTransactionCreateOrConnectWithoutWalletInput | BlockchainTransactionCreateOrConnectWithoutWalletInput[]
    createMany?: BlockchainTransactionCreateManyWalletInputEnvelope
    connect?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
  }

  export type GasSponsorshipCreateNestedManyWithoutSponsorWalletInput = {
    create?: XOR<GasSponsorshipCreateWithoutSponsorWalletInput, GasSponsorshipUncheckedCreateWithoutSponsorWalletInput> | GasSponsorshipCreateWithoutSponsorWalletInput[] | GasSponsorshipUncheckedCreateWithoutSponsorWalletInput[]
    connectOrCreate?: GasSponsorshipCreateOrConnectWithoutSponsorWalletInput | GasSponsorshipCreateOrConnectWithoutSponsorWalletInput[]
    createMany?: GasSponsorshipCreateManySponsorWalletInputEnvelope
    connect?: GasSponsorshipWhereUniqueInput | GasSponsorshipWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutPrimaryWalletInput = {
    create?: XOR<UserCreateWithoutPrimaryWalletInput, UserUncheckedCreateWithoutPrimaryWalletInput> | UserCreateWithoutPrimaryWalletInput[] | UserUncheckedCreateWithoutPrimaryWalletInput[]
    connectOrCreate?: UserCreateOrConnectWithoutPrimaryWalletInput | UserCreateOrConnectWithoutPrimaryWalletInput[]
    createMany?: UserCreateManyPrimaryWalletInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type AgentUncheckedCreateNestedOneWithoutAgentWalletInput = {
    create?: XOR<AgentCreateWithoutAgentWalletInput, AgentUncheckedCreateWithoutAgentWalletInput>
    connectOrCreate?: AgentCreateOrConnectWithoutAgentWalletInput
    connect?: AgentWhereUniqueInput
  }

  export type BlockchainTransactionUncheckedCreateNestedManyWithoutWalletInput = {
    create?: XOR<BlockchainTransactionCreateWithoutWalletInput, BlockchainTransactionUncheckedCreateWithoutWalletInput> | BlockchainTransactionCreateWithoutWalletInput[] | BlockchainTransactionUncheckedCreateWithoutWalletInput[]
    connectOrCreate?: BlockchainTransactionCreateOrConnectWithoutWalletInput | BlockchainTransactionCreateOrConnectWithoutWalletInput[]
    createMany?: BlockchainTransactionCreateManyWalletInputEnvelope
    connect?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
  }

  export type GasSponsorshipUncheckedCreateNestedManyWithoutSponsorWalletInput = {
    create?: XOR<GasSponsorshipCreateWithoutSponsorWalletInput, GasSponsorshipUncheckedCreateWithoutSponsorWalletInput> | GasSponsorshipCreateWithoutSponsorWalletInput[] | GasSponsorshipUncheckedCreateWithoutSponsorWalletInput[]
    connectOrCreate?: GasSponsorshipCreateOrConnectWithoutSponsorWalletInput | GasSponsorshipCreateOrConnectWithoutSponsorWalletInput[]
    createMany?: GasSponsorshipCreateManySponsorWalletInputEnvelope
    connect?: GasSponsorshipWhereUniqueInput | GasSponsorshipWhereUniqueInput[]
  }

  export type EnumWalletTypeFieldUpdateOperationsInput = {
    set?: $Enums.WalletType
  }

  export type UserUpdateOneWithoutOwnedWalletsNestedInput = {
    create?: XOR<UserCreateWithoutOwnedWalletsInput, UserUncheckedCreateWithoutOwnedWalletsInput>
    connectOrCreate?: UserCreateOrConnectWithoutOwnedWalletsInput
    upsert?: UserUpsertWithoutOwnedWalletsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOwnedWalletsInput, UserUpdateWithoutOwnedWalletsInput>, UserUncheckedUpdateWithoutOwnedWalletsInput>
  }

  export type OrganizationUpdateOneWithoutWalletsNestedInput = {
    create?: XOR<OrganizationCreateWithoutWalletsInput, OrganizationUncheckedCreateWithoutWalletsInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutWalletsInput
    upsert?: OrganizationUpsertWithoutWalletsInput
    disconnect?: OrganizationWhereInput | boolean
    delete?: OrganizationWhereInput | boolean
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutWalletsInput, OrganizationUpdateWithoutWalletsInput>, OrganizationUncheckedUpdateWithoutWalletsInput>
  }

  export type UserUpdateManyWithoutPrimaryWalletNestedInput = {
    create?: XOR<UserCreateWithoutPrimaryWalletInput, UserUncheckedCreateWithoutPrimaryWalletInput> | UserCreateWithoutPrimaryWalletInput[] | UserUncheckedCreateWithoutPrimaryWalletInput[]
    connectOrCreate?: UserCreateOrConnectWithoutPrimaryWalletInput | UserCreateOrConnectWithoutPrimaryWalletInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutPrimaryWalletInput | UserUpsertWithWhereUniqueWithoutPrimaryWalletInput[]
    createMany?: UserCreateManyPrimaryWalletInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutPrimaryWalletInput | UserUpdateWithWhereUniqueWithoutPrimaryWalletInput[]
    updateMany?: UserUpdateManyWithWhereWithoutPrimaryWalletInput | UserUpdateManyWithWhereWithoutPrimaryWalletInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type AgentUpdateOneWithoutAgentWalletNestedInput = {
    create?: XOR<AgentCreateWithoutAgentWalletInput, AgentUncheckedCreateWithoutAgentWalletInput>
    connectOrCreate?: AgentCreateOrConnectWithoutAgentWalletInput
    upsert?: AgentUpsertWithoutAgentWalletInput
    disconnect?: AgentWhereInput | boolean
    delete?: AgentWhereInput | boolean
    connect?: AgentWhereUniqueInput
    update?: XOR<XOR<AgentUpdateToOneWithWhereWithoutAgentWalletInput, AgentUpdateWithoutAgentWalletInput>, AgentUncheckedUpdateWithoutAgentWalletInput>
  }

  export type BlockchainTransactionUpdateManyWithoutWalletNestedInput = {
    create?: XOR<BlockchainTransactionCreateWithoutWalletInput, BlockchainTransactionUncheckedCreateWithoutWalletInput> | BlockchainTransactionCreateWithoutWalletInput[] | BlockchainTransactionUncheckedCreateWithoutWalletInput[]
    connectOrCreate?: BlockchainTransactionCreateOrConnectWithoutWalletInput | BlockchainTransactionCreateOrConnectWithoutWalletInput[]
    upsert?: BlockchainTransactionUpsertWithWhereUniqueWithoutWalletInput | BlockchainTransactionUpsertWithWhereUniqueWithoutWalletInput[]
    createMany?: BlockchainTransactionCreateManyWalletInputEnvelope
    set?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
    disconnect?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
    delete?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
    connect?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
    update?: BlockchainTransactionUpdateWithWhereUniqueWithoutWalletInput | BlockchainTransactionUpdateWithWhereUniqueWithoutWalletInput[]
    updateMany?: BlockchainTransactionUpdateManyWithWhereWithoutWalletInput | BlockchainTransactionUpdateManyWithWhereWithoutWalletInput[]
    deleteMany?: BlockchainTransactionScalarWhereInput | BlockchainTransactionScalarWhereInput[]
  }

  export type GasSponsorshipUpdateManyWithoutSponsorWalletNestedInput = {
    create?: XOR<GasSponsorshipCreateWithoutSponsorWalletInput, GasSponsorshipUncheckedCreateWithoutSponsorWalletInput> | GasSponsorshipCreateWithoutSponsorWalletInput[] | GasSponsorshipUncheckedCreateWithoutSponsorWalletInput[]
    connectOrCreate?: GasSponsorshipCreateOrConnectWithoutSponsorWalletInput | GasSponsorshipCreateOrConnectWithoutSponsorWalletInput[]
    upsert?: GasSponsorshipUpsertWithWhereUniqueWithoutSponsorWalletInput | GasSponsorshipUpsertWithWhereUniqueWithoutSponsorWalletInput[]
    createMany?: GasSponsorshipCreateManySponsorWalletInputEnvelope
    set?: GasSponsorshipWhereUniqueInput | GasSponsorshipWhereUniqueInput[]
    disconnect?: GasSponsorshipWhereUniqueInput | GasSponsorshipWhereUniqueInput[]
    delete?: GasSponsorshipWhereUniqueInput | GasSponsorshipWhereUniqueInput[]
    connect?: GasSponsorshipWhereUniqueInput | GasSponsorshipWhereUniqueInput[]
    update?: GasSponsorshipUpdateWithWhereUniqueWithoutSponsorWalletInput | GasSponsorshipUpdateWithWhereUniqueWithoutSponsorWalletInput[]
    updateMany?: GasSponsorshipUpdateManyWithWhereWithoutSponsorWalletInput | GasSponsorshipUpdateManyWithWhereWithoutSponsorWalletInput[]
    deleteMany?: GasSponsorshipScalarWhereInput | GasSponsorshipScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutPrimaryWalletNestedInput = {
    create?: XOR<UserCreateWithoutPrimaryWalletInput, UserUncheckedCreateWithoutPrimaryWalletInput> | UserCreateWithoutPrimaryWalletInput[] | UserUncheckedCreateWithoutPrimaryWalletInput[]
    connectOrCreate?: UserCreateOrConnectWithoutPrimaryWalletInput | UserCreateOrConnectWithoutPrimaryWalletInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutPrimaryWalletInput | UserUpsertWithWhereUniqueWithoutPrimaryWalletInput[]
    createMany?: UserCreateManyPrimaryWalletInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutPrimaryWalletInput | UserUpdateWithWhereUniqueWithoutPrimaryWalletInput[]
    updateMany?: UserUpdateManyWithWhereWithoutPrimaryWalletInput | UserUpdateManyWithWhereWithoutPrimaryWalletInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type AgentUncheckedUpdateOneWithoutAgentWalletNestedInput = {
    create?: XOR<AgentCreateWithoutAgentWalletInput, AgentUncheckedCreateWithoutAgentWalletInput>
    connectOrCreate?: AgentCreateOrConnectWithoutAgentWalletInput
    upsert?: AgentUpsertWithoutAgentWalletInput
    disconnect?: AgentWhereInput | boolean
    delete?: AgentWhereInput | boolean
    connect?: AgentWhereUniqueInput
    update?: XOR<XOR<AgentUpdateToOneWithWhereWithoutAgentWalletInput, AgentUpdateWithoutAgentWalletInput>, AgentUncheckedUpdateWithoutAgentWalletInput>
  }

  export type BlockchainTransactionUncheckedUpdateManyWithoutWalletNestedInput = {
    create?: XOR<BlockchainTransactionCreateWithoutWalletInput, BlockchainTransactionUncheckedCreateWithoutWalletInput> | BlockchainTransactionCreateWithoutWalletInput[] | BlockchainTransactionUncheckedCreateWithoutWalletInput[]
    connectOrCreate?: BlockchainTransactionCreateOrConnectWithoutWalletInput | BlockchainTransactionCreateOrConnectWithoutWalletInput[]
    upsert?: BlockchainTransactionUpsertWithWhereUniqueWithoutWalletInput | BlockchainTransactionUpsertWithWhereUniqueWithoutWalletInput[]
    createMany?: BlockchainTransactionCreateManyWalletInputEnvelope
    set?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
    disconnect?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
    delete?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
    connect?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
    update?: BlockchainTransactionUpdateWithWhereUniqueWithoutWalletInput | BlockchainTransactionUpdateWithWhereUniqueWithoutWalletInput[]
    updateMany?: BlockchainTransactionUpdateManyWithWhereWithoutWalletInput | BlockchainTransactionUpdateManyWithWhereWithoutWalletInput[]
    deleteMany?: BlockchainTransactionScalarWhereInput | BlockchainTransactionScalarWhereInput[]
  }

  export type GasSponsorshipUncheckedUpdateManyWithoutSponsorWalletNestedInput = {
    create?: XOR<GasSponsorshipCreateWithoutSponsorWalletInput, GasSponsorshipUncheckedCreateWithoutSponsorWalletInput> | GasSponsorshipCreateWithoutSponsorWalletInput[] | GasSponsorshipUncheckedCreateWithoutSponsorWalletInput[]
    connectOrCreate?: GasSponsorshipCreateOrConnectWithoutSponsorWalletInput | GasSponsorshipCreateOrConnectWithoutSponsorWalletInput[]
    upsert?: GasSponsorshipUpsertWithWhereUniqueWithoutSponsorWalletInput | GasSponsorshipUpsertWithWhereUniqueWithoutSponsorWalletInput[]
    createMany?: GasSponsorshipCreateManySponsorWalletInputEnvelope
    set?: GasSponsorshipWhereUniqueInput | GasSponsorshipWhereUniqueInput[]
    disconnect?: GasSponsorshipWhereUniqueInput | GasSponsorshipWhereUniqueInput[]
    delete?: GasSponsorshipWhereUniqueInput | GasSponsorshipWhereUniqueInput[]
    connect?: GasSponsorshipWhereUniqueInput | GasSponsorshipWhereUniqueInput[]
    update?: GasSponsorshipUpdateWithWhereUniqueWithoutSponsorWalletInput | GasSponsorshipUpdateWithWhereUniqueWithoutSponsorWalletInput[]
    updateMany?: GasSponsorshipUpdateManyWithWhereWithoutSponsorWalletInput | GasSponsorshipUpdateManyWithWhereWithoutSponsorWalletInput[]
    deleteMany?: GasSponsorshipScalarWhereInput | GasSponsorshipScalarWhereInput[]
  }

  export type GasSponsorshipCreateNestedOneWithoutTransactionsInput = {
    create?: XOR<GasSponsorshipCreateWithoutTransactionsInput, GasSponsorshipUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: GasSponsorshipCreateOrConnectWithoutTransactionsInput
    connect?: GasSponsorshipWhereUniqueInput
  }

  export type WalletCreateNestedOneWithoutTransactionsInput = {
    create?: XOR<WalletCreateWithoutTransactionsInput, WalletUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: WalletCreateOrConnectWithoutTransactionsInput
    connect?: WalletWhereUniqueInput
  }

  export type PaymentOrderCreateNestedOneWithoutBlockchainTxsInput = {
    create?: XOR<PaymentOrderCreateWithoutBlockchainTxsInput, PaymentOrderUncheckedCreateWithoutBlockchainTxsInput>
    connectOrCreate?: PaymentOrderCreateOrConnectWithoutBlockchainTxsInput
    connect?: PaymentOrderWhereUniqueInput
  }

  export type EnumBlockchainTxStatusFieldUpdateOperationsInput = {
    set?: $Enums.BlockchainTxStatus
  }

  export type GasSponsorshipUpdateOneWithoutTransactionsNestedInput = {
    create?: XOR<GasSponsorshipCreateWithoutTransactionsInput, GasSponsorshipUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: GasSponsorshipCreateOrConnectWithoutTransactionsInput
    upsert?: GasSponsorshipUpsertWithoutTransactionsInput
    disconnect?: GasSponsorshipWhereInput | boolean
    delete?: GasSponsorshipWhereInput | boolean
    connect?: GasSponsorshipWhereUniqueInput
    update?: XOR<XOR<GasSponsorshipUpdateToOneWithWhereWithoutTransactionsInput, GasSponsorshipUpdateWithoutTransactionsInput>, GasSponsorshipUncheckedUpdateWithoutTransactionsInput>
  }

  export type WalletUpdateOneRequiredWithoutTransactionsNestedInput = {
    create?: XOR<WalletCreateWithoutTransactionsInput, WalletUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: WalletCreateOrConnectWithoutTransactionsInput
    upsert?: WalletUpsertWithoutTransactionsInput
    connect?: WalletWhereUniqueInput
    update?: XOR<XOR<WalletUpdateToOneWithWhereWithoutTransactionsInput, WalletUpdateWithoutTransactionsInput>, WalletUncheckedUpdateWithoutTransactionsInput>
  }

  export type PaymentOrderUpdateOneWithoutBlockchainTxsNestedInput = {
    create?: XOR<PaymentOrderCreateWithoutBlockchainTxsInput, PaymentOrderUncheckedCreateWithoutBlockchainTxsInput>
    connectOrCreate?: PaymentOrderCreateOrConnectWithoutBlockchainTxsInput
    upsert?: PaymentOrderUpsertWithoutBlockchainTxsInput
    disconnect?: PaymentOrderWhereInput | boolean
    delete?: PaymentOrderWhereInput | boolean
    connect?: PaymentOrderWhereUniqueInput
    update?: XOR<XOR<PaymentOrderUpdateToOneWithWhereWithoutBlockchainTxsInput, PaymentOrderUpdateWithoutBlockchainTxsInput>, PaymentOrderUncheckedUpdateWithoutBlockchainTxsInput>
  }

  export type WalletCreateNestedOneWithoutGasSponsorshipInput = {
    create?: XOR<WalletCreateWithoutGasSponsorshipInput, WalletUncheckedCreateWithoutGasSponsorshipInput>
    connectOrCreate?: WalletCreateOrConnectWithoutGasSponsorshipInput
    connect?: WalletWhereUniqueInput
  }

  export type BlockchainTransactionCreateNestedManyWithoutGasSponsorshipInput = {
    create?: XOR<BlockchainTransactionCreateWithoutGasSponsorshipInput, BlockchainTransactionUncheckedCreateWithoutGasSponsorshipInput> | BlockchainTransactionCreateWithoutGasSponsorshipInput[] | BlockchainTransactionUncheckedCreateWithoutGasSponsorshipInput[]
    connectOrCreate?: BlockchainTransactionCreateOrConnectWithoutGasSponsorshipInput | BlockchainTransactionCreateOrConnectWithoutGasSponsorshipInput[]
    createMany?: BlockchainTransactionCreateManyGasSponsorshipInputEnvelope
    connect?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
  }

  export type BlockchainTransactionUncheckedCreateNestedManyWithoutGasSponsorshipInput = {
    create?: XOR<BlockchainTransactionCreateWithoutGasSponsorshipInput, BlockchainTransactionUncheckedCreateWithoutGasSponsorshipInput> | BlockchainTransactionCreateWithoutGasSponsorshipInput[] | BlockchainTransactionUncheckedCreateWithoutGasSponsorshipInput[]
    connectOrCreate?: BlockchainTransactionCreateOrConnectWithoutGasSponsorshipInput | BlockchainTransactionCreateOrConnectWithoutGasSponsorshipInput[]
    createMany?: BlockchainTransactionCreateManyGasSponsorshipInputEnvelope
    connect?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
  }

  export type WalletUpdateOneRequiredWithoutGasSponsorshipNestedInput = {
    create?: XOR<WalletCreateWithoutGasSponsorshipInput, WalletUncheckedCreateWithoutGasSponsorshipInput>
    connectOrCreate?: WalletCreateOrConnectWithoutGasSponsorshipInput
    upsert?: WalletUpsertWithoutGasSponsorshipInput
    connect?: WalletWhereUniqueInput
    update?: XOR<XOR<WalletUpdateToOneWithWhereWithoutGasSponsorshipInput, WalletUpdateWithoutGasSponsorshipInput>, WalletUncheckedUpdateWithoutGasSponsorshipInput>
  }

  export type BlockchainTransactionUpdateManyWithoutGasSponsorshipNestedInput = {
    create?: XOR<BlockchainTransactionCreateWithoutGasSponsorshipInput, BlockchainTransactionUncheckedCreateWithoutGasSponsorshipInput> | BlockchainTransactionCreateWithoutGasSponsorshipInput[] | BlockchainTransactionUncheckedCreateWithoutGasSponsorshipInput[]
    connectOrCreate?: BlockchainTransactionCreateOrConnectWithoutGasSponsorshipInput | BlockchainTransactionCreateOrConnectWithoutGasSponsorshipInput[]
    upsert?: BlockchainTransactionUpsertWithWhereUniqueWithoutGasSponsorshipInput | BlockchainTransactionUpsertWithWhereUniqueWithoutGasSponsorshipInput[]
    createMany?: BlockchainTransactionCreateManyGasSponsorshipInputEnvelope
    set?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
    disconnect?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
    delete?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
    connect?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
    update?: BlockchainTransactionUpdateWithWhereUniqueWithoutGasSponsorshipInput | BlockchainTransactionUpdateWithWhereUniqueWithoutGasSponsorshipInput[]
    updateMany?: BlockchainTransactionUpdateManyWithWhereWithoutGasSponsorshipInput | BlockchainTransactionUpdateManyWithWhereWithoutGasSponsorshipInput[]
    deleteMany?: BlockchainTransactionScalarWhereInput | BlockchainTransactionScalarWhereInput[]
  }

  export type BlockchainTransactionUncheckedUpdateManyWithoutGasSponsorshipNestedInput = {
    create?: XOR<BlockchainTransactionCreateWithoutGasSponsorshipInput, BlockchainTransactionUncheckedCreateWithoutGasSponsorshipInput> | BlockchainTransactionCreateWithoutGasSponsorshipInput[] | BlockchainTransactionUncheckedCreateWithoutGasSponsorshipInput[]
    connectOrCreate?: BlockchainTransactionCreateOrConnectWithoutGasSponsorshipInput | BlockchainTransactionCreateOrConnectWithoutGasSponsorshipInput[]
    upsert?: BlockchainTransactionUpsertWithWhereUniqueWithoutGasSponsorshipInput | BlockchainTransactionUpsertWithWhereUniqueWithoutGasSponsorshipInput[]
    createMany?: BlockchainTransactionCreateManyGasSponsorshipInputEnvelope
    set?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
    disconnect?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
    delete?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
    connect?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
    update?: BlockchainTransactionUpdateWithWhereUniqueWithoutGasSponsorshipInput | BlockchainTransactionUpdateWithWhereUniqueWithoutGasSponsorshipInput[]
    updateMany?: BlockchainTransactionUpdateManyWithWhereWithoutGasSponsorshipInput | BlockchainTransactionUpdateManyWithWhereWithoutGasSponsorshipInput[]
    deleteMany?: BlockchainTransactionScalarWhereInput | BlockchainTransactionScalarWhereInput[]
  }

  export type ProductCreateimagesInput = {
    set: string[]
  }

  export type OrganizationCreateNestedOneWithoutProductsInput = {
    create?: XOR<OrganizationCreateWithoutProductsInput, OrganizationUncheckedCreateWithoutProductsInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutProductsInput
    connect?: OrganizationWhereUniqueInput
  }

  export type PriceCreateNestedManyWithoutProductInput = {
    create?: XOR<PriceCreateWithoutProductInput, PriceUncheckedCreateWithoutProductInput> | PriceCreateWithoutProductInput[] | PriceUncheckedCreateWithoutProductInput[]
    connectOrCreate?: PriceCreateOrConnectWithoutProductInput | PriceCreateOrConnectWithoutProductInput[]
    createMany?: PriceCreateManyProductInputEnvelope
    connect?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
  }

  export type PriceUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<PriceCreateWithoutProductInput, PriceUncheckedCreateWithoutProductInput> | PriceCreateWithoutProductInput[] | PriceUncheckedCreateWithoutProductInput[]
    connectOrCreate?: PriceCreateOrConnectWithoutProductInput | PriceCreateOrConnectWithoutProductInput[]
    createMany?: PriceCreateManyProductInputEnvelope
    connect?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
  }

  export type EnumProductTypeFieldUpdateOperationsInput = {
    set?: $Enums.ProductType
  }

  export type ProductUpdateimagesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type OrganizationUpdateOneRequiredWithoutProductsNestedInput = {
    create?: XOR<OrganizationCreateWithoutProductsInput, OrganizationUncheckedCreateWithoutProductsInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutProductsInput
    upsert?: OrganizationUpsertWithoutProductsInput
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutProductsInput, OrganizationUpdateWithoutProductsInput>, OrganizationUncheckedUpdateWithoutProductsInput>
  }

  export type PriceUpdateManyWithoutProductNestedInput = {
    create?: XOR<PriceCreateWithoutProductInput, PriceUncheckedCreateWithoutProductInput> | PriceCreateWithoutProductInput[] | PriceUncheckedCreateWithoutProductInput[]
    connectOrCreate?: PriceCreateOrConnectWithoutProductInput | PriceCreateOrConnectWithoutProductInput[]
    upsert?: PriceUpsertWithWhereUniqueWithoutProductInput | PriceUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: PriceCreateManyProductInputEnvelope
    set?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
    disconnect?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
    delete?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
    connect?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
    update?: PriceUpdateWithWhereUniqueWithoutProductInput | PriceUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: PriceUpdateManyWithWhereWithoutProductInput | PriceUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: PriceScalarWhereInput | PriceScalarWhereInput[]
  }

  export type PriceUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<PriceCreateWithoutProductInput, PriceUncheckedCreateWithoutProductInput> | PriceCreateWithoutProductInput[] | PriceUncheckedCreateWithoutProductInput[]
    connectOrCreate?: PriceCreateOrConnectWithoutProductInput | PriceCreateOrConnectWithoutProductInput[]
    upsert?: PriceUpsertWithWhereUniqueWithoutProductInput | PriceUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: PriceCreateManyProductInputEnvelope
    set?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
    disconnect?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
    delete?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
    connect?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
    update?: PriceUpdateWithWhereUniqueWithoutProductInput | PriceUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: PriceUpdateManyWithWhereWithoutProductInput | PriceUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: PriceScalarWhereInput | PriceScalarWhereInput[]
  }

  export type ProductCreateNestedOneWithoutPricesInput = {
    create?: XOR<ProductCreateWithoutPricesInput, ProductUncheckedCreateWithoutPricesInput>
    connectOrCreate?: ProductCreateOrConnectWithoutPricesInput
    connect?: ProductWhereUniqueInput
  }

  export type SubscriptionItemCreateNestedManyWithoutPriceInput = {
    create?: XOR<SubscriptionItemCreateWithoutPriceInput, SubscriptionItemUncheckedCreateWithoutPriceInput> | SubscriptionItemCreateWithoutPriceInput[] | SubscriptionItemUncheckedCreateWithoutPriceInput[]
    connectOrCreate?: SubscriptionItemCreateOrConnectWithoutPriceInput | SubscriptionItemCreateOrConnectWithoutPriceInput[]
    createMany?: SubscriptionItemCreateManyPriceInputEnvelope
    connect?: SubscriptionItemWhereUniqueInput | SubscriptionItemWhereUniqueInput[]
  }

  export type PaymentLinkCreateNestedManyWithoutPriceInput = {
    create?: XOR<PaymentLinkCreateWithoutPriceInput, PaymentLinkUncheckedCreateWithoutPriceInput> | PaymentLinkCreateWithoutPriceInput[] | PaymentLinkUncheckedCreateWithoutPriceInput[]
    connectOrCreate?: PaymentLinkCreateOrConnectWithoutPriceInput | PaymentLinkCreateOrConnectWithoutPriceInput[]
    createMany?: PaymentLinkCreateManyPriceInputEnvelope
    connect?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
  }

  export type SubscriptionItemUncheckedCreateNestedManyWithoutPriceInput = {
    create?: XOR<SubscriptionItemCreateWithoutPriceInput, SubscriptionItemUncheckedCreateWithoutPriceInput> | SubscriptionItemCreateWithoutPriceInput[] | SubscriptionItemUncheckedCreateWithoutPriceInput[]
    connectOrCreate?: SubscriptionItemCreateOrConnectWithoutPriceInput | SubscriptionItemCreateOrConnectWithoutPriceInput[]
    createMany?: SubscriptionItemCreateManyPriceInputEnvelope
    connect?: SubscriptionItemWhereUniqueInput | SubscriptionItemWhereUniqueInput[]
  }

  export type PaymentLinkUncheckedCreateNestedManyWithoutPriceInput = {
    create?: XOR<PaymentLinkCreateWithoutPriceInput, PaymentLinkUncheckedCreateWithoutPriceInput> | PaymentLinkCreateWithoutPriceInput[] | PaymentLinkUncheckedCreateWithoutPriceInput[]
    connectOrCreate?: PaymentLinkCreateOrConnectWithoutPriceInput | PaymentLinkCreateOrConnectWithoutPriceInput[]
    createMany?: PaymentLinkCreateManyPriceInputEnvelope
    connect?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type EnumPriceTypeFieldUpdateOperationsInput = {
    set?: $Enums.PriceType
  }

  export type NullableEnumBillingIntervalFieldUpdateOperationsInput = {
    set?: $Enums.BillingInterval | null
  }

  export type ProductUpdateOneRequiredWithoutPricesNestedInput = {
    create?: XOR<ProductCreateWithoutPricesInput, ProductUncheckedCreateWithoutPricesInput>
    connectOrCreate?: ProductCreateOrConnectWithoutPricesInput
    upsert?: ProductUpsertWithoutPricesInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutPricesInput, ProductUpdateWithoutPricesInput>, ProductUncheckedUpdateWithoutPricesInput>
  }

  export type SubscriptionItemUpdateManyWithoutPriceNestedInput = {
    create?: XOR<SubscriptionItemCreateWithoutPriceInput, SubscriptionItemUncheckedCreateWithoutPriceInput> | SubscriptionItemCreateWithoutPriceInput[] | SubscriptionItemUncheckedCreateWithoutPriceInput[]
    connectOrCreate?: SubscriptionItemCreateOrConnectWithoutPriceInput | SubscriptionItemCreateOrConnectWithoutPriceInput[]
    upsert?: SubscriptionItemUpsertWithWhereUniqueWithoutPriceInput | SubscriptionItemUpsertWithWhereUniqueWithoutPriceInput[]
    createMany?: SubscriptionItemCreateManyPriceInputEnvelope
    set?: SubscriptionItemWhereUniqueInput | SubscriptionItemWhereUniqueInput[]
    disconnect?: SubscriptionItemWhereUniqueInput | SubscriptionItemWhereUniqueInput[]
    delete?: SubscriptionItemWhereUniqueInput | SubscriptionItemWhereUniqueInput[]
    connect?: SubscriptionItemWhereUniqueInput | SubscriptionItemWhereUniqueInput[]
    update?: SubscriptionItemUpdateWithWhereUniqueWithoutPriceInput | SubscriptionItemUpdateWithWhereUniqueWithoutPriceInput[]
    updateMany?: SubscriptionItemUpdateManyWithWhereWithoutPriceInput | SubscriptionItemUpdateManyWithWhereWithoutPriceInput[]
    deleteMany?: SubscriptionItemScalarWhereInput | SubscriptionItemScalarWhereInput[]
  }

  export type PaymentLinkUpdateManyWithoutPriceNestedInput = {
    create?: XOR<PaymentLinkCreateWithoutPriceInput, PaymentLinkUncheckedCreateWithoutPriceInput> | PaymentLinkCreateWithoutPriceInput[] | PaymentLinkUncheckedCreateWithoutPriceInput[]
    connectOrCreate?: PaymentLinkCreateOrConnectWithoutPriceInput | PaymentLinkCreateOrConnectWithoutPriceInput[]
    upsert?: PaymentLinkUpsertWithWhereUniqueWithoutPriceInput | PaymentLinkUpsertWithWhereUniqueWithoutPriceInput[]
    createMany?: PaymentLinkCreateManyPriceInputEnvelope
    set?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    disconnect?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    delete?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    connect?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    update?: PaymentLinkUpdateWithWhereUniqueWithoutPriceInput | PaymentLinkUpdateWithWhereUniqueWithoutPriceInput[]
    updateMany?: PaymentLinkUpdateManyWithWhereWithoutPriceInput | PaymentLinkUpdateManyWithWhereWithoutPriceInput[]
    deleteMany?: PaymentLinkScalarWhereInput | PaymentLinkScalarWhereInput[]
  }

  export type SubscriptionItemUncheckedUpdateManyWithoutPriceNestedInput = {
    create?: XOR<SubscriptionItemCreateWithoutPriceInput, SubscriptionItemUncheckedCreateWithoutPriceInput> | SubscriptionItemCreateWithoutPriceInput[] | SubscriptionItemUncheckedCreateWithoutPriceInput[]
    connectOrCreate?: SubscriptionItemCreateOrConnectWithoutPriceInput | SubscriptionItemCreateOrConnectWithoutPriceInput[]
    upsert?: SubscriptionItemUpsertWithWhereUniqueWithoutPriceInput | SubscriptionItemUpsertWithWhereUniqueWithoutPriceInput[]
    createMany?: SubscriptionItemCreateManyPriceInputEnvelope
    set?: SubscriptionItemWhereUniqueInput | SubscriptionItemWhereUniqueInput[]
    disconnect?: SubscriptionItemWhereUniqueInput | SubscriptionItemWhereUniqueInput[]
    delete?: SubscriptionItemWhereUniqueInput | SubscriptionItemWhereUniqueInput[]
    connect?: SubscriptionItemWhereUniqueInput | SubscriptionItemWhereUniqueInput[]
    update?: SubscriptionItemUpdateWithWhereUniqueWithoutPriceInput | SubscriptionItemUpdateWithWhereUniqueWithoutPriceInput[]
    updateMany?: SubscriptionItemUpdateManyWithWhereWithoutPriceInput | SubscriptionItemUpdateManyWithWhereWithoutPriceInput[]
    deleteMany?: SubscriptionItemScalarWhereInput | SubscriptionItemScalarWhereInput[]
  }

  export type PaymentLinkUncheckedUpdateManyWithoutPriceNestedInput = {
    create?: XOR<PaymentLinkCreateWithoutPriceInput, PaymentLinkUncheckedCreateWithoutPriceInput> | PaymentLinkCreateWithoutPriceInput[] | PaymentLinkUncheckedCreateWithoutPriceInput[]
    connectOrCreate?: PaymentLinkCreateOrConnectWithoutPriceInput | PaymentLinkCreateOrConnectWithoutPriceInput[]
    upsert?: PaymentLinkUpsertWithWhereUniqueWithoutPriceInput | PaymentLinkUpsertWithWhereUniqueWithoutPriceInput[]
    createMany?: PaymentLinkCreateManyPriceInputEnvelope
    set?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    disconnect?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    delete?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    connect?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    update?: PaymentLinkUpdateWithWhereUniqueWithoutPriceInput | PaymentLinkUpdateWithWhereUniqueWithoutPriceInput[]
    updateMany?: PaymentLinkUpdateManyWithWhereWithoutPriceInput | PaymentLinkUpdateManyWithWhereWithoutPriceInput[]
    deleteMany?: PaymentLinkScalarWhereInput | PaymentLinkScalarWhereInput[]
  }

  export type OrganizationCreateNestedOneWithoutPaymentLinksInput = {
    create?: XOR<OrganizationCreateWithoutPaymentLinksInput, OrganizationUncheckedCreateWithoutPaymentLinksInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutPaymentLinksInput
    connect?: OrganizationWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutPaymentLinksInput = {
    create?: XOR<UserCreateWithoutPaymentLinksInput, UserUncheckedCreateWithoutPaymentLinksInput>
    connectOrCreate?: UserCreateOrConnectWithoutPaymentLinksInput
    connect?: UserWhereUniqueInput
  }

  export type AgentCreateNestedOneWithoutPaymentLinksInput = {
    create?: XOR<AgentCreateWithoutPaymentLinksInput, AgentUncheckedCreateWithoutPaymentLinksInput>
    connectOrCreate?: AgentCreateOrConnectWithoutPaymentLinksInput
    connect?: AgentWhereUniqueInput
  }

  export type PriceCreateNestedOneWithoutPaymentLinksInput = {
    create?: XOR<PriceCreateWithoutPaymentLinksInput, PriceUncheckedCreateWithoutPaymentLinksInput>
    connectOrCreate?: PriceCreateOrConnectWithoutPaymentLinksInput
    connect?: PriceWhereUniqueInput
  }

  export type PaymentOrderCreateNestedManyWithoutPaymentLinkInput = {
    create?: XOR<PaymentOrderCreateWithoutPaymentLinkInput, PaymentOrderUncheckedCreateWithoutPaymentLinkInput> | PaymentOrderCreateWithoutPaymentLinkInput[] | PaymentOrderUncheckedCreateWithoutPaymentLinkInput[]
    connectOrCreate?: PaymentOrderCreateOrConnectWithoutPaymentLinkInput | PaymentOrderCreateOrConnectWithoutPaymentLinkInput[]
    createMany?: PaymentOrderCreateManyPaymentLinkInputEnvelope
    connect?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
  }

  export type PaymentOrderUncheckedCreateNestedManyWithoutPaymentLinkInput = {
    create?: XOR<PaymentOrderCreateWithoutPaymentLinkInput, PaymentOrderUncheckedCreateWithoutPaymentLinkInput> | PaymentOrderCreateWithoutPaymentLinkInput[] | PaymentOrderUncheckedCreateWithoutPaymentLinkInput[]
    connectOrCreate?: PaymentOrderCreateOrConnectWithoutPaymentLinkInput | PaymentOrderCreateOrConnectWithoutPaymentLinkInput[]
    createMany?: PaymentOrderCreateManyPaymentLinkInputEnvelope
    connect?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type EnumPaymentLinkStatusFieldUpdateOperationsInput = {
    set?: $Enums.PaymentLinkStatus
  }

  export type OrganizationUpdateOneRequiredWithoutPaymentLinksNestedInput = {
    create?: XOR<OrganizationCreateWithoutPaymentLinksInput, OrganizationUncheckedCreateWithoutPaymentLinksInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutPaymentLinksInput
    upsert?: OrganizationUpsertWithoutPaymentLinksInput
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutPaymentLinksInput, OrganizationUpdateWithoutPaymentLinksInput>, OrganizationUncheckedUpdateWithoutPaymentLinksInput>
  }

  export type UserUpdateOneRequiredWithoutPaymentLinksNestedInput = {
    create?: XOR<UserCreateWithoutPaymentLinksInput, UserUncheckedCreateWithoutPaymentLinksInput>
    connectOrCreate?: UserCreateOrConnectWithoutPaymentLinksInput
    upsert?: UserUpsertWithoutPaymentLinksInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPaymentLinksInput, UserUpdateWithoutPaymentLinksInput>, UserUncheckedUpdateWithoutPaymentLinksInput>
  }

  export type AgentUpdateOneRequiredWithoutPaymentLinksNestedInput = {
    create?: XOR<AgentCreateWithoutPaymentLinksInput, AgentUncheckedCreateWithoutPaymentLinksInput>
    connectOrCreate?: AgentCreateOrConnectWithoutPaymentLinksInput
    upsert?: AgentUpsertWithoutPaymentLinksInput
    connect?: AgentWhereUniqueInput
    update?: XOR<XOR<AgentUpdateToOneWithWhereWithoutPaymentLinksInput, AgentUpdateWithoutPaymentLinksInput>, AgentUncheckedUpdateWithoutPaymentLinksInput>
  }

  export type PriceUpdateOneWithoutPaymentLinksNestedInput = {
    create?: XOR<PriceCreateWithoutPaymentLinksInput, PriceUncheckedCreateWithoutPaymentLinksInput>
    connectOrCreate?: PriceCreateOrConnectWithoutPaymentLinksInput
    upsert?: PriceUpsertWithoutPaymentLinksInput
    disconnect?: PriceWhereInput | boolean
    delete?: PriceWhereInput | boolean
    connect?: PriceWhereUniqueInput
    update?: XOR<XOR<PriceUpdateToOneWithWhereWithoutPaymentLinksInput, PriceUpdateWithoutPaymentLinksInput>, PriceUncheckedUpdateWithoutPaymentLinksInput>
  }

  export type PaymentOrderUpdateManyWithoutPaymentLinkNestedInput = {
    create?: XOR<PaymentOrderCreateWithoutPaymentLinkInput, PaymentOrderUncheckedCreateWithoutPaymentLinkInput> | PaymentOrderCreateWithoutPaymentLinkInput[] | PaymentOrderUncheckedCreateWithoutPaymentLinkInput[]
    connectOrCreate?: PaymentOrderCreateOrConnectWithoutPaymentLinkInput | PaymentOrderCreateOrConnectWithoutPaymentLinkInput[]
    upsert?: PaymentOrderUpsertWithWhereUniqueWithoutPaymentLinkInput | PaymentOrderUpsertWithWhereUniqueWithoutPaymentLinkInput[]
    createMany?: PaymentOrderCreateManyPaymentLinkInputEnvelope
    set?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
    disconnect?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
    delete?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
    connect?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
    update?: PaymentOrderUpdateWithWhereUniqueWithoutPaymentLinkInput | PaymentOrderUpdateWithWhereUniqueWithoutPaymentLinkInput[]
    updateMany?: PaymentOrderUpdateManyWithWhereWithoutPaymentLinkInput | PaymentOrderUpdateManyWithWhereWithoutPaymentLinkInput[]
    deleteMany?: PaymentOrderScalarWhereInput | PaymentOrderScalarWhereInput[]
  }

  export type PaymentOrderUncheckedUpdateManyWithoutPaymentLinkNestedInput = {
    create?: XOR<PaymentOrderCreateWithoutPaymentLinkInput, PaymentOrderUncheckedCreateWithoutPaymentLinkInput> | PaymentOrderCreateWithoutPaymentLinkInput[] | PaymentOrderUncheckedCreateWithoutPaymentLinkInput[]
    connectOrCreate?: PaymentOrderCreateOrConnectWithoutPaymentLinkInput | PaymentOrderCreateOrConnectWithoutPaymentLinkInput[]
    upsert?: PaymentOrderUpsertWithWhereUniqueWithoutPaymentLinkInput | PaymentOrderUpsertWithWhereUniqueWithoutPaymentLinkInput[]
    createMany?: PaymentOrderCreateManyPaymentLinkInputEnvelope
    set?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
    disconnect?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
    delete?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
    connect?: PaymentOrderWhereUniqueInput | PaymentOrderWhereUniqueInput[]
    update?: PaymentOrderUpdateWithWhereUniqueWithoutPaymentLinkInput | PaymentOrderUpdateWithWhereUniqueWithoutPaymentLinkInput[]
    updateMany?: PaymentOrderUpdateManyWithWhereWithoutPaymentLinkInput | PaymentOrderUpdateManyWithWhereWithoutPaymentLinkInput[]
    deleteMany?: PaymentOrderScalarWhereInput | PaymentOrderScalarWhereInput[]
  }

  export type OrganizationCreateNestedOneWithoutPaymentOrdersInput = {
    create?: XOR<OrganizationCreateWithoutPaymentOrdersInput, OrganizationUncheckedCreateWithoutPaymentOrdersInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutPaymentOrdersInput
    connect?: OrganizationWhereUniqueInput
  }

  export type PaymentLinkCreateNestedOneWithoutPaymentOrdersInput = {
    create?: XOR<PaymentLinkCreateWithoutPaymentOrdersInput, PaymentLinkUncheckedCreateWithoutPaymentOrdersInput>
    connectOrCreate?: PaymentLinkCreateOrConnectWithoutPaymentOrdersInput
    connect?: PaymentLinkWhereUniqueInput
  }

  export type CustomerCreateNestedOneWithoutPaymentOrdersInput = {
    create?: XOR<CustomerCreateWithoutPaymentOrdersInput, CustomerUncheckedCreateWithoutPaymentOrdersInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutPaymentOrdersInput
    connect?: CustomerWhereUniqueInput
  }

  export type ProviderTransactionCreateNestedManyWithoutPaymentOrderInput = {
    create?: XOR<ProviderTransactionCreateWithoutPaymentOrderInput, ProviderTransactionUncheckedCreateWithoutPaymentOrderInput> | ProviderTransactionCreateWithoutPaymentOrderInput[] | ProviderTransactionUncheckedCreateWithoutPaymentOrderInput[]
    connectOrCreate?: ProviderTransactionCreateOrConnectWithoutPaymentOrderInput | ProviderTransactionCreateOrConnectWithoutPaymentOrderInput[]
    createMany?: ProviderTransactionCreateManyPaymentOrderInputEnvelope
    connect?: ProviderTransactionWhereUniqueInput | ProviderTransactionWhereUniqueInput[]
  }

  export type BlockchainTransactionCreateNestedManyWithoutPaymentOrderInput = {
    create?: XOR<BlockchainTransactionCreateWithoutPaymentOrderInput, BlockchainTransactionUncheckedCreateWithoutPaymentOrderInput> | BlockchainTransactionCreateWithoutPaymentOrderInput[] | BlockchainTransactionUncheckedCreateWithoutPaymentOrderInput[]
    connectOrCreate?: BlockchainTransactionCreateOrConnectWithoutPaymentOrderInput | BlockchainTransactionCreateOrConnectWithoutPaymentOrderInput[]
    createMany?: BlockchainTransactionCreateManyPaymentOrderInputEnvelope
    connect?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
  }

  export type PaymentEventCreateNestedManyWithoutPaymentOrderInput = {
    create?: XOR<PaymentEventCreateWithoutPaymentOrderInput, PaymentEventUncheckedCreateWithoutPaymentOrderInput> | PaymentEventCreateWithoutPaymentOrderInput[] | PaymentEventUncheckedCreateWithoutPaymentOrderInput[]
    connectOrCreate?: PaymentEventCreateOrConnectWithoutPaymentOrderInput | PaymentEventCreateOrConnectWithoutPaymentOrderInput[]
    createMany?: PaymentEventCreateManyPaymentOrderInputEnvelope
    connect?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
  }

  export type AgentDecisionCreateNestedManyWithoutPaymentOrderInput = {
    create?: XOR<AgentDecisionCreateWithoutPaymentOrderInput, AgentDecisionUncheckedCreateWithoutPaymentOrderInput> | AgentDecisionCreateWithoutPaymentOrderInput[] | AgentDecisionUncheckedCreateWithoutPaymentOrderInput[]
    connectOrCreate?: AgentDecisionCreateOrConnectWithoutPaymentOrderInput | AgentDecisionCreateOrConnectWithoutPaymentOrderInput[]
    createMany?: AgentDecisionCreateManyPaymentOrderInputEnvelope
    connect?: AgentDecisionWhereUniqueInput | AgentDecisionWhereUniqueInput[]
  }

  export type ManualProcessStepCreateNestedManyWithoutPaymentOrderInput = {
    create?: XOR<ManualProcessStepCreateWithoutPaymentOrderInput, ManualProcessStepUncheckedCreateWithoutPaymentOrderInput> | ManualProcessStepCreateWithoutPaymentOrderInput[] | ManualProcessStepUncheckedCreateWithoutPaymentOrderInput[]
    connectOrCreate?: ManualProcessStepCreateOrConnectWithoutPaymentOrderInput | ManualProcessStepCreateOrConnectWithoutPaymentOrderInput[]
    createMany?: ManualProcessStepCreateManyPaymentOrderInputEnvelope
    connect?: ManualProcessStepWhereUniqueInput | ManualProcessStepWhereUniqueInput[]
  }

  export type ProviderTransactionUncheckedCreateNestedManyWithoutPaymentOrderInput = {
    create?: XOR<ProviderTransactionCreateWithoutPaymentOrderInput, ProviderTransactionUncheckedCreateWithoutPaymentOrderInput> | ProviderTransactionCreateWithoutPaymentOrderInput[] | ProviderTransactionUncheckedCreateWithoutPaymentOrderInput[]
    connectOrCreate?: ProviderTransactionCreateOrConnectWithoutPaymentOrderInput | ProviderTransactionCreateOrConnectWithoutPaymentOrderInput[]
    createMany?: ProviderTransactionCreateManyPaymentOrderInputEnvelope
    connect?: ProviderTransactionWhereUniqueInput | ProviderTransactionWhereUniqueInput[]
  }

  export type BlockchainTransactionUncheckedCreateNestedManyWithoutPaymentOrderInput = {
    create?: XOR<BlockchainTransactionCreateWithoutPaymentOrderInput, BlockchainTransactionUncheckedCreateWithoutPaymentOrderInput> | BlockchainTransactionCreateWithoutPaymentOrderInput[] | BlockchainTransactionUncheckedCreateWithoutPaymentOrderInput[]
    connectOrCreate?: BlockchainTransactionCreateOrConnectWithoutPaymentOrderInput | BlockchainTransactionCreateOrConnectWithoutPaymentOrderInput[]
    createMany?: BlockchainTransactionCreateManyPaymentOrderInputEnvelope
    connect?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
  }

  export type PaymentEventUncheckedCreateNestedManyWithoutPaymentOrderInput = {
    create?: XOR<PaymentEventCreateWithoutPaymentOrderInput, PaymentEventUncheckedCreateWithoutPaymentOrderInput> | PaymentEventCreateWithoutPaymentOrderInput[] | PaymentEventUncheckedCreateWithoutPaymentOrderInput[]
    connectOrCreate?: PaymentEventCreateOrConnectWithoutPaymentOrderInput | PaymentEventCreateOrConnectWithoutPaymentOrderInput[]
    createMany?: PaymentEventCreateManyPaymentOrderInputEnvelope
    connect?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
  }

  export type AgentDecisionUncheckedCreateNestedManyWithoutPaymentOrderInput = {
    create?: XOR<AgentDecisionCreateWithoutPaymentOrderInput, AgentDecisionUncheckedCreateWithoutPaymentOrderInput> | AgentDecisionCreateWithoutPaymentOrderInput[] | AgentDecisionUncheckedCreateWithoutPaymentOrderInput[]
    connectOrCreate?: AgentDecisionCreateOrConnectWithoutPaymentOrderInput | AgentDecisionCreateOrConnectWithoutPaymentOrderInput[]
    createMany?: AgentDecisionCreateManyPaymentOrderInputEnvelope
    connect?: AgentDecisionWhereUniqueInput | AgentDecisionWhereUniqueInput[]
  }

  export type ManualProcessStepUncheckedCreateNestedManyWithoutPaymentOrderInput = {
    create?: XOR<ManualProcessStepCreateWithoutPaymentOrderInput, ManualProcessStepUncheckedCreateWithoutPaymentOrderInput> | ManualProcessStepCreateWithoutPaymentOrderInput[] | ManualProcessStepUncheckedCreateWithoutPaymentOrderInput[]
    connectOrCreate?: ManualProcessStepCreateOrConnectWithoutPaymentOrderInput | ManualProcessStepCreateOrConnectWithoutPaymentOrderInput[]
    createMany?: ManualProcessStepCreateManyPaymentOrderInputEnvelope
    connect?: ManualProcessStepWhereUniqueInput | ManualProcessStepWhereUniqueInput[]
  }

  export type EnumPaymentOrderStatusFieldUpdateOperationsInput = {
    set?: $Enums.PaymentOrderStatus
  }

  export type EnumKycStatusFieldUpdateOperationsInput = {
    set?: $Enums.KycStatus
  }

  export type OrganizationUpdateOneRequiredWithoutPaymentOrdersNestedInput = {
    create?: XOR<OrganizationCreateWithoutPaymentOrdersInput, OrganizationUncheckedCreateWithoutPaymentOrdersInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutPaymentOrdersInput
    upsert?: OrganizationUpsertWithoutPaymentOrdersInput
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutPaymentOrdersInput, OrganizationUpdateWithoutPaymentOrdersInput>, OrganizationUncheckedUpdateWithoutPaymentOrdersInput>
  }

  export type PaymentLinkUpdateOneRequiredWithoutPaymentOrdersNestedInput = {
    create?: XOR<PaymentLinkCreateWithoutPaymentOrdersInput, PaymentLinkUncheckedCreateWithoutPaymentOrdersInput>
    connectOrCreate?: PaymentLinkCreateOrConnectWithoutPaymentOrdersInput
    upsert?: PaymentLinkUpsertWithoutPaymentOrdersInput
    connect?: PaymentLinkWhereUniqueInput
    update?: XOR<XOR<PaymentLinkUpdateToOneWithWhereWithoutPaymentOrdersInput, PaymentLinkUpdateWithoutPaymentOrdersInput>, PaymentLinkUncheckedUpdateWithoutPaymentOrdersInput>
  }

  export type CustomerUpdateOneWithoutPaymentOrdersNestedInput = {
    create?: XOR<CustomerCreateWithoutPaymentOrdersInput, CustomerUncheckedCreateWithoutPaymentOrdersInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutPaymentOrdersInput
    upsert?: CustomerUpsertWithoutPaymentOrdersInput
    disconnect?: CustomerWhereInput | boolean
    delete?: CustomerWhereInput | boolean
    connect?: CustomerWhereUniqueInput
    update?: XOR<XOR<CustomerUpdateToOneWithWhereWithoutPaymentOrdersInput, CustomerUpdateWithoutPaymentOrdersInput>, CustomerUncheckedUpdateWithoutPaymentOrdersInput>
  }

  export type ProviderTransactionUpdateManyWithoutPaymentOrderNestedInput = {
    create?: XOR<ProviderTransactionCreateWithoutPaymentOrderInput, ProviderTransactionUncheckedCreateWithoutPaymentOrderInput> | ProviderTransactionCreateWithoutPaymentOrderInput[] | ProviderTransactionUncheckedCreateWithoutPaymentOrderInput[]
    connectOrCreate?: ProviderTransactionCreateOrConnectWithoutPaymentOrderInput | ProviderTransactionCreateOrConnectWithoutPaymentOrderInput[]
    upsert?: ProviderTransactionUpsertWithWhereUniqueWithoutPaymentOrderInput | ProviderTransactionUpsertWithWhereUniqueWithoutPaymentOrderInput[]
    createMany?: ProviderTransactionCreateManyPaymentOrderInputEnvelope
    set?: ProviderTransactionWhereUniqueInput | ProviderTransactionWhereUniqueInput[]
    disconnect?: ProviderTransactionWhereUniqueInput | ProviderTransactionWhereUniqueInput[]
    delete?: ProviderTransactionWhereUniqueInput | ProviderTransactionWhereUniqueInput[]
    connect?: ProviderTransactionWhereUniqueInput | ProviderTransactionWhereUniqueInput[]
    update?: ProviderTransactionUpdateWithWhereUniqueWithoutPaymentOrderInput | ProviderTransactionUpdateWithWhereUniqueWithoutPaymentOrderInput[]
    updateMany?: ProviderTransactionUpdateManyWithWhereWithoutPaymentOrderInput | ProviderTransactionUpdateManyWithWhereWithoutPaymentOrderInput[]
    deleteMany?: ProviderTransactionScalarWhereInput | ProviderTransactionScalarWhereInput[]
  }

  export type BlockchainTransactionUpdateManyWithoutPaymentOrderNestedInput = {
    create?: XOR<BlockchainTransactionCreateWithoutPaymentOrderInput, BlockchainTransactionUncheckedCreateWithoutPaymentOrderInput> | BlockchainTransactionCreateWithoutPaymentOrderInput[] | BlockchainTransactionUncheckedCreateWithoutPaymentOrderInput[]
    connectOrCreate?: BlockchainTransactionCreateOrConnectWithoutPaymentOrderInput | BlockchainTransactionCreateOrConnectWithoutPaymentOrderInput[]
    upsert?: BlockchainTransactionUpsertWithWhereUniqueWithoutPaymentOrderInput | BlockchainTransactionUpsertWithWhereUniqueWithoutPaymentOrderInput[]
    createMany?: BlockchainTransactionCreateManyPaymentOrderInputEnvelope
    set?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
    disconnect?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
    delete?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
    connect?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
    update?: BlockchainTransactionUpdateWithWhereUniqueWithoutPaymentOrderInput | BlockchainTransactionUpdateWithWhereUniqueWithoutPaymentOrderInput[]
    updateMany?: BlockchainTransactionUpdateManyWithWhereWithoutPaymentOrderInput | BlockchainTransactionUpdateManyWithWhereWithoutPaymentOrderInput[]
    deleteMany?: BlockchainTransactionScalarWhereInput | BlockchainTransactionScalarWhereInput[]
  }

  export type PaymentEventUpdateManyWithoutPaymentOrderNestedInput = {
    create?: XOR<PaymentEventCreateWithoutPaymentOrderInput, PaymentEventUncheckedCreateWithoutPaymentOrderInput> | PaymentEventCreateWithoutPaymentOrderInput[] | PaymentEventUncheckedCreateWithoutPaymentOrderInput[]
    connectOrCreate?: PaymentEventCreateOrConnectWithoutPaymentOrderInput | PaymentEventCreateOrConnectWithoutPaymentOrderInput[]
    upsert?: PaymentEventUpsertWithWhereUniqueWithoutPaymentOrderInput | PaymentEventUpsertWithWhereUniqueWithoutPaymentOrderInput[]
    createMany?: PaymentEventCreateManyPaymentOrderInputEnvelope
    set?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
    disconnect?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
    delete?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
    connect?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
    update?: PaymentEventUpdateWithWhereUniqueWithoutPaymentOrderInput | PaymentEventUpdateWithWhereUniqueWithoutPaymentOrderInput[]
    updateMany?: PaymentEventUpdateManyWithWhereWithoutPaymentOrderInput | PaymentEventUpdateManyWithWhereWithoutPaymentOrderInput[]
    deleteMany?: PaymentEventScalarWhereInput | PaymentEventScalarWhereInput[]
  }

  export type AgentDecisionUpdateManyWithoutPaymentOrderNestedInput = {
    create?: XOR<AgentDecisionCreateWithoutPaymentOrderInput, AgentDecisionUncheckedCreateWithoutPaymentOrderInput> | AgentDecisionCreateWithoutPaymentOrderInput[] | AgentDecisionUncheckedCreateWithoutPaymentOrderInput[]
    connectOrCreate?: AgentDecisionCreateOrConnectWithoutPaymentOrderInput | AgentDecisionCreateOrConnectWithoutPaymentOrderInput[]
    upsert?: AgentDecisionUpsertWithWhereUniqueWithoutPaymentOrderInput | AgentDecisionUpsertWithWhereUniqueWithoutPaymentOrderInput[]
    createMany?: AgentDecisionCreateManyPaymentOrderInputEnvelope
    set?: AgentDecisionWhereUniqueInput | AgentDecisionWhereUniqueInput[]
    disconnect?: AgentDecisionWhereUniqueInput | AgentDecisionWhereUniqueInput[]
    delete?: AgentDecisionWhereUniqueInput | AgentDecisionWhereUniqueInput[]
    connect?: AgentDecisionWhereUniqueInput | AgentDecisionWhereUniqueInput[]
    update?: AgentDecisionUpdateWithWhereUniqueWithoutPaymentOrderInput | AgentDecisionUpdateWithWhereUniqueWithoutPaymentOrderInput[]
    updateMany?: AgentDecisionUpdateManyWithWhereWithoutPaymentOrderInput | AgentDecisionUpdateManyWithWhereWithoutPaymentOrderInput[]
    deleteMany?: AgentDecisionScalarWhereInput | AgentDecisionScalarWhereInput[]
  }

  export type ManualProcessStepUpdateManyWithoutPaymentOrderNestedInput = {
    create?: XOR<ManualProcessStepCreateWithoutPaymentOrderInput, ManualProcessStepUncheckedCreateWithoutPaymentOrderInput> | ManualProcessStepCreateWithoutPaymentOrderInput[] | ManualProcessStepUncheckedCreateWithoutPaymentOrderInput[]
    connectOrCreate?: ManualProcessStepCreateOrConnectWithoutPaymentOrderInput | ManualProcessStepCreateOrConnectWithoutPaymentOrderInput[]
    upsert?: ManualProcessStepUpsertWithWhereUniqueWithoutPaymentOrderInput | ManualProcessStepUpsertWithWhereUniqueWithoutPaymentOrderInput[]
    createMany?: ManualProcessStepCreateManyPaymentOrderInputEnvelope
    set?: ManualProcessStepWhereUniqueInput | ManualProcessStepWhereUniqueInput[]
    disconnect?: ManualProcessStepWhereUniqueInput | ManualProcessStepWhereUniqueInput[]
    delete?: ManualProcessStepWhereUniqueInput | ManualProcessStepWhereUniqueInput[]
    connect?: ManualProcessStepWhereUniqueInput | ManualProcessStepWhereUniqueInput[]
    update?: ManualProcessStepUpdateWithWhereUniqueWithoutPaymentOrderInput | ManualProcessStepUpdateWithWhereUniqueWithoutPaymentOrderInput[]
    updateMany?: ManualProcessStepUpdateManyWithWhereWithoutPaymentOrderInput | ManualProcessStepUpdateManyWithWhereWithoutPaymentOrderInput[]
    deleteMany?: ManualProcessStepScalarWhereInput | ManualProcessStepScalarWhereInput[]
  }

  export type ProviderTransactionUncheckedUpdateManyWithoutPaymentOrderNestedInput = {
    create?: XOR<ProviderTransactionCreateWithoutPaymentOrderInput, ProviderTransactionUncheckedCreateWithoutPaymentOrderInput> | ProviderTransactionCreateWithoutPaymentOrderInput[] | ProviderTransactionUncheckedCreateWithoutPaymentOrderInput[]
    connectOrCreate?: ProviderTransactionCreateOrConnectWithoutPaymentOrderInput | ProviderTransactionCreateOrConnectWithoutPaymentOrderInput[]
    upsert?: ProviderTransactionUpsertWithWhereUniqueWithoutPaymentOrderInput | ProviderTransactionUpsertWithWhereUniqueWithoutPaymentOrderInput[]
    createMany?: ProviderTransactionCreateManyPaymentOrderInputEnvelope
    set?: ProviderTransactionWhereUniqueInput | ProviderTransactionWhereUniqueInput[]
    disconnect?: ProviderTransactionWhereUniqueInput | ProviderTransactionWhereUniqueInput[]
    delete?: ProviderTransactionWhereUniqueInput | ProviderTransactionWhereUniqueInput[]
    connect?: ProviderTransactionWhereUniqueInput | ProviderTransactionWhereUniqueInput[]
    update?: ProviderTransactionUpdateWithWhereUniqueWithoutPaymentOrderInput | ProviderTransactionUpdateWithWhereUniqueWithoutPaymentOrderInput[]
    updateMany?: ProviderTransactionUpdateManyWithWhereWithoutPaymentOrderInput | ProviderTransactionUpdateManyWithWhereWithoutPaymentOrderInput[]
    deleteMany?: ProviderTransactionScalarWhereInput | ProviderTransactionScalarWhereInput[]
  }

  export type BlockchainTransactionUncheckedUpdateManyWithoutPaymentOrderNestedInput = {
    create?: XOR<BlockchainTransactionCreateWithoutPaymentOrderInput, BlockchainTransactionUncheckedCreateWithoutPaymentOrderInput> | BlockchainTransactionCreateWithoutPaymentOrderInput[] | BlockchainTransactionUncheckedCreateWithoutPaymentOrderInput[]
    connectOrCreate?: BlockchainTransactionCreateOrConnectWithoutPaymentOrderInput | BlockchainTransactionCreateOrConnectWithoutPaymentOrderInput[]
    upsert?: BlockchainTransactionUpsertWithWhereUniqueWithoutPaymentOrderInput | BlockchainTransactionUpsertWithWhereUniqueWithoutPaymentOrderInput[]
    createMany?: BlockchainTransactionCreateManyPaymentOrderInputEnvelope
    set?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
    disconnect?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
    delete?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
    connect?: BlockchainTransactionWhereUniqueInput | BlockchainTransactionWhereUniqueInput[]
    update?: BlockchainTransactionUpdateWithWhereUniqueWithoutPaymentOrderInput | BlockchainTransactionUpdateWithWhereUniqueWithoutPaymentOrderInput[]
    updateMany?: BlockchainTransactionUpdateManyWithWhereWithoutPaymentOrderInput | BlockchainTransactionUpdateManyWithWhereWithoutPaymentOrderInput[]
    deleteMany?: BlockchainTransactionScalarWhereInput | BlockchainTransactionScalarWhereInput[]
  }

  export type PaymentEventUncheckedUpdateManyWithoutPaymentOrderNestedInput = {
    create?: XOR<PaymentEventCreateWithoutPaymentOrderInput, PaymentEventUncheckedCreateWithoutPaymentOrderInput> | PaymentEventCreateWithoutPaymentOrderInput[] | PaymentEventUncheckedCreateWithoutPaymentOrderInput[]
    connectOrCreate?: PaymentEventCreateOrConnectWithoutPaymentOrderInput | PaymentEventCreateOrConnectWithoutPaymentOrderInput[]
    upsert?: PaymentEventUpsertWithWhereUniqueWithoutPaymentOrderInput | PaymentEventUpsertWithWhereUniqueWithoutPaymentOrderInput[]
    createMany?: PaymentEventCreateManyPaymentOrderInputEnvelope
    set?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
    disconnect?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
    delete?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
    connect?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
    update?: PaymentEventUpdateWithWhereUniqueWithoutPaymentOrderInput | PaymentEventUpdateWithWhereUniqueWithoutPaymentOrderInput[]
    updateMany?: PaymentEventUpdateManyWithWhereWithoutPaymentOrderInput | PaymentEventUpdateManyWithWhereWithoutPaymentOrderInput[]
    deleteMany?: PaymentEventScalarWhereInput | PaymentEventScalarWhereInput[]
  }

  export type AgentDecisionUncheckedUpdateManyWithoutPaymentOrderNestedInput = {
    create?: XOR<AgentDecisionCreateWithoutPaymentOrderInput, AgentDecisionUncheckedCreateWithoutPaymentOrderInput> | AgentDecisionCreateWithoutPaymentOrderInput[] | AgentDecisionUncheckedCreateWithoutPaymentOrderInput[]
    connectOrCreate?: AgentDecisionCreateOrConnectWithoutPaymentOrderInput | AgentDecisionCreateOrConnectWithoutPaymentOrderInput[]
    upsert?: AgentDecisionUpsertWithWhereUniqueWithoutPaymentOrderInput | AgentDecisionUpsertWithWhereUniqueWithoutPaymentOrderInput[]
    createMany?: AgentDecisionCreateManyPaymentOrderInputEnvelope
    set?: AgentDecisionWhereUniqueInput | AgentDecisionWhereUniqueInput[]
    disconnect?: AgentDecisionWhereUniqueInput | AgentDecisionWhereUniqueInput[]
    delete?: AgentDecisionWhereUniqueInput | AgentDecisionWhereUniqueInput[]
    connect?: AgentDecisionWhereUniqueInput | AgentDecisionWhereUniqueInput[]
    update?: AgentDecisionUpdateWithWhereUniqueWithoutPaymentOrderInput | AgentDecisionUpdateWithWhereUniqueWithoutPaymentOrderInput[]
    updateMany?: AgentDecisionUpdateManyWithWhereWithoutPaymentOrderInput | AgentDecisionUpdateManyWithWhereWithoutPaymentOrderInput[]
    deleteMany?: AgentDecisionScalarWhereInput | AgentDecisionScalarWhereInput[]
  }

  export type ManualProcessStepUncheckedUpdateManyWithoutPaymentOrderNestedInput = {
    create?: XOR<ManualProcessStepCreateWithoutPaymentOrderInput, ManualProcessStepUncheckedCreateWithoutPaymentOrderInput> | ManualProcessStepCreateWithoutPaymentOrderInput[] | ManualProcessStepUncheckedCreateWithoutPaymentOrderInput[]
    connectOrCreate?: ManualProcessStepCreateOrConnectWithoutPaymentOrderInput | ManualProcessStepCreateOrConnectWithoutPaymentOrderInput[]
    upsert?: ManualProcessStepUpsertWithWhereUniqueWithoutPaymentOrderInput | ManualProcessStepUpsertWithWhereUniqueWithoutPaymentOrderInput[]
    createMany?: ManualProcessStepCreateManyPaymentOrderInputEnvelope
    set?: ManualProcessStepWhereUniqueInput | ManualProcessStepWhereUniqueInput[]
    disconnect?: ManualProcessStepWhereUniqueInput | ManualProcessStepWhereUniqueInput[]
    delete?: ManualProcessStepWhereUniqueInput | ManualProcessStepWhereUniqueInput[]
    connect?: ManualProcessStepWhereUniqueInput | ManualProcessStepWhereUniqueInput[]
    update?: ManualProcessStepUpdateWithWhereUniqueWithoutPaymentOrderInput | ManualProcessStepUpdateWithWhereUniqueWithoutPaymentOrderInput[]
    updateMany?: ManualProcessStepUpdateManyWithWhereWithoutPaymentOrderInput | ManualProcessStepUpdateManyWithWhereWithoutPaymentOrderInput[]
    deleteMany?: ManualProcessStepScalarWhereInput | ManualProcessStepScalarWhereInput[]
  }

  export type ProviderCreatesupportedCountriesInput = {
    set: string[]
  }

  export type ProviderCreatesupportedCurrenciesInput = {
    set: string[]
  }

  export type ProviderCreatepaymentMethodsInput = {
    set: string[]
  }

  export type ProviderConfigCreateNestedManyWithoutProviderInput = {
    create?: XOR<ProviderConfigCreateWithoutProviderInput, ProviderConfigUncheckedCreateWithoutProviderInput> | ProviderConfigCreateWithoutProviderInput[] | ProviderConfigUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: ProviderConfigCreateOrConnectWithoutProviderInput | ProviderConfigCreateOrConnectWithoutProviderInput[]
    createMany?: ProviderConfigCreateManyProviderInputEnvelope
    connect?: ProviderConfigWhereUniqueInput | ProviderConfigWhereUniqueInput[]
  }

  export type ProviderRouteCreateNestedManyWithoutProviderInput = {
    create?: XOR<ProviderRouteCreateWithoutProviderInput, ProviderRouteUncheckedCreateWithoutProviderInput> | ProviderRouteCreateWithoutProviderInput[] | ProviderRouteUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: ProviderRouteCreateOrConnectWithoutProviderInput | ProviderRouteCreateOrConnectWithoutProviderInput[]
    createMany?: ProviderRouteCreateManyProviderInputEnvelope
    connect?: ProviderRouteWhereUniqueInput | ProviderRouteWhereUniqueInput[]
  }

  export type ProviderTransactionCreateNestedManyWithoutProviderInput = {
    create?: XOR<ProviderTransactionCreateWithoutProviderInput, ProviderTransactionUncheckedCreateWithoutProviderInput> | ProviderTransactionCreateWithoutProviderInput[] | ProviderTransactionUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: ProviderTransactionCreateOrConnectWithoutProviderInput | ProviderTransactionCreateOrConnectWithoutProviderInput[]
    createMany?: ProviderTransactionCreateManyProviderInputEnvelope
    connect?: ProviderTransactionWhereUniqueInput | ProviderTransactionWhereUniqueInput[]
  }

  export type ProviderConfigUncheckedCreateNestedManyWithoutProviderInput = {
    create?: XOR<ProviderConfigCreateWithoutProviderInput, ProviderConfigUncheckedCreateWithoutProviderInput> | ProviderConfigCreateWithoutProviderInput[] | ProviderConfigUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: ProviderConfigCreateOrConnectWithoutProviderInput | ProviderConfigCreateOrConnectWithoutProviderInput[]
    createMany?: ProviderConfigCreateManyProviderInputEnvelope
    connect?: ProviderConfigWhereUniqueInput | ProviderConfigWhereUniqueInput[]
  }

  export type ProviderRouteUncheckedCreateNestedManyWithoutProviderInput = {
    create?: XOR<ProviderRouteCreateWithoutProviderInput, ProviderRouteUncheckedCreateWithoutProviderInput> | ProviderRouteCreateWithoutProviderInput[] | ProviderRouteUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: ProviderRouteCreateOrConnectWithoutProviderInput | ProviderRouteCreateOrConnectWithoutProviderInput[]
    createMany?: ProviderRouteCreateManyProviderInputEnvelope
    connect?: ProviderRouteWhereUniqueInput | ProviderRouteWhereUniqueInput[]
  }

  export type ProviderTransactionUncheckedCreateNestedManyWithoutProviderInput = {
    create?: XOR<ProviderTransactionCreateWithoutProviderInput, ProviderTransactionUncheckedCreateWithoutProviderInput> | ProviderTransactionCreateWithoutProviderInput[] | ProviderTransactionUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: ProviderTransactionCreateOrConnectWithoutProviderInput | ProviderTransactionCreateOrConnectWithoutProviderInput[]
    createMany?: ProviderTransactionCreateManyProviderInputEnvelope
    connect?: ProviderTransactionWhereUniqueInput | ProviderTransactionWhereUniqueInput[]
  }

  export type EnumProviderTypeFieldUpdateOperationsInput = {
    set?: $Enums.ProviderType
  }

  export type ProviderUpdatesupportedCountriesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type ProviderUpdatesupportedCurrenciesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type ProviderUpdatepaymentMethodsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type EnumProviderHealthFieldUpdateOperationsInput = {
    set?: $Enums.ProviderHealth
  }

  export type ProviderConfigUpdateManyWithoutProviderNestedInput = {
    create?: XOR<ProviderConfigCreateWithoutProviderInput, ProviderConfigUncheckedCreateWithoutProviderInput> | ProviderConfigCreateWithoutProviderInput[] | ProviderConfigUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: ProviderConfigCreateOrConnectWithoutProviderInput | ProviderConfigCreateOrConnectWithoutProviderInput[]
    upsert?: ProviderConfigUpsertWithWhereUniqueWithoutProviderInput | ProviderConfigUpsertWithWhereUniqueWithoutProviderInput[]
    createMany?: ProviderConfigCreateManyProviderInputEnvelope
    set?: ProviderConfigWhereUniqueInput | ProviderConfigWhereUniqueInput[]
    disconnect?: ProviderConfigWhereUniqueInput | ProviderConfigWhereUniqueInput[]
    delete?: ProviderConfigWhereUniqueInput | ProviderConfigWhereUniqueInput[]
    connect?: ProviderConfigWhereUniqueInput | ProviderConfigWhereUniqueInput[]
    update?: ProviderConfigUpdateWithWhereUniqueWithoutProviderInput | ProviderConfigUpdateWithWhereUniqueWithoutProviderInput[]
    updateMany?: ProviderConfigUpdateManyWithWhereWithoutProviderInput | ProviderConfigUpdateManyWithWhereWithoutProviderInput[]
    deleteMany?: ProviderConfigScalarWhereInput | ProviderConfigScalarWhereInput[]
  }

  export type ProviderRouteUpdateManyWithoutProviderNestedInput = {
    create?: XOR<ProviderRouteCreateWithoutProviderInput, ProviderRouteUncheckedCreateWithoutProviderInput> | ProviderRouteCreateWithoutProviderInput[] | ProviderRouteUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: ProviderRouteCreateOrConnectWithoutProviderInput | ProviderRouteCreateOrConnectWithoutProviderInput[]
    upsert?: ProviderRouteUpsertWithWhereUniqueWithoutProviderInput | ProviderRouteUpsertWithWhereUniqueWithoutProviderInput[]
    createMany?: ProviderRouteCreateManyProviderInputEnvelope
    set?: ProviderRouteWhereUniqueInput | ProviderRouteWhereUniqueInput[]
    disconnect?: ProviderRouteWhereUniqueInput | ProviderRouteWhereUniqueInput[]
    delete?: ProviderRouteWhereUniqueInput | ProviderRouteWhereUniqueInput[]
    connect?: ProviderRouteWhereUniqueInput | ProviderRouteWhereUniqueInput[]
    update?: ProviderRouteUpdateWithWhereUniqueWithoutProviderInput | ProviderRouteUpdateWithWhereUniqueWithoutProviderInput[]
    updateMany?: ProviderRouteUpdateManyWithWhereWithoutProviderInput | ProviderRouteUpdateManyWithWhereWithoutProviderInput[]
    deleteMany?: ProviderRouteScalarWhereInput | ProviderRouteScalarWhereInput[]
  }

  export type ProviderTransactionUpdateManyWithoutProviderNestedInput = {
    create?: XOR<ProviderTransactionCreateWithoutProviderInput, ProviderTransactionUncheckedCreateWithoutProviderInput> | ProviderTransactionCreateWithoutProviderInput[] | ProviderTransactionUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: ProviderTransactionCreateOrConnectWithoutProviderInput | ProviderTransactionCreateOrConnectWithoutProviderInput[]
    upsert?: ProviderTransactionUpsertWithWhereUniqueWithoutProviderInput | ProviderTransactionUpsertWithWhereUniqueWithoutProviderInput[]
    createMany?: ProviderTransactionCreateManyProviderInputEnvelope
    set?: ProviderTransactionWhereUniqueInput | ProviderTransactionWhereUniqueInput[]
    disconnect?: ProviderTransactionWhereUniqueInput | ProviderTransactionWhereUniqueInput[]
    delete?: ProviderTransactionWhereUniqueInput | ProviderTransactionWhereUniqueInput[]
    connect?: ProviderTransactionWhereUniqueInput | ProviderTransactionWhereUniqueInput[]
    update?: ProviderTransactionUpdateWithWhereUniqueWithoutProviderInput | ProviderTransactionUpdateWithWhereUniqueWithoutProviderInput[]
    updateMany?: ProviderTransactionUpdateManyWithWhereWithoutProviderInput | ProviderTransactionUpdateManyWithWhereWithoutProviderInput[]
    deleteMany?: ProviderTransactionScalarWhereInput | ProviderTransactionScalarWhereInput[]
  }

  export type ProviderConfigUncheckedUpdateManyWithoutProviderNestedInput = {
    create?: XOR<ProviderConfigCreateWithoutProviderInput, ProviderConfigUncheckedCreateWithoutProviderInput> | ProviderConfigCreateWithoutProviderInput[] | ProviderConfigUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: ProviderConfigCreateOrConnectWithoutProviderInput | ProviderConfigCreateOrConnectWithoutProviderInput[]
    upsert?: ProviderConfigUpsertWithWhereUniqueWithoutProviderInput | ProviderConfigUpsertWithWhereUniqueWithoutProviderInput[]
    createMany?: ProviderConfigCreateManyProviderInputEnvelope
    set?: ProviderConfigWhereUniqueInput | ProviderConfigWhereUniqueInput[]
    disconnect?: ProviderConfigWhereUniqueInput | ProviderConfigWhereUniqueInput[]
    delete?: ProviderConfigWhereUniqueInput | ProviderConfigWhereUniqueInput[]
    connect?: ProviderConfigWhereUniqueInput | ProviderConfigWhereUniqueInput[]
    update?: ProviderConfigUpdateWithWhereUniqueWithoutProviderInput | ProviderConfigUpdateWithWhereUniqueWithoutProviderInput[]
    updateMany?: ProviderConfigUpdateManyWithWhereWithoutProviderInput | ProviderConfigUpdateManyWithWhereWithoutProviderInput[]
    deleteMany?: ProviderConfigScalarWhereInput | ProviderConfigScalarWhereInput[]
  }

  export type ProviderRouteUncheckedUpdateManyWithoutProviderNestedInput = {
    create?: XOR<ProviderRouteCreateWithoutProviderInput, ProviderRouteUncheckedCreateWithoutProviderInput> | ProviderRouteCreateWithoutProviderInput[] | ProviderRouteUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: ProviderRouteCreateOrConnectWithoutProviderInput | ProviderRouteCreateOrConnectWithoutProviderInput[]
    upsert?: ProviderRouteUpsertWithWhereUniqueWithoutProviderInput | ProviderRouteUpsertWithWhereUniqueWithoutProviderInput[]
    createMany?: ProviderRouteCreateManyProviderInputEnvelope
    set?: ProviderRouteWhereUniqueInput | ProviderRouteWhereUniqueInput[]
    disconnect?: ProviderRouteWhereUniqueInput | ProviderRouteWhereUniqueInput[]
    delete?: ProviderRouteWhereUniqueInput | ProviderRouteWhereUniqueInput[]
    connect?: ProviderRouteWhereUniqueInput | ProviderRouteWhereUniqueInput[]
    update?: ProviderRouteUpdateWithWhereUniqueWithoutProviderInput | ProviderRouteUpdateWithWhereUniqueWithoutProviderInput[]
    updateMany?: ProviderRouteUpdateManyWithWhereWithoutProviderInput | ProviderRouteUpdateManyWithWhereWithoutProviderInput[]
    deleteMany?: ProviderRouteScalarWhereInput | ProviderRouteScalarWhereInput[]
  }

  export type ProviderTransactionUncheckedUpdateManyWithoutProviderNestedInput = {
    create?: XOR<ProviderTransactionCreateWithoutProviderInput, ProviderTransactionUncheckedCreateWithoutProviderInput> | ProviderTransactionCreateWithoutProviderInput[] | ProviderTransactionUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: ProviderTransactionCreateOrConnectWithoutProviderInput | ProviderTransactionCreateOrConnectWithoutProviderInput[]
    upsert?: ProviderTransactionUpsertWithWhereUniqueWithoutProviderInput | ProviderTransactionUpsertWithWhereUniqueWithoutProviderInput[]
    createMany?: ProviderTransactionCreateManyProviderInputEnvelope
    set?: ProviderTransactionWhereUniqueInput | ProviderTransactionWhereUniqueInput[]
    disconnect?: ProviderTransactionWhereUniqueInput | ProviderTransactionWhereUniqueInput[]
    delete?: ProviderTransactionWhereUniqueInput | ProviderTransactionWhereUniqueInput[]
    connect?: ProviderTransactionWhereUniqueInput | ProviderTransactionWhereUniqueInput[]
    update?: ProviderTransactionUpdateWithWhereUniqueWithoutProviderInput | ProviderTransactionUpdateWithWhereUniqueWithoutProviderInput[]
    updateMany?: ProviderTransactionUpdateManyWithWhereWithoutProviderInput | ProviderTransactionUpdateManyWithWhereWithoutProviderInput[]
    deleteMany?: ProviderTransactionScalarWhereInput | ProviderTransactionScalarWhereInput[]
  }

  export type OrganizationCreateNestedOneWithoutProvidersInput = {
    create?: XOR<OrganizationCreateWithoutProvidersInput, OrganizationUncheckedCreateWithoutProvidersInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutProvidersInput
    connect?: OrganizationWhereUniqueInput
  }

  export type ProviderCreateNestedOneWithoutConfigsInput = {
    create?: XOR<ProviderCreateWithoutConfigsInput, ProviderUncheckedCreateWithoutConfigsInput>
    connectOrCreate?: ProviderCreateOrConnectWithoutConfigsInput
    connect?: ProviderWhereUniqueInput
  }

  export type EnumEnvironmentFieldUpdateOperationsInput = {
    set?: $Enums.Environment
  }

  export type OrganizationUpdateOneRequiredWithoutProvidersNestedInput = {
    create?: XOR<OrganizationCreateWithoutProvidersInput, OrganizationUncheckedCreateWithoutProvidersInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutProvidersInput
    upsert?: OrganizationUpsertWithoutProvidersInput
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutProvidersInput, OrganizationUpdateWithoutProvidersInput>, OrganizationUncheckedUpdateWithoutProvidersInput>
  }

  export type ProviderUpdateOneRequiredWithoutConfigsNestedInput = {
    create?: XOR<ProviderCreateWithoutConfigsInput, ProviderUncheckedCreateWithoutConfigsInput>
    connectOrCreate?: ProviderCreateOrConnectWithoutConfigsInput
    upsert?: ProviderUpsertWithoutConfigsInput
    connect?: ProviderWhereUniqueInput
    update?: XOR<XOR<ProviderUpdateToOneWithWhereWithoutConfigsInput, ProviderUpdateWithoutConfigsInput>, ProviderUncheckedUpdateWithoutConfigsInput>
  }

  export type ProviderRouteCreateworkingDaysInput = {
    set: string[]
  }

  export type ProviderCreateNestedOneWithoutRoutesInput = {
    create?: XOR<ProviderCreateWithoutRoutesInput, ProviderUncheckedCreateWithoutRoutesInput>
    connectOrCreate?: ProviderCreateOrConnectWithoutRoutesInput
    connect?: ProviderWhereUniqueInput
  }

  export type ProviderRouteUpdateworkingDaysInput = {
    set?: string[]
    push?: string | string[]
  }

  export type ProviderUpdateOneRequiredWithoutRoutesNestedInput = {
    create?: XOR<ProviderCreateWithoutRoutesInput, ProviderUncheckedCreateWithoutRoutesInput>
    connectOrCreate?: ProviderCreateOrConnectWithoutRoutesInput
    upsert?: ProviderUpsertWithoutRoutesInput
    connect?: ProviderWhereUniqueInput
    update?: XOR<XOR<ProviderUpdateToOneWithWhereWithoutRoutesInput, ProviderUpdateWithoutRoutesInput>, ProviderUncheckedUpdateWithoutRoutesInput>
  }

  export type PaymentOrderCreateNestedOneWithoutProviderTransactionsInput = {
    create?: XOR<PaymentOrderCreateWithoutProviderTransactionsInput, PaymentOrderUncheckedCreateWithoutProviderTransactionsInput>
    connectOrCreate?: PaymentOrderCreateOrConnectWithoutProviderTransactionsInput
    connect?: PaymentOrderWhereUniqueInput
  }

  export type ProviderCreateNestedOneWithoutTransactionsInput = {
    create?: XOR<ProviderCreateWithoutTransactionsInput, ProviderUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: ProviderCreateOrConnectWithoutTransactionsInput
    connect?: ProviderWhereUniqueInput
  }

  export type EnumProviderTxTypeFieldUpdateOperationsInput = {
    set?: $Enums.ProviderTxType
  }

  export type PaymentOrderUpdateOneRequiredWithoutProviderTransactionsNestedInput = {
    create?: XOR<PaymentOrderCreateWithoutProviderTransactionsInput, PaymentOrderUncheckedCreateWithoutProviderTransactionsInput>
    connectOrCreate?: PaymentOrderCreateOrConnectWithoutProviderTransactionsInput
    upsert?: PaymentOrderUpsertWithoutProviderTransactionsInput
    connect?: PaymentOrderWhereUniqueInput
    update?: XOR<XOR<PaymentOrderUpdateToOneWithWhereWithoutProviderTransactionsInput, PaymentOrderUpdateWithoutProviderTransactionsInput>, PaymentOrderUncheckedUpdateWithoutProviderTransactionsInput>
  }

  export type ProviderUpdateOneRequiredWithoutTransactionsNestedInput = {
    create?: XOR<ProviderCreateWithoutTransactionsInput, ProviderUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: ProviderCreateOrConnectWithoutTransactionsInput
    upsert?: ProviderUpsertWithoutTransactionsInput
    connect?: ProviderWhereUniqueInput
    update?: XOR<XOR<ProviderUpdateToOneWithWhereWithoutTransactionsInput, ProviderUpdateWithoutTransactionsInput>, ProviderUncheckedUpdateWithoutTransactionsInput>
  }

  export type AgentCreatetoolsInput = {
    set: string[]
  }

  export type AgentCreatesupportedProvidersInput = {
    set: string[]
  }

  export type AgentCreatesupportedChainsInput = {
    set: number[]
  }

  export type OrganizationCreateNestedOneWithoutAgentsInput = {
    create?: XOR<OrganizationCreateWithoutAgentsInput, OrganizationUncheckedCreateWithoutAgentsInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutAgentsInput
    connect?: OrganizationWhereUniqueInput
  }

  export type WalletCreateNestedOneWithoutAgentInput = {
    create?: XOR<WalletCreateWithoutAgentInput, WalletUncheckedCreateWithoutAgentInput>
    connectOrCreate?: WalletCreateOrConnectWithoutAgentInput
    connect?: WalletWhereUniqueInput
  }

  export type PaymentLinkCreateNestedManyWithoutExecutingAgentInput = {
    create?: XOR<PaymentLinkCreateWithoutExecutingAgentInput, PaymentLinkUncheckedCreateWithoutExecutingAgentInput> | PaymentLinkCreateWithoutExecutingAgentInput[] | PaymentLinkUncheckedCreateWithoutExecutingAgentInput[]
    connectOrCreate?: PaymentLinkCreateOrConnectWithoutExecutingAgentInput | PaymentLinkCreateOrConnectWithoutExecutingAgentInput[]
    createMany?: PaymentLinkCreateManyExecutingAgentInputEnvelope
    connect?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
  }

  export type AgentDecisionCreateNestedManyWithoutAgentInput = {
    create?: XOR<AgentDecisionCreateWithoutAgentInput, AgentDecisionUncheckedCreateWithoutAgentInput> | AgentDecisionCreateWithoutAgentInput[] | AgentDecisionUncheckedCreateWithoutAgentInput[]
    connectOrCreate?: AgentDecisionCreateOrConnectWithoutAgentInput | AgentDecisionCreateOrConnectWithoutAgentInput[]
    createMany?: AgentDecisionCreateManyAgentInputEnvelope
    connect?: AgentDecisionWhereUniqueInput | AgentDecisionWhereUniqueInput[]
  }

  export type AgentCheckpointCreateNestedManyWithoutAgentInput = {
    create?: XOR<AgentCheckpointCreateWithoutAgentInput, AgentCheckpointUncheckedCreateWithoutAgentInput> | AgentCheckpointCreateWithoutAgentInput[] | AgentCheckpointUncheckedCreateWithoutAgentInput[]
    connectOrCreate?: AgentCheckpointCreateOrConnectWithoutAgentInput | AgentCheckpointCreateOrConnectWithoutAgentInput[]
    createMany?: AgentCheckpointCreateManyAgentInputEnvelope
    connect?: AgentCheckpointWhereUniqueInput | AgentCheckpointWhereUniqueInput[]
  }

  export type PaymentLinkUncheckedCreateNestedManyWithoutExecutingAgentInput = {
    create?: XOR<PaymentLinkCreateWithoutExecutingAgentInput, PaymentLinkUncheckedCreateWithoutExecutingAgentInput> | PaymentLinkCreateWithoutExecutingAgentInput[] | PaymentLinkUncheckedCreateWithoutExecutingAgentInput[]
    connectOrCreate?: PaymentLinkCreateOrConnectWithoutExecutingAgentInput | PaymentLinkCreateOrConnectWithoutExecutingAgentInput[]
    createMany?: PaymentLinkCreateManyExecutingAgentInputEnvelope
    connect?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
  }

  export type AgentDecisionUncheckedCreateNestedManyWithoutAgentInput = {
    create?: XOR<AgentDecisionCreateWithoutAgentInput, AgentDecisionUncheckedCreateWithoutAgentInput> | AgentDecisionCreateWithoutAgentInput[] | AgentDecisionUncheckedCreateWithoutAgentInput[]
    connectOrCreate?: AgentDecisionCreateOrConnectWithoutAgentInput | AgentDecisionCreateOrConnectWithoutAgentInput[]
    createMany?: AgentDecisionCreateManyAgentInputEnvelope
    connect?: AgentDecisionWhereUniqueInput | AgentDecisionWhereUniqueInput[]
  }

  export type AgentCheckpointUncheckedCreateNestedManyWithoutAgentInput = {
    create?: XOR<AgentCheckpointCreateWithoutAgentInput, AgentCheckpointUncheckedCreateWithoutAgentInput> | AgentCheckpointCreateWithoutAgentInput[] | AgentCheckpointUncheckedCreateWithoutAgentInput[]
    connectOrCreate?: AgentCheckpointCreateOrConnectWithoutAgentInput | AgentCheckpointCreateOrConnectWithoutAgentInput[]
    createMany?: AgentCheckpointCreateManyAgentInputEnvelope
    connect?: AgentCheckpointWhereUniqueInput | AgentCheckpointWhereUniqueInput[]
  }

  export type EnumAgentTypeFieldUpdateOperationsInput = {
    set?: $Enums.AgentType
  }

  export type AgentUpdatetoolsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type AgentUpdatesupportedProvidersInput = {
    set?: string[]
    push?: string | string[]
  }

  export type AgentUpdatesupportedChainsInput = {
    set?: number[]
    push?: number | number[]
  }

  export type OrganizationUpdateOneRequiredWithoutAgentsNestedInput = {
    create?: XOR<OrganizationCreateWithoutAgentsInput, OrganizationUncheckedCreateWithoutAgentsInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutAgentsInput
    upsert?: OrganizationUpsertWithoutAgentsInput
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutAgentsInput, OrganizationUpdateWithoutAgentsInput>, OrganizationUncheckedUpdateWithoutAgentsInput>
  }

  export type WalletUpdateOneWithoutAgentNestedInput = {
    create?: XOR<WalletCreateWithoutAgentInput, WalletUncheckedCreateWithoutAgentInput>
    connectOrCreate?: WalletCreateOrConnectWithoutAgentInput
    upsert?: WalletUpsertWithoutAgentInput
    disconnect?: WalletWhereInput | boolean
    delete?: WalletWhereInput | boolean
    connect?: WalletWhereUniqueInput
    update?: XOR<XOR<WalletUpdateToOneWithWhereWithoutAgentInput, WalletUpdateWithoutAgentInput>, WalletUncheckedUpdateWithoutAgentInput>
  }

  export type PaymentLinkUpdateManyWithoutExecutingAgentNestedInput = {
    create?: XOR<PaymentLinkCreateWithoutExecutingAgentInput, PaymentLinkUncheckedCreateWithoutExecutingAgentInput> | PaymentLinkCreateWithoutExecutingAgentInput[] | PaymentLinkUncheckedCreateWithoutExecutingAgentInput[]
    connectOrCreate?: PaymentLinkCreateOrConnectWithoutExecutingAgentInput | PaymentLinkCreateOrConnectWithoutExecutingAgentInput[]
    upsert?: PaymentLinkUpsertWithWhereUniqueWithoutExecutingAgentInput | PaymentLinkUpsertWithWhereUniqueWithoutExecutingAgentInput[]
    createMany?: PaymentLinkCreateManyExecutingAgentInputEnvelope
    set?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    disconnect?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    delete?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    connect?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    update?: PaymentLinkUpdateWithWhereUniqueWithoutExecutingAgentInput | PaymentLinkUpdateWithWhereUniqueWithoutExecutingAgentInput[]
    updateMany?: PaymentLinkUpdateManyWithWhereWithoutExecutingAgentInput | PaymentLinkUpdateManyWithWhereWithoutExecutingAgentInput[]
    deleteMany?: PaymentLinkScalarWhereInput | PaymentLinkScalarWhereInput[]
  }

  export type AgentDecisionUpdateManyWithoutAgentNestedInput = {
    create?: XOR<AgentDecisionCreateWithoutAgentInput, AgentDecisionUncheckedCreateWithoutAgentInput> | AgentDecisionCreateWithoutAgentInput[] | AgentDecisionUncheckedCreateWithoutAgentInput[]
    connectOrCreate?: AgentDecisionCreateOrConnectWithoutAgentInput | AgentDecisionCreateOrConnectWithoutAgentInput[]
    upsert?: AgentDecisionUpsertWithWhereUniqueWithoutAgentInput | AgentDecisionUpsertWithWhereUniqueWithoutAgentInput[]
    createMany?: AgentDecisionCreateManyAgentInputEnvelope
    set?: AgentDecisionWhereUniqueInput | AgentDecisionWhereUniqueInput[]
    disconnect?: AgentDecisionWhereUniqueInput | AgentDecisionWhereUniqueInput[]
    delete?: AgentDecisionWhereUniqueInput | AgentDecisionWhereUniqueInput[]
    connect?: AgentDecisionWhereUniqueInput | AgentDecisionWhereUniqueInput[]
    update?: AgentDecisionUpdateWithWhereUniqueWithoutAgentInput | AgentDecisionUpdateWithWhereUniqueWithoutAgentInput[]
    updateMany?: AgentDecisionUpdateManyWithWhereWithoutAgentInput | AgentDecisionUpdateManyWithWhereWithoutAgentInput[]
    deleteMany?: AgentDecisionScalarWhereInput | AgentDecisionScalarWhereInput[]
  }

  export type AgentCheckpointUpdateManyWithoutAgentNestedInput = {
    create?: XOR<AgentCheckpointCreateWithoutAgentInput, AgentCheckpointUncheckedCreateWithoutAgentInput> | AgentCheckpointCreateWithoutAgentInput[] | AgentCheckpointUncheckedCreateWithoutAgentInput[]
    connectOrCreate?: AgentCheckpointCreateOrConnectWithoutAgentInput | AgentCheckpointCreateOrConnectWithoutAgentInput[]
    upsert?: AgentCheckpointUpsertWithWhereUniqueWithoutAgentInput | AgentCheckpointUpsertWithWhereUniqueWithoutAgentInput[]
    createMany?: AgentCheckpointCreateManyAgentInputEnvelope
    set?: AgentCheckpointWhereUniqueInput | AgentCheckpointWhereUniqueInput[]
    disconnect?: AgentCheckpointWhereUniqueInput | AgentCheckpointWhereUniqueInput[]
    delete?: AgentCheckpointWhereUniqueInput | AgentCheckpointWhereUniqueInput[]
    connect?: AgentCheckpointWhereUniqueInput | AgentCheckpointWhereUniqueInput[]
    update?: AgentCheckpointUpdateWithWhereUniqueWithoutAgentInput | AgentCheckpointUpdateWithWhereUniqueWithoutAgentInput[]
    updateMany?: AgentCheckpointUpdateManyWithWhereWithoutAgentInput | AgentCheckpointUpdateManyWithWhereWithoutAgentInput[]
    deleteMany?: AgentCheckpointScalarWhereInput | AgentCheckpointScalarWhereInput[]
  }

  export type PaymentLinkUncheckedUpdateManyWithoutExecutingAgentNestedInput = {
    create?: XOR<PaymentLinkCreateWithoutExecutingAgentInput, PaymentLinkUncheckedCreateWithoutExecutingAgentInput> | PaymentLinkCreateWithoutExecutingAgentInput[] | PaymentLinkUncheckedCreateWithoutExecutingAgentInput[]
    connectOrCreate?: PaymentLinkCreateOrConnectWithoutExecutingAgentInput | PaymentLinkCreateOrConnectWithoutExecutingAgentInput[]
    upsert?: PaymentLinkUpsertWithWhereUniqueWithoutExecutingAgentInput | PaymentLinkUpsertWithWhereUniqueWithoutExecutingAgentInput[]
    createMany?: PaymentLinkCreateManyExecutingAgentInputEnvelope
    set?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    disconnect?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    delete?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    connect?: PaymentLinkWhereUniqueInput | PaymentLinkWhereUniqueInput[]
    update?: PaymentLinkUpdateWithWhereUniqueWithoutExecutingAgentInput | PaymentLinkUpdateWithWhereUniqueWithoutExecutingAgentInput[]
    updateMany?: PaymentLinkUpdateManyWithWhereWithoutExecutingAgentInput | PaymentLinkUpdateManyWithWhereWithoutExecutingAgentInput[]
    deleteMany?: PaymentLinkScalarWhereInput | PaymentLinkScalarWhereInput[]
  }

  export type AgentDecisionUncheckedUpdateManyWithoutAgentNestedInput = {
    create?: XOR<AgentDecisionCreateWithoutAgentInput, AgentDecisionUncheckedCreateWithoutAgentInput> | AgentDecisionCreateWithoutAgentInput[] | AgentDecisionUncheckedCreateWithoutAgentInput[]
    connectOrCreate?: AgentDecisionCreateOrConnectWithoutAgentInput | AgentDecisionCreateOrConnectWithoutAgentInput[]
    upsert?: AgentDecisionUpsertWithWhereUniqueWithoutAgentInput | AgentDecisionUpsertWithWhereUniqueWithoutAgentInput[]
    createMany?: AgentDecisionCreateManyAgentInputEnvelope
    set?: AgentDecisionWhereUniqueInput | AgentDecisionWhereUniqueInput[]
    disconnect?: AgentDecisionWhereUniqueInput | AgentDecisionWhereUniqueInput[]
    delete?: AgentDecisionWhereUniqueInput | AgentDecisionWhereUniqueInput[]
    connect?: AgentDecisionWhereUniqueInput | AgentDecisionWhereUniqueInput[]
    update?: AgentDecisionUpdateWithWhereUniqueWithoutAgentInput | AgentDecisionUpdateWithWhereUniqueWithoutAgentInput[]
    updateMany?: AgentDecisionUpdateManyWithWhereWithoutAgentInput | AgentDecisionUpdateManyWithWhereWithoutAgentInput[]
    deleteMany?: AgentDecisionScalarWhereInput | AgentDecisionScalarWhereInput[]
  }

  export type AgentCheckpointUncheckedUpdateManyWithoutAgentNestedInput = {
    create?: XOR<AgentCheckpointCreateWithoutAgentInput, AgentCheckpointUncheckedCreateWithoutAgentInput> | AgentCheckpointCreateWithoutAgentInput[] | AgentCheckpointUncheckedCreateWithoutAgentInput[]
    connectOrCreate?: AgentCheckpointCreateOrConnectWithoutAgentInput | AgentCheckpointCreateOrConnectWithoutAgentInput[]
    upsert?: AgentCheckpointUpsertWithWhereUniqueWithoutAgentInput | AgentCheckpointUpsertWithWhereUniqueWithoutAgentInput[]
    createMany?: AgentCheckpointCreateManyAgentInputEnvelope
    set?: AgentCheckpointWhereUniqueInput | AgentCheckpointWhereUniqueInput[]
    disconnect?: AgentCheckpointWhereUniqueInput | AgentCheckpointWhereUniqueInput[]
    delete?: AgentCheckpointWhereUniqueInput | AgentCheckpointWhereUniqueInput[]
    connect?: AgentCheckpointWhereUniqueInput | AgentCheckpointWhereUniqueInput[]
    update?: AgentCheckpointUpdateWithWhereUniqueWithoutAgentInput | AgentCheckpointUpdateWithWhereUniqueWithoutAgentInput[]
    updateMany?: AgentCheckpointUpdateManyWithWhereWithoutAgentInput | AgentCheckpointUpdateManyWithWhereWithoutAgentInput[]
    deleteMany?: AgentCheckpointScalarWhereInput | AgentCheckpointScalarWhereInput[]
  }

  export type AgentCreateNestedOneWithoutDecisionsInput = {
    create?: XOR<AgentCreateWithoutDecisionsInput, AgentUncheckedCreateWithoutDecisionsInput>
    connectOrCreate?: AgentCreateOrConnectWithoutDecisionsInput
    connect?: AgentWhereUniqueInput
  }

  export type PaymentOrderCreateNestedOneWithoutAgentDecisionsInput = {
    create?: XOR<PaymentOrderCreateWithoutAgentDecisionsInput, PaymentOrderUncheckedCreateWithoutAgentDecisionsInput>
    connectOrCreate?: PaymentOrderCreateOrConnectWithoutAgentDecisionsInput
    connect?: PaymentOrderWhereUniqueInput
  }

  export type AgentInteractionCreateNestedManyWithoutAgentDecisionInput = {
    create?: XOR<AgentInteractionCreateWithoutAgentDecisionInput, AgentInteractionUncheckedCreateWithoutAgentDecisionInput> | AgentInteractionCreateWithoutAgentDecisionInput[] | AgentInteractionUncheckedCreateWithoutAgentDecisionInput[]
    connectOrCreate?: AgentInteractionCreateOrConnectWithoutAgentDecisionInput | AgentInteractionCreateOrConnectWithoutAgentDecisionInput[]
    createMany?: AgentInteractionCreateManyAgentDecisionInputEnvelope
    connect?: AgentInteractionWhereUniqueInput | AgentInteractionWhereUniqueInput[]
  }

  export type AgentInteractionUncheckedCreateNestedManyWithoutAgentDecisionInput = {
    create?: XOR<AgentInteractionCreateWithoutAgentDecisionInput, AgentInteractionUncheckedCreateWithoutAgentDecisionInput> | AgentInteractionCreateWithoutAgentDecisionInput[] | AgentInteractionUncheckedCreateWithoutAgentDecisionInput[]
    connectOrCreate?: AgentInteractionCreateOrConnectWithoutAgentDecisionInput | AgentInteractionCreateOrConnectWithoutAgentDecisionInput[]
    createMany?: AgentInteractionCreateManyAgentDecisionInputEnvelope
    connect?: AgentInteractionWhereUniqueInput | AgentInteractionWhereUniqueInput[]
  }

  export type AgentUpdateOneRequiredWithoutDecisionsNestedInput = {
    create?: XOR<AgentCreateWithoutDecisionsInput, AgentUncheckedCreateWithoutDecisionsInput>
    connectOrCreate?: AgentCreateOrConnectWithoutDecisionsInput
    upsert?: AgentUpsertWithoutDecisionsInput
    connect?: AgentWhereUniqueInput
    update?: XOR<XOR<AgentUpdateToOneWithWhereWithoutDecisionsInput, AgentUpdateWithoutDecisionsInput>, AgentUncheckedUpdateWithoutDecisionsInput>
  }

  export type PaymentOrderUpdateOneWithoutAgentDecisionsNestedInput = {
    create?: XOR<PaymentOrderCreateWithoutAgentDecisionsInput, PaymentOrderUncheckedCreateWithoutAgentDecisionsInput>
    connectOrCreate?: PaymentOrderCreateOrConnectWithoutAgentDecisionsInput
    upsert?: PaymentOrderUpsertWithoutAgentDecisionsInput
    disconnect?: PaymentOrderWhereInput | boolean
    delete?: PaymentOrderWhereInput | boolean
    connect?: PaymentOrderWhereUniqueInput
    update?: XOR<XOR<PaymentOrderUpdateToOneWithWhereWithoutAgentDecisionsInput, PaymentOrderUpdateWithoutAgentDecisionsInput>, PaymentOrderUncheckedUpdateWithoutAgentDecisionsInput>
  }

  export type AgentInteractionUpdateManyWithoutAgentDecisionNestedInput = {
    create?: XOR<AgentInteractionCreateWithoutAgentDecisionInput, AgentInteractionUncheckedCreateWithoutAgentDecisionInput> | AgentInteractionCreateWithoutAgentDecisionInput[] | AgentInteractionUncheckedCreateWithoutAgentDecisionInput[]
    connectOrCreate?: AgentInteractionCreateOrConnectWithoutAgentDecisionInput | AgentInteractionCreateOrConnectWithoutAgentDecisionInput[]
    upsert?: AgentInteractionUpsertWithWhereUniqueWithoutAgentDecisionInput | AgentInteractionUpsertWithWhereUniqueWithoutAgentDecisionInput[]
    createMany?: AgentInteractionCreateManyAgentDecisionInputEnvelope
    set?: AgentInteractionWhereUniqueInput | AgentInteractionWhereUniqueInput[]
    disconnect?: AgentInteractionWhereUniqueInput | AgentInteractionWhereUniqueInput[]
    delete?: AgentInteractionWhereUniqueInput | AgentInteractionWhereUniqueInput[]
    connect?: AgentInteractionWhereUniqueInput | AgentInteractionWhereUniqueInput[]
    update?: AgentInteractionUpdateWithWhereUniqueWithoutAgentDecisionInput | AgentInteractionUpdateWithWhereUniqueWithoutAgentDecisionInput[]
    updateMany?: AgentInteractionUpdateManyWithWhereWithoutAgentDecisionInput | AgentInteractionUpdateManyWithWhereWithoutAgentDecisionInput[]
    deleteMany?: AgentInteractionScalarWhereInput | AgentInteractionScalarWhereInput[]
  }

  export type AgentInteractionUncheckedUpdateManyWithoutAgentDecisionNestedInput = {
    create?: XOR<AgentInteractionCreateWithoutAgentDecisionInput, AgentInteractionUncheckedCreateWithoutAgentDecisionInput> | AgentInteractionCreateWithoutAgentDecisionInput[] | AgentInteractionUncheckedCreateWithoutAgentDecisionInput[]
    connectOrCreate?: AgentInteractionCreateOrConnectWithoutAgentDecisionInput | AgentInteractionCreateOrConnectWithoutAgentDecisionInput[]
    upsert?: AgentInteractionUpsertWithWhereUniqueWithoutAgentDecisionInput | AgentInteractionUpsertWithWhereUniqueWithoutAgentDecisionInput[]
    createMany?: AgentInteractionCreateManyAgentDecisionInputEnvelope
    set?: AgentInteractionWhereUniqueInput | AgentInteractionWhereUniqueInput[]
    disconnect?: AgentInteractionWhereUniqueInput | AgentInteractionWhereUniqueInput[]
    delete?: AgentInteractionWhereUniqueInput | AgentInteractionWhereUniqueInput[]
    connect?: AgentInteractionWhereUniqueInput | AgentInteractionWhereUniqueInput[]
    update?: AgentInteractionUpdateWithWhereUniqueWithoutAgentDecisionInput | AgentInteractionUpdateWithWhereUniqueWithoutAgentDecisionInput[]
    updateMany?: AgentInteractionUpdateManyWithWhereWithoutAgentDecisionInput | AgentInteractionUpdateManyWithWhereWithoutAgentDecisionInput[]
    deleteMany?: AgentInteractionScalarWhereInput | AgentInteractionScalarWhereInput[]
  }

  export type AgentCreateNestedOneWithoutCheckpointsInput = {
    create?: XOR<AgentCreateWithoutCheckpointsInput, AgentUncheckedCreateWithoutCheckpointsInput>
    connectOrCreate?: AgentCreateOrConnectWithoutCheckpointsInput
    connect?: AgentWhereUniqueInput
  }

  export type AgentUpdateOneRequiredWithoutCheckpointsNestedInput = {
    create?: XOR<AgentCreateWithoutCheckpointsInput, AgentUncheckedCreateWithoutCheckpointsInput>
    connectOrCreate?: AgentCreateOrConnectWithoutCheckpointsInput
    upsert?: AgentUpsertWithoutCheckpointsInput
    connect?: AgentWhereUniqueInput
    update?: XOR<XOR<AgentUpdateToOneWithWhereWithoutCheckpointsInput, AgentUpdateWithoutCheckpointsInput>, AgentUncheckedUpdateWithoutCheckpointsInput>
  }

  export type AgentDecisionCreateNestedOneWithoutInteractionsInput = {
    create?: XOR<AgentDecisionCreateWithoutInteractionsInput, AgentDecisionUncheckedCreateWithoutInteractionsInput>
    connectOrCreate?: AgentDecisionCreateOrConnectWithoutInteractionsInput
    connect?: AgentDecisionWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutAgentInteractionsInput = {
    create?: XOR<UserCreateWithoutAgentInteractionsInput, UserUncheckedCreateWithoutAgentInteractionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAgentInteractionsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumInteractionTypeFieldUpdateOperationsInput = {
    set?: $Enums.InteractionType
  }

  export type AgentDecisionUpdateOneRequiredWithoutInteractionsNestedInput = {
    create?: XOR<AgentDecisionCreateWithoutInteractionsInput, AgentDecisionUncheckedCreateWithoutInteractionsInput>
    connectOrCreate?: AgentDecisionCreateOrConnectWithoutInteractionsInput
    upsert?: AgentDecisionUpsertWithoutInteractionsInput
    connect?: AgentDecisionWhereUniqueInput
    update?: XOR<XOR<AgentDecisionUpdateToOneWithWhereWithoutInteractionsInput, AgentDecisionUpdateWithoutInteractionsInput>, AgentDecisionUncheckedUpdateWithoutInteractionsInput>
  }

  export type UserUpdateOneRequiredWithoutAgentInteractionsNestedInput = {
    create?: XOR<UserCreateWithoutAgentInteractionsInput, UserUncheckedCreateWithoutAgentInteractionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAgentInteractionsInput
    upsert?: UserUpsertWithoutAgentInteractionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAgentInteractionsInput, UserUpdateWithoutAgentInteractionsInput>, UserUncheckedUpdateWithoutAgentInteractionsInput>
  }

  export type WebhookCreateeventsInput = {
    set: string[]
  }

  export type OrganizationCreateNestedOneWithoutWebhooksInput = {
    create?: XOR<OrganizationCreateWithoutWebhooksInput, OrganizationUncheckedCreateWithoutWebhooksInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutWebhooksInput
    connect?: OrganizationWhereUniqueInput
  }

  export type WebhookDeliveryCreateNestedManyWithoutWebhookInput = {
    create?: XOR<WebhookDeliveryCreateWithoutWebhookInput, WebhookDeliveryUncheckedCreateWithoutWebhookInput> | WebhookDeliveryCreateWithoutWebhookInput[] | WebhookDeliveryUncheckedCreateWithoutWebhookInput[]
    connectOrCreate?: WebhookDeliveryCreateOrConnectWithoutWebhookInput | WebhookDeliveryCreateOrConnectWithoutWebhookInput[]
    createMany?: WebhookDeliveryCreateManyWebhookInputEnvelope
    connect?: WebhookDeliveryWhereUniqueInput | WebhookDeliveryWhereUniqueInput[]
  }

  export type WebhookDeliveryUncheckedCreateNestedManyWithoutWebhookInput = {
    create?: XOR<WebhookDeliveryCreateWithoutWebhookInput, WebhookDeliveryUncheckedCreateWithoutWebhookInput> | WebhookDeliveryCreateWithoutWebhookInput[] | WebhookDeliveryUncheckedCreateWithoutWebhookInput[]
    connectOrCreate?: WebhookDeliveryCreateOrConnectWithoutWebhookInput | WebhookDeliveryCreateOrConnectWithoutWebhookInput[]
    createMany?: WebhookDeliveryCreateManyWebhookInputEnvelope
    connect?: WebhookDeliveryWhereUniqueInput | WebhookDeliveryWhereUniqueInput[]
  }

  export type WebhookUpdateeventsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type OrganizationUpdateOneRequiredWithoutWebhooksNestedInput = {
    create?: XOR<OrganizationCreateWithoutWebhooksInput, OrganizationUncheckedCreateWithoutWebhooksInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutWebhooksInput
    upsert?: OrganizationUpsertWithoutWebhooksInput
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutWebhooksInput, OrganizationUpdateWithoutWebhooksInput>, OrganizationUncheckedUpdateWithoutWebhooksInput>
  }

  export type WebhookDeliveryUpdateManyWithoutWebhookNestedInput = {
    create?: XOR<WebhookDeliveryCreateWithoutWebhookInput, WebhookDeliveryUncheckedCreateWithoutWebhookInput> | WebhookDeliveryCreateWithoutWebhookInput[] | WebhookDeliveryUncheckedCreateWithoutWebhookInput[]
    connectOrCreate?: WebhookDeliveryCreateOrConnectWithoutWebhookInput | WebhookDeliveryCreateOrConnectWithoutWebhookInput[]
    upsert?: WebhookDeliveryUpsertWithWhereUniqueWithoutWebhookInput | WebhookDeliveryUpsertWithWhereUniqueWithoutWebhookInput[]
    createMany?: WebhookDeliveryCreateManyWebhookInputEnvelope
    set?: WebhookDeliveryWhereUniqueInput | WebhookDeliveryWhereUniqueInput[]
    disconnect?: WebhookDeliveryWhereUniqueInput | WebhookDeliveryWhereUniqueInput[]
    delete?: WebhookDeliveryWhereUniqueInput | WebhookDeliveryWhereUniqueInput[]
    connect?: WebhookDeliveryWhereUniqueInput | WebhookDeliveryWhereUniqueInput[]
    update?: WebhookDeliveryUpdateWithWhereUniqueWithoutWebhookInput | WebhookDeliveryUpdateWithWhereUniqueWithoutWebhookInput[]
    updateMany?: WebhookDeliveryUpdateManyWithWhereWithoutWebhookInput | WebhookDeliveryUpdateManyWithWhereWithoutWebhookInput[]
    deleteMany?: WebhookDeliveryScalarWhereInput | WebhookDeliveryScalarWhereInput[]
  }

  export type WebhookDeliveryUncheckedUpdateManyWithoutWebhookNestedInput = {
    create?: XOR<WebhookDeliveryCreateWithoutWebhookInput, WebhookDeliveryUncheckedCreateWithoutWebhookInput> | WebhookDeliveryCreateWithoutWebhookInput[] | WebhookDeliveryUncheckedCreateWithoutWebhookInput[]
    connectOrCreate?: WebhookDeliveryCreateOrConnectWithoutWebhookInput | WebhookDeliveryCreateOrConnectWithoutWebhookInput[]
    upsert?: WebhookDeliveryUpsertWithWhereUniqueWithoutWebhookInput | WebhookDeliveryUpsertWithWhereUniqueWithoutWebhookInput[]
    createMany?: WebhookDeliveryCreateManyWebhookInputEnvelope
    set?: WebhookDeliveryWhereUniqueInput | WebhookDeliveryWhereUniqueInput[]
    disconnect?: WebhookDeliveryWhereUniqueInput | WebhookDeliveryWhereUniqueInput[]
    delete?: WebhookDeliveryWhereUniqueInput | WebhookDeliveryWhereUniqueInput[]
    connect?: WebhookDeliveryWhereUniqueInput | WebhookDeliveryWhereUniqueInput[]
    update?: WebhookDeliveryUpdateWithWhereUniqueWithoutWebhookInput | WebhookDeliveryUpdateWithWhereUniqueWithoutWebhookInput[]
    updateMany?: WebhookDeliveryUpdateManyWithWhereWithoutWebhookInput | WebhookDeliveryUpdateManyWithWhereWithoutWebhookInput[]
    deleteMany?: WebhookDeliveryScalarWhereInput | WebhookDeliveryScalarWhereInput[]
  }

  export type WebhookCreateNestedOneWithoutDeliveriesInput = {
    create?: XOR<WebhookCreateWithoutDeliveriesInput, WebhookUncheckedCreateWithoutDeliveriesInput>
    connectOrCreate?: WebhookCreateOrConnectWithoutDeliveriesInput
    connect?: WebhookWhereUniqueInput
  }

  export type WebhookUpdateOneRequiredWithoutDeliveriesNestedInput = {
    create?: XOR<WebhookCreateWithoutDeliveriesInput, WebhookUncheckedCreateWithoutDeliveriesInput>
    connectOrCreate?: WebhookCreateOrConnectWithoutDeliveriesInput
    upsert?: WebhookUpsertWithoutDeliveriesInput
    connect?: WebhookWhereUniqueInput
    update?: XOR<XOR<WebhookUpdateToOneWithWhereWithoutDeliveriesInput, WebhookUpdateWithoutDeliveriesInput>, WebhookUncheckedUpdateWithoutDeliveriesInput>
  }

  export type PaymentOrderCreateNestedOneWithoutManualStepsInput = {
    create?: XOR<PaymentOrderCreateWithoutManualStepsInput, PaymentOrderUncheckedCreateWithoutManualStepsInput>
    connectOrCreate?: PaymentOrderCreateOrConnectWithoutManualStepsInput
    connect?: PaymentOrderWhereUniqueInput
  }

  export type EnumManualStepTypeFieldUpdateOperationsInput = {
    set?: $Enums.ManualStepType
  }

  export type EnumPriorityFieldUpdateOperationsInput = {
    set?: $Enums.Priority
  }

  export type EnumManualStepStatusFieldUpdateOperationsInput = {
    set?: $Enums.ManualStepStatus
  }

  export type PaymentOrderUpdateOneRequiredWithoutManualStepsNestedInput = {
    create?: XOR<PaymentOrderCreateWithoutManualStepsInput, PaymentOrderUncheckedCreateWithoutManualStepsInput>
    connectOrCreate?: PaymentOrderCreateOrConnectWithoutManualStepsInput
    upsert?: PaymentOrderUpsertWithoutManualStepsInput
    connect?: PaymentOrderWhereUniqueInput
    update?: XOR<XOR<PaymentOrderUpdateToOneWithWhereWithoutManualStepsInput, PaymentOrderUpdateWithoutManualStepsInput>, PaymentOrderUncheckedUpdateWithoutManualStepsInput>
  }

  export type PaymentOrderCreateNestedOneWithoutEventsInput = {
    create?: XOR<PaymentOrderCreateWithoutEventsInput, PaymentOrderUncheckedCreateWithoutEventsInput>
    connectOrCreate?: PaymentOrderCreateOrConnectWithoutEventsInput
    connect?: PaymentOrderWhereUniqueInput
  }

  export type NullableBigIntFieldUpdateOperationsInput = {
    set?: bigint | number | null
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type PaymentOrderUpdateOneRequiredWithoutEventsNestedInput = {
    create?: XOR<PaymentOrderCreateWithoutEventsInput, PaymentOrderUncheckedCreateWithoutEventsInput>
    connectOrCreate?: PaymentOrderCreateOrConnectWithoutEventsInput
    upsert?: PaymentOrderUpsertWithoutEventsInput
    connect?: PaymentOrderWhereUniqueInput
    update?: XOR<XOR<PaymentOrderUpdateToOneWithWhereWithoutEventsInput, PaymentOrderUpdateWithoutEventsInput>, PaymentOrderUncheckedUpdateWithoutEventsInput>
  }

  export type OrganizationCreateNestedOneWithoutAuditLogsInput = {
    create?: XOR<OrganizationCreateWithoutAuditLogsInput, OrganizationUncheckedCreateWithoutAuditLogsInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutAuditLogsInput
    connect?: OrganizationWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutAuditLogsInput = {
    create?: XOR<UserCreateWithoutAuditLogsInput, UserUncheckedCreateWithoutAuditLogsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuditLogsInput
    connect?: UserWhereUniqueInput
  }

  export type OrganizationUpdateOneRequiredWithoutAuditLogsNestedInput = {
    create?: XOR<OrganizationCreateWithoutAuditLogsInput, OrganizationUncheckedCreateWithoutAuditLogsInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutAuditLogsInput
    upsert?: OrganizationUpsertWithoutAuditLogsInput
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutAuditLogsInput, OrganizationUpdateWithoutAuditLogsInput>, OrganizationUncheckedUpdateWithoutAuditLogsInput>
  }

  export type UserUpdateOneWithoutAuditLogsNestedInput = {
    create?: XOR<UserCreateWithoutAuditLogsInput, UserUncheckedCreateWithoutAuditLogsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuditLogsInput
    upsert?: UserUpsertWithoutAuditLogsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAuditLogsInput, UserUpdateWithoutAuditLogsInput>, UserUncheckedUpdateWithoutAuditLogsInput>
  }

  export type ApiKeyCreatescopesInput = {
    set: string[]
  }

  export type OrganizationCreateNestedOneWithoutApiKeysInput = {
    create?: XOR<OrganizationCreateWithoutApiKeysInput, OrganizationUncheckedCreateWithoutApiKeysInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutApiKeysInput
    connect?: OrganizationWhereUniqueInput
  }

  export type ApiKeyUpdatescopesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type OrganizationUpdateOneRequiredWithoutApiKeysNestedInput = {
    create?: XOR<OrganizationCreateWithoutApiKeysInput, OrganizationUncheckedCreateWithoutApiKeysInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutApiKeysInput
    upsert?: OrganizationUpsertWithoutApiKeysInput
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutApiKeysInput, OrganizationUpdateWithoutApiKeysInput>, OrganizationUncheckedUpdateWithoutApiKeysInput>
  }

  export type OrganizationUserCreatepermissionsInput = {
    set: string[]
  }

  export type OrganizationCreateNestedOneWithoutUsersInput = {
    create?: XOR<OrganizationCreateWithoutUsersInput, OrganizationUncheckedCreateWithoutUsersInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutUsersInput
    connect?: OrganizationWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutOrganizationsInput = {
    create?: XOR<UserCreateWithoutOrganizationsInput, UserUncheckedCreateWithoutOrganizationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrganizationsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumUserRoleFieldUpdateOperationsInput = {
    set?: $Enums.UserRole
  }

  export type OrganizationUserUpdatepermissionsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type OrganizationUpdateOneRequiredWithoutUsersNestedInput = {
    create?: XOR<OrganizationCreateWithoutUsersInput, OrganizationUncheckedCreateWithoutUsersInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutUsersInput
    upsert?: OrganizationUpsertWithoutUsersInput
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutUsersInput, OrganizationUpdateWithoutUsersInput>, OrganizationUncheckedUpdateWithoutUsersInput>
  }

  export type UserUpdateOneRequiredWithoutOrganizationsNestedInput = {
    create?: XOR<UserCreateWithoutOrganizationsInput, UserUncheckedCreateWithoutOrganizationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrganizationsInput
    upsert?: UserUpsertWithoutOrganizationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOrganizationsInput, UserUpdateWithoutOrganizationsInput>, UserUncheckedUpdateWithoutOrganizationsInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedEnumComplianceStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ComplianceStatus | EnumComplianceStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ComplianceStatus[] | ListEnumComplianceStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ComplianceStatus[] | ListEnumComplianceStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumComplianceStatusFilter<$PrismaModel> | $Enums.ComplianceStatus
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumComplianceStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ComplianceStatus | EnumComplianceStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ComplianceStatus[] | ListEnumComplianceStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ComplianceStatus[] | ListEnumComplianceStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumComplianceStatusWithAggregatesFilter<$PrismaModel> | $Enums.ComplianceStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumComplianceStatusFilter<$PrismaModel>
    _max?: NestedEnumComplianceStatusFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumAuthProviderFilter<$PrismaModel = never> = {
    equals?: $Enums.AuthProvider | EnumAuthProviderFieldRefInput<$PrismaModel>
    in?: $Enums.AuthProvider[] | ListEnumAuthProviderFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuthProvider[] | ListEnumAuthProviderFieldRefInput<$PrismaModel>
    not?: NestedEnumAuthProviderFilter<$PrismaModel> | $Enums.AuthProvider
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedEnumAuthProviderWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AuthProvider | EnumAuthProviderFieldRefInput<$PrismaModel>
    in?: $Enums.AuthProvider[] | ListEnumAuthProviderFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuthProvider[] | ListEnumAuthProviderFieldRefInput<$PrismaModel>
    not?: NestedEnumAuthProviderWithAggregatesFilter<$PrismaModel> | $Enums.AuthProvider
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAuthProviderFilter<$PrismaModel>
    _max?: NestedEnumAuthProviderFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumPaymentMethodTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethodType | EnumPaymentMethodTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethodType[] | ListEnumPaymentMethodTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethodType[] | ListEnumPaymentMethodTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodTypeFilter<$PrismaModel> | $Enums.PaymentMethodType
  }

  export type NestedEnumPaymentMethodTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethodType | EnumPaymentMethodTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethodType[] | ListEnumPaymentMethodTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethodType[] | ListEnumPaymentMethodTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodTypeWithAggregatesFilter<$PrismaModel> | $Enums.PaymentMethodType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentMethodTypeFilter<$PrismaModel>
    _max?: NestedEnumPaymentMethodTypeFilter<$PrismaModel>
  }

  export type NestedEnumSubscriptionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionStatus | EnumSubscriptionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionStatus[] | ListEnumSubscriptionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SubscriptionStatus[] | ListEnumSubscriptionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSubscriptionStatusFilter<$PrismaModel> | $Enums.SubscriptionStatus
  }

  export type NestedEnumSubscriptionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionStatus | EnumSubscriptionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionStatus[] | ListEnumSubscriptionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SubscriptionStatus[] | ListEnumSubscriptionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSubscriptionStatusWithAggregatesFilter<$PrismaModel> | $Enums.SubscriptionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSubscriptionStatusFilter<$PrismaModel>
    _max?: NestedEnumSubscriptionStatusFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedEnumWalletTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.WalletType | EnumWalletTypeFieldRefInput<$PrismaModel>
    in?: $Enums.WalletType[] | ListEnumWalletTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.WalletType[] | ListEnumWalletTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumWalletTypeFilter<$PrismaModel> | $Enums.WalletType
  }

  export type NestedEnumWalletTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.WalletType | EnumWalletTypeFieldRefInput<$PrismaModel>
    in?: $Enums.WalletType[] | ListEnumWalletTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.WalletType[] | ListEnumWalletTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumWalletTypeWithAggregatesFilter<$PrismaModel> | $Enums.WalletType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumWalletTypeFilter<$PrismaModel>
    _max?: NestedEnumWalletTypeFilter<$PrismaModel>
  }

  export type NestedEnumBlockchainTxStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.BlockchainTxStatus | EnumBlockchainTxStatusFieldRefInput<$PrismaModel>
    in?: $Enums.BlockchainTxStatus[] | ListEnumBlockchainTxStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.BlockchainTxStatus[] | ListEnumBlockchainTxStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumBlockchainTxStatusFilter<$PrismaModel> | $Enums.BlockchainTxStatus
  }

  export type NestedEnumBlockchainTxStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BlockchainTxStatus | EnumBlockchainTxStatusFieldRefInput<$PrismaModel>
    in?: $Enums.BlockchainTxStatus[] | ListEnumBlockchainTxStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.BlockchainTxStatus[] | ListEnumBlockchainTxStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumBlockchainTxStatusWithAggregatesFilter<$PrismaModel> | $Enums.BlockchainTxStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBlockchainTxStatusFilter<$PrismaModel>
    _max?: NestedEnumBlockchainTxStatusFilter<$PrismaModel>
  }

  export type NestedEnumProductTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductType | EnumProductTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProductType[] | ListEnumProductTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductType[] | ListEnumProductTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProductTypeFilter<$PrismaModel> | $Enums.ProductType
  }

  export type NestedEnumProductTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductType | EnumProductTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProductType[] | ListEnumProductTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductType[] | ListEnumProductTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProductTypeWithAggregatesFilter<$PrismaModel> | $Enums.ProductType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProductTypeFilter<$PrismaModel>
    _max?: NestedEnumProductTypeFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedEnumPriceTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.PriceType | EnumPriceTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PriceType[] | ListEnumPriceTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PriceType[] | ListEnumPriceTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPriceTypeFilter<$PrismaModel> | $Enums.PriceType
  }

  export type NestedEnumBillingIntervalNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.BillingInterval | EnumBillingIntervalFieldRefInput<$PrismaModel> | null
    in?: $Enums.BillingInterval[] | ListEnumBillingIntervalFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.BillingInterval[] | ListEnumBillingIntervalFieldRefInput<$PrismaModel> | null
    not?: NestedEnumBillingIntervalNullableFilter<$PrismaModel> | $Enums.BillingInterval | null
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedEnumPriceTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PriceType | EnumPriceTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PriceType[] | ListEnumPriceTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PriceType[] | ListEnumPriceTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPriceTypeWithAggregatesFilter<$PrismaModel> | $Enums.PriceType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPriceTypeFilter<$PrismaModel>
    _max?: NestedEnumPriceTypeFilter<$PrismaModel>
  }

  export type NestedEnumBillingIntervalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BillingInterval | EnumBillingIntervalFieldRefInput<$PrismaModel> | null
    in?: $Enums.BillingInterval[] | ListEnumBillingIntervalFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.BillingInterval[] | ListEnumBillingIntervalFieldRefInput<$PrismaModel> | null
    not?: NestedEnumBillingIntervalNullableWithAggregatesFilter<$PrismaModel> | $Enums.BillingInterval | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumBillingIntervalNullableFilter<$PrismaModel>
    _max?: NestedEnumBillingIntervalNullableFilter<$PrismaModel>
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedEnumPaymentLinkStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentLinkStatus | EnumPaymentLinkStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentLinkStatus[] | ListEnumPaymentLinkStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentLinkStatus[] | ListEnumPaymentLinkStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentLinkStatusFilter<$PrismaModel> | $Enums.PaymentLinkStatus
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedEnumPaymentLinkStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentLinkStatus | EnumPaymentLinkStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentLinkStatus[] | ListEnumPaymentLinkStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentLinkStatus[] | ListEnumPaymentLinkStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentLinkStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentLinkStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentLinkStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentLinkStatusFilter<$PrismaModel>
  }

  export type NestedEnumPaymentOrderStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentOrderStatus | EnumPaymentOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentOrderStatus[] | ListEnumPaymentOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentOrderStatus[] | ListEnumPaymentOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentOrderStatusFilter<$PrismaModel> | $Enums.PaymentOrderStatus
  }

  export type NestedEnumKycStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.KycStatus | EnumKycStatusFieldRefInput<$PrismaModel>
    in?: $Enums.KycStatus[] | ListEnumKycStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.KycStatus[] | ListEnumKycStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumKycStatusFilter<$PrismaModel> | $Enums.KycStatus
  }

  export type NestedEnumPaymentOrderStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentOrderStatus | EnumPaymentOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentOrderStatus[] | ListEnumPaymentOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentOrderStatus[] | ListEnumPaymentOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentOrderStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentOrderStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentOrderStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentOrderStatusFilter<$PrismaModel>
  }

  export type NestedEnumKycStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.KycStatus | EnumKycStatusFieldRefInput<$PrismaModel>
    in?: $Enums.KycStatus[] | ListEnumKycStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.KycStatus[] | ListEnumKycStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumKycStatusWithAggregatesFilter<$PrismaModel> | $Enums.KycStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumKycStatusFilter<$PrismaModel>
    _max?: NestedEnumKycStatusFilter<$PrismaModel>
  }

  export type NestedEnumProviderTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ProviderType | EnumProviderTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProviderType[] | ListEnumProviderTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProviderType[] | ListEnumProviderTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProviderTypeFilter<$PrismaModel> | $Enums.ProviderType
  }

  export type NestedEnumProviderHealthFilter<$PrismaModel = never> = {
    equals?: $Enums.ProviderHealth | EnumProviderHealthFieldRefInput<$PrismaModel>
    in?: $Enums.ProviderHealth[] | ListEnumProviderHealthFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProviderHealth[] | ListEnumProviderHealthFieldRefInput<$PrismaModel>
    not?: NestedEnumProviderHealthFilter<$PrismaModel> | $Enums.ProviderHealth
  }

  export type NestedEnumProviderTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProviderType | EnumProviderTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProviderType[] | ListEnumProviderTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProviderType[] | ListEnumProviderTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProviderTypeWithAggregatesFilter<$PrismaModel> | $Enums.ProviderType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProviderTypeFilter<$PrismaModel>
    _max?: NestedEnumProviderTypeFilter<$PrismaModel>
  }

  export type NestedEnumProviderHealthWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProviderHealth | EnumProviderHealthFieldRefInput<$PrismaModel>
    in?: $Enums.ProviderHealth[] | ListEnumProviderHealthFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProviderHealth[] | ListEnumProviderHealthFieldRefInput<$PrismaModel>
    not?: NestedEnumProviderHealthWithAggregatesFilter<$PrismaModel> | $Enums.ProviderHealth
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProviderHealthFilter<$PrismaModel>
    _max?: NestedEnumProviderHealthFilter<$PrismaModel>
  }

  export type NestedEnumEnvironmentFilter<$PrismaModel = never> = {
    equals?: $Enums.Environment | EnumEnvironmentFieldRefInput<$PrismaModel>
    in?: $Enums.Environment[] | ListEnumEnvironmentFieldRefInput<$PrismaModel>
    notIn?: $Enums.Environment[] | ListEnumEnvironmentFieldRefInput<$PrismaModel>
    not?: NestedEnumEnvironmentFilter<$PrismaModel> | $Enums.Environment
  }

  export type NestedEnumEnvironmentWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Environment | EnumEnvironmentFieldRefInput<$PrismaModel>
    in?: $Enums.Environment[] | ListEnumEnvironmentFieldRefInput<$PrismaModel>
    notIn?: $Enums.Environment[] | ListEnumEnvironmentFieldRefInput<$PrismaModel>
    not?: NestedEnumEnvironmentWithAggregatesFilter<$PrismaModel> | $Enums.Environment
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEnvironmentFilter<$PrismaModel>
    _max?: NestedEnumEnvironmentFilter<$PrismaModel>
  }

  export type NestedEnumProviderTxTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ProviderTxType | EnumProviderTxTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProviderTxType[] | ListEnumProviderTxTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProviderTxType[] | ListEnumProviderTxTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProviderTxTypeFilter<$PrismaModel> | $Enums.ProviderTxType
  }

  export type NestedEnumProviderTxTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProviderTxType | EnumProviderTxTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProviderTxType[] | ListEnumProviderTxTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProviderTxType[] | ListEnumProviderTxTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProviderTxTypeWithAggregatesFilter<$PrismaModel> | $Enums.ProviderTxType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProviderTxTypeFilter<$PrismaModel>
    _max?: NestedEnumProviderTxTypeFilter<$PrismaModel>
  }

  export type NestedEnumAgentTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AgentType | EnumAgentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AgentType[] | ListEnumAgentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AgentType[] | ListEnumAgentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAgentTypeFilter<$PrismaModel> | $Enums.AgentType
  }

  export type NestedEnumAgentTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AgentType | EnumAgentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AgentType[] | ListEnumAgentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AgentType[] | ListEnumAgentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAgentTypeWithAggregatesFilter<$PrismaModel> | $Enums.AgentType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAgentTypeFilter<$PrismaModel>
    _max?: NestedEnumAgentTypeFilter<$PrismaModel>
  }

  export type NestedEnumInteractionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.InteractionType | EnumInteractionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.InteractionType[] | ListEnumInteractionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.InteractionType[] | ListEnumInteractionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumInteractionTypeFilter<$PrismaModel> | $Enums.InteractionType
  }

  export type NestedEnumInteractionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.InteractionType | EnumInteractionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.InteractionType[] | ListEnumInteractionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.InteractionType[] | ListEnumInteractionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumInteractionTypeWithAggregatesFilter<$PrismaModel> | $Enums.InteractionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumInteractionTypeFilter<$PrismaModel>
    _max?: NestedEnumInteractionTypeFilter<$PrismaModel>
  }

  export type NestedEnumManualStepTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ManualStepType | EnumManualStepTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ManualStepType[] | ListEnumManualStepTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ManualStepType[] | ListEnumManualStepTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumManualStepTypeFilter<$PrismaModel> | $Enums.ManualStepType
  }

  export type NestedEnumPriorityFilter<$PrismaModel = never> = {
    equals?: $Enums.Priority | EnumPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.Priority[] | ListEnumPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.Priority[] | ListEnumPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumPriorityFilter<$PrismaModel> | $Enums.Priority
  }

  export type NestedEnumManualStepStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ManualStepStatus | EnumManualStepStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ManualStepStatus[] | ListEnumManualStepStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ManualStepStatus[] | ListEnumManualStepStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumManualStepStatusFilter<$PrismaModel> | $Enums.ManualStepStatus
  }

  export type NestedEnumManualStepTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ManualStepType | EnumManualStepTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ManualStepType[] | ListEnumManualStepTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ManualStepType[] | ListEnumManualStepTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumManualStepTypeWithAggregatesFilter<$PrismaModel> | $Enums.ManualStepType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumManualStepTypeFilter<$PrismaModel>
    _max?: NestedEnumManualStepTypeFilter<$PrismaModel>
  }

  export type NestedEnumPriorityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Priority | EnumPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.Priority[] | ListEnumPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.Priority[] | ListEnumPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumPriorityWithAggregatesFilter<$PrismaModel> | $Enums.Priority
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPriorityFilter<$PrismaModel>
    _max?: NestedEnumPriorityFilter<$PrismaModel>
  }

  export type NestedEnumManualStepStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ManualStepStatus | EnumManualStepStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ManualStepStatus[] | ListEnumManualStepStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ManualStepStatus[] | ListEnumManualStepStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumManualStepStatusWithAggregatesFilter<$PrismaModel> | $Enums.ManualStepStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumManualStepStatusFilter<$PrismaModel>
    _max?: NestedEnumManualStepStatusFilter<$PrismaModel>
  }

  export type NestedBigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type NestedBigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type NestedEnumUserRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleFilter<$PrismaModel> | $Enums.UserRole
  }

  export type NestedEnumUserRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleWithAggregatesFilter<$PrismaModel> | $Enums.UserRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserRoleFilter<$PrismaModel>
    _max?: NestedEnumUserRoleFilter<$PrismaModel>
  }

  export type OrganizationUserCreateWithoutOrganizationInput = {
    id?: string
    role: $Enums.UserRole
    permissions?: OrganizationUserCreatepermissionsInput | string[]
    invitedBy?: string | null
    invitedAt?: Date | string
    acceptedAt?: Date | string | null
    isActive?: boolean
    user: UserCreateNestedOneWithoutOrganizationsInput
  }

  export type OrganizationUserUncheckedCreateWithoutOrganizationInput = {
    id?: string
    userId: string
    role: $Enums.UserRole
    permissions?: OrganizationUserCreatepermissionsInput | string[]
    invitedBy?: string | null
    invitedAt?: Date | string
    acceptedAt?: Date | string | null
    isActive?: boolean
  }

  export type OrganizationUserCreateOrConnectWithoutOrganizationInput = {
    where: OrganizationUserWhereUniqueInput
    create: XOR<OrganizationUserCreateWithoutOrganizationInput, OrganizationUserUncheckedCreateWithoutOrganizationInput>
  }

  export type OrganizationUserCreateManyOrganizationInputEnvelope = {
    data: OrganizationUserCreateManyOrganizationInput | OrganizationUserCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type CustomerCreateWithoutOrganizationInput = {
    id?: string
    email: string
    name?: string | null
    phone?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    walletAddress?: string | null
    preferredChainId?: number | null
    isActive?: boolean
    emailVerified?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    paymentOrders?: PaymentOrderCreateNestedManyWithoutCustomerInput
    paymentMethods?: CustomerPaymentMethodCreateNestedManyWithoutCustomerInput
    subscriptions?: SubscriptionCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateWithoutOrganizationInput = {
    id?: string
    email: string
    name?: string | null
    phone?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    walletAddress?: string | null
    preferredChainId?: number | null
    isActive?: boolean
    emailVerified?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    paymentOrders?: PaymentOrderUncheckedCreateNestedManyWithoutCustomerInput
    paymentMethods?: CustomerPaymentMethodUncheckedCreateNestedManyWithoutCustomerInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerCreateOrConnectWithoutOrganizationInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutOrganizationInput, CustomerUncheckedCreateWithoutOrganizationInput>
  }

  export type CustomerCreateManyOrganizationInputEnvelope = {
    data: CustomerCreateManyOrganizationInput | CustomerCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutOrganizationInput = {
    id?: string
    name: string
    description?: string | null
    type?: $Enums.ProductType
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    images?: ProductCreateimagesInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    prices?: PriceCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutOrganizationInput = {
    id?: string
    name: string
    description?: string | null
    type?: $Enums.ProductType
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    images?: ProductCreateimagesInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    prices?: PriceUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutOrganizationInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutOrganizationInput, ProductUncheckedCreateWithoutOrganizationInput>
  }

  export type ProductCreateManyOrganizationInputEnvelope = {
    data: ProductCreateManyOrganizationInput | ProductCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type WalletCreateWithoutOrganizationInput = {
    id?: string
    address: string
    chainId: number
    type?: $Enums.WalletType
    smartWalletFactory?: string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    allowlist?: boolean
    blocklist?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user?: UserCreateNestedOneWithoutOwnedWalletsInput
    primaryForUsers?: UserCreateNestedManyWithoutPrimaryWalletInput
    agent?: AgentCreateNestedOneWithoutAgentWalletInput
    transactions?: BlockchainTransactionCreateNestedManyWithoutWalletInput
    gasSponsorship?: GasSponsorshipCreateNestedManyWithoutSponsorWalletInput
  }

  export type WalletUncheckedCreateWithoutOrganizationInput = {
    id?: string
    address: string
    chainId: number
    type?: $Enums.WalletType
    userId?: string | null
    smartWalletFactory?: string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    allowlist?: boolean
    blocklist?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    primaryForUsers?: UserUncheckedCreateNestedManyWithoutPrimaryWalletInput
    agent?: AgentUncheckedCreateNestedOneWithoutAgentWalletInput
    transactions?: BlockchainTransactionUncheckedCreateNestedManyWithoutWalletInput
    gasSponsorship?: GasSponsorshipUncheckedCreateNestedManyWithoutSponsorWalletInput
  }

  export type WalletCreateOrConnectWithoutOrganizationInput = {
    where: WalletWhereUniqueInput
    create: XOR<WalletCreateWithoutOrganizationInput, WalletUncheckedCreateWithoutOrganizationInput>
  }

  export type WalletCreateManyOrganizationInputEnvelope = {
    data: WalletCreateManyOrganizationInput | WalletCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type PaymentLinkCreateWithoutOrganizationInput = {
    id?: string
    title: string
    description?: string | null
    referenceId?: string | null
    shortCode: string
    qrCode?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    targetAmount?: Decimal | DecimalJsLike | number | string | null
    targetCurrency?: string | null
    smartContractAddress?: string | null
    smartContractChainId?: number | null
    tokenAddress?: string | null
    status?: $Enums.PaymentLinkStatus
    allowMultiplePayments?: boolean
    requiresKyc?: boolean
    expiresAt?: Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: UserCreateNestedOneWithoutPaymentLinksInput
    executingAgent: AgentCreateNestedOneWithoutPaymentLinksInput
    price?: PriceCreateNestedOneWithoutPaymentLinksInput
    paymentOrders?: PaymentOrderCreateNestedManyWithoutPaymentLinkInput
  }

  export type PaymentLinkUncheckedCreateWithoutOrganizationInput = {
    id?: string
    createdById: string
    executingAgentId: string
    title: string
    description?: string | null
    referenceId?: string | null
    shortCode: string
    qrCode?: string | null
    priceId?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    targetAmount?: Decimal | DecimalJsLike | number | string | null
    targetCurrency?: string | null
    smartContractAddress?: string | null
    smartContractChainId?: number | null
    tokenAddress?: string | null
    status?: $Enums.PaymentLinkStatus
    allowMultiplePayments?: boolean
    requiresKyc?: boolean
    expiresAt?: Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    paymentOrders?: PaymentOrderUncheckedCreateNestedManyWithoutPaymentLinkInput
  }

  export type PaymentLinkCreateOrConnectWithoutOrganizationInput = {
    where: PaymentLinkWhereUniqueInput
    create: XOR<PaymentLinkCreateWithoutOrganizationInput, PaymentLinkUncheckedCreateWithoutOrganizationInput>
  }

  export type PaymentLinkCreateManyOrganizationInputEnvelope = {
    data: PaymentLinkCreateManyOrganizationInput | PaymentLinkCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type PaymentOrderCreateWithoutOrganizationInput = {
    id?: string
    orderNumber: string
    status?: $Enums.PaymentOrderStatus
    requestedAmount: Decimal | DecimalJsLike | number | string
    requestedCurrency: string
    settledAmount?: Decimal | DecimalJsLike | number | string | null
    settledCurrency?: string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: Date | string | null
    exchangeRateSource?: string | null
    platformFee?: Decimal | DecimalJsLike | number | string
    providerFee?: Decimal | DecimalJsLike | number | string
    networkFee?: Decimal | DecimalJsLike | number | string
    totalFee?: Decimal | DecimalJsLike | number | string
    customerEmail?: string | null
    customerName?: string | null
    customerWallet?: string | null
    customerIp?: string | null
    customerCountry?: string | null
    riskScore?: number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: $Enums.KycStatus
    kycVerifiedAt?: Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    failureCode?: string | null
    retryCount?: number
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    updatedAt?: Date | string
    paymentLink: PaymentLinkCreateNestedOneWithoutPaymentOrdersInput
    customer?: CustomerCreateNestedOneWithoutPaymentOrdersInput
    providerTransactions?: ProviderTransactionCreateNestedManyWithoutPaymentOrderInput
    blockchainTxs?: BlockchainTransactionCreateNestedManyWithoutPaymentOrderInput
    events?: PaymentEventCreateNestedManyWithoutPaymentOrderInput
    agentDecisions?: AgentDecisionCreateNestedManyWithoutPaymentOrderInput
    manualSteps?: ManualProcessStepCreateNestedManyWithoutPaymentOrderInput
  }

  export type PaymentOrderUncheckedCreateWithoutOrganizationInput = {
    id?: string
    paymentLinkId: string
    customerId?: string | null
    orderNumber: string
    status?: $Enums.PaymentOrderStatus
    requestedAmount: Decimal | DecimalJsLike | number | string
    requestedCurrency: string
    settledAmount?: Decimal | DecimalJsLike | number | string | null
    settledCurrency?: string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: Date | string | null
    exchangeRateSource?: string | null
    platformFee?: Decimal | DecimalJsLike | number | string
    providerFee?: Decimal | DecimalJsLike | number | string
    networkFee?: Decimal | DecimalJsLike | number | string
    totalFee?: Decimal | DecimalJsLike | number | string
    customerEmail?: string | null
    customerName?: string | null
    customerWallet?: string | null
    customerIp?: string | null
    customerCountry?: string | null
    riskScore?: number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: $Enums.KycStatus
    kycVerifiedAt?: Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    failureCode?: string | null
    retryCount?: number
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    updatedAt?: Date | string
    providerTransactions?: ProviderTransactionUncheckedCreateNestedManyWithoutPaymentOrderInput
    blockchainTxs?: BlockchainTransactionUncheckedCreateNestedManyWithoutPaymentOrderInput
    events?: PaymentEventUncheckedCreateNestedManyWithoutPaymentOrderInput
    agentDecisions?: AgentDecisionUncheckedCreateNestedManyWithoutPaymentOrderInput
    manualSteps?: ManualProcessStepUncheckedCreateNestedManyWithoutPaymentOrderInput
  }

  export type PaymentOrderCreateOrConnectWithoutOrganizationInput = {
    where: PaymentOrderWhereUniqueInput
    create: XOR<PaymentOrderCreateWithoutOrganizationInput, PaymentOrderUncheckedCreateWithoutOrganizationInput>
  }

  export type PaymentOrderCreateManyOrganizationInputEnvelope = {
    data: PaymentOrderCreateManyOrganizationInput | PaymentOrderCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type ProviderConfigCreateWithoutOrganizationInput = {
    id?: string
    environment?: $Enums.Environment
    credentials: JsonNullValueInput | InputJsonValue
    webhookSecret?: string | null
    settings?: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    provider: ProviderCreateNestedOneWithoutConfigsInput
  }

  export type ProviderConfigUncheckedCreateWithoutOrganizationInput = {
    id?: string
    providerId: string
    environment?: $Enums.Environment
    credentials: JsonNullValueInput | InputJsonValue
    webhookSecret?: string | null
    settings?: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProviderConfigCreateOrConnectWithoutOrganizationInput = {
    where: ProviderConfigWhereUniqueInput
    create: XOR<ProviderConfigCreateWithoutOrganizationInput, ProviderConfigUncheckedCreateWithoutOrganizationInput>
  }

  export type ProviderConfigCreateManyOrganizationInputEnvelope = {
    data: ProviderConfigCreateManyOrganizationInput | ProviderConfigCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type ApiKeyCreateWithoutOrganizationInput = {
    id?: string
    name: string
    keyHash: string
    prefix: string
    scopes?: ApiKeyCreatescopesInput | string[]
    rateLimit?: number | null
    isActive?: boolean
    expiresAt?: Date | string | null
    lastUsedAt?: Date | string | null
    createdAt?: Date | string
    revokedAt?: Date | string | null
  }

  export type ApiKeyUncheckedCreateWithoutOrganizationInput = {
    id?: string
    name: string
    keyHash: string
    prefix: string
    scopes?: ApiKeyCreatescopesInput | string[]
    rateLimit?: number | null
    isActive?: boolean
    expiresAt?: Date | string | null
    lastUsedAt?: Date | string | null
    createdAt?: Date | string
    revokedAt?: Date | string | null
  }

  export type ApiKeyCreateOrConnectWithoutOrganizationInput = {
    where: ApiKeyWhereUniqueInput
    create: XOR<ApiKeyCreateWithoutOrganizationInput, ApiKeyUncheckedCreateWithoutOrganizationInput>
  }

  export type ApiKeyCreateManyOrganizationInputEnvelope = {
    data: ApiKeyCreateManyOrganizationInput | ApiKeyCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type WebhookCreateWithoutOrganizationInput = {
    id?: string
    url: string
    events?: WebhookCreateeventsInput | string[]
    secret: string
    isActive?: boolean
    failureCount?: number
    lastFailureAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveries?: WebhookDeliveryCreateNestedManyWithoutWebhookInput
  }

  export type WebhookUncheckedCreateWithoutOrganizationInput = {
    id?: string
    url: string
    events?: WebhookCreateeventsInput | string[]
    secret: string
    isActive?: boolean
    failureCount?: number
    lastFailureAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deliveries?: WebhookDeliveryUncheckedCreateNestedManyWithoutWebhookInput
  }

  export type WebhookCreateOrConnectWithoutOrganizationInput = {
    where: WebhookWhereUniqueInput
    create: XOR<WebhookCreateWithoutOrganizationInput, WebhookUncheckedCreateWithoutOrganizationInput>
  }

  export type WebhookCreateManyOrganizationInputEnvelope = {
    data: WebhookCreateManyOrganizationInput | WebhookCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type AuditLogCreateWithoutOrganizationInput = {
    id?: string
    action: string
    entityType?: string | null
    entityId?: string | null
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: string | null
    userAgent?: string | null
    requestId?: string | null
    createdAt?: Date | string
    user?: UserCreateNestedOneWithoutAuditLogsInput
  }

  export type AuditLogUncheckedCreateWithoutOrganizationInput = {
    id?: string
    userId?: string | null
    action: string
    entityType?: string | null
    entityId?: string | null
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: string | null
    userAgent?: string | null
    requestId?: string | null
    createdAt?: Date | string
  }

  export type AuditLogCreateOrConnectWithoutOrganizationInput = {
    where: AuditLogWhereUniqueInput
    create: XOR<AuditLogCreateWithoutOrganizationInput, AuditLogUncheckedCreateWithoutOrganizationInput>
  }

  export type AuditLogCreateManyOrganizationInputEnvelope = {
    data: AuditLogCreateManyOrganizationInput | AuditLogCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type AgentCreateWithoutOrganizationInput = {
    id?: string
    name: string
    type: $Enums.AgentType
    version: string
    model: string
    graphDefinition: JsonNullValueInput | InputJsonValue
    tools?: AgentCreatetoolsInput | string[]
    systemPrompt?: string | null
    supportedProviders?: AgentCreatesupportedProvidersInput | string[]
    supportedChains?: AgentCreatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    totalExecutions?: number
    avgExecutionTime?: number | null
    successRate?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agentWallet?: WalletCreateNestedOneWithoutAgentInput
    paymentLinks?: PaymentLinkCreateNestedManyWithoutExecutingAgentInput
    decisions?: AgentDecisionCreateNestedManyWithoutAgentInput
    checkpoints?: AgentCheckpointCreateNestedManyWithoutAgentInput
  }

  export type AgentUncheckedCreateWithoutOrganizationInput = {
    id?: string
    name: string
    type: $Enums.AgentType
    version: string
    model: string
    agentWalletId?: string | null
    graphDefinition: JsonNullValueInput | InputJsonValue
    tools?: AgentCreatetoolsInput | string[]
    systemPrompt?: string | null
    supportedProviders?: AgentCreatesupportedProvidersInput | string[]
    supportedChains?: AgentCreatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    totalExecutions?: number
    avgExecutionTime?: number | null
    successRate?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paymentLinks?: PaymentLinkUncheckedCreateNestedManyWithoutExecutingAgentInput
    decisions?: AgentDecisionUncheckedCreateNestedManyWithoutAgentInput
    checkpoints?: AgentCheckpointUncheckedCreateNestedManyWithoutAgentInput
  }

  export type AgentCreateOrConnectWithoutOrganizationInput = {
    where: AgentWhereUniqueInput
    create: XOR<AgentCreateWithoutOrganizationInput, AgentUncheckedCreateWithoutOrganizationInput>
  }

  export type AgentCreateManyOrganizationInputEnvelope = {
    data: AgentCreateManyOrganizationInput | AgentCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type OrganizationUserUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: OrganizationUserWhereUniqueInput
    update: XOR<OrganizationUserUpdateWithoutOrganizationInput, OrganizationUserUncheckedUpdateWithoutOrganizationInput>
    create: XOR<OrganizationUserCreateWithoutOrganizationInput, OrganizationUserUncheckedCreateWithoutOrganizationInput>
  }

  export type OrganizationUserUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: OrganizationUserWhereUniqueInput
    data: XOR<OrganizationUserUpdateWithoutOrganizationInput, OrganizationUserUncheckedUpdateWithoutOrganizationInput>
  }

  export type OrganizationUserUpdateManyWithWhereWithoutOrganizationInput = {
    where: OrganizationUserScalarWhereInput
    data: XOR<OrganizationUserUpdateManyMutationInput, OrganizationUserUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type OrganizationUserScalarWhereInput = {
    AND?: OrganizationUserScalarWhereInput | OrganizationUserScalarWhereInput[]
    OR?: OrganizationUserScalarWhereInput[]
    NOT?: OrganizationUserScalarWhereInput | OrganizationUserScalarWhereInput[]
    id?: StringFilter<"OrganizationUser"> | string
    organizationId?: StringFilter<"OrganizationUser"> | string
    userId?: StringFilter<"OrganizationUser"> | string
    role?: EnumUserRoleFilter<"OrganizationUser"> | $Enums.UserRole
    permissions?: StringNullableListFilter<"OrganizationUser">
    invitedBy?: StringNullableFilter<"OrganizationUser"> | string | null
    invitedAt?: DateTimeFilter<"OrganizationUser"> | Date | string
    acceptedAt?: DateTimeNullableFilter<"OrganizationUser"> | Date | string | null
    isActive?: BoolFilter<"OrganizationUser"> | boolean
  }

  export type CustomerUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: CustomerWhereUniqueInput
    update: XOR<CustomerUpdateWithoutOrganizationInput, CustomerUncheckedUpdateWithoutOrganizationInput>
    create: XOR<CustomerCreateWithoutOrganizationInput, CustomerUncheckedCreateWithoutOrganizationInput>
  }

  export type CustomerUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: CustomerWhereUniqueInput
    data: XOR<CustomerUpdateWithoutOrganizationInput, CustomerUncheckedUpdateWithoutOrganizationInput>
  }

  export type CustomerUpdateManyWithWhereWithoutOrganizationInput = {
    where: CustomerScalarWhereInput
    data: XOR<CustomerUpdateManyMutationInput, CustomerUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type CustomerScalarWhereInput = {
    AND?: CustomerScalarWhereInput | CustomerScalarWhereInput[]
    OR?: CustomerScalarWhereInput[]
    NOT?: CustomerScalarWhereInput | CustomerScalarWhereInput[]
    id?: StringFilter<"Customer"> | string
    organizationId?: StringFilter<"Customer"> | string
    email?: StringFilter<"Customer"> | string
    name?: StringNullableFilter<"Customer"> | string | null
    phone?: StringNullableFilter<"Customer"> | string | null
    billingAddress?: JsonNullableFilter<"Customer">
    shippingAddress?: JsonNullableFilter<"Customer">
    walletAddress?: StringNullableFilter<"Customer"> | string | null
    preferredChainId?: IntNullableFilter<"Customer"> | number | null
    isActive?: BoolFilter<"Customer"> | boolean
    emailVerified?: BoolFilter<"Customer"> | boolean
    metadata?: JsonNullableFilter<"Customer">
    createdAt?: DateTimeFilter<"Customer"> | Date | string
    updatedAt?: DateTimeFilter<"Customer"> | Date | string
  }

  export type ProductUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutOrganizationInput, ProductUncheckedUpdateWithoutOrganizationInput>
    create: XOR<ProductCreateWithoutOrganizationInput, ProductUncheckedCreateWithoutOrganizationInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutOrganizationInput, ProductUncheckedUpdateWithoutOrganizationInput>
  }

  export type ProductUpdateManyWithWhereWithoutOrganizationInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type ProductScalarWhereInput = {
    AND?: ProductScalarWhereInput | ProductScalarWhereInput[]
    OR?: ProductScalarWhereInput[]
    NOT?: ProductScalarWhereInput | ProductScalarWhereInput[]
    id?: StringFilter<"Product"> | string
    organizationId?: StringFilter<"Product"> | string
    name?: StringFilter<"Product"> | string
    description?: StringNullableFilter<"Product"> | string | null
    type?: EnumProductTypeFilter<"Product"> | $Enums.ProductType
    isActive?: BoolFilter<"Product"> | boolean
    metadata?: JsonNullableFilter<"Product">
    images?: StringNullableListFilter<"Product">
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
  }

  export type WalletUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: WalletWhereUniqueInput
    update: XOR<WalletUpdateWithoutOrganizationInput, WalletUncheckedUpdateWithoutOrganizationInput>
    create: XOR<WalletCreateWithoutOrganizationInput, WalletUncheckedCreateWithoutOrganizationInput>
  }

  export type WalletUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: WalletWhereUniqueInput
    data: XOR<WalletUpdateWithoutOrganizationInput, WalletUncheckedUpdateWithoutOrganizationInput>
  }

  export type WalletUpdateManyWithWhereWithoutOrganizationInput = {
    where: WalletScalarWhereInput
    data: XOR<WalletUpdateManyMutationInput, WalletUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type WalletScalarWhereInput = {
    AND?: WalletScalarWhereInput | WalletScalarWhereInput[]
    OR?: WalletScalarWhereInput[]
    NOT?: WalletScalarWhereInput | WalletScalarWhereInput[]
    id?: StringFilter<"Wallet"> | string
    address?: StringFilter<"Wallet"> | string
    chainId?: IntFilter<"Wallet"> | number
    type?: EnumWalletTypeFilter<"Wallet"> | $Enums.WalletType
    userId?: StringNullableFilter<"Wallet"> | string | null
    organizationId?: StringNullableFilter<"Wallet"> | string | null
    smartWalletFactory?: StringNullableFilter<"Wallet"> | string | null
    smartWalletConfig?: JsonNullableFilter<"Wallet">
    isActive?: BoolFilter<"Wallet"> | boolean
    allowlist?: BoolFilter<"Wallet"> | boolean
    blocklist?: BoolFilter<"Wallet"> | boolean
    createdAt?: DateTimeFilter<"Wallet"> | Date | string
    updatedAt?: DateTimeFilter<"Wallet"> | Date | string
  }

  export type PaymentLinkUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: PaymentLinkWhereUniqueInput
    update: XOR<PaymentLinkUpdateWithoutOrganizationInput, PaymentLinkUncheckedUpdateWithoutOrganizationInput>
    create: XOR<PaymentLinkCreateWithoutOrganizationInput, PaymentLinkUncheckedCreateWithoutOrganizationInput>
  }

  export type PaymentLinkUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: PaymentLinkWhereUniqueInput
    data: XOR<PaymentLinkUpdateWithoutOrganizationInput, PaymentLinkUncheckedUpdateWithoutOrganizationInput>
  }

  export type PaymentLinkUpdateManyWithWhereWithoutOrganizationInput = {
    where: PaymentLinkScalarWhereInput
    data: XOR<PaymentLinkUpdateManyMutationInput, PaymentLinkUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type PaymentLinkScalarWhereInput = {
    AND?: PaymentLinkScalarWhereInput | PaymentLinkScalarWhereInput[]
    OR?: PaymentLinkScalarWhereInput[]
    NOT?: PaymentLinkScalarWhereInput | PaymentLinkScalarWhereInput[]
    id?: StringFilter<"PaymentLink"> | string
    organizationId?: StringFilter<"PaymentLink"> | string
    createdById?: StringFilter<"PaymentLink"> | string
    executingAgentId?: StringFilter<"PaymentLink"> | string
    title?: StringFilter<"PaymentLink"> | string
    description?: StringNullableFilter<"PaymentLink"> | string | null
    referenceId?: StringNullableFilter<"PaymentLink"> | string | null
    shortCode?: StringFilter<"PaymentLink"> | string
    qrCode?: StringNullableFilter<"PaymentLink"> | string | null
    priceId?: StringNullableFilter<"PaymentLink"> | string | null
    amount?: DecimalFilter<"PaymentLink"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"PaymentLink"> | string
    targetAmount?: DecimalNullableFilter<"PaymentLink"> | Decimal | DecimalJsLike | number | string | null
    targetCurrency?: StringNullableFilter<"PaymentLink"> | string | null
    smartContractAddress?: StringNullableFilter<"PaymentLink"> | string | null
    smartContractChainId?: IntNullableFilter<"PaymentLink"> | number | null
    tokenAddress?: StringNullableFilter<"PaymentLink"> | string | null
    status?: EnumPaymentLinkStatusFilter<"PaymentLink"> | $Enums.PaymentLinkStatus
    allowMultiplePayments?: BoolFilter<"PaymentLink"> | boolean
    requiresKyc?: BoolFilter<"PaymentLink"> | boolean
    expiresAt?: DateTimeNullableFilter<"PaymentLink"> | Date | string | null
    redirectUrls?: JsonNullableFilter<"PaymentLink">
    metadata?: JsonNullableFilter<"PaymentLink">
    theme?: JsonNullableFilter<"PaymentLink">
    createdAt?: DateTimeFilter<"PaymentLink"> | Date | string
    updatedAt?: DateTimeFilter<"PaymentLink"> | Date | string
  }

  export type PaymentOrderUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: PaymentOrderWhereUniqueInput
    update: XOR<PaymentOrderUpdateWithoutOrganizationInput, PaymentOrderUncheckedUpdateWithoutOrganizationInput>
    create: XOR<PaymentOrderCreateWithoutOrganizationInput, PaymentOrderUncheckedCreateWithoutOrganizationInput>
  }

  export type PaymentOrderUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: PaymentOrderWhereUniqueInput
    data: XOR<PaymentOrderUpdateWithoutOrganizationInput, PaymentOrderUncheckedUpdateWithoutOrganizationInput>
  }

  export type PaymentOrderUpdateManyWithWhereWithoutOrganizationInput = {
    where: PaymentOrderScalarWhereInput
    data: XOR<PaymentOrderUpdateManyMutationInput, PaymentOrderUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type PaymentOrderScalarWhereInput = {
    AND?: PaymentOrderScalarWhereInput | PaymentOrderScalarWhereInput[]
    OR?: PaymentOrderScalarWhereInput[]
    NOT?: PaymentOrderScalarWhereInput | PaymentOrderScalarWhereInput[]
    id?: StringFilter<"PaymentOrder"> | string
    organizationId?: StringFilter<"PaymentOrder"> | string
    paymentLinkId?: StringFilter<"PaymentOrder"> | string
    customerId?: StringNullableFilter<"PaymentOrder"> | string | null
    orderNumber?: StringFilter<"PaymentOrder"> | string
    status?: EnumPaymentOrderStatusFilter<"PaymentOrder"> | $Enums.PaymentOrderStatus
    requestedAmount?: DecimalFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string
    requestedCurrency?: StringFilter<"PaymentOrder"> | string
    settledAmount?: DecimalNullableFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string | null
    settledCurrency?: StringNullableFilter<"PaymentOrder"> | string | null
    exchangeRate?: DecimalNullableFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: DateTimeNullableFilter<"PaymentOrder"> | Date | string | null
    exchangeRateSource?: StringNullableFilter<"PaymentOrder"> | string | null
    platformFee?: DecimalFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string
    providerFee?: DecimalFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string
    networkFee?: DecimalFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string
    totalFee?: DecimalFilter<"PaymentOrder"> | Decimal | DecimalJsLike | number | string
    customerEmail?: StringNullableFilter<"PaymentOrder"> | string | null
    customerName?: StringNullableFilter<"PaymentOrder"> | string | null
    customerWallet?: StringNullableFilter<"PaymentOrder"> | string | null
    customerIp?: StringNullableFilter<"PaymentOrder"> | string | null
    customerCountry?: StringNullableFilter<"PaymentOrder"> | string | null
    riskScore?: IntNullableFilter<"PaymentOrder"> | number | null
    riskFactors?: JsonNullableFilter<"PaymentOrder">
    kycStatus?: EnumKycStatusFilter<"PaymentOrder"> | $Enums.KycStatus
    kycVerifiedAt?: DateTimeNullableFilter<"PaymentOrder"> | Date | string | null
    selectedRoute?: JsonNullableFilter<"PaymentOrder">
    failureReason?: StringNullableFilter<"PaymentOrder"> | string | null
    failureCode?: StringNullableFilter<"PaymentOrder"> | string | null
    retryCount?: IntFilter<"PaymentOrder"> | number
    createdAt?: DateTimeFilter<"PaymentOrder"> | Date | string
    startedAt?: DateTimeNullableFilter<"PaymentOrder"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"PaymentOrder"> | Date | string | null
    updatedAt?: DateTimeFilter<"PaymentOrder"> | Date | string
  }

  export type ProviderConfigUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: ProviderConfigWhereUniqueInput
    update: XOR<ProviderConfigUpdateWithoutOrganizationInput, ProviderConfigUncheckedUpdateWithoutOrganizationInput>
    create: XOR<ProviderConfigCreateWithoutOrganizationInput, ProviderConfigUncheckedCreateWithoutOrganizationInput>
  }

  export type ProviderConfigUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: ProviderConfigWhereUniqueInput
    data: XOR<ProviderConfigUpdateWithoutOrganizationInput, ProviderConfigUncheckedUpdateWithoutOrganizationInput>
  }

  export type ProviderConfigUpdateManyWithWhereWithoutOrganizationInput = {
    where: ProviderConfigScalarWhereInput
    data: XOR<ProviderConfigUpdateManyMutationInput, ProviderConfigUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type ProviderConfigScalarWhereInput = {
    AND?: ProviderConfigScalarWhereInput | ProviderConfigScalarWhereInput[]
    OR?: ProviderConfigScalarWhereInput[]
    NOT?: ProviderConfigScalarWhereInput | ProviderConfigScalarWhereInput[]
    id?: StringFilter<"ProviderConfig"> | string
    organizationId?: StringFilter<"ProviderConfig"> | string
    providerId?: StringFilter<"ProviderConfig"> | string
    environment?: EnumEnvironmentFilter<"ProviderConfig"> | $Enums.Environment
    credentials?: JsonFilter<"ProviderConfig">
    webhookSecret?: StringNullableFilter<"ProviderConfig"> | string | null
    settings?: JsonFilter<"ProviderConfig">
    isActive?: BoolFilter<"ProviderConfig"> | boolean
    createdAt?: DateTimeFilter<"ProviderConfig"> | Date | string
    updatedAt?: DateTimeFilter<"ProviderConfig"> | Date | string
  }

  export type ApiKeyUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: ApiKeyWhereUniqueInput
    update: XOR<ApiKeyUpdateWithoutOrganizationInput, ApiKeyUncheckedUpdateWithoutOrganizationInput>
    create: XOR<ApiKeyCreateWithoutOrganizationInput, ApiKeyUncheckedCreateWithoutOrganizationInput>
  }

  export type ApiKeyUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: ApiKeyWhereUniqueInput
    data: XOR<ApiKeyUpdateWithoutOrganizationInput, ApiKeyUncheckedUpdateWithoutOrganizationInput>
  }

  export type ApiKeyUpdateManyWithWhereWithoutOrganizationInput = {
    where: ApiKeyScalarWhereInput
    data: XOR<ApiKeyUpdateManyMutationInput, ApiKeyUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type ApiKeyScalarWhereInput = {
    AND?: ApiKeyScalarWhereInput | ApiKeyScalarWhereInput[]
    OR?: ApiKeyScalarWhereInput[]
    NOT?: ApiKeyScalarWhereInput | ApiKeyScalarWhereInput[]
    id?: StringFilter<"ApiKey"> | string
    organizationId?: StringFilter<"ApiKey"> | string
    name?: StringFilter<"ApiKey"> | string
    keyHash?: StringFilter<"ApiKey"> | string
    prefix?: StringFilter<"ApiKey"> | string
    scopes?: StringNullableListFilter<"ApiKey">
    rateLimit?: IntNullableFilter<"ApiKey"> | number | null
    isActive?: BoolFilter<"ApiKey"> | boolean
    expiresAt?: DateTimeNullableFilter<"ApiKey"> | Date | string | null
    lastUsedAt?: DateTimeNullableFilter<"ApiKey"> | Date | string | null
    createdAt?: DateTimeFilter<"ApiKey"> | Date | string
    revokedAt?: DateTimeNullableFilter<"ApiKey"> | Date | string | null
  }

  export type WebhookUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: WebhookWhereUniqueInput
    update: XOR<WebhookUpdateWithoutOrganizationInput, WebhookUncheckedUpdateWithoutOrganizationInput>
    create: XOR<WebhookCreateWithoutOrganizationInput, WebhookUncheckedCreateWithoutOrganizationInput>
  }

  export type WebhookUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: WebhookWhereUniqueInput
    data: XOR<WebhookUpdateWithoutOrganizationInput, WebhookUncheckedUpdateWithoutOrganizationInput>
  }

  export type WebhookUpdateManyWithWhereWithoutOrganizationInput = {
    where: WebhookScalarWhereInput
    data: XOR<WebhookUpdateManyMutationInput, WebhookUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type WebhookScalarWhereInput = {
    AND?: WebhookScalarWhereInput | WebhookScalarWhereInput[]
    OR?: WebhookScalarWhereInput[]
    NOT?: WebhookScalarWhereInput | WebhookScalarWhereInput[]
    id?: StringFilter<"Webhook"> | string
    organizationId?: StringFilter<"Webhook"> | string
    url?: StringFilter<"Webhook"> | string
    events?: StringNullableListFilter<"Webhook">
    secret?: StringFilter<"Webhook"> | string
    isActive?: BoolFilter<"Webhook"> | boolean
    failureCount?: IntFilter<"Webhook"> | number
    lastFailureAt?: DateTimeNullableFilter<"Webhook"> | Date | string | null
    createdAt?: DateTimeFilter<"Webhook"> | Date | string
    updatedAt?: DateTimeFilter<"Webhook"> | Date | string
  }

  export type AuditLogUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: AuditLogWhereUniqueInput
    update: XOR<AuditLogUpdateWithoutOrganizationInput, AuditLogUncheckedUpdateWithoutOrganizationInput>
    create: XOR<AuditLogCreateWithoutOrganizationInput, AuditLogUncheckedCreateWithoutOrganizationInput>
  }

  export type AuditLogUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: AuditLogWhereUniqueInput
    data: XOR<AuditLogUpdateWithoutOrganizationInput, AuditLogUncheckedUpdateWithoutOrganizationInput>
  }

  export type AuditLogUpdateManyWithWhereWithoutOrganizationInput = {
    where: AuditLogScalarWhereInput
    data: XOR<AuditLogUpdateManyMutationInput, AuditLogUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type AuditLogScalarWhereInput = {
    AND?: AuditLogScalarWhereInput | AuditLogScalarWhereInput[]
    OR?: AuditLogScalarWhereInput[]
    NOT?: AuditLogScalarWhereInput | AuditLogScalarWhereInput[]
    id?: StringFilter<"AuditLog"> | string
    organizationId?: StringFilter<"AuditLog"> | string
    userId?: StringNullableFilter<"AuditLog"> | string | null
    action?: StringFilter<"AuditLog"> | string
    entityType?: StringNullableFilter<"AuditLog"> | string | null
    entityId?: StringNullableFilter<"AuditLog"> | string | null
    changes?: JsonNullableFilter<"AuditLog">
    metadata?: JsonNullableFilter<"AuditLog">
    ipAddress?: StringNullableFilter<"AuditLog"> | string | null
    userAgent?: StringNullableFilter<"AuditLog"> | string | null
    requestId?: StringNullableFilter<"AuditLog"> | string | null
    createdAt?: DateTimeFilter<"AuditLog"> | Date | string
  }

  export type AgentUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: AgentWhereUniqueInput
    update: XOR<AgentUpdateWithoutOrganizationInput, AgentUncheckedUpdateWithoutOrganizationInput>
    create: XOR<AgentCreateWithoutOrganizationInput, AgentUncheckedCreateWithoutOrganizationInput>
  }

  export type AgentUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: AgentWhereUniqueInput
    data: XOR<AgentUpdateWithoutOrganizationInput, AgentUncheckedUpdateWithoutOrganizationInput>
  }

  export type AgentUpdateManyWithWhereWithoutOrganizationInput = {
    where: AgentScalarWhereInput
    data: XOR<AgentUpdateManyMutationInput, AgentUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type AgentScalarWhereInput = {
    AND?: AgentScalarWhereInput | AgentScalarWhereInput[]
    OR?: AgentScalarWhereInput[]
    NOT?: AgentScalarWhereInput | AgentScalarWhereInput[]
    id?: StringFilter<"Agent"> | string
    organizationId?: StringFilter<"Agent"> | string
    name?: StringFilter<"Agent"> | string
    type?: EnumAgentTypeFilter<"Agent"> | $Enums.AgentType
    version?: StringFilter<"Agent"> | string
    model?: StringFilter<"Agent"> | string
    agentWalletId?: StringNullableFilter<"Agent"> | string | null
    graphDefinition?: JsonFilter<"Agent">
    tools?: StringNullableListFilter<"Agent">
    systemPrompt?: StringNullableFilter<"Agent"> | string | null
    supportedProviders?: StringNullableListFilter<"Agent">
    supportedChains?: IntNullableListFilter<"Agent">
    capabilities?: JsonNullableFilter<"Agent">
    isActive?: BoolFilter<"Agent"> | boolean
    totalExecutions?: IntFilter<"Agent"> | number
    avgExecutionTime?: IntNullableFilter<"Agent"> | number | null
    successRate?: DecimalNullableFilter<"Agent"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFilter<"Agent"> | Date | string
    updatedAt?: DateTimeFilter<"Agent"> | Date | string
  }

  export type WalletCreateWithoutPrimaryForUsersInput = {
    id?: string
    address: string
    chainId: number
    type?: $Enums.WalletType
    smartWalletFactory?: string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    allowlist?: boolean
    blocklist?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user?: UserCreateNestedOneWithoutOwnedWalletsInput
    organization?: OrganizationCreateNestedOneWithoutWalletsInput
    agent?: AgentCreateNestedOneWithoutAgentWalletInput
    transactions?: BlockchainTransactionCreateNestedManyWithoutWalletInput
    gasSponsorship?: GasSponsorshipCreateNestedManyWithoutSponsorWalletInput
  }

  export type WalletUncheckedCreateWithoutPrimaryForUsersInput = {
    id?: string
    address: string
    chainId: number
    type?: $Enums.WalletType
    userId?: string | null
    organizationId?: string | null
    smartWalletFactory?: string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    allowlist?: boolean
    blocklist?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    agent?: AgentUncheckedCreateNestedOneWithoutAgentWalletInput
    transactions?: BlockchainTransactionUncheckedCreateNestedManyWithoutWalletInput
    gasSponsorship?: GasSponsorshipUncheckedCreateNestedManyWithoutSponsorWalletInput
  }

  export type WalletCreateOrConnectWithoutPrimaryForUsersInput = {
    where: WalletWhereUniqueInput
    create: XOR<WalletCreateWithoutPrimaryForUsersInput, WalletUncheckedCreateWithoutPrimaryForUsersInput>
  }

  export type OrganizationUserCreateWithoutUserInput = {
    id?: string
    role: $Enums.UserRole
    permissions?: OrganizationUserCreatepermissionsInput | string[]
    invitedBy?: string | null
    invitedAt?: Date | string
    acceptedAt?: Date | string | null
    isActive?: boolean
    organization: OrganizationCreateNestedOneWithoutUsersInput
  }

  export type OrganizationUserUncheckedCreateWithoutUserInput = {
    id?: string
    organizationId: string
    role: $Enums.UserRole
    permissions?: OrganizationUserCreatepermissionsInput | string[]
    invitedBy?: string | null
    invitedAt?: Date | string
    acceptedAt?: Date | string | null
    isActive?: boolean
  }

  export type OrganizationUserCreateOrConnectWithoutUserInput = {
    where: OrganizationUserWhereUniqueInput
    create: XOR<OrganizationUserCreateWithoutUserInput, OrganizationUserUncheckedCreateWithoutUserInput>
  }

  export type OrganizationUserCreateManyUserInputEnvelope = {
    data: OrganizationUserCreateManyUserInput | OrganizationUserCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type WalletCreateWithoutUserInput = {
    id?: string
    address: string
    chainId: number
    type?: $Enums.WalletType
    smartWalletFactory?: string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    allowlist?: boolean
    blocklist?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    organization?: OrganizationCreateNestedOneWithoutWalletsInput
    primaryForUsers?: UserCreateNestedManyWithoutPrimaryWalletInput
    agent?: AgentCreateNestedOneWithoutAgentWalletInput
    transactions?: BlockchainTransactionCreateNestedManyWithoutWalletInput
    gasSponsorship?: GasSponsorshipCreateNestedManyWithoutSponsorWalletInput
  }

  export type WalletUncheckedCreateWithoutUserInput = {
    id?: string
    address: string
    chainId: number
    type?: $Enums.WalletType
    organizationId?: string | null
    smartWalletFactory?: string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    allowlist?: boolean
    blocklist?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    primaryForUsers?: UserUncheckedCreateNestedManyWithoutPrimaryWalletInput
    agent?: AgentUncheckedCreateNestedOneWithoutAgentWalletInput
    transactions?: BlockchainTransactionUncheckedCreateNestedManyWithoutWalletInput
    gasSponsorship?: GasSponsorshipUncheckedCreateNestedManyWithoutSponsorWalletInput
  }

  export type WalletCreateOrConnectWithoutUserInput = {
    where: WalletWhereUniqueInput
    create: XOR<WalletCreateWithoutUserInput, WalletUncheckedCreateWithoutUserInput>
  }

  export type WalletCreateManyUserInputEnvelope = {
    data: WalletCreateManyUserInput | WalletCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type PaymentLinkCreateWithoutCreatedByInput = {
    id?: string
    title: string
    description?: string | null
    referenceId?: string | null
    shortCode: string
    qrCode?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    targetAmount?: Decimal | DecimalJsLike | number | string | null
    targetCurrency?: string | null
    smartContractAddress?: string | null
    smartContractChainId?: number | null
    tokenAddress?: string | null
    status?: $Enums.PaymentLinkStatus
    allowMultiplePayments?: boolean
    requiresKyc?: boolean
    expiresAt?: Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutPaymentLinksInput
    executingAgent: AgentCreateNestedOneWithoutPaymentLinksInput
    price?: PriceCreateNestedOneWithoutPaymentLinksInput
    paymentOrders?: PaymentOrderCreateNestedManyWithoutPaymentLinkInput
  }

  export type PaymentLinkUncheckedCreateWithoutCreatedByInput = {
    id?: string
    organizationId: string
    executingAgentId: string
    title: string
    description?: string | null
    referenceId?: string | null
    shortCode: string
    qrCode?: string | null
    priceId?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    targetAmount?: Decimal | DecimalJsLike | number | string | null
    targetCurrency?: string | null
    smartContractAddress?: string | null
    smartContractChainId?: number | null
    tokenAddress?: string | null
    status?: $Enums.PaymentLinkStatus
    allowMultiplePayments?: boolean
    requiresKyc?: boolean
    expiresAt?: Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    paymentOrders?: PaymentOrderUncheckedCreateNestedManyWithoutPaymentLinkInput
  }

  export type PaymentLinkCreateOrConnectWithoutCreatedByInput = {
    where: PaymentLinkWhereUniqueInput
    create: XOR<PaymentLinkCreateWithoutCreatedByInput, PaymentLinkUncheckedCreateWithoutCreatedByInput>
  }

  export type PaymentLinkCreateManyCreatedByInputEnvelope = {
    data: PaymentLinkCreateManyCreatedByInput | PaymentLinkCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type AuditLogCreateWithoutUserInput = {
    id?: string
    action: string
    entityType?: string | null
    entityId?: string | null
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: string | null
    userAgent?: string | null
    requestId?: string | null
    createdAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutAuditLogsInput
  }

  export type AuditLogUncheckedCreateWithoutUserInput = {
    id?: string
    organizationId: string
    action: string
    entityType?: string | null
    entityId?: string | null
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: string | null
    userAgent?: string | null
    requestId?: string | null
    createdAt?: Date | string
  }

  export type AuditLogCreateOrConnectWithoutUserInput = {
    where: AuditLogWhereUniqueInput
    create: XOR<AuditLogCreateWithoutUserInput, AuditLogUncheckedCreateWithoutUserInput>
  }

  export type AuditLogCreateManyUserInputEnvelope = {
    data: AuditLogCreateManyUserInput | AuditLogCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AgentInteractionCreateWithoutUserInput = {
    id?: string
    type: $Enums.InteractionType
    message?: string | null
    action?: string | null
    result?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    agentDecision: AgentDecisionCreateNestedOneWithoutInteractionsInput
  }

  export type AgentInteractionUncheckedCreateWithoutUserInput = {
    id?: string
    agentDecisionId: string
    type: $Enums.InteractionType
    message?: string | null
    action?: string | null
    result?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type AgentInteractionCreateOrConnectWithoutUserInput = {
    where: AgentInteractionWhereUniqueInput
    create: XOR<AgentInteractionCreateWithoutUserInput, AgentInteractionUncheckedCreateWithoutUserInput>
  }

  export type AgentInteractionCreateManyUserInputEnvelope = {
    data: AgentInteractionCreateManyUserInput | AgentInteractionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type WalletUpsertWithoutPrimaryForUsersInput = {
    update: XOR<WalletUpdateWithoutPrimaryForUsersInput, WalletUncheckedUpdateWithoutPrimaryForUsersInput>
    create: XOR<WalletCreateWithoutPrimaryForUsersInput, WalletUncheckedCreateWithoutPrimaryForUsersInput>
    where?: WalletWhereInput
  }

  export type WalletUpdateToOneWithWhereWithoutPrimaryForUsersInput = {
    where?: WalletWhereInput
    data: XOR<WalletUpdateWithoutPrimaryForUsersInput, WalletUncheckedUpdateWithoutPrimaryForUsersInput>
  }

  export type WalletUpdateWithoutPrimaryForUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    type?: EnumWalletTypeFieldUpdateOperationsInput | $Enums.WalletType
    smartWalletFactory?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    allowlist?: BoolFieldUpdateOperationsInput | boolean
    blocklist?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneWithoutOwnedWalletsNestedInput
    organization?: OrganizationUpdateOneWithoutWalletsNestedInput
    agent?: AgentUpdateOneWithoutAgentWalletNestedInput
    transactions?: BlockchainTransactionUpdateManyWithoutWalletNestedInput
    gasSponsorship?: GasSponsorshipUpdateManyWithoutSponsorWalletNestedInput
  }

  export type WalletUncheckedUpdateWithoutPrimaryForUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    type?: EnumWalletTypeFieldUpdateOperationsInput | $Enums.WalletType
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletFactory?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    allowlist?: BoolFieldUpdateOperationsInput | boolean
    blocklist?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agent?: AgentUncheckedUpdateOneWithoutAgentWalletNestedInput
    transactions?: BlockchainTransactionUncheckedUpdateManyWithoutWalletNestedInput
    gasSponsorship?: GasSponsorshipUncheckedUpdateManyWithoutSponsorWalletNestedInput
  }

  export type OrganizationUserUpsertWithWhereUniqueWithoutUserInput = {
    where: OrganizationUserWhereUniqueInput
    update: XOR<OrganizationUserUpdateWithoutUserInput, OrganizationUserUncheckedUpdateWithoutUserInput>
    create: XOR<OrganizationUserCreateWithoutUserInput, OrganizationUserUncheckedCreateWithoutUserInput>
  }

  export type OrganizationUserUpdateWithWhereUniqueWithoutUserInput = {
    where: OrganizationUserWhereUniqueInput
    data: XOR<OrganizationUserUpdateWithoutUserInput, OrganizationUserUncheckedUpdateWithoutUserInput>
  }

  export type OrganizationUserUpdateManyWithWhereWithoutUserInput = {
    where: OrganizationUserScalarWhereInput
    data: XOR<OrganizationUserUpdateManyMutationInput, OrganizationUserUncheckedUpdateManyWithoutUserInput>
  }

  export type WalletUpsertWithWhereUniqueWithoutUserInput = {
    where: WalletWhereUniqueInput
    update: XOR<WalletUpdateWithoutUserInput, WalletUncheckedUpdateWithoutUserInput>
    create: XOR<WalletCreateWithoutUserInput, WalletUncheckedCreateWithoutUserInput>
  }

  export type WalletUpdateWithWhereUniqueWithoutUserInput = {
    where: WalletWhereUniqueInput
    data: XOR<WalletUpdateWithoutUserInput, WalletUncheckedUpdateWithoutUserInput>
  }

  export type WalletUpdateManyWithWhereWithoutUserInput = {
    where: WalletScalarWhereInput
    data: XOR<WalletUpdateManyMutationInput, WalletUncheckedUpdateManyWithoutUserInput>
  }

  export type PaymentLinkUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: PaymentLinkWhereUniqueInput
    update: XOR<PaymentLinkUpdateWithoutCreatedByInput, PaymentLinkUncheckedUpdateWithoutCreatedByInput>
    create: XOR<PaymentLinkCreateWithoutCreatedByInput, PaymentLinkUncheckedCreateWithoutCreatedByInput>
  }

  export type PaymentLinkUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: PaymentLinkWhereUniqueInput
    data: XOR<PaymentLinkUpdateWithoutCreatedByInput, PaymentLinkUncheckedUpdateWithoutCreatedByInput>
  }

  export type PaymentLinkUpdateManyWithWhereWithoutCreatedByInput = {
    where: PaymentLinkScalarWhereInput
    data: XOR<PaymentLinkUpdateManyMutationInput, PaymentLinkUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type AuditLogUpsertWithWhereUniqueWithoutUserInput = {
    where: AuditLogWhereUniqueInput
    update: XOR<AuditLogUpdateWithoutUserInput, AuditLogUncheckedUpdateWithoutUserInput>
    create: XOR<AuditLogCreateWithoutUserInput, AuditLogUncheckedCreateWithoutUserInput>
  }

  export type AuditLogUpdateWithWhereUniqueWithoutUserInput = {
    where: AuditLogWhereUniqueInput
    data: XOR<AuditLogUpdateWithoutUserInput, AuditLogUncheckedUpdateWithoutUserInput>
  }

  export type AuditLogUpdateManyWithWhereWithoutUserInput = {
    where: AuditLogScalarWhereInput
    data: XOR<AuditLogUpdateManyMutationInput, AuditLogUncheckedUpdateManyWithoutUserInput>
  }

  export type AgentInteractionUpsertWithWhereUniqueWithoutUserInput = {
    where: AgentInteractionWhereUniqueInput
    update: XOR<AgentInteractionUpdateWithoutUserInput, AgentInteractionUncheckedUpdateWithoutUserInput>
    create: XOR<AgentInteractionCreateWithoutUserInput, AgentInteractionUncheckedCreateWithoutUserInput>
  }

  export type AgentInteractionUpdateWithWhereUniqueWithoutUserInput = {
    where: AgentInteractionWhereUniqueInput
    data: XOR<AgentInteractionUpdateWithoutUserInput, AgentInteractionUncheckedUpdateWithoutUserInput>
  }

  export type AgentInteractionUpdateManyWithWhereWithoutUserInput = {
    where: AgentInteractionScalarWhereInput
    data: XOR<AgentInteractionUpdateManyMutationInput, AgentInteractionUncheckedUpdateManyWithoutUserInput>
  }

  export type AgentInteractionScalarWhereInput = {
    AND?: AgentInteractionScalarWhereInput | AgentInteractionScalarWhereInput[]
    OR?: AgentInteractionScalarWhereInput[]
    NOT?: AgentInteractionScalarWhereInput | AgentInteractionScalarWhereInput[]
    id?: StringFilter<"AgentInteraction"> | string
    agentDecisionId?: StringFilter<"AgentInteraction"> | string
    userId?: StringFilter<"AgentInteraction"> | string
    type?: EnumInteractionTypeFilter<"AgentInteraction"> | $Enums.InteractionType
    message?: StringNullableFilter<"AgentInteraction"> | string | null
    action?: StringNullableFilter<"AgentInteraction"> | string | null
    result?: JsonNullableFilter<"AgentInteraction">
    createdAt?: DateTimeFilter<"AgentInteraction"> | Date | string
  }

  export type OrganizationCreateWithoutCustomersInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    billingEmail: string
    taxId?: string | null
    country: string
    complianceStatus?: $Enums.ComplianceStatus
    kycVerifiedAt?: Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    ownerId: string
    users?: OrganizationUserCreateNestedManyWithoutOrganizationInput
    products?: ProductCreateNestedManyWithoutOrganizationInput
    wallets?: WalletCreateNestedManyWithoutOrganizationInput
    paymentLinks?: PaymentLinkCreateNestedManyWithoutOrganizationInput
    paymentOrders?: PaymentOrderCreateNestedManyWithoutOrganizationInput
    providers?: ProviderConfigCreateNestedManyWithoutOrganizationInput
    apiKeys?: ApiKeyCreateNestedManyWithoutOrganizationInput
    webhooks?: WebhookCreateNestedManyWithoutOrganizationInput
    auditLogs?: AuditLogCreateNestedManyWithoutOrganizationInput
    agents?: AgentCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutCustomersInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    billingEmail: string
    taxId?: string | null
    country: string
    complianceStatus?: $Enums.ComplianceStatus
    kycVerifiedAt?: Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    ownerId: string
    users?: OrganizationUserUncheckedCreateNestedManyWithoutOrganizationInput
    products?: ProductUncheckedCreateNestedManyWithoutOrganizationInput
    wallets?: WalletUncheckedCreateNestedManyWithoutOrganizationInput
    paymentLinks?: PaymentLinkUncheckedCreateNestedManyWithoutOrganizationInput
    paymentOrders?: PaymentOrderUncheckedCreateNestedManyWithoutOrganizationInput
    providers?: ProviderConfigUncheckedCreateNestedManyWithoutOrganizationInput
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutOrganizationInput
    webhooks?: WebhookUncheckedCreateNestedManyWithoutOrganizationInput
    auditLogs?: AuditLogUncheckedCreateNestedManyWithoutOrganizationInput
    agents?: AgentUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutCustomersInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutCustomersInput, OrganizationUncheckedCreateWithoutCustomersInput>
  }

  export type PaymentOrderCreateWithoutCustomerInput = {
    id?: string
    orderNumber: string
    status?: $Enums.PaymentOrderStatus
    requestedAmount: Decimal | DecimalJsLike | number | string
    requestedCurrency: string
    settledAmount?: Decimal | DecimalJsLike | number | string | null
    settledCurrency?: string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: Date | string | null
    exchangeRateSource?: string | null
    platformFee?: Decimal | DecimalJsLike | number | string
    providerFee?: Decimal | DecimalJsLike | number | string
    networkFee?: Decimal | DecimalJsLike | number | string
    totalFee?: Decimal | DecimalJsLike | number | string
    customerEmail?: string | null
    customerName?: string | null
    customerWallet?: string | null
    customerIp?: string | null
    customerCountry?: string | null
    riskScore?: number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: $Enums.KycStatus
    kycVerifiedAt?: Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    failureCode?: string | null
    retryCount?: number
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutPaymentOrdersInput
    paymentLink: PaymentLinkCreateNestedOneWithoutPaymentOrdersInput
    providerTransactions?: ProviderTransactionCreateNestedManyWithoutPaymentOrderInput
    blockchainTxs?: BlockchainTransactionCreateNestedManyWithoutPaymentOrderInput
    events?: PaymentEventCreateNestedManyWithoutPaymentOrderInput
    agentDecisions?: AgentDecisionCreateNestedManyWithoutPaymentOrderInput
    manualSteps?: ManualProcessStepCreateNestedManyWithoutPaymentOrderInput
  }

  export type PaymentOrderUncheckedCreateWithoutCustomerInput = {
    id?: string
    organizationId: string
    paymentLinkId: string
    orderNumber: string
    status?: $Enums.PaymentOrderStatus
    requestedAmount: Decimal | DecimalJsLike | number | string
    requestedCurrency: string
    settledAmount?: Decimal | DecimalJsLike | number | string | null
    settledCurrency?: string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: Date | string | null
    exchangeRateSource?: string | null
    platformFee?: Decimal | DecimalJsLike | number | string
    providerFee?: Decimal | DecimalJsLike | number | string
    networkFee?: Decimal | DecimalJsLike | number | string
    totalFee?: Decimal | DecimalJsLike | number | string
    customerEmail?: string | null
    customerName?: string | null
    customerWallet?: string | null
    customerIp?: string | null
    customerCountry?: string | null
    riskScore?: number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: $Enums.KycStatus
    kycVerifiedAt?: Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    failureCode?: string | null
    retryCount?: number
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    updatedAt?: Date | string
    providerTransactions?: ProviderTransactionUncheckedCreateNestedManyWithoutPaymentOrderInput
    blockchainTxs?: BlockchainTransactionUncheckedCreateNestedManyWithoutPaymentOrderInput
    events?: PaymentEventUncheckedCreateNestedManyWithoutPaymentOrderInput
    agentDecisions?: AgentDecisionUncheckedCreateNestedManyWithoutPaymentOrderInput
    manualSteps?: ManualProcessStepUncheckedCreateNestedManyWithoutPaymentOrderInput
  }

  export type PaymentOrderCreateOrConnectWithoutCustomerInput = {
    where: PaymentOrderWhereUniqueInput
    create: XOR<PaymentOrderCreateWithoutCustomerInput, PaymentOrderUncheckedCreateWithoutCustomerInput>
  }

  export type PaymentOrderCreateManyCustomerInputEnvelope = {
    data: PaymentOrderCreateManyCustomerInput | PaymentOrderCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type CustomerPaymentMethodCreateWithoutCustomerInput = {
    id?: string
    type: $Enums.PaymentMethodType
    provider: string
    externalId?: string | null
    last4?: string | null
    brand?: string | null
    expiryMonth?: number | null
    expiryYear?: number | null
    bankName?: string | null
    accountLast4?: string | null
    walletAddress?: string | null
    chainId?: number | null
    isDefault?: boolean
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CustomerPaymentMethodUncheckedCreateWithoutCustomerInput = {
    id?: string
    type: $Enums.PaymentMethodType
    provider: string
    externalId?: string | null
    last4?: string | null
    brand?: string | null
    expiryMonth?: number | null
    expiryYear?: number | null
    bankName?: string | null
    accountLast4?: string | null
    walletAddress?: string | null
    chainId?: number | null
    isDefault?: boolean
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CustomerPaymentMethodCreateOrConnectWithoutCustomerInput = {
    where: CustomerPaymentMethodWhereUniqueInput
    create: XOR<CustomerPaymentMethodCreateWithoutCustomerInput, CustomerPaymentMethodUncheckedCreateWithoutCustomerInput>
  }

  export type CustomerPaymentMethodCreateManyCustomerInputEnvelope = {
    data: CustomerPaymentMethodCreateManyCustomerInput | CustomerPaymentMethodCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type SubscriptionCreateWithoutCustomerInput = {
    id?: string
    organizationId: string
    status?: $Enums.SubscriptionStatus
    currentPeriodStart: Date | string
    currentPeriodEnd: Date | string
    cancelAt?: Date | string | null
    canceledAt?: Date | string | null
    endedAt?: Date | string | null
    trialStart?: Date | string | null
    trialEnd?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    items?: SubscriptionItemCreateNestedManyWithoutSubscriptionInput
  }

  export type SubscriptionUncheckedCreateWithoutCustomerInput = {
    id?: string
    organizationId: string
    status?: $Enums.SubscriptionStatus
    currentPeriodStart: Date | string
    currentPeriodEnd: Date | string
    cancelAt?: Date | string | null
    canceledAt?: Date | string | null
    endedAt?: Date | string | null
    trialStart?: Date | string | null
    trialEnd?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    items?: SubscriptionItemUncheckedCreateNestedManyWithoutSubscriptionInput
  }

  export type SubscriptionCreateOrConnectWithoutCustomerInput = {
    where: SubscriptionWhereUniqueInput
    create: XOR<SubscriptionCreateWithoutCustomerInput, SubscriptionUncheckedCreateWithoutCustomerInput>
  }

  export type SubscriptionCreateManyCustomerInputEnvelope = {
    data: SubscriptionCreateManyCustomerInput | SubscriptionCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type OrganizationUpsertWithoutCustomersInput = {
    update: XOR<OrganizationUpdateWithoutCustomersInput, OrganizationUncheckedUpdateWithoutCustomersInput>
    create: XOR<OrganizationCreateWithoutCustomersInput, OrganizationUncheckedCreateWithoutCustomersInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutCustomersInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutCustomersInput, OrganizationUncheckedUpdateWithoutCustomersInput>
  }

  export type OrganizationUpdateWithoutCustomersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    billingEmail?: StringFieldUpdateOperationsInput | string
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: StringFieldUpdateOperationsInput | string
    users?: OrganizationUserUpdateManyWithoutOrganizationNestedInput
    products?: ProductUpdateManyWithoutOrganizationNestedInput
    wallets?: WalletUpdateManyWithoutOrganizationNestedInput
    paymentLinks?: PaymentLinkUpdateManyWithoutOrganizationNestedInput
    paymentOrders?: PaymentOrderUpdateManyWithoutOrganizationNestedInput
    providers?: ProviderConfigUpdateManyWithoutOrganizationNestedInput
    apiKeys?: ApiKeyUpdateManyWithoutOrganizationNestedInput
    webhooks?: WebhookUpdateManyWithoutOrganizationNestedInput
    auditLogs?: AuditLogUpdateManyWithoutOrganizationNestedInput
    agents?: AgentUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutCustomersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    billingEmail?: StringFieldUpdateOperationsInput | string
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: StringFieldUpdateOperationsInput | string
    users?: OrganizationUserUncheckedUpdateManyWithoutOrganizationNestedInput
    products?: ProductUncheckedUpdateManyWithoutOrganizationNestedInput
    wallets?: WalletUncheckedUpdateManyWithoutOrganizationNestedInput
    paymentLinks?: PaymentLinkUncheckedUpdateManyWithoutOrganizationNestedInput
    paymentOrders?: PaymentOrderUncheckedUpdateManyWithoutOrganizationNestedInput
    providers?: ProviderConfigUncheckedUpdateManyWithoutOrganizationNestedInput
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutOrganizationNestedInput
    webhooks?: WebhookUncheckedUpdateManyWithoutOrganizationNestedInput
    auditLogs?: AuditLogUncheckedUpdateManyWithoutOrganizationNestedInput
    agents?: AgentUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type PaymentOrderUpsertWithWhereUniqueWithoutCustomerInput = {
    where: PaymentOrderWhereUniqueInput
    update: XOR<PaymentOrderUpdateWithoutCustomerInput, PaymentOrderUncheckedUpdateWithoutCustomerInput>
    create: XOR<PaymentOrderCreateWithoutCustomerInput, PaymentOrderUncheckedCreateWithoutCustomerInput>
  }

  export type PaymentOrderUpdateWithWhereUniqueWithoutCustomerInput = {
    where: PaymentOrderWhereUniqueInput
    data: XOR<PaymentOrderUpdateWithoutCustomerInput, PaymentOrderUncheckedUpdateWithoutCustomerInput>
  }

  export type PaymentOrderUpdateManyWithWhereWithoutCustomerInput = {
    where: PaymentOrderScalarWhereInput
    data: XOR<PaymentOrderUpdateManyMutationInput, PaymentOrderUncheckedUpdateManyWithoutCustomerInput>
  }

  export type CustomerPaymentMethodUpsertWithWhereUniqueWithoutCustomerInput = {
    where: CustomerPaymentMethodWhereUniqueInput
    update: XOR<CustomerPaymentMethodUpdateWithoutCustomerInput, CustomerPaymentMethodUncheckedUpdateWithoutCustomerInput>
    create: XOR<CustomerPaymentMethodCreateWithoutCustomerInput, CustomerPaymentMethodUncheckedCreateWithoutCustomerInput>
  }

  export type CustomerPaymentMethodUpdateWithWhereUniqueWithoutCustomerInput = {
    where: CustomerPaymentMethodWhereUniqueInput
    data: XOR<CustomerPaymentMethodUpdateWithoutCustomerInput, CustomerPaymentMethodUncheckedUpdateWithoutCustomerInput>
  }

  export type CustomerPaymentMethodUpdateManyWithWhereWithoutCustomerInput = {
    where: CustomerPaymentMethodScalarWhereInput
    data: XOR<CustomerPaymentMethodUpdateManyMutationInput, CustomerPaymentMethodUncheckedUpdateManyWithoutCustomerInput>
  }

  export type CustomerPaymentMethodScalarWhereInput = {
    AND?: CustomerPaymentMethodScalarWhereInput | CustomerPaymentMethodScalarWhereInput[]
    OR?: CustomerPaymentMethodScalarWhereInput[]
    NOT?: CustomerPaymentMethodScalarWhereInput | CustomerPaymentMethodScalarWhereInput[]
    id?: StringFilter<"CustomerPaymentMethod"> | string
    customerId?: StringFilter<"CustomerPaymentMethod"> | string
    type?: EnumPaymentMethodTypeFilter<"CustomerPaymentMethod"> | $Enums.PaymentMethodType
    provider?: StringFilter<"CustomerPaymentMethod"> | string
    externalId?: StringNullableFilter<"CustomerPaymentMethod"> | string | null
    last4?: StringNullableFilter<"CustomerPaymentMethod"> | string | null
    brand?: StringNullableFilter<"CustomerPaymentMethod"> | string | null
    expiryMonth?: IntNullableFilter<"CustomerPaymentMethod"> | number | null
    expiryYear?: IntNullableFilter<"CustomerPaymentMethod"> | number | null
    bankName?: StringNullableFilter<"CustomerPaymentMethod"> | string | null
    accountLast4?: StringNullableFilter<"CustomerPaymentMethod"> | string | null
    walletAddress?: StringNullableFilter<"CustomerPaymentMethod"> | string | null
    chainId?: IntNullableFilter<"CustomerPaymentMethod"> | number | null
    isDefault?: BoolFilter<"CustomerPaymentMethod"> | boolean
    isActive?: BoolFilter<"CustomerPaymentMethod"> | boolean
    metadata?: JsonNullableFilter<"CustomerPaymentMethod">
    createdAt?: DateTimeFilter<"CustomerPaymentMethod"> | Date | string
    updatedAt?: DateTimeFilter<"CustomerPaymentMethod"> | Date | string
  }

  export type SubscriptionUpsertWithWhereUniqueWithoutCustomerInput = {
    where: SubscriptionWhereUniqueInput
    update: XOR<SubscriptionUpdateWithoutCustomerInput, SubscriptionUncheckedUpdateWithoutCustomerInput>
    create: XOR<SubscriptionCreateWithoutCustomerInput, SubscriptionUncheckedCreateWithoutCustomerInput>
  }

  export type SubscriptionUpdateWithWhereUniqueWithoutCustomerInput = {
    where: SubscriptionWhereUniqueInput
    data: XOR<SubscriptionUpdateWithoutCustomerInput, SubscriptionUncheckedUpdateWithoutCustomerInput>
  }

  export type SubscriptionUpdateManyWithWhereWithoutCustomerInput = {
    where: SubscriptionScalarWhereInput
    data: XOR<SubscriptionUpdateManyMutationInput, SubscriptionUncheckedUpdateManyWithoutCustomerInput>
  }

  export type SubscriptionScalarWhereInput = {
    AND?: SubscriptionScalarWhereInput | SubscriptionScalarWhereInput[]
    OR?: SubscriptionScalarWhereInput[]
    NOT?: SubscriptionScalarWhereInput | SubscriptionScalarWhereInput[]
    id?: StringFilter<"Subscription"> | string
    customerId?: StringFilter<"Subscription"> | string
    organizationId?: StringFilter<"Subscription"> | string
    status?: EnumSubscriptionStatusFilter<"Subscription"> | $Enums.SubscriptionStatus
    currentPeriodStart?: DateTimeFilter<"Subscription"> | Date | string
    currentPeriodEnd?: DateTimeFilter<"Subscription"> | Date | string
    cancelAt?: DateTimeNullableFilter<"Subscription"> | Date | string | null
    canceledAt?: DateTimeNullableFilter<"Subscription"> | Date | string | null
    endedAt?: DateTimeNullableFilter<"Subscription"> | Date | string | null
    trialStart?: DateTimeNullableFilter<"Subscription"> | Date | string | null
    trialEnd?: DateTimeNullableFilter<"Subscription"> | Date | string | null
    metadata?: JsonNullableFilter<"Subscription">
    createdAt?: DateTimeFilter<"Subscription"> | Date | string
    updatedAt?: DateTimeFilter<"Subscription"> | Date | string
  }

  export type CustomerCreateWithoutPaymentMethodsInput = {
    id?: string
    email: string
    name?: string | null
    phone?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    walletAddress?: string | null
    preferredChainId?: number | null
    isActive?: boolean
    emailVerified?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutCustomersInput
    paymentOrders?: PaymentOrderCreateNestedManyWithoutCustomerInput
    subscriptions?: SubscriptionCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateWithoutPaymentMethodsInput = {
    id?: string
    organizationId: string
    email: string
    name?: string | null
    phone?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    walletAddress?: string | null
    preferredChainId?: number | null
    isActive?: boolean
    emailVerified?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    paymentOrders?: PaymentOrderUncheckedCreateNestedManyWithoutCustomerInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerCreateOrConnectWithoutPaymentMethodsInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutPaymentMethodsInput, CustomerUncheckedCreateWithoutPaymentMethodsInput>
  }

  export type CustomerUpsertWithoutPaymentMethodsInput = {
    update: XOR<CustomerUpdateWithoutPaymentMethodsInput, CustomerUncheckedUpdateWithoutPaymentMethodsInput>
    create: XOR<CustomerCreateWithoutPaymentMethodsInput, CustomerUncheckedCreateWithoutPaymentMethodsInput>
    where?: CustomerWhereInput
  }

  export type CustomerUpdateToOneWithWhereWithoutPaymentMethodsInput = {
    where?: CustomerWhereInput
    data: XOR<CustomerUpdateWithoutPaymentMethodsInput, CustomerUncheckedUpdateWithoutPaymentMethodsInput>
  }

  export type CustomerUpdateWithoutPaymentMethodsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    preferredChainId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutCustomersNestedInput
    paymentOrders?: PaymentOrderUpdateManyWithoutCustomerNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateWithoutPaymentMethodsInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    preferredChainId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentOrders?: PaymentOrderUncheckedUpdateManyWithoutCustomerNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerCreateWithoutSubscriptionsInput = {
    id?: string
    email: string
    name?: string | null
    phone?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    walletAddress?: string | null
    preferredChainId?: number | null
    isActive?: boolean
    emailVerified?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutCustomersInput
    paymentOrders?: PaymentOrderCreateNestedManyWithoutCustomerInput
    paymentMethods?: CustomerPaymentMethodCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateWithoutSubscriptionsInput = {
    id?: string
    organizationId: string
    email: string
    name?: string | null
    phone?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    walletAddress?: string | null
    preferredChainId?: number | null
    isActive?: boolean
    emailVerified?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    paymentOrders?: PaymentOrderUncheckedCreateNestedManyWithoutCustomerInput
    paymentMethods?: CustomerPaymentMethodUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerCreateOrConnectWithoutSubscriptionsInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutSubscriptionsInput, CustomerUncheckedCreateWithoutSubscriptionsInput>
  }

  export type SubscriptionItemCreateWithoutSubscriptionInput = {
    id?: string
    quantity?: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    price: PriceCreateNestedOneWithoutSubscriptionItemsInput
  }

  export type SubscriptionItemUncheckedCreateWithoutSubscriptionInput = {
    id?: string
    priceId: string
    quantity?: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscriptionItemCreateOrConnectWithoutSubscriptionInput = {
    where: SubscriptionItemWhereUniqueInput
    create: XOR<SubscriptionItemCreateWithoutSubscriptionInput, SubscriptionItemUncheckedCreateWithoutSubscriptionInput>
  }

  export type SubscriptionItemCreateManySubscriptionInputEnvelope = {
    data: SubscriptionItemCreateManySubscriptionInput | SubscriptionItemCreateManySubscriptionInput[]
    skipDuplicates?: boolean
  }

  export type CustomerUpsertWithoutSubscriptionsInput = {
    update: XOR<CustomerUpdateWithoutSubscriptionsInput, CustomerUncheckedUpdateWithoutSubscriptionsInput>
    create: XOR<CustomerCreateWithoutSubscriptionsInput, CustomerUncheckedCreateWithoutSubscriptionsInput>
    where?: CustomerWhereInput
  }

  export type CustomerUpdateToOneWithWhereWithoutSubscriptionsInput = {
    where?: CustomerWhereInput
    data: XOR<CustomerUpdateWithoutSubscriptionsInput, CustomerUncheckedUpdateWithoutSubscriptionsInput>
  }

  export type CustomerUpdateWithoutSubscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    preferredChainId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutCustomersNestedInput
    paymentOrders?: PaymentOrderUpdateManyWithoutCustomerNestedInput
    paymentMethods?: CustomerPaymentMethodUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateWithoutSubscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    preferredChainId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentOrders?: PaymentOrderUncheckedUpdateManyWithoutCustomerNestedInput
    paymentMethods?: CustomerPaymentMethodUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type SubscriptionItemUpsertWithWhereUniqueWithoutSubscriptionInput = {
    where: SubscriptionItemWhereUniqueInput
    update: XOR<SubscriptionItemUpdateWithoutSubscriptionInput, SubscriptionItemUncheckedUpdateWithoutSubscriptionInput>
    create: XOR<SubscriptionItemCreateWithoutSubscriptionInput, SubscriptionItemUncheckedCreateWithoutSubscriptionInput>
  }

  export type SubscriptionItemUpdateWithWhereUniqueWithoutSubscriptionInput = {
    where: SubscriptionItemWhereUniqueInput
    data: XOR<SubscriptionItemUpdateWithoutSubscriptionInput, SubscriptionItemUncheckedUpdateWithoutSubscriptionInput>
  }

  export type SubscriptionItemUpdateManyWithWhereWithoutSubscriptionInput = {
    where: SubscriptionItemScalarWhereInput
    data: XOR<SubscriptionItemUpdateManyMutationInput, SubscriptionItemUncheckedUpdateManyWithoutSubscriptionInput>
  }

  export type SubscriptionItemScalarWhereInput = {
    AND?: SubscriptionItemScalarWhereInput | SubscriptionItemScalarWhereInput[]
    OR?: SubscriptionItemScalarWhereInput[]
    NOT?: SubscriptionItemScalarWhereInput | SubscriptionItemScalarWhereInput[]
    id?: StringFilter<"SubscriptionItem"> | string
    subscriptionId?: StringFilter<"SubscriptionItem"> | string
    priceId?: StringFilter<"SubscriptionItem"> | string
    quantity?: IntFilter<"SubscriptionItem"> | number
    metadata?: JsonNullableFilter<"SubscriptionItem">
    createdAt?: DateTimeFilter<"SubscriptionItem"> | Date | string
    updatedAt?: DateTimeFilter<"SubscriptionItem"> | Date | string
  }

  export type SubscriptionCreateWithoutItemsInput = {
    id?: string
    organizationId: string
    status?: $Enums.SubscriptionStatus
    currentPeriodStart: Date | string
    currentPeriodEnd: Date | string
    cancelAt?: Date | string | null
    canceledAt?: Date | string | null
    endedAt?: Date | string | null
    trialStart?: Date | string | null
    trialEnd?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    customer: CustomerCreateNestedOneWithoutSubscriptionsInput
  }

  export type SubscriptionUncheckedCreateWithoutItemsInput = {
    id?: string
    customerId: string
    organizationId: string
    status?: $Enums.SubscriptionStatus
    currentPeriodStart: Date | string
    currentPeriodEnd: Date | string
    cancelAt?: Date | string | null
    canceledAt?: Date | string | null
    endedAt?: Date | string | null
    trialStart?: Date | string | null
    trialEnd?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscriptionCreateOrConnectWithoutItemsInput = {
    where: SubscriptionWhereUniqueInput
    create: XOR<SubscriptionCreateWithoutItemsInput, SubscriptionUncheckedCreateWithoutItemsInput>
  }

  export type PriceCreateWithoutSubscriptionItemsInput = {
    id?: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    type?: $Enums.PriceType
    interval?: $Enums.BillingInterval | null
    intervalCount?: number
    trialPeriodDays?: number | null
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutPricesInput
    paymentLinks?: PaymentLinkCreateNestedManyWithoutPriceInput
  }

  export type PriceUncheckedCreateWithoutSubscriptionItemsInput = {
    id?: string
    productId: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    type?: $Enums.PriceType
    interval?: $Enums.BillingInterval | null
    intervalCount?: number
    trialPeriodDays?: number | null
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    paymentLinks?: PaymentLinkUncheckedCreateNestedManyWithoutPriceInput
  }

  export type PriceCreateOrConnectWithoutSubscriptionItemsInput = {
    where: PriceWhereUniqueInput
    create: XOR<PriceCreateWithoutSubscriptionItemsInput, PriceUncheckedCreateWithoutSubscriptionItemsInput>
  }

  export type SubscriptionUpsertWithoutItemsInput = {
    update: XOR<SubscriptionUpdateWithoutItemsInput, SubscriptionUncheckedUpdateWithoutItemsInput>
    create: XOR<SubscriptionCreateWithoutItemsInput, SubscriptionUncheckedCreateWithoutItemsInput>
    where?: SubscriptionWhereInput
  }

  export type SubscriptionUpdateToOneWithWhereWithoutItemsInput = {
    where?: SubscriptionWhereInput
    data: XOR<SubscriptionUpdateWithoutItemsInput, SubscriptionUncheckedUpdateWithoutItemsInput>
  }

  export type SubscriptionUpdateWithoutItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    currentPeriodStart?: DateTimeFieldUpdateOperationsInput | Date | string
    currentPeriodEnd?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    customer?: CustomerUpdateOneRequiredWithoutSubscriptionsNestedInput
  }

  export type SubscriptionUncheckedUpdateWithoutItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    currentPeriodStart?: DateTimeFieldUpdateOperationsInput | Date | string
    currentPeriodEnd?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PriceUpsertWithoutSubscriptionItemsInput = {
    update: XOR<PriceUpdateWithoutSubscriptionItemsInput, PriceUncheckedUpdateWithoutSubscriptionItemsInput>
    create: XOR<PriceCreateWithoutSubscriptionItemsInput, PriceUncheckedCreateWithoutSubscriptionItemsInput>
    where?: PriceWhereInput
  }

  export type PriceUpdateToOneWithWhereWithoutSubscriptionItemsInput = {
    where?: PriceWhereInput
    data: XOR<PriceUpdateWithoutSubscriptionItemsInput, PriceUncheckedUpdateWithoutSubscriptionItemsInput>
  }

  export type PriceUpdateWithoutSubscriptionItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    type?: EnumPriceTypeFieldUpdateOperationsInput | $Enums.PriceType
    interval?: NullableEnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval | null
    intervalCount?: IntFieldUpdateOperationsInput | number
    trialPeriodDays?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutPricesNestedInput
    paymentLinks?: PaymentLinkUpdateManyWithoutPriceNestedInput
  }

  export type PriceUncheckedUpdateWithoutSubscriptionItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    type?: EnumPriceTypeFieldUpdateOperationsInput | $Enums.PriceType
    interval?: NullableEnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval | null
    intervalCount?: IntFieldUpdateOperationsInput | number
    trialPeriodDays?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentLinks?: PaymentLinkUncheckedUpdateManyWithoutPriceNestedInput
  }

  export type UserCreateWithoutOwnedWalletsInput = {
    id?: string
    email: string
    name?: string | null
    avatarUrl?: string | null
    authProvider?: $Enums.AuthProvider
    authProviderId?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    primaryWallet?: WalletCreateNestedOneWithoutPrimaryForUsersInput
    organizations?: OrganizationUserCreateNestedManyWithoutUserInput
    paymentLinks?: PaymentLinkCreateNestedManyWithoutCreatedByInput
    auditLogs?: AuditLogCreateNestedManyWithoutUserInput
    agentInteractions?: AgentInteractionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutOwnedWalletsInput = {
    id?: string
    email: string
    name?: string | null
    avatarUrl?: string | null
    authProvider?: $Enums.AuthProvider
    authProviderId?: string | null
    emailVerified?: boolean
    primaryWalletId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    organizations?: OrganizationUserUncheckedCreateNestedManyWithoutUserInput
    paymentLinks?: PaymentLinkUncheckedCreateNestedManyWithoutCreatedByInput
    auditLogs?: AuditLogUncheckedCreateNestedManyWithoutUserInput
    agentInteractions?: AgentInteractionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutOwnedWalletsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOwnedWalletsInput, UserUncheckedCreateWithoutOwnedWalletsInput>
  }

  export type OrganizationCreateWithoutWalletsInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    billingEmail: string
    taxId?: string | null
    country: string
    complianceStatus?: $Enums.ComplianceStatus
    kycVerifiedAt?: Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    ownerId: string
    users?: OrganizationUserCreateNestedManyWithoutOrganizationInput
    customers?: CustomerCreateNestedManyWithoutOrganizationInput
    products?: ProductCreateNestedManyWithoutOrganizationInput
    paymentLinks?: PaymentLinkCreateNestedManyWithoutOrganizationInput
    paymentOrders?: PaymentOrderCreateNestedManyWithoutOrganizationInput
    providers?: ProviderConfigCreateNestedManyWithoutOrganizationInput
    apiKeys?: ApiKeyCreateNestedManyWithoutOrganizationInput
    webhooks?: WebhookCreateNestedManyWithoutOrganizationInput
    auditLogs?: AuditLogCreateNestedManyWithoutOrganizationInput
    agents?: AgentCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutWalletsInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    billingEmail: string
    taxId?: string | null
    country: string
    complianceStatus?: $Enums.ComplianceStatus
    kycVerifiedAt?: Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    ownerId: string
    users?: OrganizationUserUncheckedCreateNestedManyWithoutOrganizationInput
    customers?: CustomerUncheckedCreateNestedManyWithoutOrganizationInput
    products?: ProductUncheckedCreateNestedManyWithoutOrganizationInput
    paymentLinks?: PaymentLinkUncheckedCreateNestedManyWithoutOrganizationInput
    paymentOrders?: PaymentOrderUncheckedCreateNestedManyWithoutOrganizationInput
    providers?: ProviderConfigUncheckedCreateNestedManyWithoutOrganizationInput
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutOrganizationInput
    webhooks?: WebhookUncheckedCreateNestedManyWithoutOrganizationInput
    auditLogs?: AuditLogUncheckedCreateNestedManyWithoutOrganizationInput
    agents?: AgentUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutWalletsInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutWalletsInput, OrganizationUncheckedCreateWithoutWalletsInput>
  }

  export type UserCreateWithoutPrimaryWalletInput = {
    id?: string
    email: string
    name?: string | null
    avatarUrl?: string | null
    authProvider?: $Enums.AuthProvider
    authProviderId?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    organizations?: OrganizationUserCreateNestedManyWithoutUserInput
    ownedWallets?: WalletCreateNestedManyWithoutUserInput
    paymentLinks?: PaymentLinkCreateNestedManyWithoutCreatedByInput
    auditLogs?: AuditLogCreateNestedManyWithoutUserInput
    agentInteractions?: AgentInteractionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutPrimaryWalletInput = {
    id?: string
    email: string
    name?: string | null
    avatarUrl?: string | null
    authProvider?: $Enums.AuthProvider
    authProviderId?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    organizations?: OrganizationUserUncheckedCreateNestedManyWithoutUserInput
    ownedWallets?: WalletUncheckedCreateNestedManyWithoutUserInput
    paymentLinks?: PaymentLinkUncheckedCreateNestedManyWithoutCreatedByInput
    auditLogs?: AuditLogUncheckedCreateNestedManyWithoutUserInput
    agentInteractions?: AgentInteractionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutPrimaryWalletInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPrimaryWalletInput, UserUncheckedCreateWithoutPrimaryWalletInput>
  }

  export type UserCreateManyPrimaryWalletInputEnvelope = {
    data: UserCreateManyPrimaryWalletInput | UserCreateManyPrimaryWalletInput[]
    skipDuplicates?: boolean
  }

  export type AgentCreateWithoutAgentWalletInput = {
    id?: string
    name: string
    type: $Enums.AgentType
    version: string
    model: string
    graphDefinition: JsonNullValueInput | InputJsonValue
    tools?: AgentCreatetoolsInput | string[]
    systemPrompt?: string | null
    supportedProviders?: AgentCreatesupportedProvidersInput | string[]
    supportedChains?: AgentCreatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    totalExecutions?: number
    avgExecutionTime?: number | null
    successRate?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutAgentsInput
    paymentLinks?: PaymentLinkCreateNestedManyWithoutExecutingAgentInput
    decisions?: AgentDecisionCreateNestedManyWithoutAgentInput
    checkpoints?: AgentCheckpointCreateNestedManyWithoutAgentInput
  }

  export type AgentUncheckedCreateWithoutAgentWalletInput = {
    id?: string
    organizationId: string
    name: string
    type: $Enums.AgentType
    version: string
    model: string
    graphDefinition: JsonNullValueInput | InputJsonValue
    tools?: AgentCreatetoolsInput | string[]
    systemPrompt?: string | null
    supportedProviders?: AgentCreatesupportedProvidersInput | string[]
    supportedChains?: AgentCreatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    totalExecutions?: number
    avgExecutionTime?: number | null
    successRate?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paymentLinks?: PaymentLinkUncheckedCreateNestedManyWithoutExecutingAgentInput
    decisions?: AgentDecisionUncheckedCreateNestedManyWithoutAgentInput
    checkpoints?: AgentCheckpointUncheckedCreateNestedManyWithoutAgentInput
  }

  export type AgentCreateOrConnectWithoutAgentWalletInput = {
    where: AgentWhereUniqueInput
    create: XOR<AgentCreateWithoutAgentWalletInput, AgentUncheckedCreateWithoutAgentWalletInput>
  }

  export type BlockchainTransactionCreateWithoutWalletInput = {
    id?: string
    hash: string
    chainId: number
    fromAddress: string
    toAddress?: string | null
    value: string
    data?: string | null
    gasLimit?: string | null
    gasPrice?: string | null
    nonce?: number | null
    status?: $Enums.BlockchainTxStatus
    blockNumber?: number | null
    confirmations?: number
    isSponsored?: boolean
    createdAt?: Date | string
    minedAt?: Date | string | null
    gasSponsorship?: GasSponsorshipCreateNestedOneWithoutTransactionsInput
    paymentOrder?: PaymentOrderCreateNestedOneWithoutBlockchainTxsInput
  }

  export type BlockchainTransactionUncheckedCreateWithoutWalletInput = {
    id?: string
    hash: string
    chainId: number
    fromAddress: string
    toAddress?: string | null
    value: string
    data?: string | null
    gasLimit?: string | null
    gasPrice?: string | null
    nonce?: number | null
    status?: $Enums.BlockchainTxStatus
    blockNumber?: number | null
    confirmations?: number
    isSponsored?: boolean
    sponsorshipId?: string | null
    paymentOrderId?: string | null
    createdAt?: Date | string
    minedAt?: Date | string | null
  }

  export type BlockchainTransactionCreateOrConnectWithoutWalletInput = {
    where: BlockchainTransactionWhereUniqueInput
    create: XOR<BlockchainTransactionCreateWithoutWalletInput, BlockchainTransactionUncheckedCreateWithoutWalletInput>
  }

  export type BlockchainTransactionCreateManyWalletInputEnvelope = {
    data: BlockchainTransactionCreateManyWalletInput | BlockchainTransactionCreateManyWalletInput[]
    skipDuplicates?: boolean
  }

  export type GasSponsorshipCreateWithoutSponsorWalletInput = {
    id?: string
    maxGasAmount: string
    usedGasAmount?: string
    maxTransactions?: number | null
    usedTransactions?: number
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    transactions?: BlockchainTransactionCreateNestedManyWithoutGasSponsorshipInput
  }

  export type GasSponsorshipUncheckedCreateWithoutSponsorWalletInput = {
    id?: string
    maxGasAmount: string
    usedGasAmount?: string
    maxTransactions?: number | null
    usedTransactions?: number
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    transactions?: BlockchainTransactionUncheckedCreateNestedManyWithoutGasSponsorshipInput
  }

  export type GasSponsorshipCreateOrConnectWithoutSponsorWalletInput = {
    where: GasSponsorshipWhereUniqueInput
    create: XOR<GasSponsorshipCreateWithoutSponsorWalletInput, GasSponsorshipUncheckedCreateWithoutSponsorWalletInput>
  }

  export type GasSponsorshipCreateManySponsorWalletInputEnvelope = {
    data: GasSponsorshipCreateManySponsorWalletInput | GasSponsorshipCreateManySponsorWalletInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutOwnedWalletsInput = {
    update: XOR<UserUpdateWithoutOwnedWalletsInput, UserUncheckedUpdateWithoutOwnedWalletsInput>
    create: XOR<UserCreateWithoutOwnedWalletsInput, UserUncheckedCreateWithoutOwnedWalletsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOwnedWalletsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOwnedWalletsInput, UserUncheckedUpdateWithoutOwnedWalletsInput>
  }

  export type UserUpdateWithoutOwnedWalletsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    authProvider?: EnumAuthProviderFieldUpdateOperationsInput | $Enums.AuthProvider
    authProviderId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    primaryWallet?: WalletUpdateOneWithoutPrimaryForUsersNestedInput
    organizations?: OrganizationUserUpdateManyWithoutUserNestedInput
    paymentLinks?: PaymentLinkUpdateManyWithoutCreatedByNestedInput
    auditLogs?: AuditLogUpdateManyWithoutUserNestedInput
    agentInteractions?: AgentInteractionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutOwnedWalletsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    authProvider?: EnumAuthProviderFieldUpdateOperationsInput | $Enums.AuthProvider
    authProviderId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    primaryWalletId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organizations?: OrganizationUserUncheckedUpdateManyWithoutUserNestedInput
    paymentLinks?: PaymentLinkUncheckedUpdateManyWithoutCreatedByNestedInput
    auditLogs?: AuditLogUncheckedUpdateManyWithoutUserNestedInput
    agentInteractions?: AgentInteractionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type OrganizationUpsertWithoutWalletsInput = {
    update: XOR<OrganizationUpdateWithoutWalletsInput, OrganizationUncheckedUpdateWithoutWalletsInput>
    create: XOR<OrganizationCreateWithoutWalletsInput, OrganizationUncheckedCreateWithoutWalletsInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutWalletsInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutWalletsInput, OrganizationUncheckedUpdateWithoutWalletsInput>
  }

  export type OrganizationUpdateWithoutWalletsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    billingEmail?: StringFieldUpdateOperationsInput | string
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: StringFieldUpdateOperationsInput | string
    users?: OrganizationUserUpdateManyWithoutOrganizationNestedInput
    customers?: CustomerUpdateManyWithoutOrganizationNestedInput
    products?: ProductUpdateManyWithoutOrganizationNestedInput
    paymentLinks?: PaymentLinkUpdateManyWithoutOrganizationNestedInput
    paymentOrders?: PaymentOrderUpdateManyWithoutOrganizationNestedInput
    providers?: ProviderConfigUpdateManyWithoutOrganizationNestedInput
    apiKeys?: ApiKeyUpdateManyWithoutOrganizationNestedInput
    webhooks?: WebhookUpdateManyWithoutOrganizationNestedInput
    auditLogs?: AuditLogUpdateManyWithoutOrganizationNestedInput
    agents?: AgentUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutWalletsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    billingEmail?: StringFieldUpdateOperationsInput | string
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: StringFieldUpdateOperationsInput | string
    users?: OrganizationUserUncheckedUpdateManyWithoutOrganizationNestedInput
    customers?: CustomerUncheckedUpdateManyWithoutOrganizationNestedInput
    products?: ProductUncheckedUpdateManyWithoutOrganizationNestedInput
    paymentLinks?: PaymentLinkUncheckedUpdateManyWithoutOrganizationNestedInput
    paymentOrders?: PaymentOrderUncheckedUpdateManyWithoutOrganizationNestedInput
    providers?: ProviderConfigUncheckedUpdateManyWithoutOrganizationNestedInput
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutOrganizationNestedInput
    webhooks?: WebhookUncheckedUpdateManyWithoutOrganizationNestedInput
    auditLogs?: AuditLogUncheckedUpdateManyWithoutOrganizationNestedInput
    agents?: AgentUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutPrimaryWalletInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutPrimaryWalletInput, UserUncheckedUpdateWithoutPrimaryWalletInput>
    create: XOR<UserCreateWithoutPrimaryWalletInput, UserUncheckedCreateWithoutPrimaryWalletInput>
  }

  export type UserUpdateWithWhereUniqueWithoutPrimaryWalletInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutPrimaryWalletInput, UserUncheckedUpdateWithoutPrimaryWalletInput>
  }

  export type UserUpdateManyWithWhereWithoutPrimaryWalletInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutPrimaryWalletInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    name?: StringNullableFilter<"User"> | string | null
    avatarUrl?: StringNullableFilter<"User"> | string | null
    authProvider?: EnumAuthProviderFilter<"User"> | $Enums.AuthProvider
    authProviderId?: StringNullableFilter<"User"> | string | null
    emailVerified?: BoolFilter<"User"> | boolean
    primaryWalletId?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    lastLoginAt?: DateTimeNullableFilter<"User"> | Date | string | null
  }

  export type AgentUpsertWithoutAgentWalletInput = {
    update: XOR<AgentUpdateWithoutAgentWalletInput, AgentUncheckedUpdateWithoutAgentWalletInput>
    create: XOR<AgentCreateWithoutAgentWalletInput, AgentUncheckedCreateWithoutAgentWalletInput>
    where?: AgentWhereInput
  }

  export type AgentUpdateToOneWithWhereWithoutAgentWalletInput = {
    where?: AgentWhereInput
    data: XOR<AgentUpdateWithoutAgentWalletInput, AgentUncheckedUpdateWithoutAgentWalletInput>
  }

  export type AgentUpdateWithoutAgentWalletInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumAgentTypeFieldUpdateOperationsInput | $Enums.AgentType
    version?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    graphDefinition?: JsonNullValueInput | InputJsonValue
    tools?: AgentUpdatetoolsInput | string[]
    systemPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    supportedProviders?: AgentUpdatesupportedProvidersInput | string[]
    supportedChains?: AgentUpdatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    totalExecutions?: IntFieldUpdateOperationsInput | number
    avgExecutionTime?: NullableIntFieldUpdateOperationsInput | number | null
    successRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutAgentsNestedInput
    paymentLinks?: PaymentLinkUpdateManyWithoutExecutingAgentNestedInput
    decisions?: AgentDecisionUpdateManyWithoutAgentNestedInput
    checkpoints?: AgentCheckpointUpdateManyWithoutAgentNestedInput
  }

  export type AgentUncheckedUpdateWithoutAgentWalletInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumAgentTypeFieldUpdateOperationsInput | $Enums.AgentType
    version?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    graphDefinition?: JsonNullValueInput | InputJsonValue
    tools?: AgentUpdatetoolsInput | string[]
    systemPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    supportedProviders?: AgentUpdatesupportedProvidersInput | string[]
    supportedChains?: AgentUpdatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    totalExecutions?: IntFieldUpdateOperationsInput | number
    avgExecutionTime?: NullableIntFieldUpdateOperationsInput | number | null
    successRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentLinks?: PaymentLinkUncheckedUpdateManyWithoutExecutingAgentNestedInput
    decisions?: AgentDecisionUncheckedUpdateManyWithoutAgentNestedInput
    checkpoints?: AgentCheckpointUncheckedUpdateManyWithoutAgentNestedInput
  }

  export type BlockchainTransactionUpsertWithWhereUniqueWithoutWalletInput = {
    where: BlockchainTransactionWhereUniqueInput
    update: XOR<BlockchainTransactionUpdateWithoutWalletInput, BlockchainTransactionUncheckedUpdateWithoutWalletInput>
    create: XOR<BlockchainTransactionCreateWithoutWalletInput, BlockchainTransactionUncheckedCreateWithoutWalletInput>
  }

  export type BlockchainTransactionUpdateWithWhereUniqueWithoutWalletInput = {
    where: BlockchainTransactionWhereUniqueInput
    data: XOR<BlockchainTransactionUpdateWithoutWalletInput, BlockchainTransactionUncheckedUpdateWithoutWalletInput>
  }

  export type BlockchainTransactionUpdateManyWithWhereWithoutWalletInput = {
    where: BlockchainTransactionScalarWhereInput
    data: XOR<BlockchainTransactionUpdateManyMutationInput, BlockchainTransactionUncheckedUpdateManyWithoutWalletInput>
  }

  export type BlockchainTransactionScalarWhereInput = {
    AND?: BlockchainTransactionScalarWhereInput | BlockchainTransactionScalarWhereInput[]
    OR?: BlockchainTransactionScalarWhereInput[]
    NOT?: BlockchainTransactionScalarWhereInput | BlockchainTransactionScalarWhereInput[]
    id?: StringFilter<"BlockchainTransaction"> | string
    hash?: StringFilter<"BlockchainTransaction"> | string
    chainId?: IntFilter<"BlockchainTransaction"> | number
    fromAddress?: StringFilter<"BlockchainTransaction"> | string
    toAddress?: StringNullableFilter<"BlockchainTransaction"> | string | null
    value?: StringFilter<"BlockchainTransaction"> | string
    data?: StringNullableFilter<"BlockchainTransaction"> | string | null
    gasLimit?: StringNullableFilter<"BlockchainTransaction"> | string | null
    gasPrice?: StringNullableFilter<"BlockchainTransaction"> | string | null
    nonce?: IntNullableFilter<"BlockchainTransaction"> | number | null
    status?: EnumBlockchainTxStatusFilter<"BlockchainTransaction"> | $Enums.BlockchainTxStatus
    blockNumber?: IntNullableFilter<"BlockchainTransaction"> | number | null
    confirmations?: IntFilter<"BlockchainTransaction"> | number
    isSponsored?: BoolFilter<"BlockchainTransaction"> | boolean
    sponsorshipId?: StringNullableFilter<"BlockchainTransaction"> | string | null
    walletId?: StringFilter<"BlockchainTransaction"> | string
    paymentOrderId?: StringNullableFilter<"BlockchainTransaction"> | string | null
    createdAt?: DateTimeFilter<"BlockchainTransaction"> | Date | string
    minedAt?: DateTimeNullableFilter<"BlockchainTransaction"> | Date | string | null
  }

  export type GasSponsorshipUpsertWithWhereUniqueWithoutSponsorWalletInput = {
    where: GasSponsorshipWhereUniqueInput
    update: XOR<GasSponsorshipUpdateWithoutSponsorWalletInput, GasSponsorshipUncheckedUpdateWithoutSponsorWalletInput>
    create: XOR<GasSponsorshipCreateWithoutSponsorWalletInput, GasSponsorshipUncheckedCreateWithoutSponsorWalletInput>
  }

  export type GasSponsorshipUpdateWithWhereUniqueWithoutSponsorWalletInput = {
    where: GasSponsorshipWhereUniqueInput
    data: XOR<GasSponsorshipUpdateWithoutSponsorWalletInput, GasSponsorshipUncheckedUpdateWithoutSponsorWalletInput>
  }

  export type GasSponsorshipUpdateManyWithWhereWithoutSponsorWalletInput = {
    where: GasSponsorshipScalarWhereInput
    data: XOR<GasSponsorshipUpdateManyMutationInput, GasSponsorshipUncheckedUpdateManyWithoutSponsorWalletInput>
  }

  export type GasSponsorshipScalarWhereInput = {
    AND?: GasSponsorshipScalarWhereInput | GasSponsorshipScalarWhereInput[]
    OR?: GasSponsorshipScalarWhereInput[]
    NOT?: GasSponsorshipScalarWhereInput | GasSponsorshipScalarWhereInput[]
    id?: StringFilter<"GasSponsorship"> | string
    sponsorWalletId?: StringFilter<"GasSponsorship"> | string
    maxGasAmount?: StringFilter<"GasSponsorship"> | string
    usedGasAmount?: StringFilter<"GasSponsorship"> | string
    maxTransactions?: IntNullableFilter<"GasSponsorship"> | number | null
    usedTransactions?: IntFilter<"GasSponsorship"> | number
    expiresAt?: DateTimeNullableFilter<"GasSponsorship"> | Date | string | null
    createdAt?: DateTimeFilter<"GasSponsorship"> | Date | string
    updatedAt?: DateTimeFilter<"GasSponsorship"> | Date | string
  }

  export type GasSponsorshipCreateWithoutTransactionsInput = {
    id?: string
    maxGasAmount: string
    usedGasAmount?: string
    maxTransactions?: number | null
    usedTransactions?: number
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    sponsorWallet: WalletCreateNestedOneWithoutGasSponsorshipInput
  }

  export type GasSponsorshipUncheckedCreateWithoutTransactionsInput = {
    id?: string
    sponsorWalletId: string
    maxGasAmount: string
    usedGasAmount?: string
    maxTransactions?: number | null
    usedTransactions?: number
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GasSponsorshipCreateOrConnectWithoutTransactionsInput = {
    where: GasSponsorshipWhereUniqueInput
    create: XOR<GasSponsorshipCreateWithoutTransactionsInput, GasSponsorshipUncheckedCreateWithoutTransactionsInput>
  }

  export type WalletCreateWithoutTransactionsInput = {
    id?: string
    address: string
    chainId: number
    type?: $Enums.WalletType
    smartWalletFactory?: string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    allowlist?: boolean
    blocklist?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user?: UserCreateNestedOneWithoutOwnedWalletsInput
    organization?: OrganizationCreateNestedOneWithoutWalletsInput
    primaryForUsers?: UserCreateNestedManyWithoutPrimaryWalletInput
    agent?: AgentCreateNestedOneWithoutAgentWalletInput
    gasSponsorship?: GasSponsorshipCreateNestedManyWithoutSponsorWalletInput
  }

  export type WalletUncheckedCreateWithoutTransactionsInput = {
    id?: string
    address: string
    chainId: number
    type?: $Enums.WalletType
    userId?: string | null
    organizationId?: string | null
    smartWalletFactory?: string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    allowlist?: boolean
    blocklist?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    primaryForUsers?: UserUncheckedCreateNestedManyWithoutPrimaryWalletInput
    agent?: AgentUncheckedCreateNestedOneWithoutAgentWalletInput
    gasSponsorship?: GasSponsorshipUncheckedCreateNestedManyWithoutSponsorWalletInput
  }

  export type WalletCreateOrConnectWithoutTransactionsInput = {
    where: WalletWhereUniqueInput
    create: XOR<WalletCreateWithoutTransactionsInput, WalletUncheckedCreateWithoutTransactionsInput>
  }

  export type PaymentOrderCreateWithoutBlockchainTxsInput = {
    id?: string
    orderNumber: string
    status?: $Enums.PaymentOrderStatus
    requestedAmount: Decimal | DecimalJsLike | number | string
    requestedCurrency: string
    settledAmount?: Decimal | DecimalJsLike | number | string | null
    settledCurrency?: string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: Date | string | null
    exchangeRateSource?: string | null
    platformFee?: Decimal | DecimalJsLike | number | string
    providerFee?: Decimal | DecimalJsLike | number | string
    networkFee?: Decimal | DecimalJsLike | number | string
    totalFee?: Decimal | DecimalJsLike | number | string
    customerEmail?: string | null
    customerName?: string | null
    customerWallet?: string | null
    customerIp?: string | null
    customerCountry?: string | null
    riskScore?: number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: $Enums.KycStatus
    kycVerifiedAt?: Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    failureCode?: string | null
    retryCount?: number
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutPaymentOrdersInput
    paymentLink: PaymentLinkCreateNestedOneWithoutPaymentOrdersInput
    customer?: CustomerCreateNestedOneWithoutPaymentOrdersInput
    providerTransactions?: ProviderTransactionCreateNestedManyWithoutPaymentOrderInput
    events?: PaymentEventCreateNestedManyWithoutPaymentOrderInput
    agentDecisions?: AgentDecisionCreateNestedManyWithoutPaymentOrderInput
    manualSteps?: ManualProcessStepCreateNestedManyWithoutPaymentOrderInput
  }

  export type PaymentOrderUncheckedCreateWithoutBlockchainTxsInput = {
    id?: string
    organizationId: string
    paymentLinkId: string
    customerId?: string | null
    orderNumber: string
    status?: $Enums.PaymentOrderStatus
    requestedAmount: Decimal | DecimalJsLike | number | string
    requestedCurrency: string
    settledAmount?: Decimal | DecimalJsLike | number | string | null
    settledCurrency?: string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: Date | string | null
    exchangeRateSource?: string | null
    platformFee?: Decimal | DecimalJsLike | number | string
    providerFee?: Decimal | DecimalJsLike | number | string
    networkFee?: Decimal | DecimalJsLike | number | string
    totalFee?: Decimal | DecimalJsLike | number | string
    customerEmail?: string | null
    customerName?: string | null
    customerWallet?: string | null
    customerIp?: string | null
    customerCountry?: string | null
    riskScore?: number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: $Enums.KycStatus
    kycVerifiedAt?: Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    failureCode?: string | null
    retryCount?: number
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    updatedAt?: Date | string
    providerTransactions?: ProviderTransactionUncheckedCreateNestedManyWithoutPaymentOrderInput
    events?: PaymentEventUncheckedCreateNestedManyWithoutPaymentOrderInput
    agentDecisions?: AgentDecisionUncheckedCreateNestedManyWithoutPaymentOrderInput
    manualSteps?: ManualProcessStepUncheckedCreateNestedManyWithoutPaymentOrderInput
  }

  export type PaymentOrderCreateOrConnectWithoutBlockchainTxsInput = {
    where: PaymentOrderWhereUniqueInput
    create: XOR<PaymentOrderCreateWithoutBlockchainTxsInput, PaymentOrderUncheckedCreateWithoutBlockchainTxsInput>
  }

  export type GasSponsorshipUpsertWithoutTransactionsInput = {
    update: XOR<GasSponsorshipUpdateWithoutTransactionsInput, GasSponsorshipUncheckedUpdateWithoutTransactionsInput>
    create: XOR<GasSponsorshipCreateWithoutTransactionsInput, GasSponsorshipUncheckedCreateWithoutTransactionsInput>
    where?: GasSponsorshipWhereInput
  }

  export type GasSponsorshipUpdateToOneWithWhereWithoutTransactionsInput = {
    where?: GasSponsorshipWhereInput
    data: XOR<GasSponsorshipUpdateWithoutTransactionsInput, GasSponsorshipUncheckedUpdateWithoutTransactionsInput>
  }

  export type GasSponsorshipUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    maxGasAmount?: StringFieldUpdateOperationsInput | string
    usedGasAmount?: StringFieldUpdateOperationsInput | string
    maxTransactions?: NullableIntFieldUpdateOperationsInput | number | null
    usedTransactions?: IntFieldUpdateOperationsInput | number
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sponsorWallet?: WalletUpdateOneRequiredWithoutGasSponsorshipNestedInput
  }

  export type GasSponsorshipUncheckedUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    sponsorWalletId?: StringFieldUpdateOperationsInput | string
    maxGasAmount?: StringFieldUpdateOperationsInput | string
    usedGasAmount?: StringFieldUpdateOperationsInput | string
    maxTransactions?: NullableIntFieldUpdateOperationsInput | number | null
    usedTransactions?: IntFieldUpdateOperationsInput | number
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WalletUpsertWithoutTransactionsInput = {
    update: XOR<WalletUpdateWithoutTransactionsInput, WalletUncheckedUpdateWithoutTransactionsInput>
    create: XOR<WalletCreateWithoutTransactionsInput, WalletUncheckedCreateWithoutTransactionsInput>
    where?: WalletWhereInput
  }

  export type WalletUpdateToOneWithWhereWithoutTransactionsInput = {
    where?: WalletWhereInput
    data: XOR<WalletUpdateWithoutTransactionsInput, WalletUncheckedUpdateWithoutTransactionsInput>
  }

  export type WalletUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    type?: EnumWalletTypeFieldUpdateOperationsInput | $Enums.WalletType
    smartWalletFactory?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    allowlist?: BoolFieldUpdateOperationsInput | boolean
    blocklist?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneWithoutOwnedWalletsNestedInput
    organization?: OrganizationUpdateOneWithoutWalletsNestedInput
    primaryForUsers?: UserUpdateManyWithoutPrimaryWalletNestedInput
    agent?: AgentUpdateOneWithoutAgentWalletNestedInput
    gasSponsorship?: GasSponsorshipUpdateManyWithoutSponsorWalletNestedInput
  }

  export type WalletUncheckedUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    type?: EnumWalletTypeFieldUpdateOperationsInput | $Enums.WalletType
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletFactory?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    allowlist?: BoolFieldUpdateOperationsInput | boolean
    blocklist?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    primaryForUsers?: UserUncheckedUpdateManyWithoutPrimaryWalletNestedInput
    agent?: AgentUncheckedUpdateOneWithoutAgentWalletNestedInput
    gasSponsorship?: GasSponsorshipUncheckedUpdateManyWithoutSponsorWalletNestedInput
  }

  export type PaymentOrderUpsertWithoutBlockchainTxsInput = {
    update: XOR<PaymentOrderUpdateWithoutBlockchainTxsInput, PaymentOrderUncheckedUpdateWithoutBlockchainTxsInput>
    create: XOR<PaymentOrderCreateWithoutBlockchainTxsInput, PaymentOrderUncheckedCreateWithoutBlockchainTxsInput>
    where?: PaymentOrderWhereInput
  }

  export type PaymentOrderUpdateToOneWithWhereWithoutBlockchainTxsInput = {
    where?: PaymentOrderWhereInput
    data: XOR<PaymentOrderUpdateWithoutBlockchainTxsInput, PaymentOrderUncheckedUpdateWithoutBlockchainTxsInput>
  }

  export type PaymentOrderUpdateWithoutBlockchainTxsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentOrderStatusFieldUpdateOperationsInput | $Enums.PaymentOrderStatus
    requestedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    requestedCurrency?: StringFieldUpdateOperationsInput | string
    settledAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    settledCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exchangeRateSource?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    providerFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    networkFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    customerIp?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    riskScore?: NullableIntFieldUpdateOperationsInput | number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    failureCode?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutPaymentOrdersNestedInput
    paymentLink?: PaymentLinkUpdateOneRequiredWithoutPaymentOrdersNestedInput
    customer?: CustomerUpdateOneWithoutPaymentOrdersNestedInput
    providerTransactions?: ProviderTransactionUpdateManyWithoutPaymentOrderNestedInput
    events?: PaymentEventUpdateManyWithoutPaymentOrderNestedInput
    agentDecisions?: AgentDecisionUpdateManyWithoutPaymentOrderNestedInput
    manualSteps?: ManualProcessStepUpdateManyWithoutPaymentOrderNestedInput
  }

  export type PaymentOrderUncheckedUpdateWithoutBlockchainTxsInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    paymentLinkId?: StringFieldUpdateOperationsInput | string
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentOrderStatusFieldUpdateOperationsInput | $Enums.PaymentOrderStatus
    requestedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    requestedCurrency?: StringFieldUpdateOperationsInput | string
    settledAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    settledCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exchangeRateSource?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    providerFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    networkFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    customerIp?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    riskScore?: NullableIntFieldUpdateOperationsInput | number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    failureCode?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    providerTransactions?: ProviderTransactionUncheckedUpdateManyWithoutPaymentOrderNestedInput
    events?: PaymentEventUncheckedUpdateManyWithoutPaymentOrderNestedInput
    agentDecisions?: AgentDecisionUncheckedUpdateManyWithoutPaymentOrderNestedInput
    manualSteps?: ManualProcessStepUncheckedUpdateManyWithoutPaymentOrderNestedInput
  }

  export type WalletCreateWithoutGasSponsorshipInput = {
    id?: string
    address: string
    chainId: number
    type?: $Enums.WalletType
    smartWalletFactory?: string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    allowlist?: boolean
    blocklist?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user?: UserCreateNestedOneWithoutOwnedWalletsInput
    organization?: OrganizationCreateNestedOneWithoutWalletsInput
    primaryForUsers?: UserCreateNestedManyWithoutPrimaryWalletInput
    agent?: AgentCreateNestedOneWithoutAgentWalletInput
    transactions?: BlockchainTransactionCreateNestedManyWithoutWalletInput
  }

  export type WalletUncheckedCreateWithoutGasSponsorshipInput = {
    id?: string
    address: string
    chainId: number
    type?: $Enums.WalletType
    userId?: string | null
    organizationId?: string | null
    smartWalletFactory?: string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    allowlist?: boolean
    blocklist?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    primaryForUsers?: UserUncheckedCreateNestedManyWithoutPrimaryWalletInput
    agent?: AgentUncheckedCreateNestedOneWithoutAgentWalletInput
    transactions?: BlockchainTransactionUncheckedCreateNestedManyWithoutWalletInput
  }

  export type WalletCreateOrConnectWithoutGasSponsorshipInput = {
    where: WalletWhereUniqueInput
    create: XOR<WalletCreateWithoutGasSponsorshipInput, WalletUncheckedCreateWithoutGasSponsorshipInput>
  }

  export type BlockchainTransactionCreateWithoutGasSponsorshipInput = {
    id?: string
    hash: string
    chainId: number
    fromAddress: string
    toAddress?: string | null
    value: string
    data?: string | null
    gasLimit?: string | null
    gasPrice?: string | null
    nonce?: number | null
    status?: $Enums.BlockchainTxStatus
    blockNumber?: number | null
    confirmations?: number
    isSponsored?: boolean
    createdAt?: Date | string
    minedAt?: Date | string | null
    wallet: WalletCreateNestedOneWithoutTransactionsInput
    paymentOrder?: PaymentOrderCreateNestedOneWithoutBlockchainTxsInput
  }

  export type BlockchainTransactionUncheckedCreateWithoutGasSponsorshipInput = {
    id?: string
    hash: string
    chainId: number
    fromAddress: string
    toAddress?: string | null
    value: string
    data?: string | null
    gasLimit?: string | null
    gasPrice?: string | null
    nonce?: number | null
    status?: $Enums.BlockchainTxStatus
    blockNumber?: number | null
    confirmations?: number
    isSponsored?: boolean
    walletId: string
    paymentOrderId?: string | null
    createdAt?: Date | string
    minedAt?: Date | string | null
  }

  export type BlockchainTransactionCreateOrConnectWithoutGasSponsorshipInput = {
    where: BlockchainTransactionWhereUniqueInput
    create: XOR<BlockchainTransactionCreateWithoutGasSponsorshipInput, BlockchainTransactionUncheckedCreateWithoutGasSponsorshipInput>
  }

  export type BlockchainTransactionCreateManyGasSponsorshipInputEnvelope = {
    data: BlockchainTransactionCreateManyGasSponsorshipInput | BlockchainTransactionCreateManyGasSponsorshipInput[]
    skipDuplicates?: boolean
  }

  export type WalletUpsertWithoutGasSponsorshipInput = {
    update: XOR<WalletUpdateWithoutGasSponsorshipInput, WalletUncheckedUpdateWithoutGasSponsorshipInput>
    create: XOR<WalletCreateWithoutGasSponsorshipInput, WalletUncheckedCreateWithoutGasSponsorshipInput>
    where?: WalletWhereInput
  }

  export type WalletUpdateToOneWithWhereWithoutGasSponsorshipInput = {
    where?: WalletWhereInput
    data: XOR<WalletUpdateWithoutGasSponsorshipInput, WalletUncheckedUpdateWithoutGasSponsorshipInput>
  }

  export type WalletUpdateWithoutGasSponsorshipInput = {
    id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    type?: EnumWalletTypeFieldUpdateOperationsInput | $Enums.WalletType
    smartWalletFactory?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    allowlist?: BoolFieldUpdateOperationsInput | boolean
    blocklist?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneWithoutOwnedWalletsNestedInput
    organization?: OrganizationUpdateOneWithoutWalletsNestedInput
    primaryForUsers?: UserUpdateManyWithoutPrimaryWalletNestedInput
    agent?: AgentUpdateOneWithoutAgentWalletNestedInput
    transactions?: BlockchainTransactionUpdateManyWithoutWalletNestedInput
  }

  export type WalletUncheckedUpdateWithoutGasSponsorshipInput = {
    id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    type?: EnumWalletTypeFieldUpdateOperationsInput | $Enums.WalletType
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletFactory?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    allowlist?: BoolFieldUpdateOperationsInput | boolean
    blocklist?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    primaryForUsers?: UserUncheckedUpdateManyWithoutPrimaryWalletNestedInput
    agent?: AgentUncheckedUpdateOneWithoutAgentWalletNestedInput
    transactions?: BlockchainTransactionUncheckedUpdateManyWithoutWalletNestedInput
  }

  export type BlockchainTransactionUpsertWithWhereUniqueWithoutGasSponsorshipInput = {
    where: BlockchainTransactionWhereUniqueInput
    update: XOR<BlockchainTransactionUpdateWithoutGasSponsorshipInput, BlockchainTransactionUncheckedUpdateWithoutGasSponsorshipInput>
    create: XOR<BlockchainTransactionCreateWithoutGasSponsorshipInput, BlockchainTransactionUncheckedCreateWithoutGasSponsorshipInput>
  }

  export type BlockchainTransactionUpdateWithWhereUniqueWithoutGasSponsorshipInput = {
    where: BlockchainTransactionWhereUniqueInput
    data: XOR<BlockchainTransactionUpdateWithoutGasSponsorshipInput, BlockchainTransactionUncheckedUpdateWithoutGasSponsorshipInput>
  }

  export type BlockchainTransactionUpdateManyWithWhereWithoutGasSponsorshipInput = {
    where: BlockchainTransactionScalarWhereInput
    data: XOR<BlockchainTransactionUpdateManyMutationInput, BlockchainTransactionUncheckedUpdateManyWithoutGasSponsorshipInput>
  }

  export type OrganizationCreateWithoutProductsInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    billingEmail: string
    taxId?: string | null
    country: string
    complianceStatus?: $Enums.ComplianceStatus
    kycVerifiedAt?: Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    ownerId: string
    users?: OrganizationUserCreateNestedManyWithoutOrganizationInput
    customers?: CustomerCreateNestedManyWithoutOrganizationInput
    wallets?: WalletCreateNestedManyWithoutOrganizationInput
    paymentLinks?: PaymentLinkCreateNestedManyWithoutOrganizationInput
    paymentOrders?: PaymentOrderCreateNestedManyWithoutOrganizationInput
    providers?: ProviderConfigCreateNestedManyWithoutOrganizationInput
    apiKeys?: ApiKeyCreateNestedManyWithoutOrganizationInput
    webhooks?: WebhookCreateNestedManyWithoutOrganizationInput
    auditLogs?: AuditLogCreateNestedManyWithoutOrganizationInput
    agents?: AgentCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutProductsInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    billingEmail: string
    taxId?: string | null
    country: string
    complianceStatus?: $Enums.ComplianceStatus
    kycVerifiedAt?: Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    ownerId: string
    users?: OrganizationUserUncheckedCreateNestedManyWithoutOrganizationInput
    customers?: CustomerUncheckedCreateNestedManyWithoutOrganizationInput
    wallets?: WalletUncheckedCreateNestedManyWithoutOrganizationInput
    paymentLinks?: PaymentLinkUncheckedCreateNestedManyWithoutOrganizationInput
    paymentOrders?: PaymentOrderUncheckedCreateNestedManyWithoutOrganizationInput
    providers?: ProviderConfigUncheckedCreateNestedManyWithoutOrganizationInput
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutOrganizationInput
    webhooks?: WebhookUncheckedCreateNestedManyWithoutOrganizationInput
    auditLogs?: AuditLogUncheckedCreateNestedManyWithoutOrganizationInput
    agents?: AgentUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutProductsInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutProductsInput, OrganizationUncheckedCreateWithoutProductsInput>
  }

  export type PriceCreateWithoutProductInput = {
    id?: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    type?: $Enums.PriceType
    interval?: $Enums.BillingInterval | null
    intervalCount?: number
    trialPeriodDays?: number | null
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    subscriptionItems?: SubscriptionItemCreateNestedManyWithoutPriceInput
    paymentLinks?: PaymentLinkCreateNestedManyWithoutPriceInput
  }

  export type PriceUncheckedCreateWithoutProductInput = {
    id?: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    type?: $Enums.PriceType
    interval?: $Enums.BillingInterval | null
    intervalCount?: number
    trialPeriodDays?: number | null
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    subscriptionItems?: SubscriptionItemUncheckedCreateNestedManyWithoutPriceInput
    paymentLinks?: PaymentLinkUncheckedCreateNestedManyWithoutPriceInput
  }

  export type PriceCreateOrConnectWithoutProductInput = {
    where: PriceWhereUniqueInput
    create: XOR<PriceCreateWithoutProductInput, PriceUncheckedCreateWithoutProductInput>
  }

  export type PriceCreateManyProductInputEnvelope = {
    data: PriceCreateManyProductInput | PriceCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type OrganizationUpsertWithoutProductsInput = {
    update: XOR<OrganizationUpdateWithoutProductsInput, OrganizationUncheckedUpdateWithoutProductsInput>
    create: XOR<OrganizationCreateWithoutProductsInput, OrganizationUncheckedCreateWithoutProductsInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutProductsInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutProductsInput, OrganizationUncheckedUpdateWithoutProductsInput>
  }

  export type OrganizationUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    billingEmail?: StringFieldUpdateOperationsInput | string
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: StringFieldUpdateOperationsInput | string
    users?: OrganizationUserUpdateManyWithoutOrganizationNestedInput
    customers?: CustomerUpdateManyWithoutOrganizationNestedInput
    wallets?: WalletUpdateManyWithoutOrganizationNestedInput
    paymentLinks?: PaymentLinkUpdateManyWithoutOrganizationNestedInput
    paymentOrders?: PaymentOrderUpdateManyWithoutOrganizationNestedInput
    providers?: ProviderConfigUpdateManyWithoutOrganizationNestedInput
    apiKeys?: ApiKeyUpdateManyWithoutOrganizationNestedInput
    webhooks?: WebhookUpdateManyWithoutOrganizationNestedInput
    auditLogs?: AuditLogUpdateManyWithoutOrganizationNestedInput
    agents?: AgentUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    billingEmail?: StringFieldUpdateOperationsInput | string
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: StringFieldUpdateOperationsInput | string
    users?: OrganizationUserUncheckedUpdateManyWithoutOrganizationNestedInput
    customers?: CustomerUncheckedUpdateManyWithoutOrganizationNestedInput
    wallets?: WalletUncheckedUpdateManyWithoutOrganizationNestedInput
    paymentLinks?: PaymentLinkUncheckedUpdateManyWithoutOrganizationNestedInput
    paymentOrders?: PaymentOrderUncheckedUpdateManyWithoutOrganizationNestedInput
    providers?: ProviderConfigUncheckedUpdateManyWithoutOrganizationNestedInput
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutOrganizationNestedInput
    webhooks?: WebhookUncheckedUpdateManyWithoutOrganizationNestedInput
    auditLogs?: AuditLogUncheckedUpdateManyWithoutOrganizationNestedInput
    agents?: AgentUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type PriceUpsertWithWhereUniqueWithoutProductInput = {
    where: PriceWhereUniqueInput
    update: XOR<PriceUpdateWithoutProductInput, PriceUncheckedUpdateWithoutProductInput>
    create: XOR<PriceCreateWithoutProductInput, PriceUncheckedCreateWithoutProductInput>
  }

  export type PriceUpdateWithWhereUniqueWithoutProductInput = {
    where: PriceWhereUniqueInput
    data: XOR<PriceUpdateWithoutProductInput, PriceUncheckedUpdateWithoutProductInput>
  }

  export type PriceUpdateManyWithWhereWithoutProductInput = {
    where: PriceScalarWhereInput
    data: XOR<PriceUpdateManyMutationInput, PriceUncheckedUpdateManyWithoutProductInput>
  }

  export type PriceScalarWhereInput = {
    AND?: PriceScalarWhereInput | PriceScalarWhereInput[]
    OR?: PriceScalarWhereInput[]
    NOT?: PriceScalarWhereInput | PriceScalarWhereInput[]
    id?: StringFilter<"Price"> | string
    productId?: StringFilter<"Price"> | string
    amount?: DecimalFilter<"Price"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"Price"> | string
    type?: EnumPriceTypeFilter<"Price"> | $Enums.PriceType
    interval?: EnumBillingIntervalNullableFilter<"Price"> | $Enums.BillingInterval | null
    intervalCount?: IntFilter<"Price"> | number
    trialPeriodDays?: IntNullableFilter<"Price"> | number | null
    isActive?: BoolFilter<"Price"> | boolean
    metadata?: JsonNullableFilter<"Price">
    createdAt?: DateTimeFilter<"Price"> | Date | string
    updatedAt?: DateTimeFilter<"Price"> | Date | string
  }

  export type ProductCreateWithoutPricesInput = {
    id?: string
    name: string
    description?: string | null
    type?: $Enums.ProductType
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    images?: ProductCreateimagesInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutProductsInput
  }

  export type ProductUncheckedCreateWithoutPricesInput = {
    id?: string
    organizationId: string
    name: string
    description?: string | null
    type?: $Enums.ProductType
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    images?: ProductCreateimagesInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductCreateOrConnectWithoutPricesInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutPricesInput, ProductUncheckedCreateWithoutPricesInput>
  }

  export type SubscriptionItemCreateWithoutPriceInput = {
    id?: string
    quantity?: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    subscription: SubscriptionCreateNestedOneWithoutItemsInput
  }

  export type SubscriptionItemUncheckedCreateWithoutPriceInput = {
    id?: string
    subscriptionId: string
    quantity?: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscriptionItemCreateOrConnectWithoutPriceInput = {
    where: SubscriptionItemWhereUniqueInput
    create: XOR<SubscriptionItemCreateWithoutPriceInput, SubscriptionItemUncheckedCreateWithoutPriceInput>
  }

  export type SubscriptionItemCreateManyPriceInputEnvelope = {
    data: SubscriptionItemCreateManyPriceInput | SubscriptionItemCreateManyPriceInput[]
    skipDuplicates?: boolean
  }

  export type PaymentLinkCreateWithoutPriceInput = {
    id?: string
    title: string
    description?: string | null
    referenceId?: string | null
    shortCode: string
    qrCode?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    targetAmount?: Decimal | DecimalJsLike | number | string | null
    targetCurrency?: string | null
    smartContractAddress?: string | null
    smartContractChainId?: number | null
    tokenAddress?: string | null
    status?: $Enums.PaymentLinkStatus
    allowMultiplePayments?: boolean
    requiresKyc?: boolean
    expiresAt?: Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutPaymentLinksInput
    createdBy: UserCreateNestedOneWithoutPaymentLinksInput
    executingAgent: AgentCreateNestedOneWithoutPaymentLinksInput
    paymentOrders?: PaymentOrderCreateNestedManyWithoutPaymentLinkInput
  }

  export type PaymentLinkUncheckedCreateWithoutPriceInput = {
    id?: string
    organizationId: string
    createdById: string
    executingAgentId: string
    title: string
    description?: string | null
    referenceId?: string | null
    shortCode: string
    qrCode?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    targetAmount?: Decimal | DecimalJsLike | number | string | null
    targetCurrency?: string | null
    smartContractAddress?: string | null
    smartContractChainId?: number | null
    tokenAddress?: string | null
    status?: $Enums.PaymentLinkStatus
    allowMultiplePayments?: boolean
    requiresKyc?: boolean
    expiresAt?: Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    paymentOrders?: PaymentOrderUncheckedCreateNestedManyWithoutPaymentLinkInput
  }

  export type PaymentLinkCreateOrConnectWithoutPriceInput = {
    where: PaymentLinkWhereUniqueInput
    create: XOR<PaymentLinkCreateWithoutPriceInput, PaymentLinkUncheckedCreateWithoutPriceInput>
  }

  export type PaymentLinkCreateManyPriceInputEnvelope = {
    data: PaymentLinkCreateManyPriceInput | PaymentLinkCreateManyPriceInput[]
    skipDuplicates?: boolean
  }

  export type ProductUpsertWithoutPricesInput = {
    update: XOR<ProductUpdateWithoutPricesInput, ProductUncheckedUpdateWithoutPricesInput>
    create: XOR<ProductCreateWithoutPricesInput, ProductUncheckedCreateWithoutPricesInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutPricesInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutPricesInput, ProductUncheckedUpdateWithoutPricesInput>
  }

  export type ProductUpdateWithoutPricesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    images?: ProductUpdateimagesInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutPricesInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    images?: ProductUpdateimagesInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionItemUpsertWithWhereUniqueWithoutPriceInput = {
    where: SubscriptionItemWhereUniqueInput
    update: XOR<SubscriptionItemUpdateWithoutPriceInput, SubscriptionItemUncheckedUpdateWithoutPriceInput>
    create: XOR<SubscriptionItemCreateWithoutPriceInput, SubscriptionItemUncheckedCreateWithoutPriceInput>
  }

  export type SubscriptionItemUpdateWithWhereUniqueWithoutPriceInput = {
    where: SubscriptionItemWhereUniqueInput
    data: XOR<SubscriptionItemUpdateWithoutPriceInput, SubscriptionItemUncheckedUpdateWithoutPriceInput>
  }

  export type SubscriptionItemUpdateManyWithWhereWithoutPriceInput = {
    where: SubscriptionItemScalarWhereInput
    data: XOR<SubscriptionItemUpdateManyMutationInput, SubscriptionItemUncheckedUpdateManyWithoutPriceInput>
  }

  export type PaymentLinkUpsertWithWhereUniqueWithoutPriceInput = {
    where: PaymentLinkWhereUniqueInput
    update: XOR<PaymentLinkUpdateWithoutPriceInput, PaymentLinkUncheckedUpdateWithoutPriceInput>
    create: XOR<PaymentLinkCreateWithoutPriceInput, PaymentLinkUncheckedCreateWithoutPriceInput>
  }

  export type PaymentLinkUpdateWithWhereUniqueWithoutPriceInput = {
    where: PaymentLinkWhereUniqueInput
    data: XOR<PaymentLinkUpdateWithoutPriceInput, PaymentLinkUncheckedUpdateWithoutPriceInput>
  }

  export type PaymentLinkUpdateManyWithWhereWithoutPriceInput = {
    where: PaymentLinkScalarWhereInput
    data: XOR<PaymentLinkUpdateManyMutationInput, PaymentLinkUncheckedUpdateManyWithoutPriceInput>
  }

  export type OrganizationCreateWithoutPaymentLinksInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    billingEmail: string
    taxId?: string | null
    country: string
    complianceStatus?: $Enums.ComplianceStatus
    kycVerifiedAt?: Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    ownerId: string
    users?: OrganizationUserCreateNestedManyWithoutOrganizationInput
    customers?: CustomerCreateNestedManyWithoutOrganizationInput
    products?: ProductCreateNestedManyWithoutOrganizationInput
    wallets?: WalletCreateNestedManyWithoutOrganizationInput
    paymentOrders?: PaymentOrderCreateNestedManyWithoutOrganizationInput
    providers?: ProviderConfigCreateNestedManyWithoutOrganizationInput
    apiKeys?: ApiKeyCreateNestedManyWithoutOrganizationInput
    webhooks?: WebhookCreateNestedManyWithoutOrganizationInput
    auditLogs?: AuditLogCreateNestedManyWithoutOrganizationInput
    agents?: AgentCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutPaymentLinksInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    billingEmail: string
    taxId?: string | null
    country: string
    complianceStatus?: $Enums.ComplianceStatus
    kycVerifiedAt?: Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    ownerId: string
    users?: OrganizationUserUncheckedCreateNestedManyWithoutOrganizationInput
    customers?: CustomerUncheckedCreateNestedManyWithoutOrganizationInput
    products?: ProductUncheckedCreateNestedManyWithoutOrganizationInput
    wallets?: WalletUncheckedCreateNestedManyWithoutOrganizationInput
    paymentOrders?: PaymentOrderUncheckedCreateNestedManyWithoutOrganizationInput
    providers?: ProviderConfigUncheckedCreateNestedManyWithoutOrganizationInput
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutOrganizationInput
    webhooks?: WebhookUncheckedCreateNestedManyWithoutOrganizationInput
    auditLogs?: AuditLogUncheckedCreateNestedManyWithoutOrganizationInput
    agents?: AgentUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutPaymentLinksInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutPaymentLinksInput, OrganizationUncheckedCreateWithoutPaymentLinksInput>
  }

  export type UserCreateWithoutPaymentLinksInput = {
    id?: string
    email: string
    name?: string | null
    avatarUrl?: string | null
    authProvider?: $Enums.AuthProvider
    authProviderId?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    primaryWallet?: WalletCreateNestedOneWithoutPrimaryForUsersInput
    organizations?: OrganizationUserCreateNestedManyWithoutUserInput
    ownedWallets?: WalletCreateNestedManyWithoutUserInput
    auditLogs?: AuditLogCreateNestedManyWithoutUserInput
    agentInteractions?: AgentInteractionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutPaymentLinksInput = {
    id?: string
    email: string
    name?: string | null
    avatarUrl?: string | null
    authProvider?: $Enums.AuthProvider
    authProviderId?: string | null
    emailVerified?: boolean
    primaryWalletId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    organizations?: OrganizationUserUncheckedCreateNestedManyWithoutUserInput
    ownedWallets?: WalletUncheckedCreateNestedManyWithoutUserInput
    auditLogs?: AuditLogUncheckedCreateNestedManyWithoutUserInput
    agentInteractions?: AgentInteractionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutPaymentLinksInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPaymentLinksInput, UserUncheckedCreateWithoutPaymentLinksInput>
  }

  export type AgentCreateWithoutPaymentLinksInput = {
    id?: string
    name: string
    type: $Enums.AgentType
    version: string
    model: string
    graphDefinition: JsonNullValueInput | InputJsonValue
    tools?: AgentCreatetoolsInput | string[]
    systemPrompt?: string | null
    supportedProviders?: AgentCreatesupportedProvidersInput | string[]
    supportedChains?: AgentCreatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    totalExecutions?: number
    avgExecutionTime?: number | null
    successRate?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutAgentsInput
    agentWallet?: WalletCreateNestedOneWithoutAgentInput
    decisions?: AgentDecisionCreateNestedManyWithoutAgentInput
    checkpoints?: AgentCheckpointCreateNestedManyWithoutAgentInput
  }

  export type AgentUncheckedCreateWithoutPaymentLinksInput = {
    id?: string
    organizationId: string
    name: string
    type: $Enums.AgentType
    version: string
    model: string
    agentWalletId?: string | null
    graphDefinition: JsonNullValueInput | InputJsonValue
    tools?: AgentCreatetoolsInput | string[]
    systemPrompt?: string | null
    supportedProviders?: AgentCreatesupportedProvidersInput | string[]
    supportedChains?: AgentCreatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    totalExecutions?: number
    avgExecutionTime?: number | null
    successRate?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    decisions?: AgentDecisionUncheckedCreateNestedManyWithoutAgentInput
    checkpoints?: AgentCheckpointUncheckedCreateNestedManyWithoutAgentInput
  }

  export type AgentCreateOrConnectWithoutPaymentLinksInput = {
    where: AgentWhereUniqueInput
    create: XOR<AgentCreateWithoutPaymentLinksInput, AgentUncheckedCreateWithoutPaymentLinksInput>
  }

  export type PriceCreateWithoutPaymentLinksInput = {
    id?: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    type?: $Enums.PriceType
    interval?: $Enums.BillingInterval | null
    intervalCount?: number
    trialPeriodDays?: number | null
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutPricesInput
    subscriptionItems?: SubscriptionItemCreateNestedManyWithoutPriceInput
  }

  export type PriceUncheckedCreateWithoutPaymentLinksInput = {
    id?: string
    productId: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    type?: $Enums.PriceType
    interval?: $Enums.BillingInterval | null
    intervalCount?: number
    trialPeriodDays?: number | null
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    subscriptionItems?: SubscriptionItemUncheckedCreateNestedManyWithoutPriceInput
  }

  export type PriceCreateOrConnectWithoutPaymentLinksInput = {
    where: PriceWhereUniqueInput
    create: XOR<PriceCreateWithoutPaymentLinksInput, PriceUncheckedCreateWithoutPaymentLinksInput>
  }

  export type PaymentOrderCreateWithoutPaymentLinkInput = {
    id?: string
    orderNumber: string
    status?: $Enums.PaymentOrderStatus
    requestedAmount: Decimal | DecimalJsLike | number | string
    requestedCurrency: string
    settledAmount?: Decimal | DecimalJsLike | number | string | null
    settledCurrency?: string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: Date | string | null
    exchangeRateSource?: string | null
    platformFee?: Decimal | DecimalJsLike | number | string
    providerFee?: Decimal | DecimalJsLike | number | string
    networkFee?: Decimal | DecimalJsLike | number | string
    totalFee?: Decimal | DecimalJsLike | number | string
    customerEmail?: string | null
    customerName?: string | null
    customerWallet?: string | null
    customerIp?: string | null
    customerCountry?: string | null
    riskScore?: number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: $Enums.KycStatus
    kycVerifiedAt?: Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    failureCode?: string | null
    retryCount?: number
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutPaymentOrdersInput
    customer?: CustomerCreateNestedOneWithoutPaymentOrdersInput
    providerTransactions?: ProviderTransactionCreateNestedManyWithoutPaymentOrderInput
    blockchainTxs?: BlockchainTransactionCreateNestedManyWithoutPaymentOrderInput
    events?: PaymentEventCreateNestedManyWithoutPaymentOrderInput
    agentDecisions?: AgentDecisionCreateNestedManyWithoutPaymentOrderInput
    manualSteps?: ManualProcessStepCreateNestedManyWithoutPaymentOrderInput
  }

  export type PaymentOrderUncheckedCreateWithoutPaymentLinkInput = {
    id?: string
    organizationId: string
    customerId?: string | null
    orderNumber: string
    status?: $Enums.PaymentOrderStatus
    requestedAmount: Decimal | DecimalJsLike | number | string
    requestedCurrency: string
    settledAmount?: Decimal | DecimalJsLike | number | string | null
    settledCurrency?: string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: Date | string | null
    exchangeRateSource?: string | null
    platformFee?: Decimal | DecimalJsLike | number | string
    providerFee?: Decimal | DecimalJsLike | number | string
    networkFee?: Decimal | DecimalJsLike | number | string
    totalFee?: Decimal | DecimalJsLike | number | string
    customerEmail?: string | null
    customerName?: string | null
    customerWallet?: string | null
    customerIp?: string | null
    customerCountry?: string | null
    riskScore?: number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: $Enums.KycStatus
    kycVerifiedAt?: Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    failureCode?: string | null
    retryCount?: number
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    updatedAt?: Date | string
    providerTransactions?: ProviderTransactionUncheckedCreateNestedManyWithoutPaymentOrderInput
    blockchainTxs?: BlockchainTransactionUncheckedCreateNestedManyWithoutPaymentOrderInput
    events?: PaymentEventUncheckedCreateNestedManyWithoutPaymentOrderInput
    agentDecisions?: AgentDecisionUncheckedCreateNestedManyWithoutPaymentOrderInput
    manualSteps?: ManualProcessStepUncheckedCreateNestedManyWithoutPaymentOrderInput
  }

  export type PaymentOrderCreateOrConnectWithoutPaymentLinkInput = {
    where: PaymentOrderWhereUniqueInput
    create: XOR<PaymentOrderCreateWithoutPaymentLinkInput, PaymentOrderUncheckedCreateWithoutPaymentLinkInput>
  }

  export type PaymentOrderCreateManyPaymentLinkInputEnvelope = {
    data: PaymentOrderCreateManyPaymentLinkInput | PaymentOrderCreateManyPaymentLinkInput[]
    skipDuplicates?: boolean
  }

  export type OrganizationUpsertWithoutPaymentLinksInput = {
    update: XOR<OrganizationUpdateWithoutPaymentLinksInput, OrganizationUncheckedUpdateWithoutPaymentLinksInput>
    create: XOR<OrganizationCreateWithoutPaymentLinksInput, OrganizationUncheckedCreateWithoutPaymentLinksInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutPaymentLinksInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutPaymentLinksInput, OrganizationUncheckedUpdateWithoutPaymentLinksInput>
  }

  export type OrganizationUpdateWithoutPaymentLinksInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    billingEmail?: StringFieldUpdateOperationsInput | string
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: StringFieldUpdateOperationsInput | string
    users?: OrganizationUserUpdateManyWithoutOrganizationNestedInput
    customers?: CustomerUpdateManyWithoutOrganizationNestedInput
    products?: ProductUpdateManyWithoutOrganizationNestedInput
    wallets?: WalletUpdateManyWithoutOrganizationNestedInput
    paymentOrders?: PaymentOrderUpdateManyWithoutOrganizationNestedInput
    providers?: ProviderConfigUpdateManyWithoutOrganizationNestedInput
    apiKeys?: ApiKeyUpdateManyWithoutOrganizationNestedInput
    webhooks?: WebhookUpdateManyWithoutOrganizationNestedInput
    auditLogs?: AuditLogUpdateManyWithoutOrganizationNestedInput
    agents?: AgentUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutPaymentLinksInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    billingEmail?: StringFieldUpdateOperationsInput | string
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: StringFieldUpdateOperationsInput | string
    users?: OrganizationUserUncheckedUpdateManyWithoutOrganizationNestedInput
    customers?: CustomerUncheckedUpdateManyWithoutOrganizationNestedInput
    products?: ProductUncheckedUpdateManyWithoutOrganizationNestedInput
    wallets?: WalletUncheckedUpdateManyWithoutOrganizationNestedInput
    paymentOrders?: PaymentOrderUncheckedUpdateManyWithoutOrganizationNestedInput
    providers?: ProviderConfigUncheckedUpdateManyWithoutOrganizationNestedInput
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutOrganizationNestedInput
    webhooks?: WebhookUncheckedUpdateManyWithoutOrganizationNestedInput
    auditLogs?: AuditLogUncheckedUpdateManyWithoutOrganizationNestedInput
    agents?: AgentUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type UserUpsertWithoutPaymentLinksInput = {
    update: XOR<UserUpdateWithoutPaymentLinksInput, UserUncheckedUpdateWithoutPaymentLinksInput>
    create: XOR<UserCreateWithoutPaymentLinksInput, UserUncheckedCreateWithoutPaymentLinksInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPaymentLinksInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPaymentLinksInput, UserUncheckedUpdateWithoutPaymentLinksInput>
  }

  export type UserUpdateWithoutPaymentLinksInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    authProvider?: EnumAuthProviderFieldUpdateOperationsInput | $Enums.AuthProvider
    authProviderId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    primaryWallet?: WalletUpdateOneWithoutPrimaryForUsersNestedInput
    organizations?: OrganizationUserUpdateManyWithoutUserNestedInput
    ownedWallets?: WalletUpdateManyWithoutUserNestedInput
    auditLogs?: AuditLogUpdateManyWithoutUserNestedInput
    agentInteractions?: AgentInteractionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutPaymentLinksInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    authProvider?: EnumAuthProviderFieldUpdateOperationsInput | $Enums.AuthProvider
    authProviderId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    primaryWalletId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organizations?: OrganizationUserUncheckedUpdateManyWithoutUserNestedInput
    ownedWallets?: WalletUncheckedUpdateManyWithoutUserNestedInput
    auditLogs?: AuditLogUncheckedUpdateManyWithoutUserNestedInput
    agentInteractions?: AgentInteractionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type AgentUpsertWithoutPaymentLinksInput = {
    update: XOR<AgentUpdateWithoutPaymentLinksInput, AgentUncheckedUpdateWithoutPaymentLinksInput>
    create: XOR<AgentCreateWithoutPaymentLinksInput, AgentUncheckedCreateWithoutPaymentLinksInput>
    where?: AgentWhereInput
  }

  export type AgentUpdateToOneWithWhereWithoutPaymentLinksInput = {
    where?: AgentWhereInput
    data: XOR<AgentUpdateWithoutPaymentLinksInput, AgentUncheckedUpdateWithoutPaymentLinksInput>
  }

  export type AgentUpdateWithoutPaymentLinksInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumAgentTypeFieldUpdateOperationsInput | $Enums.AgentType
    version?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    graphDefinition?: JsonNullValueInput | InputJsonValue
    tools?: AgentUpdatetoolsInput | string[]
    systemPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    supportedProviders?: AgentUpdatesupportedProvidersInput | string[]
    supportedChains?: AgentUpdatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    totalExecutions?: IntFieldUpdateOperationsInput | number
    avgExecutionTime?: NullableIntFieldUpdateOperationsInput | number | null
    successRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutAgentsNestedInput
    agentWallet?: WalletUpdateOneWithoutAgentNestedInput
    decisions?: AgentDecisionUpdateManyWithoutAgentNestedInput
    checkpoints?: AgentCheckpointUpdateManyWithoutAgentNestedInput
  }

  export type AgentUncheckedUpdateWithoutPaymentLinksInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumAgentTypeFieldUpdateOperationsInput | $Enums.AgentType
    version?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    agentWalletId?: NullableStringFieldUpdateOperationsInput | string | null
    graphDefinition?: JsonNullValueInput | InputJsonValue
    tools?: AgentUpdatetoolsInput | string[]
    systemPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    supportedProviders?: AgentUpdatesupportedProvidersInput | string[]
    supportedChains?: AgentUpdatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    totalExecutions?: IntFieldUpdateOperationsInput | number
    avgExecutionTime?: NullableIntFieldUpdateOperationsInput | number | null
    successRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    decisions?: AgentDecisionUncheckedUpdateManyWithoutAgentNestedInput
    checkpoints?: AgentCheckpointUncheckedUpdateManyWithoutAgentNestedInput
  }

  export type PriceUpsertWithoutPaymentLinksInput = {
    update: XOR<PriceUpdateWithoutPaymentLinksInput, PriceUncheckedUpdateWithoutPaymentLinksInput>
    create: XOR<PriceCreateWithoutPaymentLinksInput, PriceUncheckedCreateWithoutPaymentLinksInput>
    where?: PriceWhereInput
  }

  export type PriceUpdateToOneWithWhereWithoutPaymentLinksInput = {
    where?: PriceWhereInput
    data: XOR<PriceUpdateWithoutPaymentLinksInput, PriceUncheckedUpdateWithoutPaymentLinksInput>
  }

  export type PriceUpdateWithoutPaymentLinksInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    type?: EnumPriceTypeFieldUpdateOperationsInput | $Enums.PriceType
    interval?: NullableEnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval | null
    intervalCount?: IntFieldUpdateOperationsInput | number
    trialPeriodDays?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutPricesNestedInput
    subscriptionItems?: SubscriptionItemUpdateManyWithoutPriceNestedInput
  }

  export type PriceUncheckedUpdateWithoutPaymentLinksInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    type?: EnumPriceTypeFieldUpdateOperationsInput | $Enums.PriceType
    interval?: NullableEnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval | null
    intervalCount?: IntFieldUpdateOperationsInput | number
    trialPeriodDays?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    subscriptionItems?: SubscriptionItemUncheckedUpdateManyWithoutPriceNestedInput
  }

  export type PaymentOrderUpsertWithWhereUniqueWithoutPaymentLinkInput = {
    where: PaymentOrderWhereUniqueInput
    update: XOR<PaymentOrderUpdateWithoutPaymentLinkInput, PaymentOrderUncheckedUpdateWithoutPaymentLinkInput>
    create: XOR<PaymentOrderCreateWithoutPaymentLinkInput, PaymentOrderUncheckedCreateWithoutPaymentLinkInput>
  }

  export type PaymentOrderUpdateWithWhereUniqueWithoutPaymentLinkInput = {
    where: PaymentOrderWhereUniqueInput
    data: XOR<PaymentOrderUpdateWithoutPaymentLinkInput, PaymentOrderUncheckedUpdateWithoutPaymentLinkInput>
  }

  export type PaymentOrderUpdateManyWithWhereWithoutPaymentLinkInput = {
    where: PaymentOrderScalarWhereInput
    data: XOR<PaymentOrderUpdateManyMutationInput, PaymentOrderUncheckedUpdateManyWithoutPaymentLinkInput>
  }

  export type OrganizationCreateWithoutPaymentOrdersInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    billingEmail: string
    taxId?: string | null
    country: string
    complianceStatus?: $Enums.ComplianceStatus
    kycVerifiedAt?: Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    ownerId: string
    users?: OrganizationUserCreateNestedManyWithoutOrganizationInput
    customers?: CustomerCreateNestedManyWithoutOrganizationInput
    products?: ProductCreateNestedManyWithoutOrganizationInput
    wallets?: WalletCreateNestedManyWithoutOrganizationInput
    paymentLinks?: PaymentLinkCreateNestedManyWithoutOrganizationInput
    providers?: ProviderConfigCreateNestedManyWithoutOrganizationInput
    apiKeys?: ApiKeyCreateNestedManyWithoutOrganizationInput
    webhooks?: WebhookCreateNestedManyWithoutOrganizationInput
    auditLogs?: AuditLogCreateNestedManyWithoutOrganizationInput
    agents?: AgentCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutPaymentOrdersInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    billingEmail: string
    taxId?: string | null
    country: string
    complianceStatus?: $Enums.ComplianceStatus
    kycVerifiedAt?: Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    ownerId: string
    users?: OrganizationUserUncheckedCreateNestedManyWithoutOrganizationInput
    customers?: CustomerUncheckedCreateNestedManyWithoutOrganizationInput
    products?: ProductUncheckedCreateNestedManyWithoutOrganizationInput
    wallets?: WalletUncheckedCreateNestedManyWithoutOrganizationInput
    paymentLinks?: PaymentLinkUncheckedCreateNestedManyWithoutOrganizationInput
    providers?: ProviderConfigUncheckedCreateNestedManyWithoutOrganizationInput
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutOrganizationInput
    webhooks?: WebhookUncheckedCreateNestedManyWithoutOrganizationInput
    auditLogs?: AuditLogUncheckedCreateNestedManyWithoutOrganizationInput
    agents?: AgentUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutPaymentOrdersInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutPaymentOrdersInput, OrganizationUncheckedCreateWithoutPaymentOrdersInput>
  }

  export type PaymentLinkCreateWithoutPaymentOrdersInput = {
    id?: string
    title: string
    description?: string | null
    referenceId?: string | null
    shortCode: string
    qrCode?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    targetAmount?: Decimal | DecimalJsLike | number | string | null
    targetCurrency?: string | null
    smartContractAddress?: string | null
    smartContractChainId?: number | null
    tokenAddress?: string | null
    status?: $Enums.PaymentLinkStatus
    allowMultiplePayments?: boolean
    requiresKyc?: boolean
    expiresAt?: Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutPaymentLinksInput
    createdBy: UserCreateNestedOneWithoutPaymentLinksInput
    executingAgent: AgentCreateNestedOneWithoutPaymentLinksInput
    price?: PriceCreateNestedOneWithoutPaymentLinksInput
  }

  export type PaymentLinkUncheckedCreateWithoutPaymentOrdersInput = {
    id?: string
    organizationId: string
    createdById: string
    executingAgentId: string
    title: string
    description?: string | null
    referenceId?: string | null
    shortCode: string
    qrCode?: string | null
    priceId?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    targetAmount?: Decimal | DecimalJsLike | number | string | null
    targetCurrency?: string | null
    smartContractAddress?: string | null
    smartContractChainId?: number | null
    tokenAddress?: string | null
    status?: $Enums.PaymentLinkStatus
    allowMultiplePayments?: boolean
    requiresKyc?: boolean
    expiresAt?: Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentLinkCreateOrConnectWithoutPaymentOrdersInput = {
    where: PaymentLinkWhereUniqueInput
    create: XOR<PaymentLinkCreateWithoutPaymentOrdersInput, PaymentLinkUncheckedCreateWithoutPaymentOrdersInput>
  }

  export type CustomerCreateWithoutPaymentOrdersInput = {
    id?: string
    email: string
    name?: string | null
    phone?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    walletAddress?: string | null
    preferredChainId?: number | null
    isActive?: boolean
    emailVerified?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutCustomersInput
    paymentMethods?: CustomerPaymentMethodCreateNestedManyWithoutCustomerInput
    subscriptions?: SubscriptionCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateWithoutPaymentOrdersInput = {
    id?: string
    organizationId: string
    email: string
    name?: string | null
    phone?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    walletAddress?: string | null
    preferredChainId?: number | null
    isActive?: boolean
    emailVerified?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    paymentMethods?: CustomerPaymentMethodUncheckedCreateNestedManyWithoutCustomerInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerCreateOrConnectWithoutPaymentOrdersInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutPaymentOrdersInput, CustomerUncheckedCreateWithoutPaymentOrdersInput>
  }

  export type ProviderTransactionCreateWithoutPaymentOrderInput = {
    id?: string
    type: $Enums.ProviderTxType
    externalId?: string | null
    status: string
    request: JsonNullValueInput | InputJsonValue
    response?: NullableJsonNullValueInput | InputJsonValue
    errorCode?: string | null
    errorMessage?: string | null
    isRetryable?: boolean
    createdAt?: Date | string
    completedAt?: Date | string | null
    provider: ProviderCreateNestedOneWithoutTransactionsInput
  }

  export type ProviderTransactionUncheckedCreateWithoutPaymentOrderInput = {
    id?: string
    providerId: string
    type: $Enums.ProviderTxType
    externalId?: string | null
    status: string
    request: JsonNullValueInput | InputJsonValue
    response?: NullableJsonNullValueInput | InputJsonValue
    errorCode?: string | null
    errorMessage?: string | null
    isRetryable?: boolean
    createdAt?: Date | string
    completedAt?: Date | string | null
  }

  export type ProviderTransactionCreateOrConnectWithoutPaymentOrderInput = {
    where: ProviderTransactionWhereUniqueInput
    create: XOR<ProviderTransactionCreateWithoutPaymentOrderInput, ProviderTransactionUncheckedCreateWithoutPaymentOrderInput>
  }

  export type ProviderTransactionCreateManyPaymentOrderInputEnvelope = {
    data: ProviderTransactionCreateManyPaymentOrderInput | ProviderTransactionCreateManyPaymentOrderInput[]
    skipDuplicates?: boolean
  }

  export type BlockchainTransactionCreateWithoutPaymentOrderInput = {
    id?: string
    hash: string
    chainId: number
    fromAddress: string
    toAddress?: string | null
    value: string
    data?: string | null
    gasLimit?: string | null
    gasPrice?: string | null
    nonce?: number | null
    status?: $Enums.BlockchainTxStatus
    blockNumber?: number | null
    confirmations?: number
    isSponsored?: boolean
    createdAt?: Date | string
    minedAt?: Date | string | null
    gasSponsorship?: GasSponsorshipCreateNestedOneWithoutTransactionsInput
    wallet: WalletCreateNestedOneWithoutTransactionsInput
  }

  export type BlockchainTransactionUncheckedCreateWithoutPaymentOrderInput = {
    id?: string
    hash: string
    chainId: number
    fromAddress: string
    toAddress?: string | null
    value: string
    data?: string | null
    gasLimit?: string | null
    gasPrice?: string | null
    nonce?: number | null
    status?: $Enums.BlockchainTxStatus
    blockNumber?: number | null
    confirmations?: number
    isSponsored?: boolean
    sponsorshipId?: string | null
    walletId: string
    createdAt?: Date | string
    minedAt?: Date | string | null
  }

  export type BlockchainTransactionCreateOrConnectWithoutPaymentOrderInput = {
    where: BlockchainTransactionWhereUniqueInput
    create: XOR<BlockchainTransactionCreateWithoutPaymentOrderInput, BlockchainTransactionUncheckedCreateWithoutPaymentOrderInput>
  }

  export type BlockchainTransactionCreateManyPaymentOrderInputEnvelope = {
    data: BlockchainTransactionCreateManyPaymentOrderInput | BlockchainTransactionCreateManyPaymentOrderInput[]
    skipDuplicates?: boolean
  }

  export type PaymentEventCreateWithoutPaymentOrderInput = {
    id?: string
    sequenceNumber: number
    eventType: string
    eventVersion?: string
    data: JsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    kafkaTopic?: string | null
    kafkaPartition?: number | null
    kafkaOffset?: bigint | number | null
    occurredAt?: Date | string
  }

  export type PaymentEventUncheckedCreateWithoutPaymentOrderInput = {
    id?: string
    sequenceNumber: number
    eventType: string
    eventVersion?: string
    data: JsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    kafkaTopic?: string | null
    kafkaPartition?: number | null
    kafkaOffset?: bigint | number | null
    occurredAt?: Date | string
  }

  export type PaymentEventCreateOrConnectWithoutPaymentOrderInput = {
    where: PaymentEventWhereUniqueInput
    create: XOR<PaymentEventCreateWithoutPaymentOrderInput, PaymentEventUncheckedCreateWithoutPaymentOrderInput>
  }

  export type PaymentEventCreateManyPaymentOrderInputEnvelope = {
    data: PaymentEventCreateManyPaymentOrderInput | PaymentEventCreateManyPaymentOrderInput[]
    skipDuplicates?: boolean
  }

  export type AgentDecisionCreateWithoutPaymentOrderInput = {
    id?: string
    decisionType: string
    input: JsonNullValueInput | InputJsonValue
    reasoning: JsonNullValueInput | InputJsonValue
    decision: JsonNullValueInput | InputJsonValue
    confidence: Decimal | DecimalJsLike | number | string
    executionTime: number
    tokensUsed?: number | null
    wasOverridden?: boolean
    overriddenBy?: string | null
    overrideReason?: string | null
    createdAt?: Date | string
    agent: AgentCreateNestedOneWithoutDecisionsInput
    interactions?: AgentInteractionCreateNestedManyWithoutAgentDecisionInput
  }

  export type AgentDecisionUncheckedCreateWithoutPaymentOrderInput = {
    id?: string
    agentId: string
    decisionType: string
    input: JsonNullValueInput | InputJsonValue
    reasoning: JsonNullValueInput | InputJsonValue
    decision: JsonNullValueInput | InputJsonValue
    confidence: Decimal | DecimalJsLike | number | string
    executionTime: number
    tokensUsed?: number | null
    wasOverridden?: boolean
    overriddenBy?: string | null
    overrideReason?: string | null
    createdAt?: Date | string
    interactions?: AgentInteractionUncheckedCreateNestedManyWithoutAgentDecisionInput
  }

  export type AgentDecisionCreateOrConnectWithoutPaymentOrderInput = {
    where: AgentDecisionWhereUniqueInput
    create: XOR<AgentDecisionCreateWithoutPaymentOrderInput, AgentDecisionUncheckedCreateWithoutPaymentOrderInput>
  }

  export type AgentDecisionCreateManyPaymentOrderInputEnvelope = {
    data: AgentDecisionCreateManyPaymentOrderInput | AgentDecisionCreateManyPaymentOrderInput[]
    skipDuplicates?: boolean
  }

  export type ManualProcessStepCreateWithoutPaymentOrderInput = {
    id?: string
    type: $Enums.ManualStepType
    reason: string
    instructions?: string | null
    assignedTo?: string | null
    assignedTeam?: string | null
    priority?: $Enums.Priority
    status?: $Enums.ManualStepStatus
    resolution?: string | null
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    dueAt?: Date | string | null
  }

  export type ManualProcessStepUncheckedCreateWithoutPaymentOrderInput = {
    id?: string
    type: $Enums.ManualStepType
    reason: string
    instructions?: string | null
    assignedTo?: string | null
    assignedTeam?: string | null
    priority?: $Enums.Priority
    status?: $Enums.ManualStepStatus
    resolution?: string | null
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    dueAt?: Date | string | null
  }

  export type ManualProcessStepCreateOrConnectWithoutPaymentOrderInput = {
    where: ManualProcessStepWhereUniqueInput
    create: XOR<ManualProcessStepCreateWithoutPaymentOrderInput, ManualProcessStepUncheckedCreateWithoutPaymentOrderInput>
  }

  export type ManualProcessStepCreateManyPaymentOrderInputEnvelope = {
    data: ManualProcessStepCreateManyPaymentOrderInput | ManualProcessStepCreateManyPaymentOrderInput[]
    skipDuplicates?: boolean
  }

  export type OrganizationUpsertWithoutPaymentOrdersInput = {
    update: XOR<OrganizationUpdateWithoutPaymentOrdersInput, OrganizationUncheckedUpdateWithoutPaymentOrdersInput>
    create: XOR<OrganizationCreateWithoutPaymentOrdersInput, OrganizationUncheckedCreateWithoutPaymentOrdersInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutPaymentOrdersInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutPaymentOrdersInput, OrganizationUncheckedUpdateWithoutPaymentOrdersInput>
  }

  export type OrganizationUpdateWithoutPaymentOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    billingEmail?: StringFieldUpdateOperationsInput | string
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: StringFieldUpdateOperationsInput | string
    users?: OrganizationUserUpdateManyWithoutOrganizationNestedInput
    customers?: CustomerUpdateManyWithoutOrganizationNestedInput
    products?: ProductUpdateManyWithoutOrganizationNestedInput
    wallets?: WalletUpdateManyWithoutOrganizationNestedInput
    paymentLinks?: PaymentLinkUpdateManyWithoutOrganizationNestedInput
    providers?: ProviderConfigUpdateManyWithoutOrganizationNestedInput
    apiKeys?: ApiKeyUpdateManyWithoutOrganizationNestedInput
    webhooks?: WebhookUpdateManyWithoutOrganizationNestedInput
    auditLogs?: AuditLogUpdateManyWithoutOrganizationNestedInput
    agents?: AgentUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutPaymentOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    billingEmail?: StringFieldUpdateOperationsInput | string
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: StringFieldUpdateOperationsInput | string
    users?: OrganizationUserUncheckedUpdateManyWithoutOrganizationNestedInput
    customers?: CustomerUncheckedUpdateManyWithoutOrganizationNestedInput
    products?: ProductUncheckedUpdateManyWithoutOrganizationNestedInput
    wallets?: WalletUncheckedUpdateManyWithoutOrganizationNestedInput
    paymentLinks?: PaymentLinkUncheckedUpdateManyWithoutOrganizationNestedInput
    providers?: ProviderConfigUncheckedUpdateManyWithoutOrganizationNestedInput
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutOrganizationNestedInput
    webhooks?: WebhookUncheckedUpdateManyWithoutOrganizationNestedInput
    auditLogs?: AuditLogUncheckedUpdateManyWithoutOrganizationNestedInput
    agents?: AgentUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type PaymentLinkUpsertWithoutPaymentOrdersInput = {
    update: XOR<PaymentLinkUpdateWithoutPaymentOrdersInput, PaymentLinkUncheckedUpdateWithoutPaymentOrdersInput>
    create: XOR<PaymentLinkCreateWithoutPaymentOrdersInput, PaymentLinkUncheckedCreateWithoutPaymentOrdersInput>
    where?: PaymentLinkWhereInput
  }

  export type PaymentLinkUpdateToOneWithWhereWithoutPaymentOrdersInput = {
    where?: PaymentLinkWhereInput
    data: XOR<PaymentLinkUpdateWithoutPaymentOrdersInput, PaymentLinkUncheckedUpdateWithoutPaymentOrdersInput>
  }

  export type PaymentLinkUpdateWithoutPaymentOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    shortCode?: StringFieldUpdateOperationsInput | string
    qrCode?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    targetAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    targetCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractChainId?: NullableIntFieldUpdateOperationsInput | number | null
    tokenAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentLinkStatusFieldUpdateOperationsInput | $Enums.PaymentLinkStatus
    allowMultiplePayments?: BoolFieldUpdateOperationsInput | boolean
    requiresKyc?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutPaymentLinksNestedInput
    createdBy?: UserUpdateOneRequiredWithoutPaymentLinksNestedInput
    executingAgent?: AgentUpdateOneRequiredWithoutPaymentLinksNestedInput
    price?: PriceUpdateOneWithoutPaymentLinksNestedInput
  }

  export type PaymentLinkUncheckedUpdateWithoutPaymentOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    executingAgentId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    shortCode?: StringFieldUpdateOperationsInput | string
    qrCode?: NullableStringFieldUpdateOperationsInput | string | null
    priceId?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    targetAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    targetCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractChainId?: NullableIntFieldUpdateOperationsInput | number | null
    tokenAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentLinkStatusFieldUpdateOperationsInput | $Enums.PaymentLinkStatus
    allowMultiplePayments?: BoolFieldUpdateOperationsInput | boolean
    requiresKyc?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomerUpsertWithoutPaymentOrdersInput = {
    update: XOR<CustomerUpdateWithoutPaymentOrdersInput, CustomerUncheckedUpdateWithoutPaymentOrdersInput>
    create: XOR<CustomerCreateWithoutPaymentOrdersInput, CustomerUncheckedCreateWithoutPaymentOrdersInput>
    where?: CustomerWhereInput
  }

  export type CustomerUpdateToOneWithWhereWithoutPaymentOrdersInput = {
    where?: CustomerWhereInput
    data: XOR<CustomerUpdateWithoutPaymentOrdersInput, CustomerUncheckedUpdateWithoutPaymentOrdersInput>
  }

  export type CustomerUpdateWithoutPaymentOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    preferredChainId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutCustomersNestedInput
    paymentMethods?: CustomerPaymentMethodUpdateManyWithoutCustomerNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateWithoutPaymentOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    preferredChainId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentMethods?: CustomerPaymentMethodUncheckedUpdateManyWithoutCustomerNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type ProviderTransactionUpsertWithWhereUniqueWithoutPaymentOrderInput = {
    where: ProviderTransactionWhereUniqueInput
    update: XOR<ProviderTransactionUpdateWithoutPaymentOrderInput, ProviderTransactionUncheckedUpdateWithoutPaymentOrderInput>
    create: XOR<ProviderTransactionCreateWithoutPaymentOrderInput, ProviderTransactionUncheckedCreateWithoutPaymentOrderInput>
  }

  export type ProviderTransactionUpdateWithWhereUniqueWithoutPaymentOrderInput = {
    where: ProviderTransactionWhereUniqueInput
    data: XOR<ProviderTransactionUpdateWithoutPaymentOrderInput, ProviderTransactionUncheckedUpdateWithoutPaymentOrderInput>
  }

  export type ProviderTransactionUpdateManyWithWhereWithoutPaymentOrderInput = {
    where: ProviderTransactionScalarWhereInput
    data: XOR<ProviderTransactionUpdateManyMutationInput, ProviderTransactionUncheckedUpdateManyWithoutPaymentOrderInput>
  }

  export type ProviderTransactionScalarWhereInput = {
    AND?: ProviderTransactionScalarWhereInput | ProviderTransactionScalarWhereInput[]
    OR?: ProviderTransactionScalarWhereInput[]
    NOT?: ProviderTransactionScalarWhereInput | ProviderTransactionScalarWhereInput[]
    id?: StringFilter<"ProviderTransaction"> | string
    paymentOrderId?: StringFilter<"ProviderTransaction"> | string
    providerId?: StringFilter<"ProviderTransaction"> | string
    type?: EnumProviderTxTypeFilter<"ProviderTransaction"> | $Enums.ProviderTxType
    externalId?: StringNullableFilter<"ProviderTransaction"> | string | null
    status?: StringFilter<"ProviderTransaction"> | string
    request?: JsonFilter<"ProviderTransaction">
    response?: JsonNullableFilter<"ProviderTransaction">
    errorCode?: StringNullableFilter<"ProviderTransaction"> | string | null
    errorMessage?: StringNullableFilter<"ProviderTransaction"> | string | null
    isRetryable?: BoolFilter<"ProviderTransaction"> | boolean
    createdAt?: DateTimeFilter<"ProviderTransaction"> | Date | string
    completedAt?: DateTimeNullableFilter<"ProviderTransaction"> | Date | string | null
  }

  export type BlockchainTransactionUpsertWithWhereUniqueWithoutPaymentOrderInput = {
    where: BlockchainTransactionWhereUniqueInput
    update: XOR<BlockchainTransactionUpdateWithoutPaymentOrderInput, BlockchainTransactionUncheckedUpdateWithoutPaymentOrderInput>
    create: XOR<BlockchainTransactionCreateWithoutPaymentOrderInput, BlockchainTransactionUncheckedCreateWithoutPaymentOrderInput>
  }

  export type BlockchainTransactionUpdateWithWhereUniqueWithoutPaymentOrderInput = {
    where: BlockchainTransactionWhereUniqueInput
    data: XOR<BlockchainTransactionUpdateWithoutPaymentOrderInput, BlockchainTransactionUncheckedUpdateWithoutPaymentOrderInput>
  }

  export type BlockchainTransactionUpdateManyWithWhereWithoutPaymentOrderInput = {
    where: BlockchainTransactionScalarWhereInput
    data: XOR<BlockchainTransactionUpdateManyMutationInput, BlockchainTransactionUncheckedUpdateManyWithoutPaymentOrderInput>
  }

  export type PaymentEventUpsertWithWhereUniqueWithoutPaymentOrderInput = {
    where: PaymentEventWhereUniqueInput
    update: XOR<PaymentEventUpdateWithoutPaymentOrderInput, PaymentEventUncheckedUpdateWithoutPaymentOrderInput>
    create: XOR<PaymentEventCreateWithoutPaymentOrderInput, PaymentEventUncheckedCreateWithoutPaymentOrderInput>
  }

  export type PaymentEventUpdateWithWhereUniqueWithoutPaymentOrderInput = {
    where: PaymentEventWhereUniqueInput
    data: XOR<PaymentEventUpdateWithoutPaymentOrderInput, PaymentEventUncheckedUpdateWithoutPaymentOrderInput>
  }

  export type PaymentEventUpdateManyWithWhereWithoutPaymentOrderInput = {
    where: PaymentEventScalarWhereInput
    data: XOR<PaymentEventUpdateManyMutationInput, PaymentEventUncheckedUpdateManyWithoutPaymentOrderInput>
  }

  export type PaymentEventScalarWhereInput = {
    AND?: PaymentEventScalarWhereInput | PaymentEventScalarWhereInput[]
    OR?: PaymentEventScalarWhereInput[]
    NOT?: PaymentEventScalarWhereInput | PaymentEventScalarWhereInput[]
    id?: StringFilter<"PaymentEvent"> | string
    paymentOrderId?: StringFilter<"PaymentEvent"> | string
    sequenceNumber?: IntFilter<"PaymentEvent"> | number
    eventType?: StringFilter<"PaymentEvent"> | string
    eventVersion?: StringFilter<"PaymentEvent"> | string
    data?: JsonFilter<"PaymentEvent">
    metadata?: JsonNullableFilter<"PaymentEvent">
    kafkaTopic?: StringNullableFilter<"PaymentEvent"> | string | null
    kafkaPartition?: IntNullableFilter<"PaymentEvent"> | number | null
    kafkaOffset?: BigIntNullableFilter<"PaymentEvent"> | bigint | number | null
    occurredAt?: DateTimeFilter<"PaymentEvent"> | Date | string
  }

  export type AgentDecisionUpsertWithWhereUniqueWithoutPaymentOrderInput = {
    where: AgentDecisionWhereUniqueInput
    update: XOR<AgentDecisionUpdateWithoutPaymentOrderInput, AgentDecisionUncheckedUpdateWithoutPaymentOrderInput>
    create: XOR<AgentDecisionCreateWithoutPaymentOrderInput, AgentDecisionUncheckedCreateWithoutPaymentOrderInput>
  }

  export type AgentDecisionUpdateWithWhereUniqueWithoutPaymentOrderInput = {
    where: AgentDecisionWhereUniqueInput
    data: XOR<AgentDecisionUpdateWithoutPaymentOrderInput, AgentDecisionUncheckedUpdateWithoutPaymentOrderInput>
  }

  export type AgentDecisionUpdateManyWithWhereWithoutPaymentOrderInput = {
    where: AgentDecisionScalarWhereInput
    data: XOR<AgentDecisionUpdateManyMutationInput, AgentDecisionUncheckedUpdateManyWithoutPaymentOrderInput>
  }

  export type AgentDecisionScalarWhereInput = {
    AND?: AgentDecisionScalarWhereInput | AgentDecisionScalarWhereInput[]
    OR?: AgentDecisionScalarWhereInput[]
    NOT?: AgentDecisionScalarWhereInput | AgentDecisionScalarWhereInput[]
    id?: StringFilter<"AgentDecision"> | string
    agentId?: StringFilter<"AgentDecision"> | string
    paymentOrderId?: StringNullableFilter<"AgentDecision"> | string | null
    decisionType?: StringFilter<"AgentDecision"> | string
    input?: JsonFilter<"AgentDecision">
    reasoning?: JsonFilter<"AgentDecision">
    decision?: JsonFilter<"AgentDecision">
    confidence?: DecimalFilter<"AgentDecision"> | Decimal | DecimalJsLike | number | string
    executionTime?: IntFilter<"AgentDecision"> | number
    tokensUsed?: IntNullableFilter<"AgentDecision"> | number | null
    wasOverridden?: BoolFilter<"AgentDecision"> | boolean
    overriddenBy?: StringNullableFilter<"AgentDecision"> | string | null
    overrideReason?: StringNullableFilter<"AgentDecision"> | string | null
    createdAt?: DateTimeFilter<"AgentDecision"> | Date | string
  }

  export type ManualProcessStepUpsertWithWhereUniqueWithoutPaymentOrderInput = {
    where: ManualProcessStepWhereUniqueInput
    update: XOR<ManualProcessStepUpdateWithoutPaymentOrderInput, ManualProcessStepUncheckedUpdateWithoutPaymentOrderInput>
    create: XOR<ManualProcessStepCreateWithoutPaymentOrderInput, ManualProcessStepUncheckedCreateWithoutPaymentOrderInput>
  }

  export type ManualProcessStepUpdateWithWhereUniqueWithoutPaymentOrderInput = {
    where: ManualProcessStepWhereUniqueInput
    data: XOR<ManualProcessStepUpdateWithoutPaymentOrderInput, ManualProcessStepUncheckedUpdateWithoutPaymentOrderInput>
  }

  export type ManualProcessStepUpdateManyWithWhereWithoutPaymentOrderInput = {
    where: ManualProcessStepScalarWhereInput
    data: XOR<ManualProcessStepUpdateManyMutationInput, ManualProcessStepUncheckedUpdateManyWithoutPaymentOrderInput>
  }

  export type ManualProcessStepScalarWhereInput = {
    AND?: ManualProcessStepScalarWhereInput | ManualProcessStepScalarWhereInput[]
    OR?: ManualProcessStepScalarWhereInput[]
    NOT?: ManualProcessStepScalarWhereInput | ManualProcessStepScalarWhereInput[]
    id?: StringFilter<"ManualProcessStep"> | string
    paymentOrderId?: StringFilter<"ManualProcessStep"> | string
    type?: EnumManualStepTypeFilter<"ManualProcessStep"> | $Enums.ManualStepType
    reason?: StringFilter<"ManualProcessStep"> | string
    instructions?: StringNullableFilter<"ManualProcessStep"> | string | null
    assignedTo?: StringNullableFilter<"ManualProcessStep"> | string | null
    assignedTeam?: StringNullableFilter<"ManualProcessStep"> | string | null
    priority?: EnumPriorityFilter<"ManualProcessStep"> | $Enums.Priority
    status?: EnumManualStepStatusFilter<"ManualProcessStep"> | $Enums.ManualStepStatus
    resolution?: StringNullableFilter<"ManualProcessStep"> | string | null
    createdAt?: DateTimeFilter<"ManualProcessStep"> | Date | string
    startedAt?: DateTimeNullableFilter<"ManualProcessStep"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"ManualProcessStep"> | Date | string | null
    dueAt?: DateTimeNullableFilter<"ManualProcessStep"> | Date | string | null
  }

  export type ProviderConfigCreateWithoutProviderInput = {
    id?: string
    environment?: $Enums.Environment
    credentials: JsonNullValueInput | InputJsonValue
    webhookSecret?: string | null
    settings?: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutProvidersInput
  }

  export type ProviderConfigUncheckedCreateWithoutProviderInput = {
    id?: string
    organizationId: string
    environment?: $Enums.Environment
    credentials: JsonNullValueInput | InputJsonValue
    webhookSecret?: string | null
    settings?: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProviderConfigCreateOrConnectWithoutProviderInput = {
    where: ProviderConfigWhereUniqueInput
    create: XOR<ProviderConfigCreateWithoutProviderInput, ProviderConfigUncheckedCreateWithoutProviderInput>
  }

  export type ProviderConfigCreateManyProviderInputEnvelope = {
    data: ProviderConfigCreateManyProviderInput | ProviderConfigCreateManyProviderInput[]
    skipDuplicates?: boolean
  }

  export type ProviderRouteCreateWithoutProviderInput = {
    id?: string
    name: string
    fromCountry: string
    toCountry: string
    fromCurrency: string
    toCurrency: string
    paymentMethod: string
    fixedFee: Decimal | DecimalJsLike | number | string
    percentageFee: Decimal | DecimalJsLike | number | string
    minAmount: Decimal | DecimalJsLike | number | string
    maxAmount: Decimal | DecimalJsLike | number | string
    estimatedTime: number
    cutoffTime?: string | null
    workingDays?: ProviderRouteCreateworkingDaysInput | string[]
    isActive?: boolean
    priority?: number
  }

  export type ProviderRouteUncheckedCreateWithoutProviderInput = {
    id?: string
    name: string
    fromCountry: string
    toCountry: string
    fromCurrency: string
    toCurrency: string
    paymentMethod: string
    fixedFee: Decimal | DecimalJsLike | number | string
    percentageFee: Decimal | DecimalJsLike | number | string
    minAmount: Decimal | DecimalJsLike | number | string
    maxAmount: Decimal | DecimalJsLike | number | string
    estimatedTime: number
    cutoffTime?: string | null
    workingDays?: ProviderRouteCreateworkingDaysInput | string[]
    isActive?: boolean
    priority?: number
  }

  export type ProviderRouteCreateOrConnectWithoutProviderInput = {
    where: ProviderRouteWhereUniqueInput
    create: XOR<ProviderRouteCreateWithoutProviderInput, ProviderRouteUncheckedCreateWithoutProviderInput>
  }

  export type ProviderRouteCreateManyProviderInputEnvelope = {
    data: ProviderRouteCreateManyProviderInput | ProviderRouteCreateManyProviderInput[]
    skipDuplicates?: boolean
  }

  export type ProviderTransactionCreateWithoutProviderInput = {
    id?: string
    type: $Enums.ProviderTxType
    externalId?: string | null
    status: string
    request: JsonNullValueInput | InputJsonValue
    response?: NullableJsonNullValueInput | InputJsonValue
    errorCode?: string | null
    errorMessage?: string | null
    isRetryable?: boolean
    createdAt?: Date | string
    completedAt?: Date | string | null
    paymentOrder: PaymentOrderCreateNestedOneWithoutProviderTransactionsInput
  }

  export type ProviderTransactionUncheckedCreateWithoutProviderInput = {
    id?: string
    paymentOrderId: string
    type: $Enums.ProviderTxType
    externalId?: string | null
    status: string
    request: JsonNullValueInput | InputJsonValue
    response?: NullableJsonNullValueInput | InputJsonValue
    errorCode?: string | null
    errorMessage?: string | null
    isRetryable?: boolean
    createdAt?: Date | string
    completedAt?: Date | string | null
  }

  export type ProviderTransactionCreateOrConnectWithoutProviderInput = {
    where: ProviderTransactionWhereUniqueInput
    create: XOR<ProviderTransactionCreateWithoutProviderInput, ProviderTransactionUncheckedCreateWithoutProviderInput>
  }

  export type ProviderTransactionCreateManyProviderInputEnvelope = {
    data: ProviderTransactionCreateManyProviderInput | ProviderTransactionCreateManyProviderInput[]
    skipDuplicates?: boolean
  }

  export type ProviderConfigUpsertWithWhereUniqueWithoutProviderInput = {
    where: ProviderConfigWhereUniqueInput
    update: XOR<ProviderConfigUpdateWithoutProviderInput, ProviderConfigUncheckedUpdateWithoutProviderInput>
    create: XOR<ProviderConfigCreateWithoutProviderInput, ProviderConfigUncheckedCreateWithoutProviderInput>
  }

  export type ProviderConfigUpdateWithWhereUniqueWithoutProviderInput = {
    where: ProviderConfigWhereUniqueInput
    data: XOR<ProviderConfigUpdateWithoutProviderInput, ProviderConfigUncheckedUpdateWithoutProviderInput>
  }

  export type ProviderConfigUpdateManyWithWhereWithoutProviderInput = {
    where: ProviderConfigScalarWhereInput
    data: XOR<ProviderConfigUpdateManyMutationInput, ProviderConfigUncheckedUpdateManyWithoutProviderInput>
  }

  export type ProviderRouteUpsertWithWhereUniqueWithoutProviderInput = {
    where: ProviderRouteWhereUniqueInput
    update: XOR<ProviderRouteUpdateWithoutProviderInput, ProviderRouteUncheckedUpdateWithoutProviderInput>
    create: XOR<ProviderRouteCreateWithoutProviderInput, ProviderRouteUncheckedCreateWithoutProviderInput>
  }

  export type ProviderRouteUpdateWithWhereUniqueWithoutProviderInput = {
    where: ProviderRouteWhereUniqueInput
    data: XOR<ProviderRouteUpdateWithoutProviderInput, ProviderRouteUncheckedUpdateWithoutProviderInput>
  }

  export type ProviderRouteUpdateManyWithWhereWithoutProviderInput = {
    where: ProviderRouteScalarWhereInput
    data: XOR<ProviderRouteUpdateManyMutationInput, ProviderRouteUncheckedUpdateManyWithoutProviderInput>
  }

  export type ProviderRouteScalarWhereInput = {
    AND?: ProviderRouteScalarWhereInput | ProviderRouteScalarWhereInput[]
    OR?: ProviderRouteScalarWhereInput[]
    NOT?: ProviderRouteScalarWhereInput | ProviderRouteScalarWhereInput[]
    id?: StringFilter<"ProviderRoute"> | string
    providerId?: StringFilter<"ProviderRoute"> | string
    name?: StringFilter<"ProviderRoute"> | string
    fromCountry?: StringFilter<"ProviderRoute"> | string
    toCountry?: StringFilter<"ProviderRoute"> | string
    fromCurrency?: StringFilter<"ProviderRoute"> | string
    toCurrency?: StringFilter<"ProviderRoute"> | string
    paymentMethod?: StringFilter<"ProviderRoute"> | string
    fixedFee?: DecimalFilter<"ProviderRoute"> | Decimal | DecimalJsLike | number | string
    percentageFee?: DecimalFilter<"ProviderRoute"> | Decimal | DecimalJsLike | number | string
    minAmount?: DecimalFilter<"ProviderRoute"> | Decimal | DecimalJsLike | number | string
    maxAmount?: DecimalFilter<"ProviderRoute"> | Decimal | DecimalJsLike | number | string
    estimatedTime?: IntFilter<"ProviderRoute"> | number
    cutoffTime?: StringNullableFilter<"ProviderRoute"> | string | null
    workingDays?: StringNullableListFilter<"ProviderRoute">
    isActive?: BoolFilter<"ProviderRoute"> | boolean
    priority?: IntFilter<"ProviderRoute"> | number
  }

  export type ProviderTransactionUpsertWithWhereUniqueWithoutProviderInput = {
    where: ProviderTransactionWhereUniqueInput
    update: XOR<ProviderTransactionUpdateWithoutProviderInput, ProviderTransactionUncheckedUpdateWithoutProviderInput>
    create: XOR<ProviderTransactionCreateWithoutProviderInput, ProviderTransactionUncheckedCreateWithoutProviderInput>
  }

  export type ProviderTransactionUpdateWithWhereUniqueWithoutProviderInput = {
    where: ProviderTransactionWhereUniqueInput
    data: XOR<ProviderTransactionUpdateWithoutProviderInput, ProviderTransactionUncheckedUpdateWithoutProviderInput>
  }

  export type ProviderTransactionUpdateManyWithWhereWithoutProviderInput = {
    where: ProviderTransactionScalarWhereInput
    data: XOR<ProviderTransactionUpdateManyMutationInput, ProviderTransactionUncheckedUpdateManyWithoutProviderInput>
  }

  export type OrganizationCreateWithoutProvidersInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    billingEmail: string
    taxId?: string | null
    country: string
    complianceStatus?: $Enums.ComplianceStatus
    kycVerifiedAt?: Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    ownerId: string
    users?: OrganizationUserCreateNestedManyWithoutOrganizationInput
    customers?: CustomerCreateNestedManyWithoutOrganizationInput
    products?: ProductCreateNestedManyWithoutOrganizationInput
    wallets?: WalletCreateNestedManyWithoutOrganizationInput
    paymentLinks?: PaymentLinkCreateNestedManyWithoutOrganizationInput
    paymentOrders?: PaymentOrderCreateNestedManyWithoutOrganizationInput
    apiKeys?: ApiKeyCreateNestedManyWithoutOrganizationInput
    webhooks?: WebhookCreateNestedManyWithoutOrganizationInput
    auditLogs?: AuditLogCreateNestedManyWithoutOrganizationInput
    agents?: AgentCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutProvidersInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    billingEmail: string
    taxId?: string | null
    country: string
    complianceStatus?: $Enums.ComplianceStatus
    kycVerifiedAt?: Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    ownerId: string
    users?: OrganizationUserUncheckedCreateNestedManyWithoutOrganizationInput
    customers?: CustomerUncheckedCreateNestedManyWithoutOrganizationInput
    products?: ProductUncheckedCreateNestedManyWithoutOrganizationInput
    wallets?: WalletUncheckedCreateNestedManyWithoutOrganizationInput
    paymentLinks?: PaymentLinkUncheckedCreateNestedManyWithoutOrganizationInput
    paymentOrders?: PaymentOrderUncheckedCreateNestedManyWithoutOrganizationInput
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutOrganizationInput
    webhooks?: WebhookUncheckedCreateNestedManyWithoutOrganizationInput
    auditLogs?: AuditLogUncheckedCreateNestedManyWithoutOrganizationInput
    agents?: AgentUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutProvidersInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutProvidersInput, OrganizationUncheckedCreateWithoutProvidersInput>
  }

  export type ProviderCreateWithoutConfigsInput = {
    id?: string
    code: string
    name: string
    type: $Enums.ProviderType
    supportedCountries?: ProviderCreatesupportedCountriesInput | string[]
    supportedCurrencies?: ProviderCreatesupportedCurrenciesInput | string[]
    paymentMethods?: ProviderCreatepaymentMethodsInput | string[]
    features: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    healthStatus?: $Enums.ProviderHealth
    lastHealthCheck?: Date | string
    avgResponseTime?: number | null
    successRate?: Decimal | DecimalJsLike | number | string | null
    routes?: ProviderRouteCreateNestedManyWithoutProviderInput
    transactions?: ProviderTransactionCreateNestedManyWithoutProviderInput
  }

  export type ProviderUncheckedCreateWithoutConfigsInput = {
    id?: string
    code: string
    name: string
    type: $Enums.ProviderType
    supportedCountries?: ProviderCreatesupportedCountriesInput | string[]
    supportedCurrencies?: ProviderCreatesupportedCurrenciesInput | string[]
    paymentMethods?: ProviderCreatepaymentMethodsInput | string[]
    features: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    healthStatus?: $Enums.ProviderHealth
    lastHealthCheck?: Date | string
    avgResponseTime?: number | null
    successRate?: Decimal | DecimalJsLike | number | string | null
    routes?: ProviderRouteUncheckedCreateNestedManyWithoutProviderInput
    transactions?: ProviderTransactionUncheckedCreateNestedManyWithoutProviderInput
  }

  export type ProviderCreateOrConnectWithoutConfigsInput = {
    where: ProviderWhereUniqueInput
    create: XOR<ProviderCreateWithoutConfigsInput, ProviderUncheckedCreateWithoutConfigsInput>
  }

  export type OrganizationUpsertWithoutProvidersInput = {
    update: XOR<OrganizationUpdateWithoutProvidersInput, OrganizationUncheckedUpdateWithoutProvidersInput>
    create: XOR<OrganizationCreateWithoutProvidersInput, OrganizationUncheckedCreateWithoutProvidersInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutProvidersInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutProvidersInput, OrganizationUncheckedUpdateWithoutProvidersInput>
  }

  export type OrganizationUpdateWithoutProvidersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    billingEmail?: StringFieldUpdateOperationsInput | string
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: StringFieldUpdateOperationsInput | string
    users?: OrganizationUserUpdateManyWithoutOrganizationNestedInput
    customers?: CustomerUpdateManyWithoutOrganizationNestedInput
    products?: ProductUpdateManyWithoutOrganizationNestedInput
    wallets?: WalletUpdateManyWithoutOrganizationNestedInput
    paymentLinks?: PaymentLinkUpdateManyWithoutOrganizationNestedInput
    paymentOrders?: PaymentOrderUpdateManyWithoutOrganizationNestedInput
    apiKeys?: ApiKeyUpdateManyWithoutOrganizationNestedInput
    webhooks?: WebhookUpdateManyWithoutOrganizationNestedInput
    auditLogs?: AuditLogUpdateManyWithoutOrganizationNestedInput
    agents?: AgentUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutProvidersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    billingEmail?: StringFieldUpdateOperationsInput | string
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: StringFieldUpdateOperationsInput | string
    users?: OrganizationUserUncheckedUpdateManyWithoutOrganizationNestedInput
    customers?: CustomerUncheckedUpdateManyWithoutOrganizationNestedInput
    products?: ProductUncheckedUpdateManyWithoutOrganizationNestedInput
    wallets?: WalletUncheckedUpdateManyWithoutOrganizationNestedInput
    paymentLinks?: PaymentLinkUncheckedUpdateManyWithoutOrganizationNestedInput
    paymentOrders?: PaymentOrderUncheckedUpdateManyWithoutOrganizationNestedInput
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutOrganizationNestedInput
    webhooks?: WebhookUncheckedUpdateManyWithoutOrganizationNestedInput
    auditLogs?: AuditLogUncheckedUpdateManyWithoutOrganizationNestedInput
    agents?: AgentUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type ProviderUpsertWithoutConfigsInput = {
    update: XOR<ProviderUpdateWithoutConfigsInput, ProviderUncheckedUpdateWithoutConfigsInput>
    create: XOR<ProviderCreateWithoutConfigsInput, ProviderUncheckedCreateWithoutConfigsInput>
    where?: ProviderWhereInput
  }

  export type ProviderUpdateToOneWithWhereWithoutConfigsInput = {
    where?: ProviderWhereInput
    data: XOR<ProviderUpdateWithoutConfigsInput, ProviderUncheckedUpdateWithoutConfigsInput>
  }

  export type ProviderUpdateWithoutConfigsInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumProviderTypeFieldUpdateOperationsInput | $Enums.ProviderType
    supportedCountries?: ProviderUpdatesupportedCountriesInput | string[]
    supportedCurrencies?: ProviderUpdatesupportedCurrenciesInput | string[]
    paymentMethods?: ProviderUpdatepaymentMethodsInput | string[]
    features?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    healthStatus?: EnumProviderHealthFieldUpdateOperationsInput | $Enums.ProviderHealth
    lastHealthCheck?: DateTimeFieldUpdateOperationsInput | Date | string
    avgResponseTime?: NullableIntFieldUpdateOperationsInput | number | null
    successRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    routes?: ProviderRouteUpdateManyWithoutProviderNestedInput
    transactions?: ProviderTransactionUpdateManyWithoutProviderNestedInput
  }

  export type ProviderUncheckedUpdateWithoutConfigsInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumProviderTypeFieldUpdateOperationsInput | $Enums.ProviderType
    supportedCountries?: ProviderUpdatesupportedCountriesInput | string[]
    supportedCurrencies?: ProviderUpdatesupportedCurrenciesInput | string[]
    paymentMethods?: ProviderUpdatepaymentMethodsInput | string[]
    features?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    healthStatus?: EnumProviderHealthFieldUpdateOperationsInput | $Enums.ProviderHealth
    lastHealthCheck?: DateTimeFieldUpdateOperationsInput | Date | string
    avgResponseTime?: NullableIntFieldUpdateOperationsInput | number | null
    successRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    routes?: ProviderRouteUncheckedUpdateManyWithoutProviderNestedInput
    transactions?: ProviderTransactionUncheckedUpdateManyWithoutProviderNestedInput
  }

  export type ProviderCreateWithoutRoutesInput = {
    id?: string
    code: string
    name: string
    type: $Enums.ProviderType
    supportedCountries?: ProviderCreatesupportedCountriesInput | string[]
    supportedCurrencies?: ProviderCreatesupportedCurrenciesInput | string[]
    paymentMethods?: ProviderCreatepaymentMethodsInput | string[]
    features: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    healthStatus?: $Enums.ProviderHealth
    lastHealthCheck?: Date | string
    avgResponseTime?: number | null
    successRate?: Decimal | DecimalJsLike | number | string | null
    configs?: ProviderConfigCreateNestedManyWithoutProviderInput
    transactions?: ProviderTransactionCreateNestedManyWithoutProviderInput
  }

  export type ProviderUncheckedCreateWithoutRoutesInput = {
    id?: string
    code: string
    name: string
    type: $Enums.ProviderType
    supportedCountries?: ProviderCreatesupportedCountriesInput | string[]
    supportedCurrencies?: ProviderCreatesupportedCurrenciesInput | string[]
    paymentMethods?: ProviderCreatepaymentMethodsInput | string[]
    features: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    healthStatus?: $Enums.ProviderHealth
    lastHealthCheck?: Date | string
    avgResponseTime?: number | null
    successRate?: Decimal | DecimalJsLike | number | string | null
    configs?: ProviderConfigUncheckedCreateNestedManyWithoutProviderInput
    transactions?: ProviderTransactionUncheckedCreateNestedManyWithoutProviderInput
  }

  export type ProviderCreateOrConnectWithoutRoutesInput = {
    where: ProviderWhereUniqueInput
    create: XOR<ProviderCreateWithoutRoutesInput, ProviderUncheckedCreateWithoutRoutesInput>
  }

  export type ProviderUpsertWithoutRoutesInput = {
    update: XOR<ProviderUpdateWithoutRoutesInput, ProviderUncheckedUpdateWithoutRoutesInput>
    create: XOR<ProviderCreateWithoutRoutesInput, ProviderUncheckedCreateWithoutRoutesInput>
    where?: ProviderWhereInput
  }

  export type ProviderUpdateToOneWithWhereWithoutRoutesInput = {
    where?: ProviderWhereInput
    data: XOR<ProviderUpdateWithoutRoutesInput, ProviderUncheckedUpdateWithoutRoutesInput>
  }

  export type ProviderUpdateWithoutRoutesInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumProviderTypeFieldUpdateOperationsInput | $Enums.ProviderType
    supportedCountries?: ProviderUpdatesupportedCountriesInput | string[]
    supportedCurrencies?: ProviderUpdatesupportedCurrenciesInput | string[]
    paymentMethods?: ProviderUpdatepaymentMethodsInput | string[]
    features?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    healthStatus?: EnumProviderHealthFieldUpdateOperationsInput | $Enums.ProviderHealth
    lastHealthCheck?: DateTimeFieldUpdateOperationsInput | Date | string
    avgResponseTime?: NullableIntFieldUpdateOperationsInput | number | null
    successRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    configs?: ProviderConfigUpdateManyWithoutProviderNestedInput
    transactions?: ProviderTransactionUpdateManyWithoutProviderNestedInput
  }

  export type ProviderUncheckedUpdateWithoutRoutesInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumProviderTypeFieldUpdateOperationsInput | $Enums.ProviderType
    supportedCountries?: ProviderUpdatesupportedCountriesInput | string[]
    supportedCurrencies?: ProviderUpdatesupportedCurrenciesInput | string[]
    paymentMethods?: ProviderUpdatepaymentMethodsInput | string[]
    features?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    healthStatus?: EnumProviderHealthFieldUpdateOperationsInput | $Enums.ProviderHealth
    lastHealthCheck?: DateTimeFieldUpdateOperationsInput | Date | string
    avgResponseTime?: NullableIntFieldUpdateOperationsInput | number | null
    successRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    configs?: ProviderConfigUncheckedUpdateManyWithoutProviderNestedInput
    transactions?: ProviderTransactionUncheckedUpdateManyWithoutProviderNestedInput
  }

  export type PaymentOrderCreateWithoutProviderTransactionsInput = {
    id?: string
    orderNumber: string
    status?: $Enums.PaymentOrderStatus
    requestedAmount: Decimal | DecimalJsLike | number | string
    requestedCurrency: string
    settledAmount?: Decimal | DecimalJsLike | number | string | null
    settledCurrency?: string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: Date | string | null
    exchangeRateSource?: string | null
    platformFee?: Decimal | DecimalJsLike | number | string
    providerFee?: Decimal | DecimalJsLike | number | string
    networkFee?: Decimal | DecimalJsLike | number | string
    totalFee?: Decimal | DecimalJsLike | number | string
    customerEmail?: string | null
    customerName?: string | null
    customerWallet?: string | null
    customerIp?: string | null
    customerCountry?: string | null
    riskScore?: number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: $Enums.KycStatus
    kycVerifiedAt?: Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    failureCode?: string | null
    retryCount?: number
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutPaymentOrdersInput
    paymentLink: PaymentLinkCreateNestedOneWithoutPaymentOrdersInput
    customer?: CustomerCreateNestedOneWithoutPaymentOrdersInput
    blockchainTxs?: BlockchainTransactionCreateNestedManyWithoutPaymentOrderInput
    events?: PaymentEventCreateNestedManyWithoutPaymentOrderInput
    agentDecisions?: AgentDecisionCreateNestedManyWithoutPaymentOrderInput
    manualSteps?: ManualProcessStepCreateNestedManyWithoutPaymentOrderInput
  }

  export type PaymentOrderUncheckedCreateWithoutProviderTransactionsInput = {
    id?: string
    organizationId: string
    paymentLinkId: string
    customerId?: string | null
    orderNumber: string
    status?: $Enums.PaymentOrderStatus
    requestedAmount: Decimal | DecimalJsLike | number | string
    requestedCurrency: string
    settledAmount?: Decimal | DecimalJsLike | number | string | null
    settledCurrency?: string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: Date | string | null
    exchangeRateSource?: string | null
    platformFee?: Decimal | DecimalJsLike | number | string
    providerFee?: Decimal | DecimalJsLike | number | string
    networkFee?: Decimal | DecimalJsLike | number | string
    totalFee?: Decimal | DecimalJsLike | number | string
    customerEmail?: string | null
    customerName?: string | null
    customerWallet?: string | null
    customerIp?: string | null
    customerCountry?: string | null
    riskScore?: number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: $Enums.KycStatus
    kycVerifiedAt?: Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    failureCode?: string | null
    retryCount?: number
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    updatedAt?: Date | string
    blockchainTxs?: BlockchainTransactionUncheckedCreateNestedManyWithoutPaymentOrderInput
    events?: PaymentEventUncheckedCreateNestedManyWithoutPaymentOrderInput
    agentDecisions?: AgentDecisionUncheckedCreateNestedManyWithoutPaymentOrderInput
    manualSteps?: ManualProcessStepUncheckedCreateNestedManyWithoutPaymentOrderInput
  }

  export type PaymentOrderCreateOrConnectWithoutProviderTransactionsInput = {
    where: PaymentOrderWhereUniqueInput
    create: XOR<PaymentOrderCreateWithoutProviderTransactionsInput, PaymentOrderUncheckedCreateWithoutProviderTransactionsInput>
  }

  export type ProviderCreateWithoutTransactionsInput = {
    id?: string
    code: string
    name: string
    type: $Enums.ProviderType
    supportedCountries?: ProviderCreatesupportedCountriesInput | string[]
    supportedCurrencies?: ProviderCreatesupportedCurrenciesInput | string[]
    paymentMethods?: ProviderCreatepaymentMethodsInput | string[]
    features: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    healthStatus?: $Enums.ProviderHealth
    lastHealthCheck?: Date | string
    avgResponseTime?: number | null
    successRate?: Decimal | DecimalJsLike | number | string | null
    configs?: ProviderConfigCreateNestedManyWithoutProviderInput
    routes?: ProviderRouteCreateNestedManyWithoutProviderInput
  }

  export type ProviderUncheckedCreateWithoutTransactionsInput = {
    id?: string
    code: string
    name: string
    type: $Enums.ProviderType
    supportedCountries?: ProviderCreatesupportedCountriesInput | string[]
    supportedCurrencies?: ProviderCreatesupportedCurrenciesInput | string[]
    paymentMethods?: ProviderCreatepaymentMethodsInput | string[]
    features: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    healthStatus?: $Enums.ProviderHealth
    lastHealthCheck?: Date | string
    avgResponseTime?: number | null
    successRate?: Decimal | DecimalJsLike | number | string | null
    configs?: ProviderConfigUncheckedCreateNestedManyWithoutProviderInput
    routes?: ProviderRouteUncheckedCreateNestedManyWithoutProviderInput
  }

  export type ProviderCreateOrConnectWithoutTransactionsInput = {
    where: ProviderWhereUniqueInput
    create: XOR<ProviderCreateWithoutTransactionsInput, ProviderUncheckedCreateWithoutTransactionsInput>
  }

  export type PaymentOrderUpsertWithoutProviderTransactionsInput = {
    update: XOR<PaymentOrderUpdateWithoutProviderTransactionsInput, PaymentOrderUncheckedUpdateWithoutProviderTransactionsInput>
    create: XOR<PaymentOrderCreateWithoutProviderTransactionsInput, PaymentOrderUncheckedCreateWithoutProviderTransactionsInput>
    where?: PaymentOrderWhereInput
  }

  export type PaymentOrderUpdateToOneWithWhereWithoutProviderTransactionsInput = {
    where?: PaymentOrderWhereInput
    data: XOR<PaymentOrderUpdateWithoutProviderTransactionsInput, PaymentOrderUncheckedUpdateWithoutProviderTransactionsInput>
  }

  export type PaymentOrderUpdateWithoutProviderTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentOrderStatusFieldUpdateOperationsInput | $Enums.PaymentOrderStatus
    requestedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    requestedCurrency?: StringFieldUpdateOperationsInput | string
    settledAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    settledCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exchangeRateSource?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    providerFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    networkFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    customerIp?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    riskScore?: NullableIntFieldUpdateOperationsInput | number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    failureCode?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutPaymentOrdersNestedInput
    paymentLink?: PaymentLinkUpdateOneRequiredWithoutPaymentOrdersNestedInput
    customer?: CustomerUpdateOneWithoutPaymentOrdersNestedInput
    blockchainTxs?: BlockchainTransactionUpdateManyWithoutPaymentOrderNestedInput
    events?: PaymentEventUpdateManyWithoutPaymentOrderNestedInput
    agentDecisions?: AgentDecisionUpdateManyWithoutPaymentOrderNestedInput
    manualSteps?: ManualProcessStepUpdateManyWithoutPaymentOrderNestedInput
  }

  export type PaymentOrderUncheckedUpdateWithoutProviderTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    paymentLinkId?: StringFieldUpdateOperationsInput | string
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentOrderStatusFieldUpdateOperationsInput | $Enums.PaymentOrderStatus
    requestedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    requestedCurrency?: StringFieldUpdateOperationsInput | string
    settledAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    settledCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exchangeRateSource?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    providerFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    networkFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    customerIp?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    riskScore?: NullableIntFieldUpdateOperationsInput | number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    failureCode?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    blockchainTxs?: BlockchainTransactionUncheckedUpdateManyWithoutPaymentOrderNestedInput
    events?: PaymentEventUncheckedUpdateManyWithoutPaymentOrderNestedInput
    agentDecisions?: AgentDecisionUncheckedUpdateManyWithoutPaymentOrderNestedInput
    manualSteps?: ManualProcessStepUncheckedUpdateManyWithoutPaymentOrderNestedInput
  }

  export type ProviderUpsertWithoutTransactionsInput = {
    update: XOR<ProviderUpdateWithoutTransactionsInput, ProviderUncheckedUpdateWithoutTransactionsInput>
    create: XOR<ProviderCreateWithoutTransactionsInput, ProviderUncheckedCreateWithoutTransactionsInput>
    where?: ProviderWhereInput
  }

  export type ProviderUpdateToOneWithWhereWithoutTransactionsInput = {
    where?: ProviderWhereInput
    data: XOR<ProviderUpdateWithoutTransactionsInput, ProviderUncheckedUpdateWithoutTransactionsInput>
  }

  export type ProviderUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumProviderTypeFieldUpdateOperationsInput | $Enums.ProviderType
    supportedCountries?: ProviderUpdatesupportedCountriesInput | string[]
    supportedCurrencies?: ProviderUpdatesupportedCurrenciesInput | string[]
    paymentMethods?: ProviderUpdatepaymentMethodsInput | string[]
    features?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    healthStatus?: EnumProviderHealthFieldUpdateOperationsInput | $Enums.ProviderHealth
    lastHealthCheck?: DateTimeFieldUpdateOperationsInput | Date | string
    avgResponseTime?: NullableIntFieldUpdateOperationsInput | number | null
    successRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    configs?: ProviderConfigUpdateManyWithoutProviderNestedInput
    routes?: ProviderRouteUpdateManyWithoutProviderNestedInput
  }

  export type ProviderUncheckedUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumProviderTypeFieldUpdateOperationsInput | $Enums.ProviderType
    supportedCountries?: ProviderUpdatesupportedCountriesInput | string[]
    supportedCurrencies?: ProviderUpdatesupportedCurrenciesInput | string[]
    paymentMethods?: ProviderUpdatepaymentMethodsInput | string[]
    features?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    healthStatus?: EnumProviderHealthFieldUpdateOperationsInput | $Enums.ProviderHealth
    lastHealthCheck?: DateTimeFieldUpdateOperationsInput | Date | string
    avgResponseTime?: NullableIntFieldUpdateOperationsInput | number | null
    successRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    configs?: ProviderConfigUncheckedUpdateManyWithoutProviderNestedInput
    routes?: ProviderRouteUncheckedUpdateManyWithoutProviderNestedInput
  }

  export type OrganizationCreateWithoutAgentsInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    billingEmail: string
    taxId?: string | null
    country: string
    complianceStatus?: $Enums.ComplianceStatus
    kycVerifiedAt?: Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    ownerId: string
    users?: OrganizationUserCreateNestedManyWithoutOrganizationInput
    customers?: CustomerCreateNestedManyWithoutOrganizationInput
    products?: ProductCreateNestedManyWithoutOrganizationInput
    wallets?: WalletCreateNestedManyWithoutOrganizationInput
    paymentLinks?: PaymentLinkCreateNestedManyWithoutOrganizationInput
    paymentOrders?: PaymentOrderCreateNestedManyWithoutOrganizationInput
    providers?: ProviderConfigCreateNestedManyWithoutOrganizationInput
    apiKeys?: ApiKeyCreateNestedManyWithoutOrganizationInput
    webhooks?: WebhookCreateNestedManyWithoutOrganizationInput
    auditLogs?: AuditLogCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutAgentsInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    billingEmail: string
    taxId?: string | null
    country: string
    complianceStatus?: $Enums.ComplianceStatus
    kycVerifiedAt?: Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    ownerId: string
    users?: OrganizationUserUncheckedCreateNestedManyWithoutOrganizationInput
    customers?: CustomerUncheckedCreateNestedManyWithoutOrganizationInput
    products?: ProductUncheckedCreateNestedManyWithoutOrganizationInput
    wallets?: WalletUncheckedCreateNestedManyWithoutOrganizationInput
    paymentLinks?: PaymentLinkUncheckedCreateNestedManyWithoutOrganizationInput
    paymentOrders?: PaymentOrderUncheckedCreateNestedManyWithoutOrganizationInput
    providers?: ProviderConfigUncheckedCreateNestedManyWithoutOrganizationInput
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutOrganizationInput
    webhooks?: WebhookUncheckedCreateNestedManyWithoutOrganizationInput
    auditLogs?: AuditLogUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutAgentsInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutAgentsInput, OrganizationUncheckedCreateWithoutAgentsInput>
  }

  export type WalletCreateWithoutAgentInput = {
    id?: string
    address: string
    chainId: number
    type?: $Enums.WalletType
    smartWalletFactory?: string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    allowlist?: boolean
    blocklist?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user?: UserCreateNestedOneWithoutOwnedWalletsInput
    organization?: OrganizationCreateNestedOneWithoutWalletsInput
    primaryForUsers?: UserCreateNestedManyWithoutPrimaryWalletInput
    transactions?: BlockchainTransactionCreateNestedManyWithoutWalletInput
    gasSponsorship?: GasSponsorshipCreateNestedManyWithoutSponsorWalletInput
  }

  export type WalletUncheckedCreateWithoutAgentInput = {
    id?: string
    address: string
    chainId: number
    type?: $Enums.WalletType
    userId?: string | null
    organizationId?: string | null
    smartWalletFactory?: string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    allowlist?: boolean
    blocklist?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    primaryForUsers?: UserUncheckedCreateNestedManyWithoutPrimaryWalletInput
    transactions?: BlockchainTransactionUncheckedCreateNestedManyWithoutWalletInput
    gasSponsorship?: GasSponsorshipUncheckedCreateNestedManyWithoutSponsorWalletInput
  }

  export type WalletCreateOrConnectWithoutAgentInput = {
    where: WalletWhereUniqueInput
    create: XOR<WalletCreateWithoutAgentInput, WalletUncheckedCreateWithoutAgentInput>
  }

  export type PaymentLinkCreateWithoutExecutingAgentInput = {
    id?: string
    title: string
    description?: string | null
    referenceId?: string | null
    shortCode: string
    qrCode?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    targetAmount?: Decimal | DecimalJsLike | number | string | null
    targetCurrency?: string | null
    smartContractAddress?: string | null
    smartContractChainId?: number | null
    tokenAddress?: string | null
    status?: $Enums.PaymentLinkStatus
    allowMultiplePayments?: boolean
    requiresKyc?: boolean
    expiresAt?: Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutPaymentLinksInput
    createdBy: UserCreateNestedOneWithoutPaymentLinksInput
    price?: PriceCreateNestedOneWithoutPaymentLinksInput
    paymentOrders?: PaymentOrderCreateNestedManyWithoutPaymentLinkInput
  }

  export type PaymentLinkUncheckedCreateWithoutExecutingAgentInput = {
    id?: string
    organizationId: string
    createdById: string
    title: string
    description?: string | null
    referenceId?: string | null
    shortCode: string
    qrCode?: string | null
    priceId?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    targetAmount?: Decimal | DecimalJsLike | number | string | null
    targetCurrency?: string | null
    smartContractAddress?: string | null
    smartContractChainId?: number | null
    tokenAddress?: string | null
    status?: $Enums.PaymentLinkStatus
    allowMultiplePayments?: boolean
    requiresKyc?: boolean
    expiresAt?: Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    paymentOrders?: PaymentOrderUncheckedCreateNestedManyWithoutPaymentLinkInput
  }

  export type PaymentLinkCreateOrConnectWithoutExecutingAgentInput = {
    where: PaymentLinkWhereUniqueInput
    create: XOR<PaymentLinkCreateWithoutExecutingAgentInput, PaymentLinkUncheckedCreateWithoutExecutingAgentInput>
  }

  export type PaymentLinkCreateManyExecutingAgentInputEnvelope = {
    data: PaymentLinkCreateManyExecutingAgentInput | PaymentLinkCreateManyExecutingAgentInput[]
    skipDuplicates?: boolean
  }

  export type AgentDecisionCreateWithoutAgentInput = {
    id?: string
    decisionType: string
    input: JsonNullValueInput | InputJsonValue
    reasoning: JsonNullValueInput | InputJsonValue
    decision: JsonNullValueInput | InputJsonValue
    confidence: Decimal | DecimalJsLike | number | string
    executionTime: number
    tokensUsed?: number | null
    wasOverridden?: boolean
    overriddenBy?: string | null
    overrideReason?: string | null
    createdAt?: Date | string
    paymentOrder?: PaymentOrderCreateNestedOneWithoutAgentDecisionsInput
    interactions?: AgentInteractionCreateNestedManyWithoutAgentDecisionInput
  }

  export type AgentDecisionUncheckedCreateWithoutAgentInput = {
    id?: string
    paymentOrderId?: string | null
    decisionType: string
    input: JsonNullValueInput | InputJsonValue
    reasoning: JsonNullValueInput | InputJsonValue
    decision: JsonNullValueInput | InputJsonValue
    confidence: Decimal | DecimalJsLike | number | string
    executionTime: number
    tokensUsed?: number | null
    wasOverridden?: boolean
    overriddenBy?: string | null
    overrideReason?: string | null
    createdAt?: Date | string
    interactions?: AgentInteractionUncheckedCreateNestedManyWithoutAgentDecisionInput
  }

  export type AgentDecisionCreateOrConnectWithoutAgentInput = {
    where: AgentDecisionWhereUniqueInput
    create: XOR<AgentDecisionCreateWithoutAgentInput, AgentDecisionUncheckedCreateWithoutAgentInput>
  }

  export type AgentDecisionCreateManyAgentInputEnvelope = {
    data: AgentDecisionCreateManyAgentInput | AgentDecisionCreateManyAgentInput[]
    skipDuplicates?: boolean
  }

  export type AgentCheckpointCreateWithoutAgentInput = {
    id?: string
    threadId: string
    checkpointId: string
    state: JsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type AgentCheckpointUncheckedCreateWithoutAgentInput = {
    id?: string
    threadId: string
    checkpointId: string
    state: JsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type AgentCheckpointCreateOrConnectWithoutAgentInput = {
    where: AgentCheckpointWhereUniqueInput
    create: XOR<AgentCheckpointCreateWithoutAgentInput, AgentCheckpointUncheckedCreateWithoutAgentInput>
  }

  export type AgentCheckpointCreateManyAgentInputEnvelope = {
    data: AgentCheckpointCreateManyAgentInput | AgentCheckpointCreateManyAgentInput[]
    skipDuplicates?: boolean
  }

  export type OrganizationUpsertWithoutAgentsInput = {
    update: XOR<OrganizationUpdateWithoutAgentsInput, OrganizationUncheckedUpdateWithoutAgentsInput>
    create: XOR<OrganizationCreateWithoutAgentsInput, OrganizationUncheckedCreateWithoutAgentsInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutAgentsInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutAgentsInput, OrganizationUncheckedUpdateWithoutAgentsInput>
  }

  export type OrganizationUpdateWithoutAgentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    billingEmail?: StringFieldUpdateOperationsInput | string
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: StringFieldUpdateOperationsInput | string
    users?: OrganizationUserUpdateManyWithoutOrganizationNestedInput
    customers?: CustomerUpdateManyWithoutOrganizationNestedInput
    products?: ProductUpdateManyWithoutOrganizationNestedInput
    wallets?: WalletUpdateManyWithoutOrganizationNestedInput
    paymentLinks?: PaymentLinkUpdateManyWithoutOrganizationNestedInput
    paymentOrders?: PaymentOrderUpdateManyWithoutOrganizationNestedInput
    providers?: ProviderConfigUpdateManyWithoutOrganizationNestedInput
    apiKeys?: ApiKeyUpdateManyWithoutOrganizationNestedInput
    webhooks?: WebhookUpdateManyWithoutOrganizationNestedInput
    auditLogs?: AuditLogUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutAgentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    billingEmail?: StringFieldUpdateOperationsInput | string
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: StringFieldUpdateOperationsInput | string
    users?: OrganizationUserUncheckedUpdateManyWithoutOrganizationNestedInput
    customers?: CustomerUncheckedUpdateManyWithoutOrganizationNestedInput
    products?: ProductUncheckedUpdateManyWithoutOrganizationNestedInput
    wallets?: WalletUncheckedUpdateManyWithoutOrganizationNestedInput
    paymentLinks?: PaymentLinkUncheckedUpdateManyWithoutOrganizationNestedInput
    paymentOrders?: PaymentOrderUncheckedUpdateManyWithoutOrganizationNestedInput
    providers?: ProviderConfigUncheckedUpdateManyWithoutOrganizationNestedInput
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutOrganizationNestedInput
    webhooks?: WebhookUncheckedUpdateManyWithoutOrganizationNestedInput
    auditLogs?: AuditLogUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type WalletUpsertWithoutAgentInput = {
    update: XOR<WalletUpdateWithoutAgentInput, WalletUncheckedUpdateWithoutAgentInput>
    create: XOR<WalletCreateWithoutAgentInput, WalletUncheckedCreateWithoutAgentInput>
    where?: WalletWhereInput
  }

  export type WalletUpdateToOneWithWhereWithoutAgentInput = {
    where?: WalletWhereInput
    data: XOR<WalletUpdateWithoutAgentInput, WalletUncheckedUpdateWithoutAgentInput>
  }

  export type WalletUpdateWithoutAgentInput = {
    id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    type?: EnumWalletTypeFieldUpdateOperationsInput | $Enums.WalletType
    smartWalletFactory?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    allowlist?: BoolFieldUpdateOperationsInput | boolean
    blocklist?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneWithoutOwnedWalletsNestedInput
    organization?: OrganizationUpdateOneWithoutWalletsNestedInput
    primaryForUsers?: UserUpdateManyWithoutPrimaryWalletNestedInput
    transactions?: BlockchainTransactionUpdateManyWithoutWalletNestedInput
    gasSponsorship?: GasSponsorshipUpdateManyWithoutSponsorWalletNestedInput
  }

  export type WalletUncheckedUpdateWithoutAgentInput = {
    id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    type?: EnumWalletTypeFieldUpdateOperationsInput | $Enums.WalletType
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletFactory?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    allowlist?: BoolFieldUpdateOperationsInput | boolean
    blocklist?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    primaryForUsers?: UserUncheckedUpdateManyWithoutPrimaryWalletNestedInput
    transactions?: BlockchainTransactionUncheckedUpdateManyWithoutWalletNestedInput
    gasSponsorship?: GasSponsorshipUncheckedUpdateManyWithoutSponsorWalletNestedInput
  }

  export type PaymentLinkUpsertWithWhereUniqueWithoutExecutingAgentInput = {
    where: PaymentLinkWhereUniqueInput
    update: XOR<PaymentLinkUpdateWithoutExecutingAgentInput, PaymentLinkUncheckedUpdateWithoutExecutingAgentInput>
    create: XOR<PaymentLinkCreateWithoutExecutingAgentInput, PaymentLinkUncheckedCreateWithoutExecutingAgentInput>
  }

  export type PaymentLinkUpdateWithWhereUniqueWithoutExecutingAgentInput = {
    where: PaymentLinkWhereUniqueInput
    data: XOR<PaymentLinkUpdateWithoutExecutingAgentInput, PaymentLinkUncheckedUpdateWithoutExecutingAgentInput>
  }

  export type PaymentLinkUpdateManyWithWhereWithoutExecutingAgentInput = {
    where: PaymentLinkScalarWhereInput
    data: XOR<PaymentLinkUpdateManyMutationInput, PaymentLinkUncheckedUpdateManyWithoutExecutingAgentInput>
  }

  export type AgentDecisionUpsertWithWhereUniqueWithoutAgentInput = {
    where: AgentDecisionWhereUniqueInput
    update: XOR<AgentDecisionUpdateWithoutAgentInput, AgentDecisionUncheckedUpdateWithoutAgentInput>
    create: XOR<AgentDecisionCreateWithoutAgentInput, AgentDecisionUncheckedCreateWithoutAgentInput>
  }

  export type AgentDecisionUpdateWithWhereUniqueWithoutAgentInput = {
    where: AgentDecisionWhereUniqueInput
    data: XOR<AgentDecisionUpdateWithoutAgentInput, AgentDecisionUncheckedUpdateWithoutAgentInput>
  }

  export type AgentDecisionUpdateManyWithWhereWithoutAgentInput = {
    where: AgentDecisionScalarWhereInput
    data: XOR<AgentDecisionUpdateManyMutationInput, AgentDecisionUncheckedUpdateManyWithoutAgentInput>
  }

  export type AgentCheckpointUpsertWithWhereUniqueWithoutAgentInput = {
    where: AgentCheckpointWhereUniqueInput
    update: XOR<AgentCheckpointUpdateWithoutAgentInput, AgentCheckpointUncheckedUpdateWithoutAgentInput>
    create: XOR<AgentCheckpointCreateWithoutAgentInput, AgentCheckpointUncheckedCreateWithoutAgentInput>
  }

  export type AgentCheckpointUpdateWithWhereUniqueWithoutAgentInput = {
    where: AgentCheckpointWhereUniqueInput
    data: XOR<AgentCheckpointUpdateWithoutAgentInput, AgentCheckpointUncheckedUpdateWithoutAgentInput>
  }

  export type AgentCheckpointUpdateManyWithWhereWithoutAgentInput = {
    where: AgentCheckpointScalarWhereInput
    data: XOR<AgentCheckpointUpdateManyMutationInput, AgentCheckpointUncheckedUpdateManyWithoutAgentInput>
  }

  export type AgentCheckpointScalarWhereInput = {
    AND?: AgentCheckpointScalarWhereInput | AgentCheckpointScalarWhereInput[]
    OR?: AgentCheckpointScalarWhereInput[]
    NOT?: AgentCheckpointScalarWhereInput | AgentCheckpointScalarWhereInput[]
    id?: StringFilter<"AgentCheckpoint"> | string
    agentId?: StringFilter<"AgentCheckpoint"> | string
    threadId?: StringFilter<"AgentCheckpoint"> | string
    checkpointId?: StringFilter<"AgentCheckpoint"> | string
    state?: JsonFilter<"AgentCheckpoint">
    metadata?: JsonNullableFilter<"AgentCheckpoint">
    createdAt?: DateTimeFilter<"AgentCheckpoint"> | Date | string
  }

  export type AgentCreateWithoutDecisionsInput = {
    id?: string
    name: string
    type: $Enums.AgentType
    version: string
    model: string
    graphDefinition: JsonNullValueInput | InputJsonValue
    tools?: AgentCreatetoolsInput | string[]
    systemPrompt?: string | null
    supportedProviders?: AgentCreatesupportedProvidersInput | string[]
    supportedChains?: AgentCreatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    totalExecutions?: number
    avgExecutionTime?: number | null
    successRate?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutAgentsInput
    agentWallet?: WalletCreateNestedOneWithoutAgentInput
    paymentLinks?: PaymentLinkCreateNestedManyWithoutExecutingAgentInput
    checkpoints?: AgentCheckpointCreateNestedManyWithoutAgentInput
  }

  export type AgentUncheckedCreateWithoutDecisionsInput = {
    id?: string
    organizationId: string
    name: string
    type: $Enums.AgentType
    version: string
    model: string
    agentWalletId?: string | null
    graphDefinition: JsonNullValueInput | InputJsonValue
    tools?: AgentCreatetoolsInput | string[]
    systemPrompt?: string | null
    supportedProviders?: AgentCreatesupportedProvidersInput | string[]
    supportedChains?: AgentCreatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    totalExecutions?: number
    avgExecutionTime?: number | null
    successRate?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paymentLinks?: PaymentLinkUncheckedCreateNestedManyWithoutExecutingAgentInput
    checkpoints?: AgentCheckpointUncheckedCreateNestedManyWithoutAgentInput
  }

  export type AgentCreateOrConnectWithoutDecisionsInput = {
    where: AgentWhereUniqueInput
    create: XOR<AgentCreateWithoutDecisionsInput, AgentUncheckedCreateWithoutDecisionsInput>
  }

  export type PaymentOrderCreateWithoutAgentDecisionsInput = {
    id?: string
    orderNumber: string
    status?: $Enums.PaymentOrderStatus
    requestedAmount: Decimal | DecimalJsLike | number | string
    requestedCurrency: string
    settledAmount?: Decimal | DecimalJsLike | number | string | null
    settledCurrency?: string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: Date | string | null
    exchangeRateSource?: string | null
    platformFee?: Decimal | DecimalJsLike | number | string
    providerFee?: Decimal | DecimalJsLike | number | string
    networkFee?: Decimal | DecimalJsLike | number | string
    totalFee?: Decimal | DecimalJsLike | number | string
    customerEmail?: string | null
    customerName?: string | null
    customerWallet?: string | null
    customerIp?: string | null
    customerCountry?: string | null
    riskScore?: number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: $Enums.KycStatus
    kycVerifiedAt?: Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    failureCode?: string | null
    retryCount?: number
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutPaymentOrdersInput
    paymentLink: PaymentLinkCreateNestedOneWithoutPaymentOrdersInput
    customer?: CustomerCreateNestedOneWithoutPaymentOrdersInput
    providerTransactions?: ProviderTransactionCreateNestedManyWithoutPaymentOrderInput
    blockchainTxs?: BlockchainTransactionCreateNestedManyWithoutPaymentOrderInput
    events?: PaymentEventCreateNestedManyWithoutPaymentOrderInput
    manualSteps?: ManualProcessStepCreateNestedManyWithoutPaymentOrderInput
  }

  export type PaymentOrderUncheckedCreateWithoutAgentDecisionsInput = {
    id?: string
    organizationId: string
    paymentLinkId: string
    customerId?: string | null
    orderNumber: string
    status?: $Enums.PaymentOrderStatus
    requestedAmount: Decimal | DecimalJsLike | number | string
    requestedCurrency: string
    settledAmount?: Decimal | DecimalJsLike | number | string | null
    settledCurrency?: string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: Date | string | null
    exchangeRateSource?: string | null
    platformFee?: Decimal | DecimalJsLike | number | string
    providerFee?: Decimal | DecimalJsLike | number | string
    networkFee?: Decimal | DecimalJsLike | number | string
    totalFee?: Decimal | DecimalJsLike | number | string
    customerEmail?: string | null
    customerName?: string | null
    customerWallet?: string | null
    customerIp?: string | null
    customerCountry?: string | null
    riskScore?: number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: $Enums.KycStatus
    kycVerifiedAt?: Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    failureCode?: string | null
    retryCount?: number
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    updatedAt?: Date | string
    providerTransactions?: ProviderTransactionUncheckedCreateNestedManyWithoutPaymentOrderInput
    blockchainTxs?: BlockchainTransactionUncheckedCreateNestedManyWithoutPaymentOrderInput
    events?: PaymentEventUncheckedCreateNestedManyWithoutPaymentOrderInput
    manualSteps?: ManualProcessStepUncheckedCreateNestedManyWithoutPaymentOrderInput
  }

  export type PaymentOrderCreateOrConnectWithoutAgentDecisionsInput = {
    where: PaymentOrderWhereUniqueInput
    create: XOR<PaymentOrderCreateWithoutAgentDecisionsInput, PaymentOrderUncheckedCreateWithoutAgentDecisionsInput>
  }

  export type AgentInteractionCreateWithoutAgentDecisionInput = {
    id?: string
    type: $Enums.InteractionType
    message?: string | null
    action?: string | null
    result?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutAgentInteractionsInput
  }

  export type AgentInteractionUncheckedCreateWithoutAgentDecisionInput = {
    id?: string
    userId: string
    type: $Enums.InteractionType
    message?: string | null
    action?: string | null
    result?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type AgentInteractionCreateOrConnectWithoutAgentDecisionInput = {
    where: AgentInteractionWhereUniqueInput
    create: XOR<AgentInteractionCreateWithoutAgentDecisionInput, AgentInteractionUncheckedCreateWithoutAgentDecisionInput>
  }

  export type AgentInteractionCreateManyAgentDecisionInputEnvelope = {
    data: AgentInteractionCreateManyAgentDecisionInput | AgentInteractionCreateManyAgentDecisionInput[]
    skipDuplicates?: boolean
  }

  export type AgentUpsertWithoutDecisionsInput = {
    update: XOR<AgentUpdateWithoutDecisionsInput, AgentUncheckedUpdateWithoutDecisionsInput>
    create: XOR<AgentCreateWithoutDecisionsInput, AgentUncheckedCreateWithoutDecisionsInput>
    where?: AgentWhereInput
  }

  export type AgentUpdateToOneWithWhereWithoutDecisionsInput = {
    where?: AgentWhereInput
    data: XOR<AgentUpdateWithoutDecisionsInput, AgentUncheckedUpdateWithoutDecisionsInput>
  }

  export type AgentUpdateWithoutDecisionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumAgentTypeFieldUpdateOperationsInput | $Enums.AgentType
    version?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    graphDefinition?: JsonNullValueInput | InputJsonValue
    tools?: AgentUpdatetoolsInput | string[]
    systemPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    supportedProviders?: AgentUpdatesupportedProvidersInput | string[]
    supportedChains?: AgentUpdatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    totalExecutions?: IntFieldUpdateOperationsInput | number
    avgExecutionTime?: NullableIntFieldUpdateOperationsInput | number | null
    successRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutAgentsNestedInput
    agentWallet?: WalletUpdateOneWithoutAgentNestedInput
    paymentLinks?: PaymentLinkUpdateManyWithoutExecutingAgentNestedInput
    checkpoints?: AgentCheckpointUpdateManyWithoutAgentNestedInput
  }

  export type AgentUncheckedUpdateWithoutDecisionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumAgentTypeFieldUpdateOperationsInput | $Enums.AgentType
    version?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    agentWalletId?: NullableStringFieldUpdateOperationsInput | string | null
    graphDefinition?: JsonNullValueInput | InputJsonValue
    tools?: AgentUpdatetoolsInput | string[]
    systemPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    supportedProviders?: AgentUpdatesupportedProvidersInput | string[]
    supportedChains?: AgentUpdatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    totalExecutions?: IntFieldUpdateOperationsInput | number
    avgExecutionTime?: NullableIntFieldUpdateOperationsInput | number | null
    successRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentLinks?: PaymentLinkUncheckedUpdateManyWithoutExecutingAgentNestedInput
    checkpoints?: AgentCheckpointUncheckedUpdateManyWithoutAgentNestedInput
  }

  export type PaymentOrderUpsertWithoutAgentDecisionsInput = {
    update: XOR<PaymentOrderUpdateWithoutAgentDecisionsInput, PaymentOrderUncheckedUpdateWithoutAgentDecisionsInput>
    create: XOR<PaymentOrderCreateWithoutAgentDecisionsInput, PaymentOrderUncheckedCreateWithoutAgentDecisionsInput>
    where?: PaymentOrderWhereInput
  }

  export type PaymentOrderUpdateToOneWithWhereWithoutAgentDecisionsInput = {
    where?: PaymentOrderWhereInput
    data: XOR<PaymentOrderUpdateWithoutAgentDecisionsInput, PaymentOrderUncheckedUpdateWithoutAgentDecisionsInput>
  }

  export type PaymentOrderUpdateWithoutAgentDecisionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentOrderStatusFieldUpdateOperationsInput | $Enums.PaymentOrderStatus
    requestedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    requestedCurrency?: StringFieldUpdateOperationsInput | string
    settledAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    settledCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exchangeRateSource?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    providerFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    networkFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    customerIp?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    riskScore?: NullableIntFieldUpdateOperationsInput | number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    failureCode?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutPaymentOrdersNestedInput
    paymentLink?: PaymentLinkUpdateOneRequiredWithoutPaymentOrdersNestedInput
    customer?: CustomerUpdateOneWithoutPaymentOrdersNestedInput
    providerTransactions?: ProviderTransactionUpdateManyWithoutPaymentOrderNestedInput
    blockchainTxs?: BlockchainTransactionUpdateManyWithoutPaymentOrderNestedInput
    events?: PaymentEventUpdateManyWithoutPaymentOrderNestedInput
    manualSteps?: ManualProcessStepUpdateManyWithoutPaymentOrderNestedInput
  }

  export type PaymentOrderUncheckedUpdateWithoutAgentDecisionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    paymentLinkId?: StringFieldUpdateOperationsInput | string
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentOrderStatusFieldUpdateOperationsInput | $Enums.PaymentOrderStatus
    requestedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    requestedCurrency?: StringFieldUpdateOperationsInput | string
    settledAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    settledCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exchangeRateSource?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    providerFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    networkFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    customerIp?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    riskScore?: NullableIntFieldUpdateOperationsInput | number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    failureCode?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    providerTransactions?: ProviderTransactionUncheckedUpdateManyWithoutPaymentOrderNestedInput
    blockchainTxs?: BlockchainTransactionUncheckedUpdateManyWithoutPaymentOrderNestedInput
    events?: PaymentEventUncheckedUpdateManyWithoutPaymentOrderNestedInput
    manualSteps?: ManualProcessStepUncheckedUpdateManyWithoutPaymentOrderNestedInput
  }

  export type AgentInteractionUpsertWithWhereUniqueWithoutAgentDecisionInput = {
    where: AgentInteractionWhereUniqueInput
    update: XOR<AgentInteractionUpdateWithoutAgentDecisionInput, AgentInteractionUncheckedUpdateWithoutAgentDecisionInput>
    create: XOR<AgentInteractionCreateWithoutAgentDecisionInput, AgentInteractionUncheckedCreateWithoutAgentDecisionInput>
  }

  export type AgentInteractionUpdateWithWhereUniqueWithoutAgentDecisionInput = {
    where: AgentInteractionWhereUniqueInput
    data: XOR<AgentInteractionUpdateWithoutAgentDecisionInput, AgentInteractionUncheckedUpdateWithoutAgentDecisionInput>
  }

  export type AgentInteractionUpdateManyWithWhereWithoutAgentDecisionInput = {
    where: AgentInteractionScalarWhereInput
    data: XOR<AgentInteractionUpdateManyMutationInput, AgentInteractionUncheckedUpdateManyWithoutAgentDecisionInput>
  }

  export type AgentCreateWithoutCheckpointsInput = {
    id?: string
    name: string
    type: $Enums.AgentType
    version: string
    model: string
    graphDefinition: JsonNullValueInput | InputJsonValue
    tools?: AgentCreatetoolsInput | string[]
    systemPrompt?: string | null
    supportedProviders?: AgentCreatesupportedProvidersInput | string[]
    supportedChains?: AgentCreatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    totalExecutions?: number
    avgExecutionTime?: number | null
    successRate?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutAgentsInput
    agentWallet?: WalletCreateNestedOneWithoutAgentInput
    paymentLinks?: PaymentLinkCreateNestedManyWithoutExecutingAgentInput
    decisions?: AgentDecisionCreateNestedManyWithoutAgentInput
  }

  export type AgentUncheckedCreateWithoutCheckpointsInput = {
    id?: string
    organizationId: string
    name: string
    type: $Enums.AgentType
    version: string
    model: string
    agentWalletId?: string | null
    graphDefinition: JsonNullValueInput | InputJsonValue
    tools?: AgentCreatetoolsInput | string[]
    systemPrompt?: string | null
    supportedProviders?: AgentCreatesupportedProvidersInput | string[]
    supportedChains?: AgentCreatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    totalExecutions?: number
    avgExecutionTime?: number | null
    successRate?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paymentLinks?: PaymentLinkUncheckedCreateNestedManyWithoutExecutingAgentInput
    decisions?: AgentDecisionUncheckedCreateNestedManyWithoutAgentInput
  }

  export type AgentCreateOrConnectWithoutCheckpointsInput = {
    where: AgentWhereUniqueInput
    create: XOR<AgentCreateWithoutCheckpointsInput, AgentUncheckedCreateWithoutCheckpointsInput>
  }

  export type AgentUpsertWithoutCheckpointsInput = {
    update: XOR<AgentUpdateWithoutCheckpointsInput, AgentUncheckedUpdateWithoutCheckpointsInput>
    create: XOR<AgentCreateWithoutCheckpointsInput, AgentUncheckedCreateWithoutCheckpointsInput>
    where?: AgentWhereInput
  }

  export type AgentUpdateToOneWithWhereWithoutCheckpointsInput = {
    where?: AgentWhereInput
    data: XOR<AgentUpdateWithoutCheckpointsInput, AgentUncheckedUpdateWithoutCheckpointsInput>
  }

  export type AgentUpdateWithoutCheckpointsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumAgentTypeFieldUpdateOperationsInput | $Enums.AgentType
    version?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    graphDefinition?: JsonNullValueInput | InputJsonValue
    tools?: AgentUpdatetoolsInput | string[]
    systemPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    supportedProviders?: AgentUpdatesupportedProvidersInput | string[]
    supportedChains?: AgentUpdatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    totalExecutions?: IntFieldUpdateOperationsInput | number
    avgExecutionTime?: NullableIntFieldUpdateOperationsInput | number | null
    successRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutAgentsNestedInput
    agentWallet?: WalletUpdateOneWithoutAgentNestedInput
    paymentLinks?: PaymentLinkUpdateManyWithoutExecutingAgentNestedInput
    decisions?: AgentDecisionUpdateManyWithoutAgentNestedInput
  }

  export type AgentUncheckedUpdateWithoutCheckpointsInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumAgentTypeFieldUpdateOperationsInput | $Enums.AgentType
    version?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    agentWalletId?: NullableStringFieldUpdateOperationsInput | string | null
    graphDefinition?: JsonNullValueInput | InputJsonValue
    tools?: AgentUpdatetoolsInput | string[]
    systemPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    supportedProviders?: AgentUpdatesupportedProvidersInput | string[]
    supportedChains?: AgentUpdatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    totalExecutions?: IntFieldUpdateOperationsInput | number
    avgExecutionTime?: NullableIntFieldUpdateOperationsInput | number | null
    successRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentLinks?: PaymentLinkUncheckedUpdateManyWithoutExecutingAgentNestedInput
    decisions?: AgentDecisionUncheckedUpdateManyWithoutAgentNestedInput
  }

  export type AgentDecisionCreateWithoutInteractionsInput = {
    id?: string
    decisionType: string
    input: JsonNullValueInput | InputJsonValue
    reasoning: JsonNullValueInput | InputJsonValue
    decision: JsonNullValueInput | InputJsonValue
    confidence: Decimal | DecimalJsLike | number | string
    executionTime: number
    tokensUsed?: number | null
    wasOverridden?: boolean
    overriddenBy?: string | null
    overrideReason?: string | null
    createdAt?: Date | string
    agent: AgentCreateNestedOneWithoutDecisionsInput
    paymentOrder?: PaymentOrderCreateNestedOneWithoutAgentDecisionsInput
  }

  export type AgentDecisionUncheckedCreateWithoutInteractionsInput = {
    id?: string
    agentId: string
    paymentOrderId?: string | null
    decisionType: string
    input: JsonNullValueInput | InputJsonValue
    reasoning: JsonNullValueInput | InputJsonValue
    decision: JsonNullValueInput | InputJsonValue
    confidence: Decimal | DecimalJsLike | number | string
    executionTime: number
    tokensUsed?: number | null
    wasOverridden?: boolean
    overriddenBy?: string | null
    overrideReason?: string | null
    createdAt?: Date | string
  }

  export type AgentDecisionCreateOrConnectWithoutInteractionsInput = {
    where: AgentDecisionWhereUniqueInput
    create: XOR<AgentDecisionCreateWithoutInteractionsInput, AgentDecisionUncheckedCreateWithoutInteractionsInput>
  }

  export type UserCreateWithoutAgentInteractionsInput = {
    id?: string
    email: string
    name?: string | null
    avatarUrl?: string | null
    authProvider?: $Enums.AuthProvider
    authProviderId?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    primaryWallet?: WalletCreateNestedOneWithoutPrimaryForUsersInput
    organizations?: OrganizationUserCreateNestedManyWithoutUserInput
    ownedWallets?: WalletCreateNestedManyWithoutUserInput
    paymentLinks?: PaymentLinkCreateNestedManyWithoutCreatedByInput
    auditLogs?: AuditLogCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAgentInteractionsInput = {
    id?: string
    email: string
    name?: string | null
    avatarUrl?: string | null
    authProvider?: $Enums.AuthProvider
    authProviderId?: string | null
    emailVerified?: boolean
    primaryWalletId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    organizations?: OrganizationUserUncheckedCreateNestedManyWithoutUserInput
    ownedWallets?: WalletUncheckedCreateNestedManyWithoutUserInput
    paymentLinks?: PaymentLinkUncheckedCreateNestedManyWithoutCreatedByInput
    auditLogs?: AuditLogUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAgentInteractionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAgentInteractionsInput, UserUncheckedCreateWithoutAgentInteractionsInput>
  }

  export type AgentDecisionUpsertWithoutInteractionsInput = {
    update: XOR<AgentDecisionUpdateWithoutInteractionsInput, AgentDecisionUncheckedUpdateWithoutInteractionsInput>
    create: XOR<AgentDecisionCreateWithoutInteractionsInput, AgentDecisionUncheckedCreateWithoutInteractionsInput>
    where?: AgentDecisionWhereInput
  }

  export type AgentDecisionUpdateToOneWithWhereWithoutInteractionsInput = {
    where?: AgentDecisionWhereInput
    data: XOR<AgentDecisionUpdateWithoutInteractionsInput, AgentDecisionUncheckedUpdateWithoutInteractionsInput>
  }

  export type AgentDecisionUpdateWithoutInteractionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    decisionType?: StringFieldUpdateOperationsInput | string
    input?: JsonNullValueInput | InputJsonValue
    reasoning?: JsonNullValueInput | InputJsonValue
    decision?: JsonNullValueInput | InputJsonValue
    confidence?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    executionTime?: IntFieldUpdateOperationsInput | number
    tokensUsed?: NullableIntFieldUpdateOperationsInput | number | null
    wasOverridden?: BoolFieldUpdateOperationsInput | boolean
    overriddenBy?: NullableStringFieldUpdateOperationsInput | string | null
    overrideReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agent?: AgentUpdateOneRequiredWithoutDecisionsNestedInput
    paymentOrder?: PaymentOrderUpdateOneWithoutAgentDecisionsNestedInput
  }

  export type AgentDecisionUncheckedUpdateWithoutInteractionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    agentId?: StringFieldUpdateOperationsInput | string
    paymentOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    decisionType?: StringFieldUpdateOperationsInput | string
    input?: JsonNullValueInput | InputJsonValue
    reasoning?: JsonNullValueInput | InputJsonValue
    decision?: JsonNullValueInput | InputJsonValue
    confidence?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    executionTime?: IntFieldUpdateOperationsInput | number
    tokensUsed?: NullableIntFieldUpdateOperationsInput | number | null
    wasOverridden?: BoolFieldUpdateOperationsInput | boolean
    overriddenBy?: NullableStringFieldUpdateOperationsInput | string | null
    overrideReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpsertWithoutAgentInteractionsInput = {
    update: XOR<UserUpdateWithoutAgentInteractionsInput, UserUncheckedUpdateWithoutAgentInteractionsInput>
    create: XOR<UserCreateWithoutAgentInteractionsInput, UserUncheckedCreateWithoutAgentInteractionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAgentInteractionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAgentInteractionsInput, UserUncheckedUpdateWithoutAgentInteractionsInput>
  }

  export type UserUpdateWithoutAgentInteractionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    authProvider?: EnumAuthProviderFieldUpdateOperationsInput | $Enums.AuthProvider
    authProviderId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    primaryWallet?: WalletUpdateOneWithoutPrimaryForUsersNestedInput
    organizations?: OrganizationUserUpdateManyWithoutUserNestedInput
    ownedWallets?: WalletUpdateManyWithoutUserNestedInput
    paymentLinks?: PaymentLinkUpdateManyWithoutCreatedByNestedInput
    auditLogs?: AuditLogUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAgentInteractionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    authProvider?: EnumAuthProviderFieldUpdateOperationsInput | $Enums.AuthProvider
    authProviderId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    primaryWalletId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organizations?: OrganizationUserUncheckedUpdateManyWithoutUserNestedInput
    ownedWallets?: WalletUncheckedUpdateManyWithoutUserNestedInput
    paymentLinks?: PaymentLinkUncheckedUpdateManyWithoutCreatedByNestedInput
    auditLogs?: AuditLogUncheckedUpdateManyWithoutUserNestedInput
  }

  export type OrganizationCreateWithoutWebhooksInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    billingEmail: string
    taxId?: string | null
    country: string
    complianceStatus?: $Enums.ComplianceStatus
    kycVerifiedAt?: Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    ownerId: string
    users?: OrganizationUserCreateNestedManyWithoutOrganizationInput
    customers?: CustomerCreateNestedManyWithoutOrganizationInput
    products?: ProductCreateNestedManyWithoutOrganizationInput
    wallets?: WalletCreateNestedManyWithoutOrganizationInput
    paymentLinks?: PaymentLinkCreateNestedManyWithoutOrganizationInput
    paymentOrders?: PaymentOrderCreateNestedManyWithoutOrganizationInput
    providers?: ProviderConfigCreateNestedManyWithoutOrganizationInput
    apiKeys?: ApiKeyCreateNestedManyWithoutOrganizationInput
    auditLogs?: AuditLogCreateNestedManyWithoutOrganizationInput
    agents?: AgentCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutWebhooksInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    billingEmail: string
    taxId?: string | null
    country: string
    complianceStatus?: $Enums.ComplianceStatus
    kycVerifiedAt?: Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    ownerId: string
    users?: OrganizationUserUncheckedCreateNestedManyWithoutOrganizationInput
    customers?: CustomerUncheckedCreateNestedManyWithoutOrganizationInput
    products?: ProductUncheckedCreateNestedManyWithoutOrganizationInput
    wallets?: WalletUncheckedCreateNestedManyWithoutOrganizationInput
    paymentLinks?: PaymentLinkUncheckedCreateNestedManyWithoutOrganizationInput
    paymentOrders?: PaymentOrderUncheckedCreateNestedManyWithoutOrganizationInput
    providers?: ProviderConfigUncheckedCreateNestedManyWithoutOrganizationInput
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutOrganizationInput
    auditLogs?: AuditLogUncheckedCreateNestedManyWithoutOrganizationInput
    agents?: AgentUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutWebhooksInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutWebhooksInput, OrganizationUncheckedCreateWithoutWebhooksInput>
  }

  export type WebhookDeliveryCreateWithoutWebhookInput = {
    id?: string
    eventType: string
    eventId: string
    payload: JsonNullValueInput | InputJsonValue
    statusCode?: number | null
    response?: string | null
    error?: string | null
    attempts?: number
    nextRetryAt?: Date | string | null
    createdAt?: Date | string
    deliveredAt?: Date | string | null
  }

  export type WebhookDeliveryUncheckedCreateWithoutWebhookInput = {
    id?: string
    eventType: string
    eventId: string
    payload: JsonNullValueInput | InputJsonValue
    statusCode?: number | null
    response?: string | null
    error?: string | null
    attempts?: number
    nextRetryAt?: Date | string | null
    createdAt?: Date | string
    deliveredAt?: Date | string | null
  }

  export type WebhookDeliveryCreateOrConnectWithoutWebhookInput = {
    where: WebhookDeliveryWhereUniqueInput
    create: XOR<WebhookDeliveryCreateWithoutWebhookInput, WebhookDeliveryUncheckedCreateWithoutWebhookInput>
  }

  export type WebhookDeliveryCreateManyWebhookInputEnvelope = {
    data: WebhookDeliveryCreateManyWebhookInput | WebhookDeliveryCreateManyWebhookInput[]
    skipDuplicates?: boolean
  }

  export type OrganizationUpsertWithoutWebhooksInput = {
    update: XOR<OrganizationUpdateWithoutWebhooksInput, OrganizationUncheckedUpdateWithoutWebhooksInput>
    create: XOR<OrganizationCreateWithoutWebhooksInput, OrganizationUncheckedCreateWithoutWebhooksInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutWebhooksInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutWebhooksInput, OrganizationUncheckedUpdateWithoutWebhooksInput>
  }

  export type OrganizationUpdateWithoutWebhooksInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    billingEmail?: StringFieldUpdateOperationsInput | string
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: StringFieldUpdateOperationsInput | string
    users?: OrganizationUserUpdateManyWithoutOrganizationNestedInput
    customers?: CustomerUpdateManyWithoutOrganizationNestedInput
    products?: ProductUpdateManyWithoutOrganizationNestedInput
    wallets?: WalletUpdateManyWithoutOrganizationNestedInput
    paymentLinks?: PaymentLinkUpdateManyWithoutOrganizationNestedInput
    paymentOrders?: PaymentOrderUpdateManyWithoutOrganizationNestedInput
    providers?: ProviderConfigUpdateManyWithoutOrganizationNestedInput
    apiKeys?: ApiKeyUpdateManyWithoutOrganizationNestedInput
    auditLogs?: AuditLogUpdateManyWithoutOrganizationNestedInput
    agents?: AgentUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutWebhooksInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    billingEmail?: StringFieldUpdateOperationsInput | string
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: StringFieldUpdateOperationsInput | string
    users?: OrganizationUserUncheckedUpdateManyWithoutOrganizationNestedInput
    customers?: CustomerUncheckedUpdateManyWithoutOrganizationNestedInput
    products?: ProductUncheckedUpdateManyWithoutOrganizationNestedInput
    wallets?: WalletUncheckedUpdateManyWithoutOrganizationNestedInput
    paymentLinks?: PaymentLinkUncheckedUpdateManyWithoutOrganizationNestedInput
    paymentOrders?: PaymentOrderUncheckedUpdateManyWithoutOrganizationNestedInput
    providers?: ProviderConfigUncheckedUpdateManyWithoutOrganizationNestedInput
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutOrganizationNestedInput
    auditLogs?: AuditLogUncheckedUpdateManyWithoutOrganizationNestedInput
    agents?: AgentUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type WebhookDeliveryUpsertWithWhereUniqueWithoutWebhookInput = {
    where: WebhookDeliveryWhereUniqueInput
    update: XOR<WebhookDeliveryUpdateWithoutWebhookInput, WebhookDeliveryUncheckedUpdateWithoutWebhookInput>
    create: XOR<WebhookDeliveryCreateWithoutWebhookInput, WebhookDeliveryUncheckedCreateWithoutWebhookInput>
  }

  export type WebhookDeliveryUpdateWithWhereUniqueWithoutWebhookInput = {
    where: WebhookDeliveryWhereUniqueInput
    data: XOR<WebhookDeliveryUpdateWithoutWebhookInput, WebhookDeliveryUncheckedUpdateWithoutWebhookInput>
  }

  export type WebhookDeliveryUpdateManyWithWhereWithoutWebhookInput = {
    where: WebhookDeliveryScalarWhereInput
    data: XOR<WebhookDeliveryUpdateManyMutationInput, WebhookDeliveryUncheckedUpdateManyWithoutWebhookInput>
  }

  export type WebhookDeliveryScalarWhereInput = {
    AND?: WebhookDeliveryScalarWhereInput | WebhookDeliveryScalarWhereInput[]
    OR?: WebhookDeliveryScalarWhereInput[]
    NOT?: WebhookDeliveryScalarWhereInput | WebhookDeliveryScalarWhereInput[]
    id?: StringFilter<"WebhookDelivery"> | string
    webhookId?: StringFilter<"WebhookDelivery"> | string
    eventType?: StringFilter<"WebhookDelivery"> | string
    eventId?: StringFilter<"WebhookDelivery"> | string
    payload?: JsonFilter<"WebhookDelivery">
    statusCode?: IntNullableFilter<"WebhookDelivery"> | number | null
    response?: StringNullableFilter<"WebhookDelivery"> | string | null
    error?: StringNullableFilter<"WebhookDelivery"> | string | null
    attempts?: IntFilter<"WebhookDelivery"> | number
    nextRetryAt?: DateTimeNullableFilter<"WebhookDelivery"> | Date | string | null
    createdAt?: DateTimeFilter<"WebhookDelivery"> | Date | string
    deliveredAt?: DateTimeNullableFilter<"WebhookDelivery"> | Date | string | null
  }

  export type WebhookCreateWithoutDeliveriesInput = {
    id?: string
    url: string
    events?: WebhookCreateeventsInput | string[]
    secret: string
    isActive?: boolean
    failureCount?: number
    lastFailureAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutWebhooksInput
  }

  export type WebhookUncheckedCreateWithoutDeliveriesInput = {
    id?: string
    organizationId: string
    url: string
    events?: WebhookCreateeventsInput | string[]
    secret: string
    isActive?: boolean
    failureCount?: number
    lastFailureAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type WebhookCreateOrConnectWithoutDeliveriesInput = {
    where: WebhookWhereUniqueInput
    create: XOR<WebhookCreateWithoutDeliveriesInput, WebhookUncheckedCreateWithoutDeliveriesInput>
  }

  export type WebhookUpsertWithoutDeliveriesInput = {
    update: XOR<WebhookUpdateWithoutDeliveriesInput, WebhookUncheckedUpdateWithoutDeliveriesInput>
    create: XOR<WebhookCreateWithoutDeliveriesInput, WebhookUncheckedCreateWithoutDeliveriesInput>
    where?: WebhookWhereInput
  }

  export type WebhookUpdateToOneWithWhereWithoutDeliveriesInput = {
    where?: WebhookWhereInput
    data: XOR<WebhookUpdateWithoutDeliveriesInput, WebhookUncheckedUpdateWithoutDeliveriesInput>
  }

  export type WebhookUpdateWithoutDeliveriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    events?: WebhookUpdateeventsInput | string[]
    secret?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    failureCount?: IntFieldUpdateOperationsInput | number
    lastFailureAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutWebhooksNestedInput
  }

  export type WebhookUncheckedUpdateWithoutDeliveriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    events?: WebhookUpdateeventsInput | string[]
    secret?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    failureCount?: IntFieldUpdateOperationsInput | number
    lastFailureAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentOrderCreateWithoutManualStepsInput = {
    id?: string
    orderNumber: string
    status?: $Enums.PaymentOrderStatus
    requestedAmount: Decimal | DecimalJsLike | number | string
    requestedCurrency: string
    settledAmount?: Decimal | DecimalJsLike | number | string | null
    settledCurrency?: string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: Date | string | null
    exchangeRateSource?: string | null
    platformFee?: Decimal | DecimalJsLike | number | string
    providerFee?: Decimal | DecimalJsLike | number | string
    networkFee?: Decimal | DecimalJsLike | number | string
    totalFee?: Decimal | DecimalJsLike | number | string
    customerEmail?: string | null
    customerName?: string | null
    customerWallet?: string | null
    customerIp?: string | null
    customerCountry?: string | null
    riskScore?: number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: $Enums.KycStatus
    kycVerifiedAt?: Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    failureCode?: string | null
    retryCount?: number
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutPaymentOrdersInput
    paymentLink: PaymentLinkCreateNestedOneWithoutPaymentOrdersInput
    customer?: CustomerCreateNestedOneWithoutPaymentOrdersInput
    providerTransactions?: ProviderTransactionCreateNestedManyWithoutPaymentOrderInput
    blockchainTxs?: BlockchainTransactionCreateNestedManyWithoutPaymentOrderInput
    events?: PaymentEventCreateNestedManyWithoutPaymentOrderInput
    agentDecisions?: AgentDecisionCreateNestedManyWithoutPaymentOrderInput
  }

  export type PaymentOrderUncheckedCreateWithoutManualStepsInput = {
    id?: string
    organizationId: string
    paymentLinkId: string
    customerId?: string | null
    orderNumber: string
    status?: $Enums.PaymentOrderStatus
    requestedAmount: Decimal | DecimalJsLike | number | string
    requestedCurrency: string
    settledAmount?: Decimal | DecimalJsLike | number | string | null
    settledCurrency?: string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: Date | string | null
    exchangeRateSource?: string | null
    platformFee?: Decimal | DecimalJsLike | number | string
    providerFee?: Decimal | DecimalJsLike | number | string
    networkFee?: Decimal | DecimalJsLike | number | string
    totalFee?: Decimal | DecimalJsLike | number | string
    customerEmail?: string | null
    customerName?: string | null
    customerWallet?: string | null
    customerIp?: string | null
    customerCountry?: string | null
    riskScore?: number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: $Enums.KycStatus
    kycVerifiedAt?: Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    failureCode?: string | null
    retryCount?: number
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    updatedAt?: Date | string
    providerTransactions?: ProviderTransactionUncheckedCreateNestedManyWithoutPaymentOrderInput
    blockchainTxs?: BlockchainTransactionUncheckedCreateNestedManyWithoutPaymentOrderInput
    events?: PaymentEventUncheckedCreateNestedManyWithoutPaymentOrderInput
    agentDecisions?: AgentDecisionUncheckedCreateNestedManyWithoutPaymentOrderInput
  }

  export type PaymentOrderCreateOrConnectWithoutManualStepsInput = {
    where: PaymentOrderWhereUniqueInput
    create: XOR<PaymentOrderCreateWithoutManualStepsInput, PaymentOrderUncheckedCreateWithoutManualStepsInput>
  }

  export type PaymentOrderUpsertWithoutManualStepsInput = {
    update: XOR<PaymentOrderUpdateWithoutManualStepsInput, PaymentOrderUncheckedUpdateWithoutManualStepsInput>
    create: XOR<PaymentOrderCreateWithoutManualStepsInput, PaymentOrderUncheckedCreateWithoutManualStepsInput>
    where?: PaymentOrderWhereInput
  }

  export type PaymentOrderUpdateToOneWithWhereWithoutManualStepsInput = {
    where?: PaymentOrderWhereInput
    data: XOR<PaymentOrderUpdateWithoutManualStepsInput, PaymentOrderUncheckedUpdateWithoutManualStepsInput>
  }

  export type PaymentOrderUpdateWithoutManualStepsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentOrderStatusFieldUpdateOperationsInput | $Enums.PaymentOrderStatus
    requestedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    requestedCurrency?: StringFieldUpdateOperationsInput | string
    settledAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    settledCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exchangeRateSource?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    providerFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    networkFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    customerIp?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    riskScore?: NullableIntFieldUpdateOperationsInput | number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    failureCode?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutPaymentOrdersNestedInput
    paymentLink?: PaymentLinkUpdateOneRequiredWithoutPaymentOrdersNestedInput
    customer?: CustomerUpdateOneWithoutPaymentOrdersNestedInput
    providerTransactions?: ProviderTransactionUpdateManyWithoutPaymentOrderNestedInput
    blockchainTxs?: BlockchainTransactionUpdateManyWithoutPaymentOrderNestedInput
    events?: PaymentEventUpdateManyWithoutPaymentOrderNestedInput
    agentDecisions?: AgentDecisionUpdateManyWithoutPaymentOrderNestedInput
  }

  export type PaymentOrderUncheckedUpdateWithoutManualStepsInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    paymentLinkId?: StringFieldUpdateOperationsInput | string
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentOrderStatusFieldUpdateOperationsInput | $Enums.PaymentOrderStatus
    requestedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    requestedCurrency?: StringFieldUpdateOperationsInput | string
    settledAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    settledCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exchangeRateSource?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    providerFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    networkFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    customerIp?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    riskScore?: NullableIntFieldUpdateOperationsInput | number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    failureCode?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    providerTransactions?: ProviderTransactionUncheckedUpdateManyWithoutPaymentOrderNestedInput
    blockchainTxs?: BlockchainTransactionUncheckedUpdateManyWithoutPaymentOrderNestedInput
    events?: PaymentEventUncheckedUpdateManyWithoutPaymentOrderNestedInput
    agentDecisions?: AgentDecisionUncheckedUpdateManyWithoutPaymentOrderNestedInput
  }

  export type PaymentOrderCreateWithoutEventsInput = {
    id?: string
    orderNumber: string
    status?: $Enums.PaymentOrderStatus
    requestedAmount: Decimal | DecimalJsLike | number | string
    requestedCurrency: string
    settledAmount?: Decimal | DecimalJsLike | number | string | null
    settledCurrency?: string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: Date | string | null
    exchangeRateSource?: string | null
    platformFee?: Decimal | DecimalJsLike | number | string
    providerFee?: Decimal | DecimalJsLike | number | string
    networkFee?: Decimal | DecimalJsLike | number | string
    totalFee?: Decimal | DecimalJsLike | number | string
    customerEmail?: string | null
    customerName?: string | null
    customerWallet?: string | null
    customerIp?: string | null
    customerCountry?: string | null
    riskScore?: number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: $Enums.KycStatus
    kycVerifiedAt?: Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    failureCode?: string | null
    retryCount?: number
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutPaymentOrdersInput
    paymentLink: PaymentLinkCreateNestedOneWithoutPaymentOrdersInput
    customer?: CustomerCreateNestedOneWithoutPaymentOrdersInput
    providerTransactions?: ProviderTransactionCreateNestedManyWithoutPaymentOrderInput
    blockchainTxs?: BlockchainTransactionCreateNestedManyWithoutPaymentOrderInput
    agentDecisions?: AgentDecisionCreateNestedManyWithoutPaymentOrderInput
    manualSteps?: ManualProcessStepCreateNestedManyWithoutPaymentOrderInput
  }

  export type PaymentOrderUncheckedCreateWithoutEventsInput = {
    id?: string
    organizationId: string
    paymentLinkId: string
    customerId?: string | null
    orderNumber: string
    status?: $Enums.PaymentOrderStatus
    requestedAmount: Decimal | DecimalJsLike | number | string
    requestedCurrency: string
    settledAmount?: Decimal | DecimalJsLike | number | string | null
    settledCurrency?: string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: Date | string | null
    exchangeRateSource?: string | null
    platformFee?: Decimal | DecimalJsLike | number | string
    providerFee?: Decimal | DecimalJsLike | number | string
    networkFee?: Decimal | DecimalJsLike | number | string
    totalFee?: Decimal | DecimalJsLike | number | string
    customerEmail?: string | null
    customerName?: string | null
    customerWallet?: string | null
    customerIp?: string | null
    customerCountry?: string | null
    riskScore?: number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: $Enums.KycStatus
    kycVerifiedAt?: Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    failureCode?: string | null
    retryCount?: number
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    updatedAt?: Date | string
    providerTransactions?: ProviderTransactionUncheckedCreateNestedManyWithoutPaymentOrderInput
    blockchainTxs?: BlockchainTransactionUncheckedCreateNestedManyWithoutPaymentOrderInput
    agentDecisions?: AgentDecisionUncheckedCreateNestedManyWithoutPaymentOrderInput
    manualSteps?: ManualProcessStepUncheckedCreateNestedManyWithoutPaymentOrderInput
  }

  export type PaymentOrderCreateOrConnectWithoutEventsInput = {
    where: PaymentOrderWhereUniqueInput
    create: XOR<PaymentOrderCreateWithoutEventsInput, PaymentOrderUncheckedCreateWithoutEventsInput>
  }

  export type PaymentOrderUpsertWithoutEventsInput = {
    update: XOR<PaymentOrderUpdateWithoutEventsInput, PaymentOrderUncheckedUpdateWithoutEventsInput>
    create: XOR<PaymentOrderCreateWithoutEventsInput, PaymentOrderUncheckedCreateWithoutEventsInput>
    where?: PaymentOrderWhereInput
  }

  export type PaymentOrderUpdateToOneWithWhereWithoutEventsInput = {
    where?: PaymentOrderWhereInput
    data: XOR<PaymentOrderUpdateWithoutEventsInput, PaymentOrderUncheckedUpdateWithoutEventsInput>
  }

  export type PaymentOrderUpdateWithoutEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentOrderStatusFieldUpdateOperationsInput | $Enums.PaymentOrderStatus
    requestedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    requestedCurrency?: StringFieldUpdateOperationsInput | string
    settledAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    settledCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exchangeRateSource?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    providerFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    networkFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    customerIp?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    riskScore?: NullableIntFieldUpdateOperationsInput | number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    failureCode?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutPaymentOrdersNestedInput
    paymentLink?: PaymentLinkUpdateOneRequiredWithoutPaymentOrdersNestedInput
    customer?: CustomerUpdateOneWithoutPaymentOrdersNestedInput
    providerTransactions?: ProviderTransactionUpdateManyWithoutPaymentOrderNestedInput
    blockchainTxs?: BlockchainTransactionUpdateManyWithoutPaymentOrderNestedInput
    agentDecisions?: AgentDecisionUpdateManyWithoutPaymentOrderNestedInput
    manualSteps?: ManualProcessStepUpdateManyWithoutPaymentOrderNestedInput
  }

  export type PaymentOrderUncheckedUpdateWithoutEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    paymentLinkId?: StringFieldUpdateOperationsInput | string
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentOrderStatusFieldUpdateOperationsInput | $Enums.PaymentOrderStatus
    requestedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    requestedCurrency?: StringFieldUpdateOperationsInput | string
    settledAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    settledCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exchangeRateSource?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    providerFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    networkFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    customerIp?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    riskScore?: NullableIntFieldUpdateOperationsInput | number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    failureCode?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    providerTransactions?: ProviderTransactionUncheckedUpdateManyWithoutPaymentOrderNestedInput
    blockchainTxs?: BlockchainTransactionUncheckedUpdateManyWithoutPaymentOrderNestedInput
    agentDecisions?: AgentDecisionUncheckedUpdateManyWithoutPaymentOrderNestedInput
    manualSteps?: ManualProcessStepUncheckedUpdateManyWithoutPaymentOrderNestedInput
  }

  export type OrganizationCreateWithoutAuditLogsInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    billingEmail: string
    taxId?: string | null
    country: string
    complianceStatus?: $Enums.ComplianceStatus
    kycVerifiedAt?: Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    ownerId: string
    users?: OrganizationUserCreateNestedManyWithoutOrganizationInput
    customers?: CustomerCreateNestedManyWithoutOrganizationInput
    products?: ProductCreateNestedManyWithoutOrganizationInput
    wallets?: WalletCreateNestedManyWithoutOrganizationInput
    paymentLinks?: PaymentLinkCreateNestedManyWithoutOrganizationInput
    paymentOrders?: PaymentOrderCreateNestedManyWithoutOrganizationInput
    providers?: ProviderConfigCreateNestedManyWithoutOrganizationInput
    apiKeys?: ApiKeyCreateNestedManyWithoutOrganizationInput
    webhooks?: WebhookCreateNestedManyWithoutOrganizationInput
    agents?: AgentCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutAuditLogsInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    billingEmail: string
    taxId?: string | null
    country: string
    complianceStatus?: $Enums.ComplianceStatus
    kycVerifiedAt?: Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    ownerId: string
    users?: OrganizationUserUncheckedCreateNestedManyWithoutOrganizationInput
    customers?: CustomerUncheckedCreateNestedManyWithoutOrganizationInput
    products?: ProductUncheckedCreateNestedManyWithoutOrganizationInput
    wallets?: WalletUncheckedCreateNestedManyWithoutOrganizationInput
    paymentLinks?: PaymentLinkUncheckedCreateNestedManyWithoutOrganizationInput
    paymentOrders?: PaymentOrderUncheckedCreateNestedManyWithoutOrganizationInput
    providers?: ProviderConfigUncheckedCreateNestedManyWithoutOrganizationInput
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutOrganizationInput
    webhooks?: WebhookUncheckedCreateNestedManyWithoutOrganizationInput
    agents?: AgentUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutAuditLogsInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutAuditLogsInput, OrganizationUncheckedCreateWithoutAuditLogsInput>
  }

  export type UserCreateWithoutAuditLogsInput = {
    id?: string
    email: string
    name?: string | null
    avatarUrl?: string | null
    authProvider?: $Enums.AuthProvider
    authProviderId?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    primaryWallet?: WalletCreateNestedOneWithoutPrimaryForUsersInput
    organizations?: OrganizationUserCreateNestedManyWithoutUserInput
    ownedWallets?: WalletCreateNestedManyWithoutUserInput
    paymentLinks?: PaymentLinkCreateNestedManyWithoutCreatedByInput
    agentInteractions?: AgentInteractionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAuditLogsInput = {
    id?: string
    email: string
    name?: string | null
    avatarUrl?: string | null
    authProvider?: $Enums.AuthProvider
    authProviderId?: string | null
    emailVerified?: boolean
    primaryWalletId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    organizations?: OrganizationUserUncheckedCreateNestedManyWithoutUserInput
    ownedWallets?: WalletUncheckedCreateNestedManyWithoutUserInput
    paymentLinks?: PaymentLinkUncheckedCreateNestedManyWithoutCreatedByInput
    agentInteractions?: AgentInteractionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAuditLogsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAuditLogsInput, UserUncheckedCreateWithoutAuditLogsInput>
  }

  export type OrganizationUpsertWithoutAuditLogsInput = {
    update: XOR<OrganizationUpdateWithoutAuditLogsInput, OrganizationUncheckedUpdateWithoutAuditLogsInput>
    create: XOR<OrganizationCreateWithoutAuditLogsInput, OrganizationUncheckedCreateWithoutAuditLogsInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutAuditLogsInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutAuditLogsInput, OrganizationUncheckedUpdateWithoutAuditLogsInput>
  }

  export type OrganizationUpdateWithoutAuditLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    billingEmail?: StringFieldUpdateOperationsInput | string
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: StringFieldUpdateOperationsInput | string
    users?: OrganizationUserUpdateManyWithoutOrganizationNestedInput
    customers?: CustomerUpdateManyWithoutOrganizationNestedInput
    products?: ProductUpdateManyWithoutOrganizationNestedInput
    wallets?: WalletUpdateManyWithoutOrganizationNestedInput
    paymentLinks?: PaymentLinkUpdateManyWithoutOrganizationNestedInput
    paymentOrders?: PaymentOrderUpdateManyWithoutOrganizationNestedInput
    providers?: ProviderConfigUpdateManyWithoutOrganizationNestedInput
    apiKeys?: ApiKeyUpdateManyWithoutOrganizationNestedInput
    webhooks?: WebhookUpdateManyWithoutOrganizationNestedInput
    agents?: AgentUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutAuditLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    billingEmail?: StringFieldUpdateOperationsInput | string
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: StringFieldUpdateOperationsInput | string
    users?: OrganizationUserUncheckedUpdateManyWithoutOrganizationNestedInput
    customers?: CustomerUncheckedUpdateManyWithoutOrganizationNestedInput
    products?: ProductUncheckedUpdateManyWithoutOrganizationNestedInput
    wallets?: WalletUncheckedUpdateManyWithoutOrganizationNestedInput
    paymentLinks?: PaymentLinkUncheckedUpdateManyWithoutOrganizationNestedInput
    paymentOrders?: PaymentOrderUncheckedUpdateManyWithoutOrganizationNestedInput
    providers?: ProviderConfigUncheckedUpdateManyWithoutOrganizationNestedInput
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutOrganizationNestedInput
    webhooks?: WebhookUncheckedUpdateManyWithoutOrganizationNestedInput
    agents?: AgentUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type UserUpsertWithoutAuditLogsInput = {
    update: XOR<UserUpdateWithoutAuditLogsInput, UserUncheckedUpdateWithoutAuditLogsInput>
    create: XOR<UserCreateWithoutAuditLogsInput, UserUncheckedCreateWithoutAuditLogsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAuditLogsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAuditLogsInput, UserUncheckedUpdateWithoutAuditLogsInput>
  }

  export type UserUpdateWithoutAuditLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    authProvider?: EnumAuthProviderFieldUpdateOperationsInput | $Enums.AuthProvider
    authProviderId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    primaryWallet?: WalletUpdateOneWithoutPrimaryForUsersNestedInput
    organizations?: OrganizationUserUpdateManyWithoutUserNestedInput
    ownedWallets?: WalletUpdateManyWithoutUserNestedInput
    paymentLinks?: PaymentLinkUpdateManyWithoutCreatedByNestedInput
    agentInteractions?: AgentInteractionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAuditLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    authProvider?: EnumAuthProviderFieldUpdateOperationsInput | $Enums.AuthProvider
    authProviderId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    primaryWalletId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organizations?: OrganizationUserUncheckedUpdateManyWithoutUserNestedInput
    ownedWallets?: WalletUncheckedUpdateManyWithoutUserNestedInput
    paymentLinks?: PaymentLinkUncheckedUpdateManyWithoutCreatedByNestedInput
    agentInteractions?: AgentInteractionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type OrganizationCreateWithoutApiKeysInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    billingEmail: string
    taxId?: string | null
    country: string
    complianceStatus?: $Enums.ComplianceStatus
    kycVerifiedAt?: Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    ownerId: string
    users?: OrganizationUserCreateNestedManyWithoutOrganizationInput
    customers?: CustomerCreateNestedManyWithoutOrganizationInput
    products?: ProductCreateNestedManyWithoutOrganizationInput
    wallets?: WalletCreateNestedManyWithoutOrganizationInput
    paymentLinks?: PaymentLinkCreateNestedManyWithoutOrganizationInput
    paymentOrders?: PaymentOrderCreateNestedManyWithoutOrganizationInput
    providers?: ProviderConfigCreateNestedManyWithoutOrganizationInput
    webhooks?: WebhookCreateNestedManyWithoutOrganizationInput
    auditLogs?: AuditLogCreateNestedManyWithoutOrganizationInput
    agents?: AgentCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutApiKeysInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    billingEmail: string
    taxId?: string | null
    country: string
    complianceStatus?: $Enums.ComplianceStatus
    kycVerifiedAt?: Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    ownerId: string
    users?: OrganizationUserUncheckedCreateNestedManyWithoutOrganizationInput
    customers?: CustomerUncheckedCreateNestedManyWithoutOrganizationInput
    products?: ProductUncheckedCreateNestedManyWithoutOrganizationInput
    wallets?: WalletUncheckedCreateNestedManyWithoutOrganizationInput
    paymentLinks?: PaymentLinkUncheckedCreateNestedManyWithoutOrganizationInput
    paymentOrders?: PaymentOrderUncheckedCreateNestedManyWithoutOrganizationInput
    providers?: ProviderConfigUncheckedCreateNestedManyWithoutOrganizationInput
    webhooks?: WebhookUncheckedCreateNestedManyWithoutOrganizationInput
    auditLogs?: AuditLogUncheckedCreateNestedManyWithoutOrganizationInput
    agents?: AgentUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutApiKeysInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutApiKeysInput, OrganizationUncheckedCreateWithoutApiKeysInput>
  }

  export type OrganizationUpsertWithoutApiKeysInput = {
    update: XOR<OrganizationUpdateWithoutApiKeysInput, OrganizationUncheckedUpdateWithoutApiKeysInput>
    create: XOR<OrganizationCreateWithoutApiKeysInput, OrganizationUncheckedCreateWithoutApiKeysInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutApiKeysInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutApiKeysInput, OrganizationUncheckedUpdateWithoutApiKeysInput>
  }

  export type OrganizationUpdateWithoutApiKeysInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    billingEmail?: StringFieldUpdateOperationsInput | string
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: StringFieldUpdateOperationsInput | string
    users?: OrganizationUserUpdateManyWithoutOrganizationNestedInput
    customers?: CustomerUpdateManyWithoutOrganizationNestedInput
    products?: ProductUpdateManyWithoutOrganizationNestedInput
    wallets?: WalletUpdateManyWithoutOrganizationNestedInput
    paymentLinks?: PaymentLinkUpdateManyWithoutOrganizationNestedInput
    paymentOrders?: PaymentOrderUpdateManyWithoutOrganizationNestedInput
    providers?: ProviderConfigUpdateManyWithoutOrganizationNestedInput
    webhooks?: WebhookUpdateManyWithoutOrganizationNestedInput
    auditLogs?: AuditLogUpdateManyWithoutOrganizationNestedInput
    agents?: AgentUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutApiKeysInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    billingEmail?: StringFieldUpdateOperationsInput | string
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: StringFieldUpdateOperationsInput | string
    users?: OrganizationUserUncheckedUpdateManyWithoutOrganizationNestedInput
    customers?: CustomerUncheckedUpdateManyWithoutOrganizationNestedInput
    products?: ProductUncheckedUpdateManyWithoutOrganizationNestedInput
    wallets?: WalletUncheckedUpdateManyWithoutOrganizationNestedInput
    paymentLinks?: PaymentLinkUncheckedUpdateManyWithoutOrganizationNestedInput
    paymentOrders?: PaymentOrderUncheckedUpdateManyWithoutOrganizationNestedInput
    providers?: ProviderConfigUncheckedUpdateManyWithoutOrganizationNestedInput
    webhooks?: WebhookUncheckedUpdateManyWithoutOrganizationNestedInput
    auditLogs?: AuditLogUncheckedUpdateManyWithoutOrganizationNestedInput
    agents?: AgentUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationCreateWithoutUsersInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    billingEmail: string
    taxId?: string | null
    country: string
    complianceStatus?: $Enums.ComplianceStatus
    kycVerifiedAt?: Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    ownerId: string
    customers?: CustomerCreateNestedManyWithoutOrganizationInput
    products?: ProductCreateNestedManyWithoutOrganizationInput
    wallets?: WalletCreateNestedManyWithoutOrganizationInput
    paymentLinks?: PaymentLinkCreateNestedManyWithoutOrganizationInput
    paymentOrders?: PaymentOrderCreateNestedManyWithoutOrganizationInput
    providers?: ProviderConfigCreateNestedManyWithoutOrganizationInput
    apiKeys?: ApiKeyCreateNestedManyWithoutOrganizationInput
    webhooks?: WebhookCreateNestedManyWithoutOrganizationInput
    auditLogs?: AuditLogCreateNestedManyWithoutOrganizationInput
    agents?: AgentCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutUsersInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    billingEmail: string
    taxId?: string | null
    country: string
    complianceStatus?: $Enums.ComplianceStatus
    kycVerifiedAt?: Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    ownerId: string
    customers?: CustomerUncheckedCreateNestedManyWithoutOrganizationInput
    products?: ProductUncheckedCreateNestedManyWithoutOrganizationInput
    wallets?: WalletUncheckedCreateNestedManyWithoutOrganizationInput
    paymentLinks?: PaymentLinkUncheckedCreateNestedManyWithoutOrganizationInput
    paymentOrders?: PaymentOrderUncheckedCreateNestedManyWithoutOrganizationInput
    providers?: ProviderConfigUncheckedCreateNestedManyWithoutOrganizationInput
    apiKeys?: ApiKeyUncheckedCreateNestedManyWithoutOrganizationInput
    webhooks?: WebhookUncheckedCreateNestedManyWithoutOrganizationInput
    auditLogs?: AuditLogUncheckedCreateNestedManyWithoutOrganizationInput
    agents?: AgentUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutUsersInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutUsersInput, OrganizationUncheckedCreateWithoutUsersInput>
  }

  export type UserCreateWithoutOrganizationsInput = {
    id?: string
    email: string
    name?: string | null
    avatarUrl?: string | null
    authProvider?: $Enums.AuthProvider
    authProviderId?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    primaryWallet?: WalletCreateNestedOneWithoutPrimaryForUsersInput
    ownedWallets?: WalletCreateNestedManyWithoutUserInput
    paymentLinks?: PaymentLinkCreateNestedManyWithoutCreatedByInput
    auditLogs?: AuditLogCreateNestedManyWithoutUserInput
    agentInteractions?: AgentInteractionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutOrganizationsInput = {
    id?: string
    email: string
    name?: string | null
    avatarUrl?: string | null
    authProvider?: $Enums.AuthProvider
    authProviderId?: string | null
    emailVerified?: boolean
    primaryWalletId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    ownedWallets?: WalletUncheckedCreateNestedManyWithoutUserInput
    paymentLinks?: PaymentLinkUncheckedCreateNestedManyWithoutCreatedByInput
    auditLogs?: AuditLogUncheckedCreateNestedManyWithoutUserInput
    agentInteractions?: AgentInteractionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutOrganizationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOrganizationsInput, UserUncheckedCreateWithoutOrganizationsInput>
  }

  export type OrganizationUpsertWithoutUsersInput = {
    update: XOR<OrganizationUpdateWithoutUsersInput, OrganizationUncheckedUpdateWithoutUsersInput>
    create: XOR<OrganizationCreateWithoutUsersInput, OrganizationUncheckedCreateWithoutUsersInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutUsersInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutUsersInput, OrganizationUncheckedUpdateWithoutUsersInput>
  }

  export type OrganizationUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    billingEmail?: StringFieldUpdateOperationsInput | string
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: StringFieldUpdateOperationsInput | string
    customers?: CustomerUpdateManyWithoutOrganizationNestedInput
    products?: ProductUpdateManyWithoutOrganizationNestedInput
    wallets?: WalletUpdateManyWithoutOrganizationNestedInput
    paymentLinks?: PaymentLinkUpdateManyWithoutOrganizationNestedInput
    paymentOrders?: PaymentOrderUpdateManyWithoutOrganizationNestedInput
    providers?: ProviderConfigUpdateManyWithoutOrganizationNestedInput
    apiKeys?: ApiKeyUpdateManyWithoutOrganizationNestedInput
    webhooks?: WebhookUpdateManyWithoutOrganizationNestedInput
    auditLogs?: AuditLogUpdateManyWithoutOrganizationNestedInput
    agents?: AgentUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    billingEmail?: StringFieldUpdateOperationsInput | string
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    settings?: JsonNullValueInput | InputJsonValue
    features?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ownerId?: StringFieldUpdateOperationsInput | string
    customers?: CustomerUncheckedUpdateManyWithoutOrganizationNestedInput
    products?: ProductUncheckedUpdateManyWithoutOrganizationNestedInput
    wallets?: WalletUncheckedUpdateManyWithoutOrganizationNestedInput
    paymentLinks?: PaymentLinkUncheckedUpdateManyWithoutOrganizationNestedInput
    paymentOrders?: PaymentOrderUncheckedUpdateManyWithoutOrganizationNestedInput
    providers?: ProviderConfigUncheckedUpdateManyWithoutOrganizationNestedInput
    apiKeys?: ApiKeyUncheckedUpdateManyWithoutOrganizationNestedInput
    webhooks?: WebhookUncheckedUpdateManyWithoutOrganizationNestedInput
    auditLogs?: AuditLogUncheckedUpdateManyWithoutOrganizationNestedInput
    agents?: AgentUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type UserUpsertWithoutOrganizationsInput = {
    update: XOR<UserUpdateWithoutOrganizationsInput, UserUncheckedUpdateWithoutOrganizationsInput>
    create: XOR<UserCreateWithoutOrganizationsInput, UserUncheckedCreateWithoutOrganizationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOrganizationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOrganizationsInput, UserUncheckedUpdateWithoutOrganizationsInput>
  }

  export type UserUpdateWithoutOrganizationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    authProvider?: EnumAuthProviderFieldUpdateOperationsInput | $Enums.AuthProvider
    authProviderId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    primaryWallet?: WalletUpdateOneWithoutPrimaryForUsersNestedInput
    ownedWallets?: WalletUpdateManyWithoutUserNestedInput
    paymentLinks?: PaymentLinkUpdateManyWithoutCreatedByNestedInput
    auditLogs?: AuditLogUpdateManyWithoutUserNestedInput
    agentInteractions?: AgentInteractionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutOrganizationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    authProvider?: EnumAuthProviderFieldUpdateOperationsInput | $Enums.AuthProvider
    authProviderId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    primaryWalletId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ownedWallets?: WalletUncheckedUpdateManyWithoutUserNestedInput
    paymentLinks?: PaymentLinkUncheckedUpdateManyWithoutCreatedByNestedInput
    auditLogs?: AuditLogUncheckedUpdateManyWithoutUserNestedInput
    agentInteractions?: AgentInteractionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type OrganizationUserCreateManyOrganizationInput = {
    id?: string
    userId: string
    role: $Enums.UserRole
    permissions?: OrganizationUserCreatepermissionsInput | string[]
    invitedBy?: string | null
    invitedAt?: Date | string
    acceptedAt?: Date | string | null
    isActive?: boolean
  }

  export type CustomerCreateManyOrganizationInput = {
    id?: string
    email: string
    name?: string | null
    phone?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    walletAddress?: string | null
    preferredChainId?: number | null
    isActive?: boolean
    emailVerified?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductCreateManyOrganizationInput = {
    id?: string
    name: string
    description?: string | null
    type?: $Enums.ProductType
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    images?: ProductCreateimagesInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type WalletCreateManyOrganizationInput = {
    id?: string
    address: string
    chainId: number
    type?: $Enums.WalletType
    userId?: string | null
    smartWalletFactory?: string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    allowlist?: boolean
    blocklist?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentLinkCreateManyOrganizationInput = {
    id?: string
    createdById: string
    executingAgentId: string
    title: string
    description?: string | null
    referenceId?: string | null
    shortCode: string
    qrCode?: string | null
    priceId?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    targetAmount?: Decimal | DecimalJsLike | number | string | null
    targetCurrency?: string | null
    smartContractAddress?: string | null
    smartContractChainId?: number | null
    tokenAddress?: string | null
    status?: $Enums.PaymentLinkStatus
    allowMultiplePayments?: boolean
    requiresKyc?: boolean
    expiresAt?: Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentOrderCreateManyOrganizationInput = {
    id?: string
    paymentLinkId: string
    customerId?: string | null
    orderNumber: string
    status?: $Enums.PaymentOrderStatus
    requestedAmount: Decimal | DecimalJsLike | number | string
    requestedCurrency: string
    settledAmount?: Decimal | DecimalJsLike | number | string | null
    settledCurrency?: string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: Date | string | null
    exchangeRateSource?: string | null
    platformFee?: Decimal | DecimalJsLike | number | string
    providerFee?: Decimal | DecimalJsLike | number | string
    networkFee?: Decimal | DecimalJsLike | number | string
    totalFee?: Decimal | DecimalJsLike | number | string
    customerEmail?: string | null
    customerName?: string | null
    customerWallet?: string | null
    customerIp?: string | null
    customerCountry?: string | null
    riskScore?: number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: $Enums.KycStatus
    kycVerifiedAt?: Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    failureCode?: string | null
    retryCount?: number
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type ProviderConfigCreateManyOrganizationInput = {
    id?: string
    providerId: string
    environment?: $Enums.Environment
    credentials: JsonNullValueInput | InputJsonValue
    webhookSecret?: string | null
    settings?: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ApiKeyCreateManyOrganizationInput = {
    id?: string
    name: string
    keyHash: string
    prefix: string
    scopes?: ApiKeyCreatescopesInput | string[]
    rateLimit?: number | null
    isActive?: boolean
    expiresAt?: Date | string | null
    lastUsedAt?: Date | string | null
    createdAt?: Date | string
    revokedAt?: Date | string | null
  }

  export type WebhookCreateManyOrganizationInput = {
    id?: string
    url: string
    events?: WebhookCreateeventsInput | string[]
    secret: string
    isActive?: boolean
    failureCount?: number
    lastFailureAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AuditLogCreateManyOrganizationInput = {
    id?: string
    userId?: string | null
    action: string
    entityType?: string | null
    entityId?: string | null
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: string | null
    userAgent?: string | null
    requestId?: string | null
    createdAt?: Date | string
  }

  export type AgentCreateManyOrganizationInput = {
    id?: string
    name: string
    type: $Enums.AgentType
    version: string
    model: string
    agentWalletId?: string | null
    graphDefinition: JsonNullValueInput | InputJsonValue
    tools?: AgentCreatetoolsInput | string[]
    systemPrompt?: string | null
    supportedProviders?: AgentCreatesupportedProvidersInput | string[]
    supportedChains?: AgentCreatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    totalExecutions?: number
    avgExecutionTime?: number | null
    successRate?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrganizationUserUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    permissions?: OrganizationUserUpdatepermissionsInput | string[]
    invitedBy?: NullableStringFieldUpdateOperationsInput | string | null
    invitedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    user?: UserUpdateOneRequiredWithoutOrganizationsNestedInput
  }

  export type OrganizationUserUncheckedUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    permissions?: OrganizationUserUpdatepermissionsInput | string[]
    invitedBy?: NullableStringFieldUpdateOperationsInput | string | null
    invitedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type OrganizationUserUncheckedUpdateManyWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    permissions?: OrganizationUserUpdatepermissionsInput | string[]
    invitedBy?: NullableStringFieldUpdateOperationsInput | string | null
    invitedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type CustomerUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    preferredChainId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentOrders?: PaymentOrderUpdateManyWithoutCustomerNestedInput
    paymentMethods?: CustomerPaymentMethodUpdateManyWithoutCustomerNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    preferredChainId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentOrders?: PaymentOrderUncheckedUpdateManyWithoutCustomerNestedInput
    paymentMethods?: CustomerPaymentMethodUncheckedUpdateManyWithoutCustomerNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateManyWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    preferredChainId?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    images?: ProductUpdateimagesInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    prices?: PriceUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    images?: ProductUpdateimagesInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    prices?: PriceUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    images?: ProductUpdateimagesInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WalletUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    type?: EnumWalletTypeFieldUpdateOperationsInput | $Enums.WalletType
    smartWalletFactory?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    allowlist?: BoolFieldUpdateOperationsInput | boolean
    blocklist?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneWithoutOwnedWalletsNestedInput
    primaryForUsers?: UserUpdateManyWithoutPrimaryWalletNestedInput
    agent?: AgentUpdateOneWithoutAgentWalletNestedInput
    transactions?: BlockchainTransactionUpdateManyWithoutWalletNestedInput
    gasSponsorship?: GasSponsorshipUpdateManyWithoutSponsorWalletNestedInput
  }

  export type WalletUncheckedUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    type?: EnumWalletTypeFieldUpdateOperationsInput | $Enums.WalletType
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletFactory?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    allowlist?: BoolFieldUpdateOperationsInput | boolean
    blocklist?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    primaryForUsers?: UserUncheckedUpdateManyWithoutPrimaryWalletNestedInput
    agent?: AgentUncheckedUpdateOneWithoutAgentWalletNestedInput
    transactions?: BlockchainTransactionUncheckedUpdateManyWithoutWalletNestedInput
    gasSponsorship?: GasSponsorshipUncheckedUpdateManyWithoutSponsorWalletNestedInput
  }

  export type WalletUncheckedUpdateManyWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    type?: EnumWalletTypeFieldUpdateOperationsInput | $Enums.WalletType
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletFactory?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    allowlist?: BoolFieldUpdateOperationsInput | boolean
    blocklist?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentLinkUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    shortCode?: StringFieldUpdateOperationsInput | string
    qrCode?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    targetAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    targetCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractChainId?: NullableIntFieldUpdateOperationsInput | number | null
    tokenAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentLinkStatusFieldUpdateOperationsInput | $Enums.PaymentLinkStatus
    allowMultiplePayments?: BoolFieldUpdateOperationsInput | boolean
    requiresKyc?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: UserUpdateOneRequiredWithoutPaymentLinksNestedInput
    executingAgent?: AgentUpdateOneRequiredWithoutPaymentLinksNestedInput
    price?: PriceUpdateOneWithoutPaymentLinksNestedInput
    paymentOrders?: PaymentOrderUpdateManyWithoutPaymentLinkNestedInput
  }

  export type PaymentLinkUncheckedUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    executingAgentId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    shortCode?: StringFieldUpdateOperationsInput | string
    qrCode?: NullableStringFieldUpdateOperationsInput | string | null
    priceId?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    targetAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    targetCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractChainId?: NullableIntFieldUpdateOperationsInput | number | null
    tokenAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentLinkStatusFieldUpdateOperationsInput | $Enums.PaymentLinkStatus
    allowMultiplePayments?: BoolFieldUpdateOperationsInput | boolean
    requiresKyc?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentOrders?: PaymentOrderUncheckedUpdateManyWithoutPaymentLinkNestedInput
  }

  export type PaymentLinkUncheckedUpdateManyWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    executingAgentId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    shortCode?: StringFieldUpdateOperationsInput | string
    qrCode?: NullableStringFieldUpdateOperationsInput | string | null
    priceId?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    targetAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    targetCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractChainId?: NullableIntFieldUpdateOperationsInput | number | null
    tokenAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentLinkStatusFieldUpdateOperationsInput | $Enums.PaymentLinkStatus
    allowMultiplePayments?: BoolFieldUpdateOperationsInput | boolean
    requiresKyc?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentOrderUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentOrderStatusFieldUpdateOperationsInput | $Enums.PaymentOrderStatus
    requestedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    requestedCurrency?: StringFieldUpdateOperationsInput | string
    settledAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    settledCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exchangeRateSource?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    providerFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    networkFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    customerIp?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    riskScore?: NullableIntFieldUpdateOperationsInput | number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    failureCode?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentLink?: PaymentLinkUpdateOneRequiredWithoutPaymentOrdersNestedInput
    customer?: CustomerUpdateOneWithoutPaymentOrdersNestedInput
    providerTransactions?: ProviderTransactionUpdateManyWithoutPaymentOrderNestedInput
    blockchainTxs?: BlockchainTransactionUpdateManyWithoutPaymentOrderNestedInput
    events?: PaymentEventUpdateManyWithoutPaymentOrderNestedInput
    agentDecisions?: AgentDecisionUpdateManyWithoutPaymentOrderNestedInput
    manualSteps?: ManualProcessStepUpdateManyWithoutPaymentOrderNestedInput
  }

  export type PaymentOrderUncheckedUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentLinkId?: StringFieldUpdateOperationsInput | string
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentOrderStatusFieldUpdateOperationsInput | $Enums.PaymentOrderStatus
    requestedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    requestedCurrency?: StringFieldUpdateOperationsInput | string
    settledAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    settledCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exchangeRateSource?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    providerFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    networkFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    customerIp?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    riskScore?: NullableIntFieldUpdateOperationsInput | number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    failureCode?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    providerTransactions?: ProviderTransactionUncheckedUpdateManyWithoutPaymentOrderNestedInput
    blockchainTxs?: BlockchainTransactionUncheckedUpdateManyWithoutPaymentOrderNestedInput
    events?: PaymentEventUncheckedUpdateManyWithoutPaymentOrderNestedInput
    agentDecisions?: AgentDecisionUncheckedUpdateManyWithoutPaymentOrderNestedInput
    manualSteps?: ManualProcessStepUncheckedUpdateManyWithoutPaymentOrderNestedInput
  }

  export type PaymentOrderUncheckedUpdateManyWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentLinkId?: StringFieldUpdateOperationsInput | string
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentOrderStatusFieldUpdateOperationsInput | $Enums.PaymentOrderStatus
    requestedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    requestedCurrency?: StringFieldUpdateOperationsInput | string
    settledAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    settledCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exchangeRateSource?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    providerFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    networkFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    customerIp?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    riskScore?: NullableIntFieldUpdateOperationsInput | number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    failureCode?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProviderConfigUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    environment?: EnumEnvironmentFieldUpdateOperationsInput | $Enums.Environment
    credentials?: JsonNullValueInput | InputJsonValue
    webhookSecret?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    provider?: ProviderUpdateOneRequiredWithoutConfigsNestedInput
  }

  export type ProviderConfigUncheckedUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    environment?: EnumEnvironmentFieldUpdateOperationsInput | $Enums.Environment
    credentials?: JsonNullValueInput | InputJsonValue
    webhookSecret?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProviderConfigUncheckedUpdateManyWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    environment?: EnumEnvironmentFieldUpdateOperationsInput | $Enums.Environment
    credentials?: JsonNullValueInput | InputJsonValue
    webhookSecret?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApiKeyUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    keyHash?: StringFieldUpdateOperationsInput | string
    prefix?: StringFieldUpdateOperationsInput | string
    scopes?: ApiKeyUpdatescopesInput | string[]
    rateLimit?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastUsedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ApiKeyUncheckedUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    keyHash?: StringFieldUpdateOperationsInput | string
    prefix?: StringFieldUpdateOperationsInput | string
    scopes?: ApiKeyUpdatescopesInput | string[]
    rateLimit?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastUsedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ApiKeyUncheckedUpdateManyWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    keyHash?: StringFieldUpdateOperationsInput | string
    prefix?: StringFieldUpdateOperationsInput | string
    scopes?: ApiKeyUpdatescopesInput | string[]
    rateLimit?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastUsedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type WebhookUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    events?: WebhookUpdateeventsInput | string[]
    secret?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    failureCount?: IntFieldUpdateOperationsInput | number
    lastFailureAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveries?: WebhookDeliveryUpdateManyWithoutWebhookNestedInput
  }

  export type WebhookUncheckedUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    events?: WebhookUpdateeventsInput | string[]
    secret?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    failureCount?: IntFieldUpdateOperationsInput | number
    lastFailureAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveries?: WebhookDeliveryUncheckedUpdateManyWithoutWebhookNestedInput
  }

  export type WebhookUncheckedUpdateManyWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    events?: WebhookUpdateeventsInput | string[]
    secret?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    failureCount?: IntFieldUpdateOperationsInput | number
    lastFailureAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditLogUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    entityId?: NullableStringFieldUpdateOperationsInput | string | null
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneWithoutAuditLogsNestedInput
  }

  export type AuditLogUncheckedUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    action?: StringFieldUpdateOperationsInput | string
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    entityId?: NullableStringFieldUpdateOperationsInput | string | null
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditLogUncheckedUpdateManyWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    action?: StringFieldUpdateOperationsInput | string
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    entityId?: NullableStringFieldUpdateOperationsInput | string | null
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgentUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumAgentTypeFieldUpdateOperationsInput | $Enums.AgentType
    version?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    graphDefinition?: JsonNullValueInput | InputJsonValue
    tools?: AgentUpdatetoolsInput | string[]
    systemPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    supportedProviders?: AgentUpdatesupportedProvidersInput | string[]
    supportedChains?: AgentUpdatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    totalExecutions?: IntFieldUpdateOperationsInput | number
    avgExecutionTime?: NullableIntFieldUpdateOperationsInput | number | null
    successRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agentWallet?: WalletUpdateOneWithoutAgentNestedInput
    paymentLinks?: PaymentLinkUpdateManyWithoutExecutingAgentNestedInput
    decisions?: AgentDecisionUpdateManyWithoutAgentNestedInput
    checkpoints?: AgentCheckpointUpdateManyWithoutAgentNestedInput
  }

  export type AgentUncheckedUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumAgentTypeFieldUpdateOperationsInput | $Enums.AgentType
    version?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    agentWalletId?: NullableStringFieldUpdateOperationsInput | string | null
    graphDefinition?: JsonNullValueInput | InputJsonValue
    tools?: AgentUpdatetoolsInput | string[]
    systemPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    supportedProviders?: AgentUpdatesupportedProvidersInput | string[]
    supportedChains?: AgentUpdatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    totalExecutions?: IntFieldUpdateOperationsInput | number
    avgExecutionTime?: NullableIntFieldUpdateOperationsInput | number | null
    successRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentLinks?: PaymentLinkUncheckedUpdateManyWithoutExecutingAgentNestedInput
    decisions?: AgentDecisionUncheckedUpdateManyWithoutAgentNestedInput
    checkpoints?: AgentCheckpointUncheckedUpdateManyWithoutAgentNestedInput
  }

  export type AgentUncheckedUpdateManyWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: EnumAgentTypeFieldUpdateOperationsInput | $Enums.AgentType
    version?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    agentWalletId?: NullableStringFieldUpdateOperationsInput | string | null
    graphDefinition?: JsonNullValueInput | InputJsonValue
    tools?: AgentUpdatetoolsInput | string[]
    systemPrompt?: NullableStringFieldUpdateOperationsInput | string | null
    supportedProviders?: AgentUpdatesupportedProvidersInput | string[]
    supportedChains?: AgentUpdatesupportedChainsInput | number[]
    capabilities?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    totalExecutions?: IntFieldUpdateOperationsInput | number
    avgExecutionTime?: NullableIntFieldUpdateOperationsInput | number | null
    successRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrganizationUserCreateManyUserInput = {
    id?: string
    organizationId: string
    role: $Enums.UserRole
    permissions?: OrganizationUserCreatepermissionsInput | string[]
    invitedBy?: string | null
    invitedAt?: Date | string
    acceptedAt?: Date | string | null
    isActive?: boolean
  }

  export type WalletCreateManyUserInput = {
    id?: string
    address: string
    chainId: number
    type?: $Enums.WalletType
    organizationId?: string | null
    smartWalletFactory?: string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    allowlist?: boolean
    blocklist?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentLinkCreateManyCreatedByInput = {
    id?: string
    organizationId: string
    executingAgentId: string
    title: string
    description?: string | null
    referenceId?: string | null
    shortCode: string
    qrCode?: string | null
    priceId?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    targetAmount?: Decimal | DecimalJsLike | number | string | null
    targetCurrency?: string | null
    smartContractAddress?: string | null
    smartContractChainId?: number | null
    tokenAddress?: string | null
    status?: $Enums.PaymentLinkStatus
    allowMultiplePayments?: boolean
    requiresKyc?: boolean
    expiresAt?: Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AuditLogCreateManyUserInput = {
    id?: string
    organizationId: string
    action: string
    entityType?: string | null
    entityId?: string | null
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: string | null
    userAgent?: string | null
    requestId?: string | null
    createdAt?: Date | string
  }

  export type AgentInteractionCreateManyUserInput = {
    id?: string
    agentDecisionId: string
    type: $Enums.InteractionType
    message?: string | null
    action?: string | null
    result?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type OrganizationUserUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    permissions?: OrganizationUserUpdatepermissionsInput | string[]
    invitedBy?: NullableStringFieldUpdateOperationsInput | string | null
    invitedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    organization?: OrganizationUpdateOneRequiredWithoutUsersNestedInput
  }

  export type OrganizationUserUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    permissions?: OrganizationUserUpdatepermissionsInput | string[]
    invitedBy?: NullableStringFieldUpdateOperationsInput | string | null
    invitedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type OrganizationUserUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    permissions?: OrganizationUserUpdatepermissionsInput | string[]
    invitedBy?: NullableStringFieldUpdateOperationsInput | string | null
    invitedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type WalletUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    type?: EnumWalletTypeFieldUpdateOperationsInput | $Enums.WalletType
    smartWalletFactory?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    allowlist?: BoolFieldUpdateOperationsInput | boolean
    blocklist?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneWithoutWalletsNestedInput
    primaryForUsers?: UserUpdateManyWithoutPrimaryWalletNestedInput
    agent?: AgentUpdateOneWithoutAgentWalletNestedInput
    transactions?: BlockchainTransactionUpdateManyWithoutWalletNestedInput
    gasSponsorship?: GasSponsorshipUpdateManyWithoutSponsorWalletNestedInput
  }

  export type WalletUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    type?: EnumWalletTypeFieldUpdateOperationsInput | $Enums.WalletType
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletFactory?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    allowlist?: BoolFieldUpdateOperationsInput | boolean
    blocklist?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    primaryForUsers?: UserUncheckedUpdateManyWithoutPrimaryWalletNestedInput
    agent?: AgentUncheckedUpdateOneWithoutAgentWalletNestedInput
    transactions?: BlockchainTransactionUncheckedUpdateManyWithoutWalletNestedInput
    gasSponsorship?: GasSponsorshipUncheckedUpdateManyWithoutSponsorWalletNestedInput
  }

  export type WalletUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    type?: EnumWalletTypeFieldUpdateOperationsInput | $Enums.WalletType
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletFactory?: NullableStringFieldUpdateOperationsInput | string | null
    smartWalletConfig?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    allowlist?: BoolFieldUpdateOperationsInput | boolean
    blocklist?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentLinkUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    shortCode?: StringFieldUpdateOperationsInput | string
    qrCode?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    targetAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    targetCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractChainId?: NullableIntFieldUpdateOperationsInput | number | null
    tokenAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentLinkStatusFieldUpdateOperationsInput | $Enums.PaymentLinkStatus
    allowMultiplePayments?: BoolFieldUpdateOperationsInput | boolean
    requiresKyc?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutPaymentLinksNestedInput
    executingAgent?: AgentUpdateOneRequiredWithoutPaymentLinksNestedInput
    price?: PriceUpdateOneWithoutPaymentLinksNestedInput
    paymentOrders?: PaymentOrderUpdateManyWithoutPaymentLinkNestedInput
  }

  export type PaymentLinkUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    executingAgentId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    shortCode?: StringFieldUpdateOperationsInput | string
    qrCode?: NullableStringFieldUpdateOperationsInput | string | null
    priceId?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    targetAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    targetCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractChainId?: NullableIntFieldUpdateOperationsInput | number | null
    tokenAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentLinkStatusFieldUpdateOperationsInput | $Enums.PaymentLinkStatus
    allowMultiplePayments?: BoolFieldUpdateOperationsInput | boolean
    requiresKyc?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentOrders?: PaymentOrderUncheckedUpdateManyWithoutPaymentLinkNestedInput
  }

  export type PaymentLinkUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    executingAgentId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    shortCode?: StringFieldUpdateOperationsInput | string
    qrCode?: NullableStringFieldUpdateOperationsInput | string | null
    priceId?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    targetAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    targetCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractChainId?: NullableIntFieldUpdateOperationsInput | number | null
    tokenAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentLinkStatusFieldUpdateOperationsInput | $Enums.PaymentLinkStatus
    allowMultiplePayments?: BoolFieldUpdateOperationsInput | boolean
    requiresKyc?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditLogUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    entityId?: NullableStringFieldUpdateOperationsInput | string | null
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutAuditLogsNestedInput
  }

  export type AuditLogUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    entityId?: NullableStringFieldUpdateOperationsInput | string | null
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditLogUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: NullableStringFieldUpdateOperationsInput | string | null
    entityId?: NullableStringFieldUpdateOperationsInput | string | null
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgentInteractionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumInteractionTypeFieldUpdateOperationsInput | $Enums.InteractionType
    message?: NullableStringFieldUpdateOperationsInput | string | null
    action?: NullableStringFieldUpdateOperationsInput | string | null
    result?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agentDecision?: AgentDecisionUpdateOneRequiredWithoutInteractionsNestedInput
  }

  export type AgentInteractionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    agentDecisionId?: StringFieldUpdateOperationsInput | string
    type?: EnumInteractionTypeFieldUpdateOperationsInput | $Enums.InteractionType
    message?: NullableStringFieldUpdateOperationsInput | string | null
    action?: NullableStringFieldUpdateOperationsInput | string | null
    result?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgentInteractionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    agentDecisionId?: StringFieldUpdateOperationsInput | string
    type?: EnumInteractionTypeFieldUpdateOperationsInput | $Enums.InteractionType
    message?: NullableStringFieldUpdateOperationsInput | string | null
    action?: NullableStringFieldUpdateOperationsInput | string | null
    result?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentOrderCreateManyCustomerInput = {
    id?: string
    organizationId: string
    paymentLinkId: string
    orderNumber: string
    status?: $Enums.PaymentOrderStatus
    requestedAmount: Decimal | DecimalJsLike | number | string
    requestedCurrency: string
    settledAmount?: Decimal | DecimalJsLike | number | string | null
    settledCurrency?: string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: Date | string | null
    exchangeRateSource?: string | null
    platformFee?: Decimal | DecimalJsLike | number | string
    providerFee?: Decimal | DecimalJsLike | number | string
    networkFee?: Decimal | DecimalJsLike | number | string
    totalFee?: Decimal | DecimalJsLike | number | string
    customerEmail?: string | null
    customerName?: string | null
    customerWallet?: string | null
    customerIp?: string | null
    customerCountry?: string | null
    riskScore?: number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: $Enums.KycStatus
    kycVerifiedAt?: Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    failureCode?: string | null
    retryCount?: number
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type CustomerPaymentMethodCreateManyCustomerInput = {
    id?: string
    type: $Enums.PaymentMethodType
    provider: string
    externalId?: string | null
    last4?: string | null
    brand?: string | null
    expiryMonth?: number | null
    expiryYear?: number | null
    bankName?: string | null
    accountLast4?: string | null
    walletAddress?: string | null
    chainId?: number | null
    isDefault?: boolean
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscriptionCreateManyCustomerInput = {
    id?: string
    organizationId: string
    status?: $Enums.SubscriptionStatus
    currentPeriodStart: Date | string
    currentPeriodEnd: Date | string
    cancelAt?: Date | string | null
    canceledAt?: Date | string | null
    endedAt?: Date | string | null
    trialStart?: Date | string | null
    trialEnd?: Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentOrderUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentOrderStatusFieldUpdateOperationsInput | $Enums.PaymentOrderStatus
    requestedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    requestedCurrency?: StringFieldUpdateOperationsInput | string
    settledAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    settledCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exchangeRateSource?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    providerFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    networkFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    customerIp?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    riskScore?: NullableIntFieldUpdateOperationsInput | number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    failureCode?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutPaymentOrdersNestedInput
    paymentLink?: PaymentLinkUpdateOneRequiredWithoutPaymentOrdersNestedInput
    providerTransactions?: ProviderTransactionUpdateManyWithoutPaymentOrderNestedInput
    blockchainTxs?: BlockchainTransactionUpdateManyWithoutPaymentOrderNestedInput
    events?: PaymentEventUpdateManyWithoutPaymentOrderNestedInput
    agentDecisions?: AgentDecisionUpdateManyWithoutPaymentOrderNestedInput
    manualSteps?: ManualProcessStepUpdateManyWithoutPaymentOrderNestedInput
  }

  export type PaymentOrderUncheckedUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    paymentLinkId?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentOrderStatusFieldUpdateOperationsInput | $Enums.PaymentOrderStatus
    requestedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    requestedCurrency?: StringFieldUpdateOperationsInput | string
    settledAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    settledCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exchangeRateSource?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    providerFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    networkFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    customerIp?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    riskScore?: NullableIntFieldUpdateOperationsInput | number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    failureCode?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    providerTransactions?: ProviderTransactionUncheckedUpdateManyWithoutPaymentOrderNestedInput
    blockchainTxs?: BlockchainTransactionUncheckedUpdateManyWithoutPaymentOrderNestedInput
    events?: PaymentEventUncheckedUpdateManyWithoutPaymentOrderNestedInput
    agentDecisions?: AgentDecisionUncheckedUpdateManyWithoutPaymentOrderNestedInput
    manualSteps?: ManualProcessStepUncheckedUpdateManyWithoutPaymentOrderNestedInput
  }

  export type PaymentOrderUncheckedUpdateManyWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    paymentLinkId?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentOrderStatusFieldUpdateOperationsInput | $Enums.PaymentOrderStatus
    requestedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    requestedCurrency?: StringFieldUpdateOperationsInput | string
    settledAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    settledCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exchangeRateSource?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    providerFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    networkFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    customerIp?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    riskScore?: NullableIntFieldUpdateOperationsInput | number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    failureCode?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomerPaymentMethodUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPaymentMethodTypeFieldUpdateOperationsInput | $Enums.PaymentMethodType
    provider?: StringFieldUpdateOperationsInput | string
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    last4?: NullableStringFieldUpdateOperationsInput | string | null
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    expiryMonth?: NullableIntFieldUpdateOperationsInput | number | null
    expiryYear?: NullableIntFieldUpdateOperationsInput | number | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountLast4?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    chainId?: NullableIntFieldUpdateOperationsInput | number | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomerPaymentMethodUncheckedUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPaymentMethodTypeFieldUpdateOperationsInput | $Enums.PaymentMethodType
    provider?: StringFieldUpdateOperationsInput | string
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    last4?: NullableStringFieldUpdateOperationsInput | string | null
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    expiryMonth?: NullableIntFieldUpdateOperationsInput | number | null
    expiryYear?: NullableIntFieldUpdateOperationsInput | number | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountLast4?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    chainId?: NullableIntFieldUpdateOperationsInput | number | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomerPaymentMethodUncheckedUpdateManyWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPaymentMethodTypeFieldUpdateOperationsInput | $Enums.PaymentMethodType
    provider?: StringFieldUpdateOperationsInput | string
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    last4?: NullableStringFieldUpdateOperationsInput | string | null
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    expiryMonth?: NullableIntFieldUpdateOperationsInput | number | null
    expiryYear?: NullableIntFieldUpdateOperationsInput | number | null
    bankName?: NullableStringFieldUpdateOperationsInput | string | null
    accountLast4?: NullableStringFieldUpdateOperationsInput | string | null
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    chainId?: NullableIntFieldUpdateOperationsInput | number | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    currentPeriodStart?: DateTimeFieldUpdateOperationsInput | Date | string
    currentPeriodEnd?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: SubscriptionItemUpdateManyWithoutSubscriptionNestedInput
  }

  export type SubscriptionUncheckedUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    currentPeriodStart?: DateTimeFieldUpdateOperationsInput | Date | string
    currentPeriodEnd?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: SubscriptionItemUncheckedUpdateManyWithoutSubscriptionNestedInput
  }

  export type SubscriptionUncheckedUpdateManyWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    currentPeriodStart?: DateTimeFieldUpdateOperationsInput | Date | string
    currentPeriodEnd?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    canceledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionItemCreateManySubscriptionInput = {
    id?: string
    priceId: string
    quantity?: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscriptionItemUpdateWithoutSubscriptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    price?: PriceUpdateOneRequiredWithoutSubscriptionItemsNestedInput
  }

  export type SubscriptionItemUncheckedUpdateWithoutSubscriptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    priceId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionItemUncheckedUpdateManyWithoutSubscriptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    priceId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateManyPrimaryWalletInput = {
    id?: string
    email: string
    name?: string | null
    avatarUrl?: string | null
    authProvider?: $Enums.AuthProvider
    authProviderId?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
  }

  export type BlockchainTransactionCreateManyWalletInput = {
    id?: string
    hash: string
    chainId: number
    fromAddress: string
    toAddress?: string | null
    value: string
    data?: string | null
    gasLimit?: string | null
    gasPrice?: string | null
    nonce?: number | null
    status?: $Enums.BlockchainTxStatus
    blockNumber?: number | null
    confirmations?: number
    isSponsored?: boolean
    sponsorshipId?: string | null
    paymentOrderId?: string | null
    createdAt?: Date | string
    minedAt?: Date | string | null
  }

  export type GasSponsorshipCreateManySponsorWalletInput = {
    id?: string
    maxGasAmount: string
    usedGasAmount?: string
    maxTransactions?: number | null
    usedTransactions?: number
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateWithoutPrimaryWalletInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    authProvider?: EnumAuthProviderFieldUpdateOperationsInput | $Enums.AuthProvider
    authProviderId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organizations?: OrganizationUserUpdateManyWithoutUserNestedInput
    ownedWallets?: WalletUpdateManyWithoutUserNestedInput
    paymentLinks?: PaymentLinkUpdateManyWithoutCreatedByNestedInput
    auditLogs?: AuditLogUpdateManyWithoutUserNestedInput
    agentInteractions?: AgentInteractionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutPrimaryWalletInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    authProvider?: EnumAuthProviderFieldUpdateOperationsInput | $Enums.AuthProvider
    authProviderId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organizations?: OrganizationUserUncheckedUpdateManyWithoutUserNestedInput
    ownedWallets?: WalletUncheckedUpdateManyWithoutUserNestedInput
    paymentLinks?: PaymentLinkUncheckedUpdateManyWithoutCreatedByNestedInput
    auditLogs?: AuditLogUncheckedUpdateManyWithoutUserNestedInput
    agentInteractions?: AgentInteractionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateManyWithoutPrimaryWalletInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    authProvider?: EnumAuthProviderFieldUpdateOperationsInput | $Enums.AuthProvider
    authProviderId?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BlockchainTransactionUpdateWithoutWalletInput = {
    id?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    fromAddress?: StringFieldUpdateOperationsInput | string
    toAddress?: NullableStringFieldUpdateOperationsInput | string | null
    value?: StringFieldUpdateOperationsInput | string
    data?: NullableStringFieldUpdateOperationsInput | string | null
    gasLimit?: NullableStringFieldUpdateOperationsInput | string | null
    gasPrice?: NullableStringFieldUpdateOperationsInput | string | null
    nonce?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumBlockchainTxStatusFieldUpdateOperationsInput | $Enums.BlockchainTxStatus
    blockNumber?: NullableIntFieldUpdateOperationsInput | number | null
    confirmations?: IntFieldUpdateOperationsInput | number
    isSponsored?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    minedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gasSponsorship?: GasSponsorshipUpdateOneWithoutTransactionsNestedInput
    paymentOrder?: PaymentOrderUpdateOneWithoutBlockchainTxsNestedInput
  }

  export type BlockchainTransactionUncheckedUpdateWithoutWalletInput = {
    id?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    fromAddress?: StringFieldUpdateOperationsInput | string
    toAddress?: NullableStringFieldUpdateOperationsInput | string | null
    value?: StringFieldUpdateOperationsInput | string
    data?: NullableStringFieldUpdateOperationsInput | string | null
    gasLimit?: NullableStringFieldUpdateOperationsInput | string | null
    gasPrice?: NullableStringFieldUpdateOperationsInput | string | null
    nonce?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumBlockchainTxStatusFieldUpdateOperationsInput | $Enums.BlockchainTxStatus
    blockNumber?: NullableIntFieldUpdateOperationsInput | number | null
    confirmations?: IntFieldUpdateOperationsInput | number
    isSponsored?: BoolFieldUpdateOperationsInput | boolean
    sponsorshipId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    minedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BlockchainTransactionUncheckedUpdateManyWithoutWalletInput = {
    id?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    fromAddress?: StringFieldUpdateOperationsInput | string
    toAddress?: NullableStringFieldUpdateOperationsInput | string | null
    value?: StringFieldUpdateOperationsInput | string
    data?: NullableStringFieldUpdateOperationsInput | string | null
    gasLimit?: NullableStringFieldUpdateOperationsInput | string | null
    gasPrice?: NullableStringFieldUpdateOperationsInput | string | null
    nonce?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumBlockchainTxStatusFieldUpdateOperationsInput | $Enums.BlockchainTxStatus
    blockNumber?: NullableIntFieldUpdateOperationsInput | number | null
    confirmations?: IntFieldUpdateOperationsInput | number
    isSponsored?: BoolFieldUpdateOperationsInput | boolean
    sponsorshipId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    minedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type GasSponsorshipUpdateWithoutSponsorWalletInput = {
    id?: StringFieldUpdateOperationsInput | string
    maxGasAmount?: StringFieldUpdateOperationsInput | string
    usedGasAmount?: StringFieldUpdateOperationsInput | string
    maxTransactions?: NullableIntFieldUpdateOperationsInput | number | null
    usedTransactions?: IntFieldUpdateOperationsInput | number
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    transactions?: BlockchainTransactionUpdateManyWithoutGasSponsorshipNestedInput
  }

  export type GasSponsorshipUncheckedUpdateWithoutSponsorWalletInput = {
    id?: StringFieldUpdateOperationsInput | string
    maxGasAmount?: StringFieldUpdateOperationsInput | string
    usedGasAmount?: StringFieldUpdateOperationsInput | string
    maxTransactions?: NullableIntFieldUpdateOperationsInput | number | null
    usedTransactions?: IntFieldUpdateOperationsInput | number
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    transactions?: BlockchainTransactionUncheckedUpdateManyWithoutGasSponsorshipNestedInput
  }

  export type GasSponsorshipUncheckedUpdateManyWithoutSponsorWalletInput = {
    id?: StringFieldUpdateOperationsInput | string
    maxGasAmount?: StringFieldUpdateOperationsInput | string
    usedGasAmount?: StringFieldUpdateOperationsInput | string
    maxTransactions?: NullableIntFieldUpdateOperationsInput | number | null
    usedTransactions?: IntFieldUpdateOperationsInput | number
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BlockchainTransactionCreateManyGasSponsorshipInput = {
    id?: string
    hash: string
    chainId: number
    fromAddress: string
    toAddress?: string | null
    value: string
    data?: string | null
    gasLimit?: string | null
    gasPrice?: string | null
    nonce?: number | null
    status?: $Enums.BlockchainTxStatus
    blockNumber?: number | null
    confirmations?: number
    isSponsored?: boolean
    walletId: string
    paymentOrderId?: string | null
    createdAt?: Date | string
    minedAt?: Date | string | null
  }

  export type BlockchainTransactionUpdateWithoutGasSponsorshipInput = {
    id?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    fromAddress?: StringFieldUpdateOperationsInput | string
    toAddress?: NullableStringFieldUpdateOperationsInput | string | null
    value?: StringFieldUpdateOperationsInput | string
    data?: NullableStringFieldUpdateOperationsInput | string | null
    gasLimit?: NullableStringFieldUpdateOperationsInput | string | null
    gasPrice?: NullableStringFieldUpdateOperationsInput | string | null
    nonce?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumBlockchainTxStatusFieldUpdateOperationsInput | $Enums.BlockchainTxStatus
    blockNumber?: NullableIntFieldUpdateOperationsInput | number | null
    confirmations?: IntFieldUpdateOperationsInput | number
    isSponsored?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    minedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    wallet?: WalletUpdateOneRequiredWithoutTransactionsNestedInput
    paymentOrder?: PaymentOrderUpdateOneWithoutBlockchainTxsNestedInput
  }

  export type BlockchainTransactionUncheckedUpdateWithoutGasSponsorshipInput = {
    id?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    fromAddress?: StringFieldUpdateOperationsInput | string
    toAddress?: NullableStringFieldUpdateOperationsInput | string | null
    value?: StringFieldUpdateOperationsInput | string
    data?: NullableStringFieldUpdateOperationsInput | string | null
    gasLimit?: NullableStringFieldUpdateOperationsInput | string | null
    gasPrice?: NullableStringFieldUpdateOperationsInput | string | null
    nonce?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumBlockchainTxStatusFieldUpdateOperationsInput | $Enums.BlockchainTxStatus
    blockNumber?: NullableIntFieldUpdateOperationsInput | number | null
    confirmations?: IntFieldUpdateOperationsInput | number
    isSponsored?: BoolFieldUpdateOperationsInput | boolean
    walletId?: StringFieldUpdateOperationsInput | string
    paymentOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    minedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BlockchainTransactionUncheckedUpdateManyWithoutGasSponsorshipInput = {
    id?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    fromAddress?: StringFieldUpdateOperationsInput | string
    toAddress?: NullableStringFieldUpdateOperationsInput | string | null
    value?: StringFieldUpdateOperationsInput | string
    data?: NullableStringFieldUpdateOperationsInput | string | null
    gasLimit?: NullableStringFieldUpdateOperationsInput | string | null
    gasPrice?: NullableStringFieldUpdateOperationsInput | string | null
    nonce?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumBlockchainTxStatusFieldUpdateOperationsInput | $Enums.BlockchainTxStatus
    blockNumber?: NullableIntFieldUpdateOperationsInput | number | null
    confirmations?: IntFieldUpdateOperationsInput | number
    isSponsored?: BoolFieldUpdateOperationsInput | boolean
    walletId?: StringFieldUpdateOperationsInput | string
    paymentOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    minedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PriceCreateManyProductInput = {
    id?: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    type?: $Enums.PriceType
    interval?: $Enums.BillingInterval | null
    intervalCount?: number
    trialPeriodDays?: number | null
    isActive?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PriceUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    type?: EnumPriceTypeFieldUpdateOperationsInput | $Enums.PriceType
    interval?: NullableEnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval | null
    intervalCount?: IntFieldUpdateOperationsInput | number
    trialPeriodDays?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    subscriptionItems?: SubscriptionItemUpdateManyWithoutPriceNestedInput
    paymentLinks?: PaymentLinkUpdateManyWithoutPriceNestedInput
  }

  export type PriceUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    type?: EnumPriceTypeFieldUpdateOperationsInput | $Enums.PriceType
    interval?: NullableEnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval | null
    intervalCount?: IntFieldUpdateOperationsInput | number
    trialPeriodDays?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    subscriptionItems?: SubscriptionItemUncheckedUpdateManyWithoutPriceNestedInput
    paymentLinks?: PaymentLinkUncheckedUpdateManyWithoutPriceNestedInput
  }

  export type PriceUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    type?: EnumPriceTypeFieldUpdateOperationsInput | $Enums.PriceType
    interval?: NullableEnumBillingIntervalFieldUpdateOperationsInput | $Enums.BillingInterval | null
    intervalCount?: IntFieldUpdateOperationsInput | number
    trialPeriodDays?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionItemCreateManyPriceInput = {
    id?: string
    subscriptionId: string
    quantity?: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentLinkCreateManyPriceInput = {
    id?: string
    organizationId: string
    createdById: string
    executingAgentId: string
    title: string
    description?: string | null
    referenceId?: string | null
    shortCode: string
    qrCode?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    targetAmount?: Decimal | DecimalJsLike | number | string | null
    targetCurrency?: string | null
    smartContractAddress?: string | null
    smartContractChainId?: number | null
    tokenAddress?: string | null
    status?: $Enums.PaymentLinkStatus
    allowMultiplePayments?: boolean
    requiresKyc?: boolean
    expiresAt?: Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscriptionItemUpdateWithoutPriceInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    subscription?: SubscriptionUpdateOneRequiredWithoutItemsNestedInput
  }

  export type SubscriptionItemUncheckedUpdateWithoutPriceInput = {
    id?: StringFieldUpdateOperationsInput | string
    subscriptionId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionItemUncheckedUpdateManyWithoutPriceInput = {
    id?: StringFieldUpdateOperationsInput | string
    subscriptionId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentLinkUpdateWithoutPriceInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    shortCode?: StringFieldUpdateOperationsInput | string
    qrCode?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    targetAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    targetCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractChainId?: NullableIntFieldUpdateOperationsInput | number | null
    tokenAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentLinkStatusFieldUpdateOperationsInput | $Enums.PaymentLinkStatus
    allowMultiplePayments?: BoolFieldUpdateOperationsInput | boolean
    requiresKyc?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutPaymentLinksNestedInput
    createdBy?: UserUpdateOneRequiredWithoutPaymentLinksNestedInput
    executingAgent?: AgentUpdateOneRequiredWithoutPaymentLinksNestedInput
    paymentOrders?: PaymentOrderUpdateManyWithoutPaymentLinkNestedInput
  }

  export type PaymentLinkUncheckedUpdateWithoutPriceInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    executingAgentId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    shortCode?: StringFieldUpdateOperationsInput | string
    qrCode?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    targetAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    targetCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractChainId?: NullableIntFieldUpdateOperationsInput | number | null
    tokenAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentLinkStatusFieldUpdateOperationsInput | $Enums.PaymentLinkStatus
    allowMultiplePayments?: BoolFieldUpdateOperationsInput | boolean
    requiresKyc?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentOrders?: PaymentOrderUncheckedUpdateManyWithoutPaymentLinkNestedInput
  }

  export type PaymentLinkUncheckedUpdateManyWithoutPriceInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    executingAgentId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    shortCode?: StringFieldUpdateOperationsInput | string
    qrCode?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    targetAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    targetCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractChainId?: NullableIntFieldUpdateOperationsInput | number | null
    tokenAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentLinkStatusFieldUpdateOperationsInput | $Enums.PaymentLinkStatus
    allowMultiplePayments?: BoolFieldUpdateOperationsInput | boolean
    requiresKyc?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentOrderCreateManyPaymentLinkInput = {
    id?: string
    organizationId: string
    customerId?: string | null
    orderNumber: string
    status?: $Enums.PaymentOrderStatus
    requestedAmount: Decimal | DecimalJsLike | number | string
    requestedCurrency: string
    settledAmount?: Decimal | DecimalJsLike | number | string | null
    settledCurrency?: string | null
    exchangeRate?: Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: Date | string | null
    exchangeRateSource?: string | null
    platformFee?: Decimal | DecimalJsLike | number | string
    providerFee?: Decimal | DecimalJsLike | number | string
    networkFee?: Decimal | DecimalJsLike | number | string
    totalFee?: Decimal | DecimalJsLike | number | string
    customerEmail?: string | null
    customerName?: string | null
    customerWallet?: string | null
    customerIp?: string | null
    customerCountry?: string | null
    riskScore?: number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: $Enums.KycStatus
    kycVerifiedAt?: Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    failureCode?: string | null
    retryCount?: number
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type PaymentOrderUpdateWithoutPaymentLinkInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentOrderStatusFieldUpdateOperationsInput | $Enums.PaymentOrderStatus
    requestedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    requestedCurrency?: StringFieldUpdateOperationsInput | string
    settledAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    settledCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exchangeRateSource?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    providerFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    networkFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    customerIp?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    riskScore?: NullableIntFieldUpdateOperationsInput | number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    failureCode?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutPaymentOrdersNestedInput
    customer?: CustomerUpdateOneWithoutPaymentOrdersNestedInput
    providerTransactions?: ProviderTransactionUpdateManyWithoutPaymentOrderNestedInput
    blockchainTxs?: BlockchainTransactionUpdateManyWithoutPaymentOrderNestedInput
    events?: PaymentEventUpdateManyWithoutPaymentOrderNestedInput
    agentDecisions?: AgentDecisionUpdateManyWithoutPaymentOrderNestedInput
    manualSteps?: ManualProcessStepUpdateManyWithoutPaymentOrderNestedInput
  }

  export type PaymentOrderUncheckedUpdateWithoutPaymentLinkInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentOrderStatusFieldUpdateOperationsInput | $Enums.PaymentOrderStatus
    requestedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    requestedCurrency?: StringFieldUpdateOperationsInput | string
    settledAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    settledCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exchangeRateSource?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    providerFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    networkFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    customerIp?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    riskScore?: NullableIntFieldUpdateOperationsInput | number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    failureCode?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    providerTransactions?: ProviderTransactionUncheckedUpdateManyWithoutPaymentOrderNestedInput
    blockchainTxs?: BlockchainTransactionUncheckedUpdateManyWithoutPaymentOrderNestedInput
    events?: PaymentEventUncheckedUpdateManyWithoutPaymentOrderNestedInput
    agentDecisions?: AgentDecisionUncheckedUpdateManyWithoutPaymentOrderNestedInput
    manualSteps?: ManualProcessStepUncheckedUpdateManyWithoutPaymentOrderNestedInput
  }

  export type PaymentOrderUncheckedUpdateManyWithoutPaymentLinkInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentOrderStatusFieldUpdateOperationsInput | $Enums.PaymentOrderStatus
    requestedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    requestedCurrency?: StringFieldUpdateOperationsInput | string
    settledAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    settledCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    exchangeRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    exchangeRateLockedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    exchangeRateSource?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    providerFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    networkFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    customerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    customerIp?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    riskScore?: NullableIntFieldUpdateOperationsInput | number | null
    riskFactors?: NullableJsonNullValueInput | InputJsonValue
    kycStatus?: EnumKycStatusFieldUpdateOperationsInput | $Enums.KycStatus
    kycVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    selectedRoute?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    failureCode?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProviderTransactionCreateManyPaymentOrderInput = {
    id?: string
    providerId: string
    type: $Enums.ProviderTxType
    externalId?: string | null
    status: string
    request: JsonNullValueInput | InputJsonValue
    response?: NullableJsonNullValueInput | InputJsonValue
    errorCode?: string | null
    errorMessage?: string | null
    isRetryable?: boolean
    createdAt?: Date | string
    completedAt?: Date | string | null
  }

  export type BlockchainTransactionCreateManyPaymentOrderInput = {
    id?: string
    hash: string
    chainId: number
    fromAddress: string
    toAddress?: string | null
    value: string
    data?: string | null
    gasLimit?: string | null
    gasPrice?: string | null
    nonce?: number | null
    status?: $Enums.BlockchainTxStatus
    blockNumber?: number | null
    confirmations?: number
    isSponsored?: boolean
    sponsorshipId?: string | null
    walletId: string
    createdAt?: Date | string
    minedAt?: Date | string | null
  }

  export type PaymentEventCreateManyPaymentOrderInput = {
    id?: string
    sequenceNumber: number
    eventType: string
    eventVersion?: string
    data: JsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    kafkaTopic?: string | null
    kafkaPartition?: number | null
    kafkaOffset?: bigint | number | null
    occurredAt?: Date | string
  }

  export type AgentDecisionCreateManyPaymentOrderInput = {
    id?: string
    agentId: string
    decisionType: string
    input: JsonNullValueInput | InputJsonValue
    reasoning: JsonNullValueInput | InputJsonValue
    decision: JsonNullValueInput | InputJsonValue
    confidence: Decimal | DecimalJsLike | number | string
    executionTime: number
    tokensUsed?: number | null
    wasOverridden?: boolean
    overriddenBy?: string | null
    overrideReason?: string | null
    createdAt?: Date | string
  }

  export type ManualProcessStepCreateManyPaymentOrderInput = {
    id?: string
    type: $Enums.ManualStepType
    reason: string
    instructions?: string | null
    assignedTo?: string | null
    assignedTeam?: string | null
    priority?: $Enums.Priority
    status?: $Enums.ManualStepStatus
    resolution?: string | null
    createdAt?: Date | string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    dueAt?: Date | string | null
  }

  export type ProviderTransactionUpdateWithoutPaymentOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumProviderTxTypeFieldUpdateOperationsInput | $Enums.ProviderTxType
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    request?: JsonNullValueInput | InputJsonValue
    response?: NullableJsonNullValueInput | InputJsonValue
    errorCode?: NullableStringFieldUpdateOperationsInput | string | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    isRetryable?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider?: ProviderUpdateOneRequiredWithoutTransactionsNestedInput
  }

  export type ProviderTransactionUncheckedUpdateWithoutPaymentOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    type?: EnumProviderTxTypeFieldUpdateOperationsInput | $Enums.ProviderTxType
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    request?: JsonNullValueInput | InputJsonValue
    response?: NullableJsonNullValueInput | InputJsonValue
    errorCode?: NullableStringFieldUpdateOperationsInput | string | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    isRetryable?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProviderTransactionUncheckedUpdateManyWithoutPaymentOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    type?: EnumProviderTxTypeFieldUpdateOperationsInput | $Enums.ProviderTxType
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    request?: JsonNullValueInput | InputJsonValue
    response?: NullableJsonNullValueInput | InputJsonValue
    errorCode?: NullableStringFieldUpdateOperationsInput | string | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    isRetryable?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BlockchainTransactionUpdateWithoutPaymentOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    fromAddress?: StringFieldUpdateOperationsInput | string
    toAddress?: NullableStringFieldUpdateOperationsInput | string | null
    value?: StringFieldUpdateOperationsInput | string
    data?: NullableStringFieldUpdateOperationsInput | string | null
    gasLimit?: NullableStringFieldUpdateOperationsInput | string | null
    gasPrice?: NullableStringFieldUpdateOperationsInput | string | null
    nonce?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumBlockchainTxStatusFieldUpdateOperationsInput | $Enums.BlockchainTxStatus
    blockNumber?: NullableIntFieldUpdateOperationsInput | number | null
    confirmations?: IntFieldUpdateOperationsInput | number
    isSponsored?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    minedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gasSponsorship?: GasSponsorshipUpdateOneWithoutTransactionsNestedInput
    wallet?: WalletUpdateOneRequiredWithoutTransactionsNestedInput
  }

  export type BlockchainTransactionUncheckedUpdateWithoutPaymentOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    fromAddress?: StringFieldUpdateOperationsInput | string
    toAddress?: NullableStringFieldUpdateOperationsInput | string | null
    value?: StringFieldUpdateOperationsInput | string
    data?: NullableStringFieldUpdateOperationsInput | string | null
    gasLimit?: NullableStringFieldUpdateOperationsInput | string | null
    gasPrice?: NullableStringFieldUpdateOperationsInput | string | null
    nonce?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumBlockchainTxStatusFieldUpdateOperationsInput | $Enums.BlockchainTxStatus
    blockNumber?: NullableIntFieldUpdateOperationsInput | number | null
    confirmations?: IntFieldUpdateOperationsInput | number
    isSponsored?: BoolFieldUpdateOperationsInput | boolean
    sponsorshipId?: NullableStringFieldUpdateOperationsInput | string | null
    walletId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    minedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BlockchainTransactionUncheckedUpdateManyWithoutPaymentOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    chainId?: IntFieldUpdateOperationsInput | number
    fromAddress?: StringFieldUpdateOperationsInput | string
    toAddress?: NullableStringFieldUpdateOperationsInput | string | null
    value?: StringFieldUpdateOperationsInput | string
    data?: NullableStringFieldUpdateOperationsInput | string | null
    gasLimit?: NullableStringFieldUpdateOperationsInput | string | null
    gasPrice?: NullableStringFieldUpdateOperationsInput | string | null
    nonce?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumBlockchainTxStatusFieldUpdateOperationsInput | $Enums.BlockchainTxStatus
    blockNumber?: NullableIntFieldUpdateOperationsInput | number | null
    confirmations?: IntFieldUpdateOperationsInput | number
    isSponsored?: BoolFieldUpdateOperationsInput | boolean
    sponsorshipId?: NullableStringFieldUpdateOperationsInput | string | null
    walletId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    minedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PaymentEventUpdateWithoutPaymentOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    sequenceNumber?: IntFieldUpdateOperationsInput | number
    eventType?: StringFieldUpdateOperationsInput | string
    eventVersion?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    kafkaTopic?: NullableStringFieldUpdateOperationsInput | string | null
    kafkaPartition?: NullableIntFieldUpdateOperationsInput | number | null
    kafkaOffset?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentEventUncheckedUpdateWithoutPaymentOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    sequenceNumber?: IntFieldUpdateOperationsInput | number
    eventType?: StringFieldUpdateOperationsInput | string
    eventVersion?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    kafkaTopic?: NullableStringFieldUpdateOperationsInput | string | null
    kafkaPartition?: NullableIntFieldUpdateOperationsInput | number | null
    kafkaOffset?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentEventUncheckedUpdateManyWithoutPaymentOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    sequenceNumber?: IntFieldUpdateOperationsInput | number
    eventType?: StringFieldUpdateOperationsInput | string
    eventVersion?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    kafkaTopic?: NullableStringFieldUpdateOperationsInput | string | null
    kafkaPartition?: NullableIntFieldUpdateOperationsInput | number | null
    kafkaOffset?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    occurredAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgentDecisionUpdateWithoutPaymentOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    decisionType?: StringFieldUpdateOperationsInput | string
    input?: JsonNullValueInput | InputJsonValue
    reasoning?: JsonNullValueInput | InputJsonValue
    decision?: JsonNullValueInput | InputJsonValue
    confidence?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    executionTime?: IntFieldUpdateOperationsInput | number
    tokensUsed?: NullableIntFieldUpdateOperationsInput | number | null
    wasOverridden?: BoolFieldUpdateOperationsInput | boolean
    overriddenBy?: NullableStringFieldUpdateOperationsInput | string | null
    overrideReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agent?: AgentUpdateOneRequiredWithoutDecisionsNestedInput
    interactions?: AgentInteractionUpdateManyWithoutAgentDecisionNestedInput
  }

  export type AgentDecisionUncheckedUpdateWithoutPaymentOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    agentId?: StringFieldUpdateOperationsInput | string
    decisionType?: StringFieldUpdateOperationsInput | string
    input?: JsonNullValueInput | InputJsonValue
    reasoning?: JsonNullValueInput | InputJsonValue
    decision?: JsonNullValueInput | InputJsonValue
    confidence?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    executionTime?: IntFieldUpdateOperationsInput | number
    tokensUsed?: NullableIntFieldUpdateOperationsInput | number | null
    wasOverridden?: BoolFieldUpdateOperationsInput | boolean
    overriddenBy?: NullableStringFieldUpdateOperationsInput | string | null
    overrideReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    interactions?: AgentInteractionUncheckedUpdateManyWithoutAgentDecisionNestedInput
  }

  export type AgentDecisionUncheckedUpdateManyWithoutPaymentOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    agentId?: StringFieldUpdateOperationsInput | string
    decisionType?: StringFieldUpdateOperationsInput | string
    input?: JsonNullValueInput | InputJsonValue
    reasoning?: JsonNullValueInput | InputJsonValue
    decision?: JsonNullValueInput | InputJsonValue
    confidence?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    executionTime?: IntFieldUpdateOperationsInput | number
    tokensUsed?: NullableIntFieldUpdateOperationsInput | number | null
    wasOverridden?: BoolFieldUpdateOperationsInput | boolean
    overriddenBy?: NullableStringFieldUpdateOperationsInput | string | null
    overrideReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ManualProcessStepUpdateWithoutPaymentOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumManualStepTypeFieldUpdateOperationsInput | $Enums.ManualStepType
    reason?: StringFieldUpdateOperationsInput | string
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTo?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTeam?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    status?: EnumManualStepStatusFieldUpdateOperationsInput | $Enums.ManualStepStatus
    resolution?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ManualProcessStepUncheckedUpdateWithoutPaymentOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumManualStepTypeFieldUpdateOperationsInput | $Enums.ManualStepType
    reason?: StringFieldUpdateOperationsInput | string
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTo?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTeam?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    status?: EnumManualStepStatusFieldUpdateOperationsInput | $Enums.ManualStepStatus
    resolution?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ManualProcessStepUncheckedUpdateManyWithoutPaymentOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumManualStepTypeFieldUpdateOperationsInput | $Enums.ManualStepType
    reason?: StringFieldUpdateOperationsInput | string
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTo?: NullableStringFieldUpdateOperationsInput | string | null
    assignedTeam?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumPriorityFieldUpdateOperationsInput | $Enums.Priority
    status?: EnumManualStepStatusFieldUpdateOperationsInput | $Enums.ManualStepStatus
    resolution?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProviderConfigCreateManyProviderInput = {
    id?: string
    organizationId: string
    environment?: $Enums.Environment
    credentials: JsonNullValueInput | InputJsonValue
    webhookSecret?: string | null
    settings?: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProviderRouteCreateManyProviderInput = {
    id?: string
    name: string
    fromCountry: string
    toCountry: string
    fromCurrency: string
    toCurrency: string
    paymentMethod: string
    fixedFee: Decimal | DecimalJsLike | number | string
    percentageFee: Decimal | DecimalJsLike | number | string
    minAmount: Decimal | DecimalJsLike | number | string
    maxAmount: Decimal | DecimalJsLike | number | string
    estimatedTime: number
    cutoffTime?: string | null
    workingDays?: ProviderRouteCreateworkingDaysInput | string[]
    isActive?: boolean
    priority?: number
  }

  export type ProviderTransactionCreateManyProviderInput = {
    id?: string
    paymentOrderId: string
    type: $Enums.ProviderTxType
    externalId?: string | null
    status: string
    request: JsonNullValueInput | InputJsonValue
    response?: NullableJsonNullValueInput | InputJsonValue
    errorCode?: string | null
    errorMessage?: string | null
    isRetryable?: boolean
    createdAt?: Date | string
    completedAt?: Date | string | null
  }

  export type ProviderConfigUpdateWithoutProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    environment?: EnumEnvironmentFieldUpdateOperationsInput | $Enums.Environment
    credentials?: JsonNullValueInput | InputJsonValue
    webhookSecret?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutProvidersNestedInput
  }

  export type ProviderConfigUncheckedUpdateWithoutProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    environment?: EnumEnvironmentFieldUpdateOperationsInput | $Enums.Environment
    credentials?: JsonNullValueInput | InputJsonValue
    webhookSecret?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProviderConfigUncheckedUpdateManyWithoutProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    environment?: EnumEnvironmentFieldUpdateOperationsInput | $Enums.Environment
    credentials?: JsonNullValueInput | InputJsonValue
    webhookSecret?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProviderRouteUpdateWithoutProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    fromCountry?: StringFieldUpdateOperationsInput | string
    toCountry?: StringFieldUpdateOperationsInput | string
    fromCurrency?: StringFieldUpdateOperationsInput | string
    toCurrency?: StringFieldUpdateOperationsInput | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    fixedFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentageFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estimatedTime?: IntFieldUpdateOperationsInput | number
    cutoffTime?: NullableStringFieldUpdateOperationsInput | string | null
    workingDays?: ProviderRouteUpdateworkingDaysInput | string[]
    isActive?: BoolFieldUpdateOperationsInput | boolean
    priority?: IntFieldUpdateOperationsInput | number
  }

  export type ProviderRouteUncheckedUpdateWithoutProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    fromCountry?: StringFieldUpdateOperationsInput | string
    toCountry?: StringFieldUpdateOperationsInput | string
    fromCurrency?: StringFieldUpdateOperationsInput | string
    toCurrency?: StringFieldUpdateOperationsInput | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    fixedFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentageFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estimatedTime?: IntFieldUpdateOperationsInput | number
    cutoffTime?: NullableStringFieldUpdateOperationsInput | string | null
    workingDays?: ProviderRouteUpdateworkingDaysInput | string[]
    isActive?: BoolFieldUpdateOperationsInput | boolean
    priority?: IntFieldUpdateOperationsInput | number
  }

  export type ProviderRouteUncheckedUpdateManyWithoutProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    fromCountry?: StringFieldUpdateOperationsInput | string
    toCountry?: StringFieldUpdateOperationsInput | string
    fromCurrency?: StringFieldUpdateOperationsInput | string
    toCurrency?: StringFieldUpdateOperationsInput | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    fixedFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentageFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estimatedTime?: IntFieldUpdateOperationsInput | number
    cutoffTime?: NullableStringFieldUpdateOperationsInput | string | null
    workingDays?: ProviderRouteUpdateworkingDaysInput | string[]
    isActive?: BoolFieldUpdateOperationsInput | boolean
    priority?: IntFieldUpdateOperationsInput | number
  }

  export type ProviderTransactionUpdateWithoutProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumProviderTxTypeFieldUpdateOperationsInput | $Enums.ProviderTxType
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    request?: JsonNullValueInput | InputJsonValue
    response?: NullableJsonNullValueInput | InputJsonValue
    errorCode?: NullableStringFieldUpdateOperationsInput | string | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    isRetryable?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentOrder?: PaymentOrderUpdateOneRequiredWithoutProviderTransactionsNestedInput
  }

  export type ProviderTransactionUncheckedUpdateWithoutProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentOrderId?: StringFieldUpdateOperationsInput | string
    type?: EnumProviderTxTypeFieldUpdateOperationsInput | $Enums.ProviderTxType
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    request?: JsonNullValueInput | InputJsonValue
    response?: NullableJsonNullValueInput | InputJsonValue
    errorCode?: NullableStringFieldUpdateOperationsInput | string | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    isRetryable?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProviderTransactionUncheckedUpdateManyWithoutProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentOrderId?: StringFieldUpdateOperationsInput | string
    type?: EnumProviderTxTypeFieldUpdateOperationsInput | $Enums.ProviderTxType
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    request?: JsonNullValueInput | InputJsonValue
    response?: NullableJsonNullValueInput | InputJsonValue
    errorCode?: NullableStringFieldUpdateOperationsInput | string | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    isRetryable?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PaymentLinkCreateManyExecutingAgentInput = {
    id?: string
    organizationId: string
    createdById: string
    title: string
    description?: string | null
    referenceId?: string | null
    shortCode: string
    qrCode?: string | null
    priceId?: string | null
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    targetAmount?: Decimal | DecimalJsLike | number | string | null
    targetCurrency?: string | null
    smartContractAddress?: string | null
    smartContractChainId?: number | null
    tokenAddress?: string | null
    status?: $Enums.PaymentLinkStatus
    allowMultiplePayments?: boolean
    requiresKyc?: boolean
    expiresAt?: Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AgentDecisionCreateManyAgentInput = {
    id?: string
    paymentOrderId?: string | null
    decisionType: string
    input: JsonNullValueInput | InputJsonValue
    reasoning: JsonNullValueInput | InputJsonValue
    decision: JsonNullValueInput | InputJsonValue
    confidence: Decimal | DecimalJsLike | number | string
    executionTime: number
    tokensUsed?: number | null
    wasOverridden?: boolean
    overriddenBy?: string | null
    overrideReason?: string | null
    createdAt?: Date | string
  }

  export type AgentCheckpointCreateManyAgentInput = {
    id?: string
    threadId: string
    checkpointId: string
    state: JsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type PaymentLinkUpdateWithoutExecutingAgentInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    shortCode?: StringFieldUpdateOperationsInput | string
    qrCode?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    targetAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    targetCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractChainId?: NullableIntFieldUpdateOperationsInput | number | null
    tokenAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentLinkStatusFieldUpdateOperationsInput | $Enums.PaymentLinkStatus
    allowMultiplePayments?: BoolFieldUpdateOperationsInput | boolean
    requiresKyc?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutPaymentLinksNestedInput
    createdBy?: UserUpdateOneRequiredWithoutPaymentLinksNestedInput
    price?: PriceUpdateOneWithoutPaymentLinksNestedInput
    paymentOrders?: PaymentOrderUpdateManyWithoutPaymentLinkNestedInput
  }

  export type PaymentLinkUncheckedUpdateWithoutExecutingAgentInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    shortCode?: StringFieldUpdateOperationsInput | string
    qrCode?: NullableStringFieldUpdateOperationsInput | string | null
    priceId?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    targetAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    targetCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractChainId?: NullableIntFieldUpdateOperationsInput | number | null
    tokenAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentLinkStatusFieldUpdateOperationsInput | $Enums.PaymentLinkStatus
    allowMultiplePayments?: BoolFieldUpdateOperationsInput | boolean
    requiresKyc?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentOrders?: PaymentOrderUncheckedUpdateManyWithoutPaymentLinkNestedInput
  }

  export type PaymentLinkUncheckedUpdateManyWithoutExecutingAgentInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    referenceId?: NullableStringFieldUpdateOperationsInput | string | null
    shortCode?: StringFieldUpdateOperationsInput | string
    qrCode?: NullableStringFieldUpdateOperationsInput | string | null
    priceId?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    targetAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    targetCurrency?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractChainId?: NullableIntFieldUpdateOperationsInput | number | null
    tokenAddress?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumPaymentLinkStatusFieldUpdateOperationsInput | $Enums.PaymentLinkStatus
    allowMultiplePayments?: BoolFieldUpdateOperationsInput | boolean
    requiresKyc?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    redirectUrls?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    theme?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgentDecisionUpdateWithoutAgentInput = {
    id?: StringFieldUpdateOperationsInput | string
    decisionType?: StringFieldUpdateOperationsInput | string
    input?: JsonNullValueInput | InputJsonValue
    reasoning?: JsonNullValueInput | InputJsonValue
    decision?: JsonNullValueInput | InputJsonValue
    confidence?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    executionTime?: IntFieldUpdateOperationsInput | number
    tokensUsed?: NullableIntFieldUpdateOperationsInput | number | null
    wasOverridden?: BoolFieldUpdateOperationsInput | boolean
    overriddenBy?: NullableStringFieldUpdateOperationsInput | string | null
    overrideReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentOrder?: PaymentOrderUpdateOneWithoutAgentDecisionsNestedInput
    interactions?: AgentInteractionUpdateManyWithoutAgentDecisionNestedInput
  }

  export type AgentDecisionUncheckedUpdateWithoutAgentInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    decisionType?: StringFieldUpdateOperationsInput | string
    input?: JsonNullValueInput | InputJsonValue
    reasoning?: JsonNullValueInput | InputJsonValue
    decision?: JsonNullValueInput | InputJsonValue
    confidence?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    executionTime?: IntFieldUpdateOperationsInput | number
    tokensUsed?: NullableIntFieldUpdateOperationsInput | number | null
    wasOverridden?: BoolFieldUpdateOperationsInput | boolean
    overriddenBy?: NullableStringFieldUpdateOperationsInput | string | null
    overrideReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    interactions?: AgentInteractionUncheckedUpdateManyWithoutAgentDecisionNestedInput
  }

  export type AgentDecisionUncheckedUpdateManyWithoutAgentInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    decisionType?: StringFieldUpdateOperationsInput | string
    input?: JsonNullValueInput | InputJsonValue
    reasoning?: JsonNullValueInput | InputJsonValue
    decision?: JsonNullValueInput | InputJsonValue
    confidence?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    executionTime?: IntFieldUpdateOperationsInput | number
    tokensUsed?: NullableIntFieldUpdateOperationsInput | number | null
    wasOverridden?: BoolFieldUpdateOperationsInput | boolean
    overriddenBy?: NullableStringFieldUpdateOperationsInput | string | null
    overrideReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgentCheckpointUpdateWithoutAgentInput = {
    id?: StringFieldUpdateOperationsInput | string
    threadId?: StringFieldUpdateOperationsInput | string
    checkpointId?: StringFieldUpdateOperationsInput | string
    state?: JsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgentCheckpointUncheckedUpdateWithoutAgentInput = {
    id?: StringFieldUpdateOperationsInput | string
    threadId?: StringFieldUpdateOperationsInput | string
    checkpointId?: StringFieldUpdateOperationsInput | string
    state?: JsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgentCheckpointUncheckedUpdateManyWithoutAgentInput = {
    id?: StringFieldUpdateOperationsInput | string
    threadId?: StringFieldUpdateOperationsInput | string
    checkpointId?: StringFieldUpdateOperationsInput | string
    state?: JsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgentInteractionCreateManyAgentDecisionInput = {
    id?: string
    userId: string
    type: $Enums.InteractionType
    message?: string | null
    action?: string | null
    result?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type AgentInteractionUpdateWithoutAgentDecisionInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumInteractionTypeFieldUpdateOperationsInput | $Enums.InteractionType
    message?: NullableStringFieldUpdateOperationsInput | string | null
    action?: NullableStringFieldUpdateOperationsInput | string | null
    result?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutAgentInteractionsNestedInput
  }

  export type AgentInteractionUncheckedUpdateWithoutAgentDecisionInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: EnumInteractionTypeFieldUpdateOperationsInput | $Enums.InteractionType
    message?: NullableStringFieldUpdateOperationsInput | string | null
    action?: NullableStringFieldUpdateOperationsInput | string | null
    result?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgentInteractionUncheckedUpdateManyWithoutAgentDecisionInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: EnumInteractionTypeFieldUpdateOperationsInput | $Enums.InteractionType
    message?: NullableStringFieldUpdateOperationsInput | string | null
    action?: NullableStringFieldUpdateOperationsInput | string | null
    result?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WebhookDeliveryCreateManyWebhookInput = {
    id?: string
    eventType: string
    eventId: string
    payload: JsonNullValueInput | InputJsonValue
    statusCode?: number | null
    response?: string | null
    error?: string | null
    attempts?: number
    nextRetryAt?: Date | string | null
    createdAt?: Date | string
    deliveredAt?: Date | string | null
  }

  export type WebhookDeliveryUpdateWithoutWebhookInput = {
    id?: StringFieldUpdateOperationsInput | string
    eventType?: StringFieldUpdateOperationsInput | string
    eventId?: StringFieldUpdateOperationsInput | string
    payload?: JsonNullValueInput | InputJsonValue
    statusCode?: NullableIntFieldUpdateOperationsInput | number | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    error?: NullableStringFieldUpdateOperationsInput | string | null
    attempts?: IntFieldUpdateOperationsInput | number
    nextRetryAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type WebhookDeliveryUncheckedUpdateWithoutWebhookInput = {
    id?: StringFieldUpdateOperationsInput | string
    eventType?: StringFieldUpdateOperationsInput | string
    eventId?: StringFieldUpdateOperationsInput | string
    payload?: JsonNullValueInput | InputJsonValue
    statusCode?: NullableIntFieldUpdateOperationsInput | number | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    error?: NullableStringFieldUpdateOperationsInput | string | null
    attempts?: IntFieldUpdateOperationsInput | number
    nextRetryAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type WebhookDeliveryUncheckedUpdateManyWithoutWebhookInput = {
    id?: StringFieldUpdateOperationsInput | string
    eventType?: StringFieldUpdateOperationsInput | string
    eventId?: StringFieldUpdateOperationsInput | string
    payload?: JsonNullValueInput | InputJsonValue
    statusCode?: NullableIntFieldUpdateOperationsInput | number | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    error?: NullableStringFieldUpdateOperationsInput | string | null
    attempts?: IntFieldUpdateOperationsInput | number
    nextRetryAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use OrganizationCountOutputTypeDefaultArgs instead
     */
    export type OrganizationCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OrganizationCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserCountOutputTypeDefaultArgs instead
     */
    export type UserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CustomerCountOutputTypeDefaultArgs instead
     */
    export type CustomerCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CustomerCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SubscriptionCountOutputTypeDefaultArgs instead
     */
    export type SubscriptionCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SubscriptionCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use WalletCountOutputTypeDefaultArgs instead
     */
    export type WalletCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = WalletCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use GasSponsorshipCountOutputTypeDefaultArgs instead
     */
    export type GasSponsorshipCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = GasSponsorshipCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProductCountOutputTypeDefaultArgs instead
     */
    export type ProductCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProductCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PriceCountOutputTypeDefaultArgs instead
     */
    export type PriceCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PriceCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PaymentLinkCountOutputTypeDefaultArgs instead
     */
    export type PaymentLinkCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PaymentLinkCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PaymentOrderCountOutputTypeDefaultArgs instead
     */
    export type PaymentOrderCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PaymentOrderCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProviderCountOutputTypeDefaultArgs instead
     */
    export type ProviderCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProviderCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AgentCountOutputTypeDefaultArgs instead
     */
    export type AgentCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AgentCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AgentDecisionCountOutputTypeDefaultArgs instead
     */
    export type AgentDecisionCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AgentDecisionCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use WebhookCountOutputTypeDefaultArgs instead
     */
    export type WebhookCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = WebhookCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OrganizationDefaultArgs instead
     */
    export type OrganizationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OrganizationDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserDefaultArgs instead
     */
    export type UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CustomerDefaultArgs instead
     */
    export type CustomerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CustomerDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CustomerPaymentMethodDefaultArgs instead
     */
    export type CustomerPaymentMethodArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CustomerPaymentMethodDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SubscriptionDefaultArgs instead
     */
    export type SubscriptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SubscriptionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SubscriptionItemDefaultArgs instead
     */
    export type SubscriptionItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SubscriptionItemDefaultArgs<ExtArgs>
    /**
     * @deprecated Use WalletDefaultArgs instead
     */
    export type WalletArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = WalletDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BlockchainTransactionDefaultArgs instead
     */
    export type BlockchainTransactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BlockchainTransactionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use GasSponsorshipDefaultArgs instead
     */
    export type GasSponsorshipArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = GasSponsorshipDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProductDefaultArgs instead
     */
    export type ProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProductDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PriceDefaultArgs instead
     */
    export type PriceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PriceDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PaymentLinkDefaultArgs instead
     */
    export type PaymentLinkArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PaymentLinkDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PaymentOrderDefaultArgs instead
     */
    export type PaymentOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PaymentOrderDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProviderDefaultArgs instead
     */
    export type ProviderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProviderDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProviderConfigDefaultArgs instead
     */
    export type ProviderConfigArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProviderConfigDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProviderRouteDefaultArgs instead
     */
    export type ProviderRouteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProviderRouteDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProviderTransactionDefaultArgs instead
     */
    export type ProviderTransactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProviderTransactionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AgentDefaultArgs instead
     */
    export type AgentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AgentDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AgentDecisionDefaultArgs instead
     */
    export type AgentDecisionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AgentDecisionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AgentCheckpointDefaultArgs instead
     */
    export type AgentCheckpointArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AgentCheckpointDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AgentInteractionDefaultArgs instead
     */
    export type AgentInteractionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AgentInteractionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use WebhookDefaultArgs instead
     */
    export type WebhookArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = WebhookDefaultArgs<ExtArgs>
    /**
     * @deprecated Use WebhookDeliveryDefaultArgs instead
     */
    export type WebhookDeliveryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = WebhookDeliveryDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ManualProcessStepDefaultArgs instead
     */
    export type ManualProcessStepArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ManualProcessStepDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PaymentEventDefaultArgs instead
     */
    export type PaymentEventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PaymentEventDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AuditLogDefaultArgs instead
     */
    export type AuditLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AuditLogDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ApiKeyDefaultArgs instead
     */
    export type ApiKeyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ApiKeyDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OrganizationUserDefaultArgs instead
     */
    export type OrganizationUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OrganizationUserDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}